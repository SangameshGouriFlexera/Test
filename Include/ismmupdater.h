/* This header file machine-generated by mktyplib.exe */
/* Interface to type library: ISMMUpdaterLib */

#ifndef _ISMMUpdaterLib_H_
#define _ISMMUpdaterLib_H_

DEFINE_GUID(LIBID_ISMMUpdaterLib,0xD9CDFBD1L,0x5D35,0x4A83,0x9B,0xAC,0xDA,0x35,0x2C,0x9A,0xE8,0x68);
#ifndef BEGIN_INTERFACE
#define BEGIN_INTERFACE
#endif

typedef VARIANT_BOOL VARIANT_BOOL;

DEFINE_GUID(IID_IVBEnumVARIANT,0x00020404L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVBEnumVARIANT */
#undef INTERFACE
#define INTERFACE IVBEnumVARIANT

DECLARE_INTERFACE_(IVBEnumVARIANT, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IVBEnumVARIANT methods */
    STDMETHOD(Next)(THIS_ long celt, VARIANT FAR* rgvar, long pceltFetched) PURE;
    STDMETHOD(Skip)(THIS_ long celt) PURE;
    STDMETHOD(Reset)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ IVBEnumVARIANT FAR* FAR* ppenum) PURE;
};

interface IMMSource;

interface IMergeModule;

interface IMergeModule2;

interface IMMFile;

interface IMMSources;

interface IMergeModules;

interface IMMFiles;

interface IMMDependencies;

interface IMMDependency;

interface IMMExclusions;

interface IMMExclusion;

interface IMMCatalog;

interface IMMValidator;

interface IMMEvent;

interface IMMDialogs;

interface IMMDialog;

interface IMMCustomActions;

interface IMMCustomAction;

interface IMMCatalogNeptune;

interface IMMCatalogTriton;

interface IMMGalleryTriton;

interface IMMGalleryProteusSP;

interface IMMGalleryDownloadFilesTriton;

interface IMMGalleryDownloadFileTriton;

DEFINE_GUID(IID_IMMSource,0x84049A27L,0xE0C2,0x4EDB,0xBF,0x89,0x7C,0x9F,0x37,0xBD,0xDE,0x4F);

/* Definition of interface: IMMSource */
#undef INTERFACE
#define INTERFACE IMMSource

DECLARE_INTERFACE_(IMMSource, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMSource methods */
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pVal) PURE;
    STDMETHOD(get_strKey)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strDisplayName)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_strDisplayName)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strPath)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_strPath)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_iType)(THIS_ short FAR* pVal) PURE;
    STDMETHOD(put_iType)(THIS_ short FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMergeModule,0xD7DA1253L,0x5BD4,0x45BE,0x81,0xCA,0xE9,0xD6,0x56,0x76,0xF9,0x81);

/* Definition of interface: IMergeModule */
#undef INTERFACE
#define INTERFACE IMergeModule

DECLARE_INTERFACE_(IMergeModule, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMergeModule methods */
    STDMETHOD(get_Dialogs)(THIS_ IMMDialogs FAR* FAR* pVal) PURE;
    STDMETHOD(get_CustomActions)(THIS_ IMMCustomActions FAR* FAR* pVal) PURE;
    STDMETHOD(get_strGUID)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strID)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strKey)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strFilePath)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strComments)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strSubject)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strAuthor)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_lLang)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_strVersion)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_Dependencies)(THIS_ IMMDependencies FAR* FAR* pVal) PURE;
    STDMETHOD(get_Exclusions)(THIS_ IMMExclusions FAR* FAR* pVal) PURE;
    STDMETHOD(get_Files)(THIS_ IMMFiles FAR* FAR* pVal) PURE;
    STDMETHOD(get_strDisplayName)(THIS_ BSTR FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMergeModule2,0x1418BBEDL,0x19CC,0x44CF,0xA3,0x89,0x43,0x66,0xE8,0xE0,0x92,0xC3);

/* Definition of interface: IMergeModule2 */
#undef INTERFACE
#define INTERFACE IMergeModule2

DECLARE_INTERFACE_(IMergeModule2, IMergeModule)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IMergeModule methods */
    STDMETHOD(get_Dialogs)(THIS_ IMMDialogs FAR* FAR* pVal) PURE;
    STDMETHOD(get_CustomActions)(THIS_ IMMCustomActions FAR* FAR* pVal) PURE;
    STDMETHOD(get_strGUID)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strID)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strKey)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strFilePath)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strComments)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strSubject)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strAuthor)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_lLang)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_strVersion)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_Dependencies)(THIS_ IMMDependencies FAR* FAR* pVal) PURE;
    STDMETHOD(get_Exclusions)(THIS_ IMMExclusions FAR* FAR* pVal) PURE;
    STDMETHOD(get_Files)(THIS_ IMMFiles FAR* FAR* pVal) PURE;
    STDMETHOD(get_strDisplayName)(THIS_ BSTR FAR* pVal) PURE;
#endif

    /* IMergeModule2 methods */
    STDMETHOD(Init)(THIS_ BSTR bstrMMPath) PURE;
};

DEFINE_GUID(IID_IMMGalleryTriton,0x3D0B69E6L,0xE799,0x4D24,0x91,0x24,0xAA,0xA5,0x1B,0x9B,0xA9,0x87);

/* Definition of interface: IMMGalleryTriton */
#undef INTERFACE
#define INTERFACE IMMGalleryTriton

DECLARE_INTERFACE_(IMMGalleryTriton, IMergeModule2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IMergeModule methods */
    STDMETHOD(get_Dialogs)(THIS_ IMMDialogs FAR* FAR* pVal) PURE;
    STDMETHOD(get_CustomActions)(THIS_ IMMCustomActions FAR* FAR* pVal) PURE;
    STDMETHOD(get_strGUID)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strID)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strKey)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strFilePath)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strComments)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strSubject)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strAuthor)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_lLang)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_strVersion)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_Dependencies)(THIS_ IMMDependencies FAR* FAR* pVal) PURE;
    STDMETHOD(get_Exclusions)(THIS_ IMMExclusions FAR* FAR* pVal) PURE;
    STDMETHOD(get_Files)(THIS_ IMMFiles FAR* FAR* pVal) PURE;
    STDMETHOD(get_strDisplayName)(THIS_ BSTR FAR* pVal) PURE;

    /* IMergeModule2 methods */
    STDMETHOD(Init)(THIS_ BSTR bstrMMPath) PURE;
#endif

    /* IMMGalleryTriton methods */
    STDMETHOD(get_IsInstalledLocally)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_IsNewerVersionAvailable)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_GalleryDownloadFiles)(THIS_ IMMGalleryDownloadFilesTriton FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_IMMGalleryProteusSP,0xE2061477L,0x341A,0x4771,0x98,0x54,0x24,0xC9,0x75,0xC2,0xC8,0x76);

/* Definition of interface: IMMGalleryProteusSP */
#undef INTERFACE
#define INTERFACE IMMGalleryProteusSP

DECLARE_INTERFACE_(IMMGalleryProteusSP, IMMGalleryTriton)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IMergeModule methods */
    STDMETHOD(get_Dialogs)(THIS_ IMMDialogs FAR* FAR* pVal) PURE;
    STDMETHOD(get_CustomActions)(THIS_ IMMCustomActions FAR* FAR* pVal) PURE;
    STDMETHOD(get_strGUID)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strID)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strKey)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strFilePath)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strComments)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strSubject)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strAuthor)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_lLang)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_strVersion)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_Dependencies)(THIS_ IMMDependencies FAR* FAR* pVal) PURE;
    STDMETHOD(get_Exclusions)(THIS_ IMMExclusions FAR* FAR* pVal) PURE;
    STDMETHOD(get_Files)(THIS_ IMMFiles FAR* FAR* pVal) PURE;
    STDMETHOD(get_strDisplayName)(THIS_ BSTR FAR* pVal) PURE;

    /* IMergeModule2 methods */
    STDMETHOD(Init)(THIS_ BSTR bstrMMPath) PURE;

    /* IMMGalleryTriton methods */
    STDMETHOD(get_IsInstalledLocally)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_IsNewerVersionAvailable)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_GalleryDownloadFiles)(THIS_ IMMGalleryDownloadFilesTriton FAR* FAR* ppVal) PURE;
#endif

    /* IMMGalleryProteusSP methods */
    STDMETHOD(get_GalleryFilePath)(THIS_ BSTR FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMergeModulePluto,0xBCAD53BEL,0xF5CA,0x4075,0x8E,0x7E,0x6B,0x78,0xF9,0x5C,0xE9,0xF0);

/* Definition of interface: IMergeModulePluto */
#undef INTERFACE
#define INTERFACE IMergeModulePluto

DECLARE_INTERFACE_(IMergeModulePluto, IMMGalleryProteusSP)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IMergeModule methods */
    STDMETHOD(get_Dialogs)(THIS_ IMMDialogs FAR* FAR* pVal) PURE;
    STDMETHOD(get_CustomActions)(THIS_ IMMCustomActions FAR* FAR* pVal) PURE;
    STDMETHOD(get_strGUID)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strID)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strKey)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strFilePath)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strComments)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strSubject)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strAuthor)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_lLang)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_strVersion)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_Dependencies)(THIS_ IMMDependencies FAR* FAR* pVal) PURE;
    STDMETHOD(get_Exclusions)(THIS_ IMMExclusions FAR* FAR* pVal) PURE;
    STDMETHOD(get_Files)(THIS_ IMMFiles FAR* FAR* pVal) PURE;
    STDMETHOD(get_strDisplayName)(THIS_ BSTR FAR* pVal) PURE;

    /* IMergeModule2 methods */
    STDMETHOD(Init)(THIS_ BSTR bstrMMPath) PURE;

    /* IMMGalleryTriton methods */
    STDMETHOD(get_IsInstalledLocally)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_IsNewerVersionAvailable)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_GalleryDownloadFiles)(THIS_ IMMGalleryDownloadFilesTriton FAR* FAR* ppVal) PURE;

    /* IMMGalleryProteusSP methods */
    STDMETHOD(get_GalleryFilePath)(THIS_ BSTR FAR* pVal) PURE;
#endif

    /* IMergeModulePluto methods */
    STDMETHOD(get_IsInRepository)(THIS_ VARIANT_BOOL FAR* vbVal) PURE;
    STDMETHOD(get_RepositoryName)(THIS_ BSTR FAR* bstrRepoName) PURE;
};

DEFINE_GUID(IID_IMMGalleryDownloadFilesTriton,0xEDB661BFL,0xF632,0x4894,0x84,0x7C,0x51,0xE7,0x36,0xF8,0xC7,0x6A);

/* Definition of interface: IMMGalleryDownloadFilesTriton */
#undef INTERFACE
#define INTERFACE IMMGalleryDownloadFilesTriton

DECLARE_INTERFACE_(IMMGalleryDownloadFilesTriton, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMGalleryDownloadFilesTriton methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Index, IMMGalleryDownloadFileTriton FAR* FAR* pVal) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMMGalleryDownloadFileTriton,0x0A15F59AL,0x64D3,0x4E47,0xB3,0xB3,0x41,0x78,0x46,0xCF,0x0D,0x98);

/* Definition of interface: IMMGalleryDownloadFileTriton */
#undef INTERFACE
#define INTERFACE IMMGalleryDownloadFileTriton

DECLARE_INTERFACE_(IMMGalleryDownloadFileTriton, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMGalleryDownloadFileTriton methods */
    STDMETHOD(get_InstallLocation)(THIS_ BSTR FAR* bstrInstallLocation) PURE;
    STDMETHOD(get_MediaLocation)(THIS_ BSTR FAR* bstrMediaLocation) PURE;
    STDMETHOD(get_InternetLocation)(THIS_ BSTR FAR* bstrInternetLocation) PURE;
    STDMETHOD(get_Size)(THIS_ long FAR* plSize) PURE;
    STDMETHOD(get_CheckSum)(THIS_ BSTR FAR* bstrCheckSum) PURE;
};

DEFINE_GUID(IID_IMMFile,0xB4D69704L,0xF8C5,0x4AC1,0x83,0x15,0x89,0x20,0x82,0x20,0x95,0x2F);

/* Definition of interface: IMMFile */
#undef INTERFACE
#define INTERFACE IMMFile

DECLARE_INTERFACE_(IMMFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMFile methods */
    STDMETHOD(get_strDirKey)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strKey)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_lSize)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_strFileName)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strVersion)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strLanguages)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_lSequence)(THIS_ long FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMMSources,0x5966C645L,0xADED,0x4EAF,0x85,0x4B,0xB5,0x14,0xBE,0x29,0x11,0x43);

/* Definition of interface: IMMSources */
#undef INTERFACE
#define INTERFACE IMMSources

DECLARE_INTERFACE_(IMMSources, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMSources methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Index, IMMSource FAR* FAR* pVal) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(AddFile)(THIS_ BSTR FAR* strFile, BSTR FAR* strDisplayName, IMMSource FAR* FAR* pVal) PURE;
    STDMETHOD(AddPath)(THIS_ BSTR strPath, BSTR strDisplayName, IMMSource FAR* FAR* pVal) PURE;
    STDMETHOD(Delete)(THIS_ VARIANT Index, long FAR* pVal) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMergeModules,0x7E74B784L,0x44E3,0x40BF,0xB8,0x6D,0xC4,0x7D,0x50,0x36,0x1D,0x2A);

/* Definition of interface: IMergeModules */
#undef INTERFACE
#define INTERFACE IMergeModules

DECLARE_INTERFACE_(IMergeModules, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMergeModules methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Index, IMergeModule FAR* FAR* pVal) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMMFiles,0x537262E7L,0x59C4,0x47EC,0xAA,0x7F,0x5D,0x5C,0x9A,0x9B,0xA1,0x28);

/* Definition of interface: IMMFiles */
#undef INTERFACE
#define INTERFACE IMMFiles

DECLARE_INTERFACE_(IMMFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Index, IMMFile FAR* FAR* pVal) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMMDependencies,0xD6D6F702L,0x1AC4,0x4FEA,0x8D,0x43,0xDA,0x8C,0xA0,0x57,0x96,0x4D);

/* Definition of interface: IMMDependencies */
#undef INTERFACE
#define INTERFACE IMMDependencies

DECLARE_INTERFACE_(IMMDependencies, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMDependencies methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Index, IMMDependency FAR* FAR* pVal) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMMDependency,0x167EFB3FL,0xC0EF,0x4DE4,0x80,0xB5,0xEA,0xAF,0xC6,0x3A,0xF6,0x17);

/* Definition of interface: IMMDependency */
#undef INTERFACE
#define INTERFACE IMMDependency

DECLARE_INTERFACE_(IMMDependency, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMDependency methods */
    STDMETHOD(get_strKey)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strID)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strVersion)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_lLanguages)(THIS_ long FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMMExclusions,0x45D084ABL,0x5BC8,0x4849,0x86,0x4B,0x72,0xD3,0x03,0xCC,0x63,0xCE);

/* Definition of interface: IMMExclusions */
#undef INTERFACE
#define INTERFACE IMMExclusions

DECLARE_INTERFACE_(IMMExclusions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMExclusions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Index, IMMExclusion FAR* FAR* pVal) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMMExclusion,0xE50A9726L,0x01BB,0x4D4B,0x83,0xF5,0xC9,0xF6,0xA3,0x8F,0x22,0xBA);

/* Definition of interface: IMMExclusion */
#undef INTERFACE
#define INTERFACE IMMExclusion

DECLARE_INTERFACE_(IMMExclusion, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMExclusion methods */
    STDMETHOD(get_strKey)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strID)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strMinVersion)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_strMaxVersion)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_lLanguages)(THIS_ BSTR FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMMCatalog,0x980BA856L,0xBF42,0x4180,0x91,0x59,0xE1,0x02,0xA6,0x93,0x32,0x22);

/* Definition of interface: IMMCatalog */
#undef INTERFACE
#define INTERFACE IMMCatalog

DECLARE_INTERFACE_(IMMCatalog, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMCatalog methods */
    STDMETHOD(OpenFile)(THIS_ BSTR strFile, BSTR strPRJFile, long FAR* pVal) PURE;
    STDMETHOD(CloseFile)(THIS_ BSTR strFileName, long FAR* pVal) PURE;
    STDMETHOD(Refresh)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_MMSources)(THIS_ IMMSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pVal) PURE;
    STDMETHOD(FindFile)(THIS_ BSTR strFileName, BSTR strVersion, BSTR strLang, IMergeModule FAR* FAR* pMM, long FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IMMEvent FAR* pEvent, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(FindMM)(THIS_ BSTR bstrMMId, BSTR bstrDefaultPrjLang, IMergeModule FAR* FAR* pVal) PURE;
    STDMETHOD(FindFileEx)(THIS_ BSTR bstrDestFilePath, BSTR bstrVersion, BSTR bstrLang, IMergeModule FAR* FAR* ppMM, long FAR* pVal) PURE;
    STDMETHOD(GetMissingMergeModuleKey)(THIS_ BSTR bstrFilename, BSTR FAR* bstrMMKey) PURE;
    STDMETHOD(GetMissingMergeModuleSubject)(THIS_ BSTR bstrMMKey, BSTR FAR* bstrMMSubject) PURE;
};

DEFINE_GUID(IID_IMMCatalogNeptune,0x66DBE347L,0x1A37,0x40E2,0x90,0xF5,0xC5,0x15,0xE0,0x7E,0x37,0x2C);

/* Definition of interface: IMMCatalogNeptune */
#undef INTERFACE
#define INTERFACE IMMCatalogNeptune

DECLARE_INTERFACE_(IMMCatalogNeptune, IMMCatalog)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IMMCatalog methods */
    STDMETHOD(OpenFile)(THIS_ BSTR strFile, BSTR strPRJFile, long FAR* pVal) PURE;
    STDMETHOD(CloseFile)(THIS_ BSTR strFileName, long FAR* pVal) PURE;
    STDMETHOD(Refresh)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_MMSources)(THIS_ IMMSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pVal) PURE;
    STDMETHOD(FindFile)(THIS_ BSTR strFileName, BSTR strVersion, BSTR strLang, IMergeModule FAR* FAR* pMM, long FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IMMEvent FAR* pEvent, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(FindMM)(THIS_ BSTR bstrMMId, BSTR bstrDefaultPrjLang, IMergeModule FAR* FAR* pVal) PURE;
    STDMETHOD(FindFileEx)(THIS_ BSTR bstrDestFilePath, BSTR bstrVersion, BSTR bstrLang, IMergeModule FAR* FAR* ppMM, long FAR* pVal) PURE;
    STDMETHOD(GetMissingMergeModuleKey)(THIS_ BSTR bstrFilename, BSTR FAR* bstrMMKey) PURE;
    STDMETHOD(GetMissingMergeModuleSubject)(THIS_ BSTR bstrMMKey, BSTR FAR* bstrMMSubject) PURE;
#endif

    /* IMMCatalogNeptune methods */
    STDMETHOD(IsCatalogValidForProject)(THIS_ IUnknown * pIProject, VARIANT_BOOL FAR* pbValid) PURE;
};

DEFINE_GUID(IID_IMMCatalogTriton,0x6BF8F505L,0x8594,0x4C27,0xA9,0x01,0x3E,0xF1,0xAD,0x63,0xB9,0x0C);

/* Definition of interface: IMMCatalogTriton */
#undef INTERFACE
#define INTERFACE IMMCatalogTriton

DECLARE_INTERFACE_(IMMCatalogTriton, IMMCatalogNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IMMCatalog methods */
    STDMETHOD(OpenFile)(THIS_ BSTR strFile, BSTR strPRJFile, long FAR* pVal) PURE;
    STDMETHOD(CloseFile)(THIS_ BSTR strFileName, long FAR* pVal) PURE;
    STDMETHOD(Refresh)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_MMSources)(THIS_ IMMSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pVal) PURE;
    STDMETHOD(FindFile)(THIS_ BSTR strFileName, BSTR strVersion, BSTR strLang, IMergeModule FAR* FAR* pMM, long FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IMMEvent FAR* pEvent, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(FindMM)(THIS_ BSTR bstrMMId, BSTR bstrDefaultPrjLang, IMergeModule FAR* FAR* pVal) PURE;
    STDMETHOD(FindFileEx)(THIS_ BSTR bstrDestFilePath, BSTR bstrVersion, BSTR bstrLang, IMergeModule FAR* FAR* ppMM, long FAR* pVal) PURE;
    STDMETHOD(GetMissingMergeModuleKey)(THIS_ BSTR bstrFilename, BSTR FAR* bstrMMKey) PURE;
    STDMETHOD(GetMissingMergeModuleSubject)(THIS_ BSTR bstrMMKey, BSTR FAR* bstrMMSubject) PURE;

    /* IMMCatalogNeptune methods */
    STDMETHOD(IsCatalogValidForProject)(THIS_ IUnknown * pIProject, VARIANT_BOOL FAR* pbValid) PURE;
#endif

    /* IMMCatalogTriton methods */
    STDMETHOD(EnableCatalogUpdate)(THIS_ VARIANT_BOOL vbEnableCatalogUpdate) PURE;
};

DEFINE_GUID(IID_IMMValidator,0xCE91A98FL,0x85BE,0x4B3A,0x86,0xE6,0xFA,0x9D,0x8D,0x59,0x86,0x7A);

/* Definition of interface: IMMValidator */
#undef INTERFACE
#define INTERFACE IMMValidator

DECLARE_INTERFACE_(IMMValidator, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMValidator methods */
    STDMETHOD(get_Dependencies)(THIS_ _Collection FAR* FAR* pVal) PURE;
    STDMETHOD(get_Exclusions)(THIS_ _Collection FAR* FAR* pVal) PURE;
    STDMETHOD(get_Errors)(THIS_ _Collection FAR* FAR* pVal) PURE;
    STDMETHOD(Initialize)(THIS_ IMMCatalog FAR* oMMCat, IDispatch * oProject) PURE;
    STDMETHOD(Clear)(THIS) PURE;
    STDMETHOD(Validate)(THIS_ IMergeModule FAR* oMM, long FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMMDialogs,0x2721DF98L,0x1462,0x44C6,0xBE,0x8F,0xD5,0x5E,0x4F,0xC1,0x5F,0xB3);

/* Definition of interface: IMMDialogs */
#undef INTERFACE
#define INTERFACE IMMDialogs

DECLARE_INTERFACE_(IMMDialogs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMDialogs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Index, IMMDialog FAR* FAR* pVal) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMMDialog,0xFE484E0FL,0xCD46,0x4AE0,0x90,0x47,0x35,0xB6,0xC2,0xA0,0x9D,0xCE);

/* Definition of interface: IMMDialog */
#undef INTERFACE
#define INTERFACE IMMDialog

DECLARE_INTERFACE_(IMMDialog, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMDialog methods */
    STDMETHOD(get_strName)(THIS_ BSTR FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMMCustomActions,0xCF3BCF1AL,0xF2B1,0x4571,0xBF,0x04,0xE6,0x9F,0x51,0x98,0xB1,0xF4);

/* Definition of interface: IMMCustomActions */
#undef INTERFACE
#define INTERFACE IMMCustomActions

DECLARE_INTERFACE_(IMMCustomActions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMCustomActions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Index, IMMCustomAction FAR* FAR* pVal) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IMMCustomAction,0x7E929716L,0xD4BF,0x407D,0x9E,0xA9,0xC7,0xEF,0x54,0xDE,0xA4,0x32);

/* Definition of interface: IMMCustomAction */
#undef INTERFACE
#define INTERFACE IMMCustomAction

DECLARE_INTERFACE_(IMMCustomAction, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMCustomAction methods */
    STDMETHOD(get_strName)(THIS_ BSTR FAR* pVal) PURE;
};

typedef enum EnumEventId {
    epeiNewPath = 1
} EnumEventId;

DEFINE_GUID(IID_IMMEvent,0xC0E4C7E2L,0xC7AA,0x415A,0x93,0xF6,0x27,0x41,0x5A,0x08,0x98,0x35);

/* Definition of interface: IMMEvent */
#undef INTERFACE
#define INTERFACE IMMEvent

DECLARE_INTERFACE_(IMMEvent, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMEvent methods */
    STDMETHOD(ChangeEvent)(THIS_ EnumEventId enumEventId, BSTR bstrValue, VARIANT_BOOL FAR* bChange) PURE;
};

DEFINE_GUID(IID_IMMCatalogManagerNeptune,0x9BC0C990L,0x5624,0x47C9,0x8E,0x87,0xF0,0x84,0x89,0xBA,0x9A,0xEA);

/* Definition of interface: IMMCatalogManagerNeptune */
#undef INTERFACE
#define INTERFACE IMMCatalogManagerNeptune

DECLARE_INTERFACE_(IMMCatalogManagerNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMCatalogManagerNeptune methods */
    STDMETHOD(get_MMCatalog)(THIS_ long lIsmAutoEnumProjectType, IUnknown * FAR* ppCat) PURE;
};

#endif
