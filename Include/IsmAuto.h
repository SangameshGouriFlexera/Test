/* This header file machine-generated by mktyplib.exe */
/* Interface to type library: IsmAutoLib */

#ifndef _IsmAutoLib_H_
#define _IsmAutoLib_H_

DEFINE_GUID(LIBID_IsmAutoLib,0xE0AF30E6L,0xDE3A,0x452A,0xB4,0xE5,0x15,0x89,0xFC,0x7E,0x0C,0x95);
#ifndef BEGIN_INTERFACE
#define BEGIN_INTERFACE
#endif

typedef VARIANT_BOOL VARIANT_BOOL;

typedef enum EnumProjectChild {
    eprcProduct = 1,
    eprcComponent = 2,
    eprcLanguage = 3,
    eprcPathVariable = 4,
    eprcProperty = 5,
    eprcDirectory = 6,
    eprcError = 7,
    eprcUITextString = 8,
    eprcDialog = 9,
    eprcComboBox = 10,
    eprcCheckBox = 11,
    eprcListBox = 12,
    eprcListView = 13,
    eprcCustomAction = 14,
    eprcTextStyle = 15,
    eprcBinary = 16,
    eprcAction = 17,
    eprcBuildLabel = 18,
    eprcScriptFile = 19,
    eprcLinkerOption = 20,
    eprcMergeModule = 21,
    eprcSetupType = 22,
    eprcIniFile = 23,
    eprcMIMEType = 24,
    eprcProgID = 25,
    eprcScriptingBillboard = 26,
    eprcVisitedView = 27,
    eprcEnvironment = 28,
    eprcUpgradeEntry = 29,
    eprcAppSearch = 30,
    eprcRegLocator = 31,
    eprcLaunchCondition = 32,
    eprcAppId = 33,
    eprcMedia = 34,
    eprcSetupFile = 35,
    eprcRemoveIniFile = 36,
    eprcISObject = 37,
    eprcISAlias = 38,
    eprcISDisk1File = 39,
    eprcISStorage = 40,
    eprcLockPermission = 41,
    eprcSignature = 42,
    eprcIniLocator = 43,
    eprcCompLocator = 44,
    eprcDrLocator = 45,
    eprcUpgradeMsiItem = 46,
    eprcVRoot = 47,
    eprcPatchConfiguration = 48,
    eprcISDependency = 49,
    eprcCEApp = 50,
    eprcISLastDiskFile = 51,
    eprcISOtherDiskFile = 52,
    eprcAssistantTag = 53,
    eprcRegistrySet = 54,
    eprcPrerequisite = 55,
    eprcSetupPrerequisites = 56,
    eprcComplusApplication = 57,
    eprcSQLConnection = 58,
    eprcWebSite = 59,
    eprcPalm = 60,
    eprcXmlFile = 61,
    eprcXmlLocator = 62,
    eprcDBMetaData = 63,
    eprcDRMBinaries = 64,
    eprcDRMLicenses = 65,
    eprcDIMReference = 66,
    eprcISChainPackage = 67,
    eprcISLockPermission = 68,
    eprcActionText = 69,
    eprcMsiLockPermissionsEx = 70,
    eprcDim = 71,
    eprcSuitePackage = 72,
    eprcSuiteTransaction = 73,
    eprcRelease = 74,
    eprcSuiteFeature = 75,
    eprcSuiteStyle = 76,
    eprcSuiteBrush = 77,
    eprcSuiteAbortCondition = 78,
    eprcSuiteAction = 79,
    eprcSuiteActionRef = 80,
    eprcSuiteFontSet = 81,
    eprcSuiteControlTheme = 82,
    eprcIsVisualElement = 83
} EnumProjectChild;

typedef enum EnumSetupTypeStatus {
    estSelected = 10,
    estDeselected = 11,
    estDisabled = 12
} EnumSetupTypeStatus;

typedef enum EnumComPlusProcessType {
    ecptOnProcess = 0,
    ecptOnSave = 1,
    ecptOnDelete = 2,
    ecptOnRemove = 3,
    ecptOnLoad = 4,
    ecptOnRefresh = 5,
    ecptOnImportFile = 6
} EnumComPlusProcessType;

DEFINE_GUID(IID_IVBEnumVARIANT,0x00020404L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: IVBEnumVARIANT */
#undef INTERFACE
#define INTERFACE IVBEnumVARIANT

DECLARE_INTERFACE_(IVBEnumVARIANT, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IVBEnumVARIANT methods */
    STDMETHOD(Next)(THIS_ long celt, VARIANT FAR* rgvar, long pceltFetched) PURE;
    STDMETHOD(Skip)(THIS_ long celt) PURE;
    STDMETHOD(Reset)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ IVBEnumVARIANT FAR* FAR* ppenum) PURE;
};

interface IDimReferenceIxtapa;

DEFINE_GUID(IID_IIsProperty,0x8757629AL,0xD2D8,0x4513,0xB1,0x84,0x9F,0xBB,0xD7,0x26,0x28,0xF2);

/* Definition of interface: IIsProperty */
#undef INTERFACE
#define INTERFACE IIsProperty

DECLARE_INTERFACE_(IIsProperty, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIsProperty methods */
    STDMETHOD(get_Value)(THIS_ VARIANT FAR* pVal) PURE;
    STDMETHOD(put_Value)(THIS_ VARIANT val) PURE;
    STDMETHOD(get_Label)(THIS_ VARIANT FAR* pVal) PURE;
    STDMETHOD(get_Style)(THIS_ VARIANT FAR* pVal) PURE;
    STDMETHOD(get_Id)(THIS_ VARIANT FAR* pVal) PURE;
    STDMETHOD(get_HelpString)(THIS_ VARIANT FAR* pVal) PURE;
};

DEFINE_GUID(IID_IIsProperties,0xF4121EF2L,0xC985,0x42E7,0x8B,0x4E,0xD3,0x7B,0x0D,0x04,0xF6,0xD2);

/* Definition of interface: IIsProperties */
#undef INTERFACE
#define INTERFACE IIsProperties

DECLARE_INTERFACE_(IIsProperties, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIsProperties methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IIsProperty FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IBusinessObject,0x7CC96B5AL,0xA0F1,0x4577,0x9F,0x5C,0xCD,0x9C,0xD8,0x84,0x30,0xE1);

/* Definition of interface: IBusinessObject */
#undef INTERFACE
#define INTERFACE IBusinessObject

DECLARE_INTERFACE_(IBusinessObject, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IBusinessObject methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* Key) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_IsProperties)(THIS_ IIsProperties FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IBusinessObject2,0xF2E2C049L,0x1F80,0x49C0,0xAC,0xED,0xE7,0x65,0xF3,0x02,0x2D,0x84);

/* Definition of interface: IBusinessObject2 */
#undef INTERFACE
#define INTERFACE IBusinessObject2

DECLARE_INTERFACE_(IBusinessObject2, IBusinessObject)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IBusinessObject methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* Key) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_IsProperties)(THIS_ IIsProperties FAR* FAR* pVal) PURE;
#endif

    /* IBusinessObject2 methods */
    STDMETHOD(CopyProperties)(THIS_ IBusinessObject FAR* pBusObjCopyMe) PURE;
    STDMETHOD(CanDelete)(THIS_ VARIANT_BOOL FAR* pbReturn) PURE;
};

DEFINE_GUID(IID_IBusinessObjectProteus,0x443D3CE8L,0x14E2,0x4430,0xA7,0x25,0x8F,0x70,0x5E,0xEB,0x36,0xFA);

/* Definition of interface: IBusinessObjectProteus */
#undef INTERFACE
#define INTERFACE IBusinessObjectProteus

DECLARE_INTERFACE_(IBusinessObjectProteus, IBusinessObject2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IBusinessObject methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* Key) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_IsProperties)(THIS_ IIsProperties FAR* FAR* pVal) PURE;

    /* IBusinessObject2 methods */
    STDMETHOD(CopyProperties)(THIS_ IBusinessObject FAR* pBusObjCopyMe) PURE;
    STDMETHOD(CanDelete)(THIS_ VARIANT_BOOL FAR* pbReturn) PURE;
#endif

    /* IBusinessObjectProteus methods */
    STDMETHOD(CanDeleteEx)(THIS_ VARIANT FAR* vSAIgnoreTables, VARIANT_BOOL FAR* pbReturn) PURE;
};

DEFINE_GUID(IID_IBusinessObjectPlutoSP1,0x443D3CE9L,0x14E2,0x4430,0xA7,0x25,0x8F,0x70,0x5E,0xEB,0x36,0xFA);

/* Definition of interface: IBusinessObjectPlutoSP1 */
#undef INTERFACE
#define INTERFACE IBusinessObjectPlutoSP1

DECLARE_INTERFACE_(IBusinessObjectPlutoSP1, IBusinessObjectProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IBusinessObject methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* Key) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_IsProperties)(THIS_ IIsProperties FAR* FAR* pVal) PURE;

    /* IBusinessObject2 methods */
    STDMETHOD(CopyProperties)(THIS_ IBusinessObject FAR* pBusObjCopyMe) PURE;
    STDMETHOD(CanDelete)(THIS_ VARIANT_BOOL FAR* pbReturn) PURE;

    /* IBusinessObjectProteus methods */
    STDMETHOD(CanDeleteEx)(THIS_ VARIANT FAR* vSAIgnoreTables, VARIANT_BOOL FAR* pbReturn) PURE;
#endif

    /* IBusinessObjectPlutoSP1 methods */
    STDMETHOD(Clone)(THIS_ IBusinessObject FAR* FAR* ppClone) PURE;
};

DEFINE_GUID(IID_IBusinessObjectIxtapa,0xF424667FL,0x33FF,0x44D7,0xBD,0x7F,0x71,0x66,0x64,0x7A,0x2C,0x77);

/* Definition of interface: IBusinessObjectIxtapa */
#undef INTERFACE
#define INTERFACE IBusinessObjectIxtapa

DECLARE_INTERFACE_(IBusinessObjectIxtapa, IBusinessObjectPlutoSP1)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IBusinessObject methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* Key) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_IsProperties)(THIS_ IIsProperties FAR* FAR* pVal) PURE;

    /* IBusinessObject2 methods */
    STDMETHOD(CopyProperties)(THIS_ IBusinessObject FAR* pBusObjCopyMe) PURE;
    STDMETHOD(CanDelete)(THIS_ VARIANT_BOOL FAR* pbReturn) PURE;

    /* IBusinessObjectProteus methods */
    STDMETHOD(CanDeleteEx)(THIS_ VARIANT FAR* vSAIgnoreTables, VARIANT_BOOL FAR* pbReturn) PURE;

    /* IBusinessObjectPlutoSP1 methods */
    STDMETHOD(Clone)(THIS_ IBusinessObject FAR* FAR* ppClone) PURE;
#endif

    /* IBusinessObjectIxtapa methods */
    STDMETHOD(get_IsItemFromDim)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(get_ParentDimRef)(THIS_ IDimReferenceIxtapa FAR* FAR* ppDimRef) PURE;
    STDMETHOD(put_ParentDimRef)(THIS_ IDimReferenceIxtapa FAR* pDimRef) PURE;
};

DEFINE_GUID(IID_IBusinessObjectIndoreSP1,0x6D3C47E4L,0x08BF,0x4A0C,0x94,0x09,0xDD,0x35,0x88,0x3B,0x75,0xF4);

/* Definition of interface: IBusinessObjectIndoreSP1 */
#undef INTERFACE
#define INTERFACE IBusinessObjectIndoreSP1

DECLARE_INTERFACE_(IBusinessObjectIndoreSP1, IBusinessObjectIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IBusinessObject methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* Key) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_IsProperties)(THIS_ IIsProperties FAR* FAR* pVal) PURE;

    /* IBusinessObject2 methods */
    STDMETHOD(CopyProperties)(THIS_ IBusinessObject FAR* pBusObjCopyMe) PURE;
    STDMETHOD(CanDelete)(THIS_ VARIANT_BOOL FAR* pbReturn) PURE;

    /* IBusinessObjectProteus methods */
    STDMETHOD(CanDeleteEx)(THIS_ VARIANT FAR* vSAIgnoreTables, VARIANT_BOOL FAR* pbReturn) PURE;

    /* IBusinessObjectPlutoSP1 methods */
    STDMETHOD(Clone)(THIS_ IBusinessObject FAR* FAR* ppClone) PURE;

    /* IBusinessObjectIxtapa methods */
    STDMETHOD(get_IsItemFromDim)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(get_ParentDimRef)(THIS_ IDimReferenceIxtapa FAR* FAR* ppDimRef) PURE;
    STDMETHOD(put_ParentDimRef)(THIS_ IDimReferenceIxtapa FAR* pDimRef) PURE;
#endif

    /* IBusinessObjectIndoreSP1 methods */
    STDMETHOD(get_IsVirtual)(THIS_ VARIANT_BOOL FAR* pvb) PURE;
    STDMETHOD(put_IsVirtual)(THIS_ VARIANT_BOOL vb) PURE;
    STDMETHOD(get_VirtualProperty)(THIS_ BSTR bstrPropName, BSTR FAR* pbstrPropValue) PURE;
    STDMETHOD(put_VirtualProperty)(THIS_ BSTR bstrPropName, BSTR pbstrPropValue) PURE;
};

DEFINE_GUID(IID_IBusinessObjectIronwood,0xB80D1847L,0x4A53,0x4A13,0x81,0x7E,0xEB,0x87,0x2A,0x0E,0x40,0x57);

/* Definition of interface: IBusinessObjectIronwood */
#undef INTERFACE
#define INTERFACE IBusinessObjectIronwood

DECLARE_INTERFACE_(IBusinessObjectIronwood, IBusinessObjectIndoreSP1)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IBusinessObject methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* Key) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(get_IsProperties)(THIS_ IIsProperties FAR* FAR* pVal) PURE;

    /* IBusinessObject2 methods */
    STDMETHOD(CopyProperties)(THIS_ IBusinessObject FAR* pBusObjCopyMe) PURE;
    STDMETHOD(CanDelete)(THIS_ VARIANT_BOOL FAR* pbReturn) PURE;

    /* IBusinessObjectProteus methods */
    STDMETHOD(CanDeleteEx)(THIS_ VARIANT FAR* vSAIgnoreTables, VARIANT_BOOL FAR* pbReturn) PURE;

    /* IBusinessObjectPlutoSP1 methods */
    STDMETHOD(Clone)(THIS_ IBusinessObject FAR* FAR* ppClone) PURE;

    /* IBusinessObjectIxtapa methods */
    STDMETHOD(get_IsItemFromDim)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(get_ParentDimRef)(THIS_ IDimReferenceIxtapa FAR* FAR* ppDimRef) PURE;
    STDMETHOD(put_ParentDimRef)(THIS_ IDimReferenceIxtapa FAR* pDimRef) PURE;

    /* IBusinessObjectIndoreSP1 methods */
    STDMETHOD(get_IsVirtual)(THIS_ VARIANT_BOOL FAR* pvb) PURE;
    STDMETHOD(put_IsVirtual)(THIS_ VARIANT_BOOL vb) PURE;
    STDMETHOD(get_VirtualProperty)(THIS_ BSTR bstrPropName, BSTR FAR* pbstrPropValue) PURE;
    STDMETHOD(put_VirtualProperty)(THIS_ BSTR bstrPropName, BSTR pbstrPropValue) PURE;
#endif

    /* IBusinessObjectIronwood methods */
    STDMETHOD(CloneEx)(THIS_ VARIANT_BOOL vbDeepAll, IBusinessObject FAR* FAR* ppClone) PURE;
};

DEFINE_GUID(IID_IBusinessObjectEx,0x6CEDEA1FL,0x12CF,0x439E,0xA2,0x7E,0x6A,0xAA,0xAE,0xAB,0x97,0x73);

/* Definition of interface: IBusinessObjectEx */
#undef INTERFACE
#define INTERFACE IBusinessObjectEx

DECLARE_INTERFACE_(IBusinessObjectEx, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IBusinessObjectEx methods */
    STDMETHOD(PropGetValue)(THIS_ BSTR PropID, VARIANT FAR* value) PURE;
    STDMETHOD(PropLetValue)(THIS_ BSTR PropID, VARIANT value) PURE;
};

DEFINE_GUID(IID_ICollection,0x187FFC20L,0xBFB3,0x4240,0x9D,0x02,0x8C,0x66,0x69,0x19,0x90,0x8E);

/* Definition of interface: ICollection */
#undef INTERFACE
#define INTERFACE ICollection

DECLARE_INTERFACE_(ICollection, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICollection methods */
    STDMETHOD(CreateObject)(THIS_ VARIANT vItem, IBusinessObject FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IIsStrings,0xCE10C530L,0x1D90,0x4584,0x8B,0x82,0x12,0x99,0xE7,0x22,0x5C,0xA6);

/* Definition of interface: IIsStrings */
#undef INTERFACE
#define INTERFACE IIsStrings

DECLARE_INTERFACE_(IIsStrings, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIsStrings methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, BSTR FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IIsStrings2,0x4EB7F535L,0x65BA,0x43D5,0xB6,0xD3,0xFD,0xC8,0x52,0xFA,0xF0,0xED);

/* Definition of interface: IIsStrings2 */
#undef INTERFACE
#define INTERFACE IIsStrings2

DECLARE_INTERFACE_(IIsStrings2, IIsStrings)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IIsStrings methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, BSTR FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
#endif

    /* IIsStrings2 methods */
    STDMETHOD(Add)(THIS_ BSTR bstrString) PURE;
};

DEFINE_GUID(IID_IWhereClause,0xC3EC8A79L,0x4E66,0x42E0,0xBE,0xAC,0x21,0xAA,0x30,0xC5,0x54,0x16);

/* Definition of interface: IWhereClause */
#undef INTERFACE
#define INTERFACE IWhereClause

DECLARE_INTERFACE_(IWhereClause, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IWhereClause methods */
    STDMETHOD(get_WhereClause)(THIS_ BSTR FAR* pbstrWhereClause) PURE;
    STDMETHOD(put_WhereClause)(THIS_ BSTR bstrWhereClause) PURE;
};

DEFINE_GUID(IID_ILightEntry,0x5AEACD23L,0xB434,0x42BF,0xAF,0xB1,0x78,0xA3,0xD5,0xD4,0x45,0xB0);

/* Definition of interface: ILightEntry */
#undef INTERFACE
#define INTERFACE ILightEntry

DECLARE_INTERFACE_(ILightEntry, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightEntry methods */
    STDMETHOD(get_ExcludeFromEnumerator)(THIS_ VARIANT_BOOL FAR* pvbVal) PURE;
};

typedef enum EnumScheduleType {
    estDaily,
    estWeekly,
    estMonthly,
    estOnce,
    estOnStart,
    estLogon,
    estOnIdle
} EnumScheduleType;

typedef enum EnumMonthlyScheduleType {
    emstDayOfMonth,
    emstWeekOfMonth
} EnumMonthlyScheduleType;

typedef enum EnumDayOfWeek {
    edowNone = 0,
    edowMon = 1,
    edowTue = 2,
    edowWed = 4,
    edowThu = 8,
    edowFri = 16,
    edowSat = 32,
    edowSun = 64,
    edowAll = 127
} EnumDayOfWeek;

typedef enum EnumMonthOfYear {
    emoyNone = 0,
    emoyJan = 1,
    emoyFeb = 2,
    emoyMar = 4,
    emoyApl = 8,
    emoyMay = 16,
    emoyJun = 32,
    emoyJul = 64,
    emoyAug = 128,
    emoySep = 256,
    emoyOct = 512,
    emoyNov = 1024,
    emoyDec = 2048,
    emoyAll = 4095
} EnumMonthOfYear;

typedef enum EnumWeekOfMonth {
    ewomNone = 0,
    ewomFirst = 1,
    ewomSecond = 2,
    ewomThird = 4,
    ewomFourth = 8,
    ewomLast = 16,
    ewomAll = 31
} EnumWeekOfMonth;

DEFINE_GUID(IID_IScheduledTask,0xA022AFFAL,0x3CDB,0x476C,0xB9,0xB4,0x2D,0x0E,0x29,0xB2,0x0E,0xB2);

/* Definition of interface: IScheduledTask */
#undef INTERFACE
#define INTERFACE IScheduledTask

DECLARE_INTERFACE_(IScheduledTask, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IScheduledTask methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_TaskName)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_TaskName)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_TaskRun)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_TaskRun)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_WkDir)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_WkDir)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_UserName)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_UserName)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_StartTime)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_StartTime)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_Schedule)(THIS_ EnumScheduleType FAR* eVal) PURE;
    STDMETHOD(put_Schedule)(THIS_ EnumScheduleType eVal) PURE;
    STDMETHOD(get_Modifier)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Modifier)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_Days)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Days)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_Months)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Months)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_IdleTime)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_IdleTime)(THIS_ long lVal) PURE;
    STDMETHOD(get_RunOnlyIfLogOn)(THIS_ VARIANT_BOOL FAR* vbVal) PURE;
    STDMETHOD(put_RunOnlyIfLogOn)(THIS_ VARIANT_BOOL vblVal) PURE;
    STDMETHOD(get_DayOfWeek)(THIS_ EnumDayOfWeek FAR* eVal) PURE;
    STDMETHOD(put_DayOfWeek)(THIS_ EnumDayOfWeek eVal) PURE;
    STDMETHOD(get_StartDate)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_StartDate)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_EndDate)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_EndDate)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MonthOfYear)(THIS_ EnumMonthOfYear FAR* eVal) PURE;
    STDMETHOD(put_MonthOfYear)(THIS_ EnumMonthOfYear eVal) PURE;
    STDMETHOD(get_WeekOfMonth)(THIS_ EnumWeekOfMonth FAR* eVal) PURE;
    STDMETHOD(put_WeekOfMonth)(THIS_ EnumWeekOfMonth eVal) PURE;
    STDMETHOD(get_DayOfMonth)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_DayOfMonth)(THIS_ long lVal) PURE;
    STDMETHOD(get_MonthlyScheduleType)(THIS_ EnumMonthlyScheduleType FAR* eVal) PURE;
    STDMETHOD(put_MonthlyScheduleType)(THIS_ EnumMonthlyScheduleType eVal) PURE;
};

DEFINE_GUID(IID_IScheduledTasks,0xBB26E673L,0xE77B,0x4D48,0xA0,0x60,0xFF,0x5E,0xA7,0x84,0x27,0xC4);

/* Definition of interface: IScheduledTasks */
#undef INTERFACE
#define INTERFACE IScheduledTasks

DECLARE_INTERFACE_(IScheduledTasks, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IScheduledTasks methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IScheduledTask FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_INetworkShare,0x11D52042L,0x08EF,0x4F9F,0xA4,0x45,0x73,0xD7,0xC5,0xC3,0xDF,0x8A);

/* Definition of interface: INetworkShare */
#undef INTERFACE
#define INTERFACE INetworkShare

DECLARE_INTERFACE_(INetworkShare, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* INetworkShare methods */
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_ServerName)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_ServerName)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_ShareName)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_ShareName)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_Remark)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Remark)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_Permission)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Permission)(THIS_ long lVal) PURE;
    STDMETHOD(get_MaxUsers)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_MaxUsers)(THIS_ long lVal) PURE;
    STDMETHOD(get_AllowChangeFiles)(THIS_ VARIANT_BOOL FAR* vbVal) PURE;
    STDMETHOD(put_AllowChangeFiles)(THIS_ VARIANT_BOOL vbVal) PURE;
};

DEFINE_GUID(IID_INetworkShares,0xF7B40FD5L,0xD05D,0x4CD6,0xA7,0x7E,0xDB,0x40,0xC0,0x53,0xE8,0x9D);

/* Definition of interface: INetworkShares */
#undef INTERFACE
#define INTERFACE INetworkShares

DECLARE_INTERFACE_(INetworkShares, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* INetworkShares methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, INetworkShare FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumSetupPrereqLoc {
    esplSourceMedia = 0,
    esplSetupExe = 1,
    esplWeb = 2
} EnumSetupPrereqLoc;

DEFINE_GUID(IID_ISetupPrerequisiteProteus,0xB3686EFEL,0x81B8,0x445C,0x87,0x46,0x7F,0x82,0x0E,0x90,0x37,0xC4);

/* Definition of interface: ISetupPrerequisiteProteus */
#undef INTERFACE
#define INTERFACE ISetupPrerequisiteProteus

DECLARE_INTERFACE_(ISetupPrerequisiteProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISetupPrerequisiteProteus methods */
    STDMETHOD(get_Key)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISBuildSourcePath)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ISBuildSourcePath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Order)(THIS_ short FAR* lOrder) PURE;
    STDMETHOD(put_Order)(THIS_ short lOrder) PURE;
};

DEFINE_GUID(IID_ISetupPrerequisiteIndore,0x65FB16CFL,0x515D,0x4150,0xA7,0x7D,0x8E,0x32,0x66,0x8C,0xAD,0xE5);

/* Definition of interface: ISetupPrerequisiteIndore */
#undef INTERFACE
#define INTERFACE ISetupPrerequisiteIndore

DECLARE_INTERFACE_(ISetupPrerequisiteIndore, ISetupPrerequisiteProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISetupPrerequisiteProteus methods */
    STDMETHOD(get_Key)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISBuildSourcePath)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ISBuildSourcePath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Order)(THIS_ short FAR* lOrder) PURE;
    STDMETHOD(put_Order)(THIS_ short lOrder) PURE;
#endif

    /* ISetupPrerequisiteIndore methods */
    STDMETHOD(get_ISSetupLocation)(THIS_ EnumSetupPrereqLoc FAR* penumLoc) PURE;
    STDMETHOD(put_ISSetupLocation)(THIS_ EnumSetupPrereqLoc enumLoc) PURE;
    STDMETHOD(get_ISReleaseFlags)(THIS_ BSTR FAR* pbstrFlags) PURE;
    STDMETHOD(put_ISReleaseFlags)(THIS_ BSTR bstrFlags) PURE;
};

DEFINE_GUID(IID_ISetupPrerequisiteJustice,0x45C6C491L,0x09D2,0x409F,0xB3,0x91,0xDB,0xD5,0x31,0x94,0x17,0x81);

/* Definition of interface: ISetupPrerequisiteJustice */
#undef INTERFACE
#define INTERFACE ISetupPrerequisiteJustice

DECLARE_INTERFACE_(ISetupPrerequisiteJustice, ISetupPrerequisiteIndore)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISetupPrerequisiteProteus methods */
    STDMETHOD(get_Key)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISBuildSourcePath)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ISBuildSourcePath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Order)(THIS_ short FAR* lOrder) PURE;
    STDMETHOD(put_Order)(THIS_ short lOrder) PURE;

    /* ISetupPrerequisiteIndore methods */
    STDMETHOD(get_ISSetupLocation)(THIS_ EnumSetupPrereqLoc FAR* penumLoc) PURE;
    STDMETHOD(put_ISSetupLocation)(THIS_ EnumSetupPrereqLoc enumLoc) PURE;
    STDMETHOD(get_ISReleaseFlags)(THIS_ BSTR FAR* pbstrFlags) PURE;
    STDMETHOD(put_ISReleaseFlags)(THIS_ BSTR bstrFlags) PURE;
#endif

    /* ISetupPrerequisiteJustice methods */
    STDMETHOD(get_InFeature)(THIS_ IUnknown * pFeature, VARIANT_BOOL FAR* pvbInFeature) PURE;
    STDMETHOD(put_InFeature)(THIS_ IUnknown * pFeature, VARIANT_BOOL vbInFeature) PURE;
};

DEFINE_GUID(IID_ISetupPrerequisitesProteus,0xC039D25FL,0xEAE4,0x4AC5,0x83,0xEB,0xD5,0x92,0x97,0x0D,0x83,0x9D);

/* Definition of interface: ISetupPrerequisitesProteus */
#undef INTERFACE
#define INTERFACE ISetupPrerequisitesProteus

DECLARE_INTERFACE_(ISetupPrerequisitesProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISetupPrerequisitesProteus methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ISetupPrerequisiteProteus FAR* FAR* pAction) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumPrequisiteLocation {
    prlWeb = 0,
    prlDisk1 = 1,
    prlStream = 2,
    prlClickOnceConditional = 4
} EnumPrequisiteLocation;

DEFINE_GUID(IID_IPrerequisiteNeptunePDC,0xF81847E4L,0xCCC9,0x41D8,0xA6,0x95,0x30,0xDB,0x5A,0x75,0xA8,0x3B);

/* Definition of interface: IPrerequisiteNeptunePDC */
#undef INTERFACE
#define INTERFACE IPrerequisiteNeptunePDC

DECLARE_INTERFACE_(IPrerequisiteNeptunePDC, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPrerequisiteNeptunePDC methods */
    STDMETHOD(get_PrerequisiteKey)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrerequisiteKey)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pprl) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR prl) PURE;
    STDMETHOD(get_Location)(THIS_ EnumPrequisiteLocation FAR* pprl) PURE;
    STDMETHOD(put_Location)(THIS_ EnumPrequisiteLocation prl) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISBuildSourcePath)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ISBuildSourcePath)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_IPrerequisitesNeptunePDC,0xF81847E5L,0xCCC9,0x41D8,0xA6,0x95,0x30,0xDB,0x5A,0x75,0xA8,0x3B);

/* Definition of interface: IPrerequisitesNeptunePDC */
#undef INTERFACE
#define INTERFACE IPrerequisitesNeptunePDC

DECLARE_INTERFACE_(IPrerequisitesNeptunePDC, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPrerequisitesNeptunePDC methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IPrerequisiteNeptunePDC FAR* FAR* pAction) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IAssistantTagNeptune,0x31146BCFL,0xBFB6,0x11D2,0xB4,0x22,0x00,0x10,0x4B,0x26,0x16,0x43);

/* Definition of interface: IAssistantTagNeptune */
#undef INTERFACE
#define INTERFACE IAssistantTagNeptune

DECLARE_INTERFACE_(IAssistantTagNeptune, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IAssistantTagNeptune methods */
    STDMETHOD(get_Tag)(THIS_ BSTR FAR* pTag) PURE;
    STDMETHOD(put_Tag)(THIS_ BSTR Tag) PURE;
    STDMETHOD(get_Data)(THIS_ BSTR FAR* pData) PURE;
    STDMETHOD(put_Data)(THIS_ BSTR Data) PURE;
};

DEFINE_GUID(IID_IAssistantTagsNeptune,0x31146BC0L,0xBFB6,0x11D2,0xB4,0x22,0x00,0x10,0x4B,0x26,0x16,0x43);

/* Definition of interface: IAssistantTagsNeptune */
#undef INTERFACE
#define INTERFACE IAssistantTagsNeptune

DECLARE_INTERFACE_(IAssistantTagsNeptune, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IAssistantTagsNeptune methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IAssistantTagNeptune FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IMultiSelectNeptune,0xE2EC3324L,0xD46E,0x4458,0x89,0xF0,0x31,0xD3,0xF6,0xE6,0x4B,0x4F);

/* Definition of interface: IMultiSelectNeptune */
#undef INTERFACE
#define INTERFACE IMultiSelectNeptune

DECLARE_INTERFACE_(IMultiSelectNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMultiSelectNeptune methods */
    STDMETHOD(get_IsSelected)(THIS_ IBusinessObject FAR* pObjContainer, VARIANT_BOOL FAR* pvbIsSelected) PURE;
    STDMETHOD(put_IsSelected)(THIS_ IBusinessObject FAR* pObjContainer, VARIANT_BOOL vbIsSelected) PURE;
    STDMETHOD(get_IsEnabled)(THIS_ IBusinessObject FAR* pObjContainer, VARIANT_BOOL FAR* pvbIsEnabled) PURE;
    STDMETHOD(get_StringList)(THIS_ BSTR FAR* pbstrStringList) PURE;
    STDMETHOD(put_StringList)(THIS_ BSTR bstrStringList) PURE;
    STDMETHOD(get_Strings)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_IsEnabled2)(THIS_ VARIANT CheckedMultiSelects, VARIANT_BOOL FAR* pvbIsEnabled) PURE;
};

typedef enum EnumMMCustomActionProperty {
    emcapName = 0
} EnumMMCustomActionProperty;

DEFINE_GUID(IID_IMMCustomAction,0x66DBA821L,0xDF24,0x40AB,0xAD,0x69,0x6C,0x08,0x58,0xB9,0xA0,0xFE);

/* Definition of interface: IMMCustomAction */
#undef INTERFACE
#define INTERFACE IMMCustomAction

DECLARE_INTERFACE_(IMMCustomAction, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMCustomAction methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
};

DEFINE_GUID(IID_IMMCustomActions,0x89D2F34AL,0x15E5,0x48DF,0xB4,0x6D,0xB7,0x17,0xC7,0x65,0x3E,0x67);

/* Definition of interface: IMMCustomActions */
#undef INTERFACE
#define INTERFACE IMMCustomActions

DECLARE_INTERFACE_(IMMCustomActions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMCustomActions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IMMCustomAction FAR* FAR* pMMCustomAction) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumMMDialogProperty {
    emdpName = 0
} EnumMMDialogProperty;

DEFINE_GUID(IID_IMMDialog,0x1FE92C96L,0x216B,0x4B0D,0xAE,0x94,0x62,0x33,0x3D,0x80,0xF1,0xAA);

/* Definition of interface: IMMDialog */
#undef INTERFACE
#define INTERFACE IMMDialog

DECLARE_INTERFACE_(IMMDialog, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMDialog methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
};

DEFINE_GUID(IID_IMMDialogs,0x99D66410L,0xB37C,0x47FC,0x8C,0x68,0xCF,0x20,0x98,0x75,0xF5,0xF7);

/* Definition of interface: IMMDialogs */
#undef INTERFACE
#define INTERFACE IMMDialogs

DECLARE_INTERFACE_(IMMDialogs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMDialogs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IMMDialog FAR* FAR* pMMDialog) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumActionProperty {
    eapName = 0,
    eapComment = 10
} EnumActionProperty;

DEFINE_GUID(IID_IAction,0xDAC633E5L,0x3A5E,0x4AF0,0xB1,0x9E,0x0C,0xBE,0x00,0x7C,0x5D,0x63);

/* Definition of interface: IAction */
#undef INTERFACE
#define INTERFACE IAction

DECLARE_INTERFACE_(IAction, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IAction methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* sComment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR sComment) PURE;
};

DEFINE_GUID(IID_IActions,0x7D8F9784L,0x8326,0x409F,0x97,0xC6,0x6F,0x45,0x32,0x6C,0x07,0x46);

/* Definition of interface: IActions */
#undef INTERFACE
#define INTERFACE IActions

DECLARE_INTERFACE_(IActions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IActions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IAction FAR* FAR* pAction) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

interface IControl;

interface IControls;

interface IControlCondition;

interface IControlConditions;

interface IControlEvents;

interface IEventMappings;

interface ICheckBoxes;

interface IComboBoxes;

interface IListBoxes;

interface IListViews;

interface IRadioButtons;

interface IEventConditions;

interface IEventArguments;

interface IComboBoxRows;

interface IListBoxRows;

interface IListViewRows;

interface IRadioButton;

interface IRadioButtonRow;

interface IBinary;

typedef enum EnumDialogChild {
    edcControl = 1
} EnumDialogChild;

typedef enum EnumPropDialog {
    epdgName = 0,
    epdgHCentering = 11,
    epdgVCentering = 12,
    epdgWidth = 13,
    epdgHeight = 14,
    epdgAttributes = 15,
    epdgTitle = 16,
    epdgControlFirst = 17,
    epdgControlDefault = 18,
    epdgControlCancel = 19,
    epdgSequence = 20,
    epdgType = 21,
    epdgComment = 22
} EnumPropDialog;

DEFINE_GUID(IID_IDialog,0x8C37740EL,0x99BE,0x4DE6,0x92,0xDB,0xFC,0xCD,0x91,0xB3,0xEC,0xA5);

/* Definition of interface: IDialog */
#undef INTERFACE
#define INTERFACE IDialog

DECLARE_INTERFACE_(IDialog, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDialog methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDialogChild edcChild, BSTR strName, VARIANT vInitValues, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Controls)(THIS_ IControls FAR* FAR* pVal) PURE;
    STDMETHOD(get_HCentering)(THIS_ long FAR* HCentering) PURE;
    STDMETHOD(put_HCentering)(THIS_ long HCentering) PURE;
    STDMETHOD(get_VCentering)(THIS_ long FAR* VCentering) PURE;
    STDMETHOD(put_VCentering)(THIS_ long VCentering) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* Attributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ long Attributes) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* Title) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR Title) PURE;
    STDMETHOD(get_ControlFirst)(THIS_ BSTR FAR* ControlFirst) PURE;
    STDMETHOD(put_ControlFirst)(THIS_ BSTR ControlFirst) PURE;
    STDMETHOD(get_ControlDefault)(THIS_ BSTR FAR* ControlDefault) PURE;
    STDMETHOD(put_ControlDefault)(THIS_ BSTR ControlDefault) PURE;
    STDMETHOD(get_ControlCancel)(THIS_ BSTR FAR* ControlCancel) PURE;
    STDMETHOD(put_ControlCancel)(THIS_ BSTR ControlCancel) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ long Type) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;
};

DEFINE_GUID(IID_IDialog2,0x53DC9382L,0x52BB,0x49B3,0x88,0xB2,0x2F,0x4C,0xE7,0xD8,0xC6,0x73);

/* Definition of interface: IDialog2 */
#undef INTERFACE
#define INTERFACE IDialog2

DECLARE_INTERFACE_(IDialog2, IDialog)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDialog methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDialogChild edcChild, BSTR strName, VARIANT vInitValues, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Controls)(THIS_ IControls FAR* FAR* pVal) PURE;
    STDMETHOD(get_HCentering)(THIS_ long FAR* HCentering) PURE;
    STDMETHOD(put_HCentering)(THIS_ long HCentering) PURE;
    STDMETHOD(get_VCentering)(THIS_ long FAR* VCentering) PURE;
    STDMETHOD(put_VCentering)(THIS_ long VCentering) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* Attributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ long Attributes) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* Title) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR Title) PURE;
    STDMETHOD(get_ControlFirst)(THIS_ BSTR FAR* ControlFirst) PURE;
    STDMETHOD(put_ControlFirst)(THIS_ BSTR ControlFirst) PURE;
    STDMETHOD(get_ControlDefault)(THIS_ BSTR FAR* ControlDefault) PURE;
    STDMETHOD(put_ControlDefault)(THIS_ BSTR ControlDefault) PURE;
    STDMETHOD(get_ControlCancel)(THIS_ BSTR FAR* ControlCancel) PURE;
    STDMETHOD(put_ControlCancel)(THIS_ BSTR ControlCancel) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ long Type) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;
#endif

    /* IDialog2 methods */
    STDMETHOD(Build)(THIS_ IDialog2 FAR* pDialog, BSTR sLanguage) PURE;
    STDMETHOD(AddBranding)(THIS_ VARIANT_BOOL bGenerateStingIDs, VARIANT_BOOL bScriptBased) PURE;
    STDMETHOD(get_TextStyle)(THIS_ BSTR FAR* pbstrTextStyle) PURE;
    STDMETHOD(put_TextStyle)(THIS_ BSTR bstrTextStyle) PURE;
    STDMETHOD(get_WindowStyle)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_WindowStyle)(THIS_ long Attribute) PURE;
    STDMETHOD(get_ResourceId)(THIS_ long FAR* plResourceId) PURE;
    STDMETHOD(put_ResourceId)(THIS_ long lResourceId) PURE;
    STDMETHOD(GetUniqueResourceId)(THIS_ long FAR* plResourceId) PURE;
    STDMETHOD(GetUniqueControlId)(THIS_ long FAR* plControlId) PURE;
    STDMETHOD(IsISResIdNumber)(THIS_ long lId, VARIANT_BOOL FAR* pbIsISResIdNumber) PURE;
    STDMETHOD(AddDefaultTextStyle)(THIS) PURE;
};

DEFINE_GUID(IID_IDialogNeptune,0x53DC9383L,0x52BB,0x49B3,0x88,0xB2,0x2F,0x4C,0xE7,0xD8,0xC6,0x73);

/* Definition of interface: IDialogNeptune */
#undef INTERFACE
#define INTERFACE IDialogNeptune

DECLARE_INTERFACE_(IDialogNeptune, IDialog2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDialog methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDialogChild edcChild, BSTR strName, VARIANT vInitValues, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Controls)(THIS_ IControls FAR* FAR* pVal) PURE;
    STDMETHOD(get_HCentering)(THIS_ long FAR* HCentering) PURE;
    STDMETHOD(put_HCentering)(THIS_ long HCentering) PURE;
    STDMETHOD(get_VCentering)(THIS_ long FAR* VCentering) PURE;
    STDMETHOD(put_VCentering)(THIS_ long VCentering) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* Attributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ long Attributes) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* Title) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR Title) PURE;
    STDMETHOD(get_ControlFirst)(THIS_ BSTR FAR* ControlFirst) PURE;
    STDMETHOD(put_ControlFirst)(THIS_ BSTR ControlFirst) PURE;
    STDMETHOD(get_ControlDefault)(THIS_ BSTR FAR* ControlDefault) PURE;
    STDMETHOD(put_ControlDefault)(THIS_ BSTR ControlDefault) PURE;
    STDMETHOD(get_ControlCancel)(THIS_ BSTR FAR* ControlCancel) PURE;
    STDMETHOD(put_ControlCancel)(THIS_ BSTR ControlCancel) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ long Type) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;

    /* IDialog2 methods */
    STDMETHOD(Build)(THIS_ IDialog2 FAR* pDialog, BSTR sLanguage) PURE;
    STDMETHOD(AddBranding)(THIS_ VARIANT_BOOL bGenerateStingIDs, VARIANT_BOOL bScriptBased) PURE;
    STDMETHOD(get_TextStyle)(THIS_ BSTR FAR* pbstrTextStyle) PURE;
    STDMETHOD(put_TextStyle)(THIS_ BSTR bstrTextStyle) PURE;
    STDMETHOD(get_WindowStyle)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_WindowStyle)(THIS_ long Attribute) PURE;
    STDMETHOD(get_ResourceId)(THIS_ long FAR* plResourceId) PURE;
    STDMETHOD(put_ResourceId)(THIS_ long lResourceId) PURE;
    STDMETHOD(GetUniqueResourceId)(THIS_ long FAR* plResourceId) PURE;
    STDMETHOD(GetUniqueControlId)(THIS_ long FAR* plControlId) PURE;
    STDMETHOD(IsISResIdNumber)(THIS_ long lId, VARIANT_BOOL FAR* pbIsISResIdNumber) PURE;
    STDMETHOD(AddDefaultTextStyle)(THIS) PURE;
#endif

    /* IDialogNeptune methods */
    STDMETHOD(get_ScrollableTextControl)(THIS_ IControl FAR* FAR* ppControl) PURE;
    STDMETHOD(get_SelectionTreeControl)(THIS_ IControl FAR* FAR* ppControl) PURE;
    STDMETHOD(get_BitmapImageControl)(THIS_ IControl FAR* FAR* ppControl) PURE;
};

DEFINE_GUID(IID_IDialogIxtapa,0xE319902DL,0x2B57,0x446B,0x86,0xA4,0x86,0x04,0x9A,0xB8,0x9F,0xBE);

/* Definition of interface: IDialogIxtapa */
#undef INTERFACE
#define INTERFACE IDialogIxtapa

DECLARE_INTERFACE_(IDialogIxtapa, IDialogNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDialog methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDialogChild edcChild, BSTR strName, VARIANT vInitValues, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Controls)(THIS_ IControls FAR* FAR* pVal) PURE;
    STDMETHOD(get_HCentering)(THIS_ long FAR* HCentering) PURE;
    STDMETHOD(put_HCentering)(THIS_ long HCentering) PURE;
    STDMETHOD(get_VCentering)(THIS_ long FAR* VCentering) PURE;
    STDMETHOD(put_VCentering)(THIS_ long VCentering) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* Attributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ long Attributes) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* Title) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR Title) PURE;
    STDMETHOD(get_ControlFirst)(THIS_ BSTR FAR* ControlFirst) PURE;
    STDMETHOD(put_ControlFirst)(THIS_ BSTR ControlFirst) PURE;
    STDMETHOD(get_ControlDefault)(THIS_ BSTR FAR* ControlDefault) PURE;
    STDMETHOD(put_ControlDefault)(THIS_ BSTR ControlDefault) PURE;
    STDMETHOD(get_ControlCancel)(THIS_ BSTR FAR* ControlCancel) PURE;
    STDMETHOD(put_ControlCancel)(THIS_ BSTR ControlCancel) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ long Type) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;

    /* IDialog2 methods */
    STDMETHOD(Build)(THIS_ IDialog2 FAR* pDialog, BSTR sLanguage) PURE;
    STDMETHOD(AddBranding)(THIS_ VARIANT_BOOL bGenerateStingIDs, VARIANT_BOOL bScriptBased) PURE;
    STDMETHOD(get_TextStyle)(THIS_ BSTR FAR* pbstrTextStyle) PURE;
    STDMETHOD(put_TextStyle)(THIS_ BSTR bstrTextStyle) PURE;
    STDMETHOD(get_WindowStyle)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_WindowStyle)(THIS_ long Attribute) PURE;
    STDMETHOD(get_ResourceId)(THIS_ long FAR* plResourceId) PURE;
    STDMETHOD(put_ResourceId)(THIS_ long lResourceId) PURE;
    STDMETHOD(GetUniqueResourceId)(THIS_ long FAR* plResourceId) PURE;
    STDMETHOD(GetUniqueControlId)(THIS_ long FAR* plControlId) PURE;
    STDMETHOD(IsISResIdNumber)(THIS_ long lId, VARIANT_BOOL FAR* pbIsISResIdNumber) PURE;
    STDMETHOD(AddDefaultTextStyle)(THIS) PURE;

    /* IDialogNeptune methods */
    STDMETHOD(get_ScrollableTextControl)(THIS_ IControl FAR* FAR* ppControl) PURE;
    STDMETHOD(get_SelectionTreeControl)(THIS_ IControl FAR* FAR* ppControl) PURE;
    STDMETHOD(get_BitmapImageControl)(THIS_ IControl FAR* FAR* ppControl) PURE;
#endif

    /* IDialogIxtapa methods */
    STDMETHOD(AddBrandingFromUpgrade)(THIS_ VARIANT_BOOL bGenerateStingIDs, VARIANT_BOOL bScriptBased, VARIANT_BOOL vbForceNewCoords) PURE;
};

interface IDialogs;

DEFINE_GUID(IID_IDialogJustice,0x677D7B1EL,0x508B,0x45BD,0x80,0x48,0x57,0x93,0x32,0x6F,0xAD,0x10);

/* Definition of interface: IDialogJustice */
#undef INTERFACE
#define INTERFACE IDialogJustice

DECLARE_INTERFACE_(IDialogJustice, IDialogIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDialog methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDialogChild edcChild, BSTR strName, VARIANT vInitValues, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Controls)(THIS_ IControls FAR* FAR* pVal) PURE;
    STDMETHOD(get_HCentering)(THIS_ long FAR* HCentering) PURE;
    STDMETHOD(put_HCentering)(THIS_ long HCentering) PURE;
    STDMETHOD(get_VCentering)(THIS_ long FAR* VCentering) PURE;
    STDMETHOD(put_VCentering)(THIS_ long VCentering) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* Attributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ long Attributes) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* Title) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR Title) PURE;
    STDMETHOD(get_ControlFirst)(THIS_ BSTR FAR* ControlFirst) PURE;
    STDMETHOD(put_ControlFirst)(THIS_ BSTR ControlFirst) PURE;
    STDMETHOD(get_ControlDefault)(THIS_ BSTR FAR* ControlDefault) PURE;
    STDMETHOD(put_ControlDefault)(THIS_ BSTR ControlDefault) PURE;
    STDMETHOD(get_ControlCancel)(THIS_ BSTR FAR* ControlCancel) PURE;
    STDMETHOD(put_ControlCancel)(THIS_ BSTR ControlCancel) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ long Type) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;

    /* IDialog2 methods */
    STDMETHOD(Build)(THIS_ IDialog2 FAR* pDialog, BSTR sLanguage) PURE;
    STDMETHOD(AddBranding)(THIS_ VARIANT_BOOL bGenerateStingIDs, VARIANT_BOOL bScriptBased) PURE;
    STDMETHOD(get_TextStyle)(THIS_ BSTR FAR* pbstrTextStyle) PURE;
    STDMETHOD(put_TextStyle)(THIS_ BSTR bstrTextStyle) PURE;
    STDMETHOD(get_WindowStyle)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_WindowStyle)(THIS_ long Attribute) PURE;
    STDMETHOD(get_ResourceId)(THIS_ long FAR* plResourceId) PURE;
    STDMETHOD(put_ResourceId)(THIS_ long lResourceId) PURE;
    STDMETHOD(GetUniqueResourceId)(THIS_ long FAR* plResourceId) PURE;
    STDMETHOD(GetUniqueControlId)(THIS_ long FAR* plControlId) PURE;
    STDMETHOD(IsISResIdNumber)(THIS_ long lId, VARIANT_BOOL FAR* pbIsISResIdNumber) PURE;
    STDMETHOD(AddDefaultTextStyle)(THIS) PURE;

    /* IDialogNeptune methods */
    STDMETHOD(get_ScrollableTextControl)(THIS_ IControl FAR* FAR* ppControl) PURE;
    STDMETHOD(get_SelectionTreeControl)(THIS_ IControl FAR* FAR* ppControl) PURE;
    STDMETHOD(get_BitmapImageControl)(THIS_ IControl FAR* FAR* ppControl) PURE;

    /* IDialogIxtapa methods */
    STDMETHOD(AddBrandingFromUpgrade)(THIS_ VARIANT_BOOL bGenerateStingIDs, VARIANT_BOOL bScriptBased, VARIANT_BOOL vbForceNewCoords) PURE;
#endif

    /* IDialogJustice methods */
    STDMETHOD(get_NextDialogs)(THIS_ IDialogs FAR* FAR* ppNextDialogs) PURE;
    STDMETHOD(get_HasNextDialog)(THIS_ VARIANT_BOOL FAR* vbHasNextDialog) PURE;
};

DEFINE_GUID(IID_IDialogLoyalty,0xAB3DFD17L,0xA9BD,0x4413,0x94,0x4E,0x36,0x8C,0x28,0x4F,0x3B,0x95);

/* Definition of interface: IDialogLoyalty */
#undef INTERFACE
#define INTERFACE IDialogLoyalty

DECLARE_INTERFACE_(IDialogLoyalty, IDialogJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDialog methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDialogChild edcChild, BSTR strName, VARIANT vInitValues, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Controls)(THIS_ IControls FAR* FAR* pVal) PURE;
    STDMETHOD(get_HCentering)(THIS_ long FAR* HCentering) PURE;
    STDMETHOD(put_HCentering)(THIS_ long HCentering) PURE;
    STDMETHOD(get_VCentering)(THIS_ long FAR* VCentering) PURE;
    STDMETHOD(put_VCentering)(THIS_ long VCentering) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* Attributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ long Attributes) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* Title) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR Title) PURE;
    STDMETHOD(get_ControlFirst)(THIS_ BSTR FAR* ControlFirst) PURE;
    STDMETHOD(put_ControlFirst)(THIS_ BSTR ControlFirst) PURE;
    STDMETHOD(get_ControlDefault)(THIS_ BSTR FAR* ControlDefault) PURE;
    STDMETHOD(put_ControlDefault)(THIS_ BSTR ControlDefault) PURE;
    STDMETHOD(get_ControlCancel)(THIS_ BSTR FAR* ControlCancel) PURE;
    STDMETHOD(put_ControlCancel)(THIS_ BSTR ControlCancel) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ long Type) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;

    /* IDialog2 methods */
    STDMETHOD(Build)(THIS_ IDialog2 FAR* pDialog, BSTR sLanguage) PURE;
    STDMETHOD(AddBranding)(THIS_ VARIANT_BOOL bGenerateStingIDs, VARIANT_BOOL bScriptBased) PURE;
    STDMETHOD(get_TextStyle)(THIS_ BSTR FAR* pbstrTextStyle) PURE;
    STDMETHOD(put_TextStyle)(THIS_ BSTR bstrTextStyle) PURE;
    STDMETHOD(get_WindowStyle)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_WindowStyle)(THIS_ long Attribute) PURE;
    STDMETHOD(get_ResourceId)(THIS_ long FAR* plResourceId) PURE;
    STDMETHOD(put_ResourceId)(THIS_ long lResourceId) PURE;
    STDMETHOD(GetUniqueResourceId)(THIS_ long FAR* plResourceId) PURE;
    STDMETHOD(GetUniqueControlId)(THIS_ long FAR* plControlId) PURE;
    STDMETHOD(IsISResIdNumber)(THIS_ long lId, VARIANT_BOOL FAR* pbIsISResIdNumber) PURE;
    STDMETHOD(AddDefaultTextStyle)(THIS) PURE;

    /* IDialogNeptune methods */
    STDMETHOD(get_ScrollableTextControl)(THIS_ IControl FAR* FAR* ppControl) PURE;
    STDMETHOD(get_SelectionTreeControl)(THIS_ IControl FAR* FAR* ppControl) PURE;
    STDMETHOD(get_BitmapImageControl)(THIS_ IControl FAR* FAR* ppControl) PURE;

    /* IDialogIxtapa methods */
    STDMETHOD(AddBrandingFromUpgrade)(THIS_ VARIANT_BOOL bGenerateStingIDs, VARIANT_BOOL bScriptBased, VARIANT_BOOL vbForceNewCoords) PURE;

    /* IDialogJustice methods */
    STDMETHOD(get_NextDialogs)(THIS_ IDialogs FAR* FAR* ppNextDialogs) PURE;
    STDMETHOD(get_HasNextDialog)(THIS_ VARIANT_BOOL FAR* vbHasNextDialog) PURE;
#endif

    /* IDialogLoyalty methods */
    STDMETHOD(SetTextStyle)(THIS_ BSTR bstrTextStyle, VARIANT_BOOL FAR* vbBaseUnitsChanged) PURE;
};

DEFINE_GUID(IID_IDialogs,0x4E5D6F25L,0xE886,0x4AD6,0xAE,0x59,0x09,0x39,0x27,0x35,0xF1,0x0B);

/* Definition of interface: IDialogs */
#undef INTERFACE
#define INTERFACE IDialogs

DECLARE_INTERFACE_(IDialogs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDialogs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IDialog FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumControlChild {
    eccAction = 1,
    eccEvent = 2,
    eccEventMapping = 3,
    eccListBox = 4,
    eccListView = 5,
    eccComboBox = 6,
    eccCheckBox = 7,
    eccRadioButton = 8,
    eccCondition = 9
} EnumControlChild;

typedef enum EnumPropControl {
    epclName = 0,
    epclType = 10,
    epclXPos = 11,
    epclYPos = 12,
    epclWidth = 13,
    epclHeight = 14,
    epclAttribute = 15,
    epclProperty = 16,
    epclText = 17,
    epclControlNext = 18,
    epclHelp = 19,
    epclStyle = 20,
    epclStyleBase = 21
} EnumPropControl;

DEFINE_GUID(IID_IControl,0xBA76920CL,0x0A01,0x4D26,0xA9,0x68,0x74,0x90,0x81,0x24,0x7B,0x41);

/* Definition of interface: IControl */
#undef INTERFACE
#define INTERFACE IControl

DECLARE_INTERFACE_(IControl, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IControl methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DependantControl)(THIS_ IBusinessObject FAR* FAR* pObject) PURE;
    STDMETHOD(putref_DependantControl)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_ControlConditions)(THIS_ IControlConditions FAR* FAR* pVal) PURE;
    STDMETHOD(get_ControlEvents)(THIS_ IControlEvents FAR* FAR* pVal) PURE;
    STDMETHOD(get_EventMappings)(THIS_ IEventMappings FAR* FAR* pVal) PURE;
    STDMETHOD(get_RadioButtons)(THIS_ IRadioButtons FAR* FAR* pVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumControlChild edcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Type)(THIS_ BSTR FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ BSTR Type) PURE;
    STDMETHOD(get_XPos)(THIS_ long FAR* XPos) PURE;
    STDMETHOD(put_XPos)(THIS_ long XPos) PURE;
    STDMETHOD(get_YPos)(THIS_ long FAR* Size) PURE;
    STDMETHOD(put_YPos)(THIS_ long YPos) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_Property)(THIS_ BSTR FAR* Property) PURE;
    STDMETHOD(put_Property)(THIS_ BSTR Property) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_ControlNext)(THIS_ BSTR FAR* ControlNext) PURE;
    STDMETHOD(put_ControlNext)(THIS_ BSTR ControlNext) PURE;
    STDMETHOD(get_Help)(THIS_ BSTR FAR* Help) PURE;
    STDMETHOD(put_Help)(THIS_ BSTR Help) PURE;
    STDMETHOD(get_Style)(THIS_ BSTR FAR* Style) PURE;
    STDMETHOD(put_Style)(THIS_ BSTR Style) PURE;
    STDMETHOD(get_StyleBase)(THIS_ BSTR FAR* StyleBase) PURE;
    STDMETHOD(put_StyleBase)(THIS_ BSTR StyleBase) PURE;
    STDMETHOD(AttachControl)(THIS) PURE;
    STDMETHOD(put_TextStringId)(THIS_ BSTR ControlText) PURE;
    STDMETHOD(get_TextStringId)(THIS_ BSTR FAR* TextStringId) PURE;
    STDMETHOD(put_HelpStringId)(THIS_ BSTR sHelpText) PURE;
    STDMETHOD(put_LangProps)(THIS_ VARIANT vProps) PURE;
    STDMETHOD(RemoveRadiobuttons)(THIS) PURE;
};

typedef enum EnumControlBuildError {
    emcbeNone = 0,
    emcbeFileNotFound = 1,
    emcbeConflictingFileNames = 2
} EnumControlBuildError;

DEFINE_GUID(IID_IControl2,0xA39D62E2L,0x10BD,0x487F,0xA4,0x80,0x18,0x14,0xB4,0xDB,0xC0,0xC7);

/* Definition of interface: IControl2 */
#undef INTERFACE
#define INTERFACE IControl2

DECLARE_INTERFACE_(IControl2, IControl)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IControl methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DependantControl)(THIS_ IBusinessObject FAR* FAR* pObject) PURE;
    STDMETHOD(putref_DependantControl)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_ControlConditions)(THIS_ IControlConditions FAR* FAR* pVal) PURE;
    STDMETHOD(get_ControlEvents)(THIS_ IControlEvents FAR* FAR* pVal) PURE;
    STDMETHOD(get_EventMappings)(THIS_ IEventMappings FAR* FAR* pVal) PURE;
    STDMETHOD(get_RadioButtons)(THIS_ IRadioButtons FAR* FAR* pVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumControlChild edcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Type)(THIS_ BSTR FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ BSTR Type) PURE;
    STDMETHOD(get_XPos)(THIS_ long FAR* XPos) PURE;
    STDMETHOD(put_XPos)(THIS_ long XPos) PURE;
    STDMETHOD(get_YPos)(THIS_ long FAR* Size) PURE;
    STDMETHOD(put_YPos)(THIS_ long YPos) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_Property)(THIS_ BSTR FAR* Property) PURE;
    STDMETHOD(put_Property)(THIS_ BSTR Property) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_ControlNext)(THIS_ BSTR FAR* ControlNext) PURE;
    STDMETHOD(put_ControlNext)(THIS_ BSTR ControlNext) PURE;
    STDMETHOD(get_Help)(THIS_ BSTR FAR* Help) PURE;
    STDMETHOD(put_Help)(THIS_ BSTR Help) PURE;
    STDMETHOD(get_Style)(THIS_ BSTR FAR* Style) PURE;
    STDMETHOD(put_Style)(THIS_ BSTR Style) PURE;
    STDMETHOD(get_StyleBase)(THIS_ BSTR FAR* StyleBase) PURE;
    STDMETHOD(put_StyleBase)(THIS_ BSTR StyleBase) PURE;
    STDMETHOD(AttachControl)(THIS) PURE;
    STDMETHOD(put_TextStringId)(THIS_ BSTR ControlText) PURE;
    STDMETHOD(get_TextStringId)(THIS_ BSTR FAR* TextStringId) PURE;
    STDMETHOD(put_HelpStringId)(THIS_ BSTR sHelpText) PURE;
    STDMETHOD(put_LangProps)(THIS_ VARIANT vProps) PURE;
    STDMETHOD(RemoveRadiobuttons)(THIS) PURE;
#endif

    /* IControl2 methods */
    STDMETHOD(Build)(THIS_ IControl2 FAR* pControl, BSTR sLanguage) PURE;
    STDMETHOD(get_HasBinaryData)(THIS_ VARIANT_BOOL FAR* bHasBinaryData) PURE;
    STDMETHOD(get_WindowStyle)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_WindowStyle)(THIS_ long Attribute) PURE;
    STDMETHOD(get_TextFast)(THIS_ VARIANT_BOOL bIsBinary, BSTR bstrLanguage, BSTR FAR* bstrText) PURE;
    STDMETHOD(put_TextFast)(THIS_ VARIANT_BOOL bIsBinary, BSTR bstrLanguage, BSTR bstrText) PURE;
    STDMETHOD(get_ControlId)(THIS_ long FAR* plControlId) PURE;
    STDMETHOD(put_ControlId)(THIS_ long lControlId) PURE;
    STDMETHOD(GetUniqueControlId)(THIS_ long FAR* plControlId) PURE;
    STDMETHOD(get_BuildError)(THIS_ EnumControlBuildError FAR* eBuildError) PURE;
    STDMETHOD(get_Binary)(THIS_ IBinary FAR* FAR* ppBinary) PURE;
    STDMETHOD(IsBinaryUsed)(THIS_ IBinary FAR* pBinary, VARIANT_BOOL FAR* pbIsBinaryUsed) PURE;
};

DEFINE_GUID(IID_IControlNeptune,0xA39D62F2L,0x10BD,0x487F,0xA4,0x80,0x18,0x14,0xB4,0xDB,0xC0,0xC7);

/* Definition of interface: IControlNeptune */
#undef INTERFACE
#define INTERFACE IControlNeptune

DECLARE_INTERFACE_(IControlNeptune, IControl2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IControl methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DependantControl)(THIS_ IBusinessObject FAR* FAR* pObject) PURE;
    STDMETHOD(putref_DependantControl)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_ControlConditions)(THIS_ IControlConditions FAR* FAR* pVal) PURE;
    STDMETHOD(get_ControlEvents)(THIS_ IControlEvents FAR* FAR* pVal) PURE;
    STDMETHOD(get_EventMappings)(THIS_ IEventMappings FAR* FAR* pVal) PURE;
    STDMETHOD(get_RadioButtons)(THIS_ IRadioButtons FAR* FAR* pVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumControlChild edcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Type)(THIS_ BSTR FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ BSTR Type) PURE;
    STDMETHOD(get_XPos)(THIS_ long FAR* XPos) PURE;
    STDMETHOD(put_XPos)(THIS_ long XPos) PURE;
    STDMETHOD(get_YPos)(THIS_ long FAR* Size) PURE;
    STDMETHOD(put_YPos)(THIS_ long YPos) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_Property)(THIS_ BSTR FAR* Property) PURE;
    STDMETHOD(put_Property)(THIS_ BSTR Property) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_ControlNext)(THIS_ BSTR FAR* ControlNext) PURE;
    STDMETHOD(put_ControlNext)(THIS_ BSTR ControlNext) PURE;
    STDMETHOD(get_Help)(THIS_ BSTR FAR* Help) PURE;
    STDMETHOD(put_Help)(THIS_ BSTR Help) PURE;
    STDMETHOD(get_Style)(THIS_ BSTR FAR* Style) PURE;
    STDMETHOD(put_Style)(THIS_ BSTR Style) PURE;
    STDMETHOD(get_StyleBase)(THIS_ BSTR FAR* StyleBase) PURE;
    STDMETHOD(put_StyleBase)(THIS_ BSTR StyleBase) PURE;
    STDMETHOD(AttachControl)(THIS) PURE;
    STDMETHOD(put_TextStringId)(THIS_ BSTR ControlText) PURE;
    STDMETHOD(get_TextStringId)(THIS_ BSTR FAR* TextStringId) PURE;
    STDMETHOD(put_HelpStringId)(THIS_ BSTR sHelpText) PURE;
    STDMETHOD(put_LangProps)(THIS_ VARIANT vProps) PURE;
    STDMETHOD(RemoveRadiobuttons)(THIS) PURE;

    /* IControl2 methods */
    STDMETHOD(Build)(THIS_ IControl2 FAR* pControl, BSTR sLanguage) PURE;
    STDMETHOD(get_HasBinaryData)(THIS_ VARIANT_BOOL FAR* bHasBinaryData) PURE;
    STDMETHOD(get_WindowStyle)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_WindowStyle)(THIS_ long Attribute) PURE;
    STDMETHOD(get_TextFast)(THIS_ VARIANT_BOOL bIsBinary, BSTR bstrLanguage, BSTR FAR* bstrText) PURE;
    STDMETHOD(put_TextFast)(THIS_ VARIANT_BOOL bIsBinary, BSTR bstrLanguage, BSTR bstrText) PURE;
    STDMETHOD(get_ControlId)(THIS_ long FAR* plControlId) PURE;
    STDMETHOD(put_ControlId)(THIS_ long lControlId) PURE;
    STDMETHOD(GetUniqueControlId)(THIS_ long FAR* plControlId) PURE;
    STDMETHOD(get_BuildError)(THIS_ EnumControlBuildError FAR* eBuildError) PURE;
    STDMETHOD(get_Binary)(THIS_ IBinary FAR* FAR* ppBinary) PURE;
    STDMETHOD(IsBinaryUsed)(THIS_ IBinary FAR* pBinary, VARIANT_BOOL FAR* pbIsBinaryUsed) PURE;
#endif

    /* IControlNeptune methods */
    STDMETHOD(get_ControlEventsByName)(THIS_ BSTR bstrName, IControlEvents FAR* FAR* ppControlEvents) PURE;
};

DEFINE_GUID(IID_IControlMajesty,0xF829BF91L,0x7539,0x4D85,0xA3,0xDA,0x16,0x32,0xE2,0xA1,0xBB,0xF5);

/* Definition of interface: IControlMajesty */
#undef INTERFACE
#define INTERFACE IControlMajesty

DECLARE_INTERFACE_(IControlMajesty, IControlNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IControl methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DependantControl)(THIS_ IBusinessObject FAR* FAR* pObject) PURE;
    STDMETHOD(putref_DependantControl)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_ControlConditions)(THIS_ IControlConditions FAR* FAR* pVal) PURE;
    STDMETHOD(get_ControlEvents)(THIS_ IControlEvents FAR* FAR* pVal) PURE;
    STDMETHOD(get_EventMappings)(THIS_ IEventMappings FAR* FAR* pVal) PURE;
    STDMETHOD(get_RadioButtons)(THIS_ IRadioButtons FAR* FAR* pVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumControlChild edcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Type)(THIS_ BSTR FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ BSTR Type) PURE;
    STDMETHOD(get_XPos)(THIS_ long FAR* XPos) PURE;
    STDMETHOD(put_XPos)(THIS_ long XPos) PURE;
    STDMETHOD(get_YPos)(THIS_ long FAR* Size) PURE;
    STDMETHOD(put_YPos)(THIS_ long YPos) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_Property)(THIS_ BSTR FAR* Property) PURE;
    STDMETHOD(put_Property)(THIS_ BSTR Property) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_ControlNext)(THIS_ BSTR FAR* ControlNext) PURE;
    STDMETHOD(put_ControlNext)(THIS_ BSTR ControlNext) PURE;
    STDMETHOD(get_Help)(THIS_ BSTR FAR* Help) PURE;
    STDMETHOD(put_Help)(THIS_ BSTR Help) PURE;
    STDMETHOD(get_Style)(THIS_ BSTR FAR* Style) PURE;
    STDMETHOD(put_Style)(THIS_ BSTR Style) PURE;
    STDMETHOD(get_StyleBase)(THIS_ BSTR FAR* StyleBase) PURE;
    STDMETHOD(put_StyleBase)(THIS_ BSTR StyleBase) PURE;
    STDMETHOD(AttachControl)(THIS) PURE;
    STDMETHOD(put_TextStringId)(THIS_ BSTR ControlText) PURE;
    STDMETHOD(get_TextStringId)(THIS_ BSTR FAR* TextStringId) PURE;
    STDMETHOD(put_HelpStringId)(THIS_ BSTR sHelpText) PURE;
    STDMETHOD(put_LangProps)(THIS_ VARIANT vProps) PURE;
    STDMETHOD(RemoveRadiobuttons)(THIS) PURE;

    /* IControl2 methods */
    STDMETHOD(Build)(THIS_ IControl2 FAR* pControl, BSTR sLanguage) PURE;
    STDMETHOD(get_HasBinaryData)(THIS_ VARIANT_BOOL FAR* bHasBinaryData) PURE;
    STDMETHOD(get_WindowStyle)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_WindowStyle)(THIS_ long Attribute) PURE;
    STDMETHOD(get_TextFast)(THIS_ VARIANT_BOOL bIsBinary, BSTR bstrLanguage, BSTR FAR* bstrText) PURE;
    STDMETHOD(put_TextFast)(THIS_ VARIANT_BOOL bIsBinary, BSTR bstrLanguage, BSTR bstrText) PURE;
    STDMETHOD(get_ControlId)(THIS_ long FAR* plControlId) PURE;
    STDMETHOD(put_ControlId)(THIS_ long lControlId) PURE;
    STDMETHOD(GetUniqueControlId)(THIS_ long FAR* plControlId) PURE;
    STDMETHOD(get_BuildError)(THIS_ EnumControlBuildError FAR* eBuildError) PURE;
    STDMETHOD(get_Binary)(THIS_ IBinary FAR* FAR* ppBinary) PURE;
    STDMETHOD(IsBinaryUsed)(THIS_ IBinary FAR* pBinary, VARIANT_BOOL FAR* pbIsBinaryUsed) PURE;

    /* IControlNeptune methods */
    STDMETHOD(get_ControlEventsByName)(THIS_ BSTR bstrName, IControlEvents FAR* FAR* ppControlEvents) PURE;
#endif

    /* IControlMajesty methods */
    STDMETHOD(get_IsPropertyNameInUse)(THIS_ BSTR bstrPropName, VARIANT_BOOL FAR* pbIsPropertyNameInUse) PURE;
};

DEFINE_GUID(IID_IControls,0x236EC4F7L,0xC3B7,0x416C,0x9C,0x4F,0xC1,0x2B,0x59,0xA7,0xED,0x21);

/* Definition of interface: IControls */
#undef INTERFACE
#define INTERFACE IControls

DECLARE_INTERFACE_(IControls, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IControls methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IControl FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumControlConditionChild {
    eaccCondition = 1
} EnumControlConditionChild;

typedef enum EnumPropControlCondition {
    epccAction = 10,
    epccConditon = 11
} EnumPropControlConditon;

DEFINE_GUID(IID_IControlCondition,0xB233E984L,0xCB3C,0x4FD9,0x93,0x71,0x45,0x32,0xC2,0x8F,0xDA,0xE5);

/* Definition of interface: IControlCondition */
#undef INTERFACE
#define INTERFACE IControlCondition

DECLARE_INTERFACE_(IControlCondition, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IControlCondition methods */
    STDMETHOD(get_Action)(THIS_ BSTR FAR* Action) PURE;
    STDMETHOD(put_Action)(THIS_ BSTR Action) PURE;
    STDMETHOD(get_Conditon)(THIS_ BSTR FAR* Conditon) PURE;
    STDMETHOD(put_Conditon)(THIS_ BSTR Conditon) PURE;
};

DEFINE_GUID(IID_IControlConditions,0xF03EF9B8L,0x90FF,0x4C03,0x9D,0x0A,0x40,0xD8,0x1A,0x6A,0x08,0x56);

/* Definition of interface: IControlConditions */
#undef INTERFACE
#define INTERFACE IControlConditions

DECLARE_INTERFACE_(IControlConditions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IControlConditions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IControlCondition FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumControlEventChild {
    ececEventArgument = 1
} EnumControlEventChild;

typedef enum EnumPropControlEvent {
    epceEventName = 0,
    epceArgument = 10,
    epceCondition = 11,
    epceOrdering = 12
} EnumPropControlEvent;

DEFINE_GUID(IID_IControlEvent,0xCEB55130L,0x204D,0x4099,0x82,0xC6,0x21,0x23,0x9A,0x3E,0xB8,0x3C);

/* Definition of interface: IControlEvent */
#undef INTERFACE
#define INTERFACE IControlEvent

DECLARE_INTERFACE_(IControlEvent, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IControlEvent methods */
    STDMETHOD(get_Ordering)(THIS_ long FAR* Ordering) PURE;
    STDMETHOD(put_Ordering)(THIS_ long Ordering) PURE;
    STDMETHOD(AddChild)(THIS_ EnumControlEventChild ececChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_EventName)(THIS_ BSTR FAR* EventName) PURE;
    STDMETHOD(put_EventName)(THIS_ BSTR EventName) PURE;
    STDMETHOD(get_Argument)(THIS_ BSTR FAR* Argument) PURE;
    STDMETHOD(put_Argument)(THIS_ BSTR Argument) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
};

DEFINE_GUID(IID_IControlEvents,0xA2F834B6L,0xD79D,0x471A,0xA8,0xC1,0xF0,0x73,0x5B,0x50,0xC1,0x5C);

/* Definition of interface: IControlEvents */
#undef INTERFACE
#define INTERFACE IControlEvents

DECLARE_INTERFACE_(IControlEvents, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IControlEvents methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IControlEvent FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropEventMapping {
    epemName = 0,
    epemAttribute = 10
} EnumPropEventMapping;

DEFINE_GUID(IID_IEventMapping,0x98DF263BL,0xC96B,0x4062,0xA0,0x25,0x33,0xA1,0x73,0x86,0x80,0x92);

/* Definition of interface: IEventMapping */
#undef INTERFACE
#define INTERFACE IEventMapping

DECLARE_INTERFACE_(IEventMapping, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IEventMapping methods */
    STDMETHOD(get_Event)(THIS_ BSTR FAR* Event) PURE;
    STDMETHOD(put_Event)(THIS_ BSTR Event) PURE;
    STDMETHOD(get_Attribute)(THIS_ BSTR FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ BSTR Attribute) PURE;
};

DEFINE_GUID(IID_IEventMappings,0xB7A61A52L,0xB1DD,0x4046,0xB5,0x6E,0xDA,0x32,0xCD,0x93,0x6B,0x9D);

/* Definition of interface: IEventMappings */
#undef INTERFACE
#define INTERFACE IEventMappings

DECLARE_INTERFACE_(IEventMappings, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IEventMappings methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IEventMapping FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropCheckBox {
    epcbName = 0,
    epcbValue = 10
} EnumPropCheckBox;

DEFINE_GUID(IID_ICheckBox,0xBB289B02L,0xE37D,0x47D9,0x82,0x3C,0x26,0xCE,0x36,0xFE,0xA1,0x1C);

/* Definition of interface: ICheckBox */
#undef INTERFACE
#define INTERFACE ICheckBox

DECLARE_INTERFACE_(ICheckBox, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICheckBox methods */
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
};

DEFINE_GUID(IID_ICheckBox2,0x530C9C74L,0xDAA2,0x4A08,0xB1,0x13,0xE3,0x4B,0xFF,0x67,0xFD,0x61);

/* Definition of interface: ICheckBox2 */
#undef INTERFACE
#define INTERFACE ICheckBox2

DECLARE_INTERFACE_(ICheckBox2, ICheckBox)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICheckBox methods */
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
#endif

    /* ICheckBox2 methods */
    STDMETHOD(Build)(THIS_ ICheckBox2 FAR* pICheckBox) PURE;
};

DEFINE_GUID(IID_ICheckBoxes,0x373F7BECL,0x09D5,0x47B4,0x9D,0xA2,0x3E,0xE1,0xF9,0x39,0x10,0xF9);

/* Definition of interface: ICheckBoxes */
#undef INTERFACE
#define INTERFACE ICheckBoxes

DECLARE_INTERFACE_(ICheckBoxes, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICheckBoxes methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ICheckBox FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropComboBoxRow {
    epcbwOrder = 0,
    epcbwValue = 10,
    epcbwText = 11
} EnumPropComboBoxRow;

typedef enum EnumPropComboBox {
    epcbProperty = 0
} EnumPropComboBox;

typedef enum EnumComboBoxChild {
    epcbRow = 0
} EnumComboBoxChild;

DEFINE_GUID(IID_IComboBox,0xCFBA3FE6L,0x6F28,0x4CC5,0xA9,0xC2,0x40,0x73,0x3D,0x5A,0xDE,0xC1);

/* Definition of interface: IComboBox */
#undef INTERFACE
#define INTERFACE IComboBox

DECLARE_INTERFACE_(IComboBox, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IComboBox methods */
    STDMETHOD(AddChild)(THIS_ EnumComboBoxChild edcChild, BSTR strOrder, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_IComboBoxRows)(THIS_ IComboBoxRows FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
};

DEFINE_GUID(IID_IComboBox2,0x472FEACBL,0x7E03,0x486C,0xA1,0x73,0xC4,0x1B,0xC5,0x6D,0x6C,0x74);

/* Definition of interface: IComboBox2 */
#undef INTERFACE
#define INTERFACE IComboBox2

DECLARE_INTERFACE_(IComboBox2, IComboBox)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComboBox methods */
    STDMETHOD(AddChild)(THIS_ EnumComboBoxChild edcChild, BSTR strOrder, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_IComboBoxRows)(THIS_ IComboBoxRows FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
#endif

    /* IComboBox2 methods */
    STDMETHOD(Build)(THIS_ IComboBox2 FAR* pComboBox, BSTR sLanguage) PURE;
};

DEFINE_GUID(IID_IComboBoxRow,0x288BD6E2L,0x361E,0x4BC6,0x8D,0xFA,0xA8,0x4C,0xB7,0xD0,0x83,0x0F);

/* Definition of interface: IComboBoxRow */
#undef INTERFACE
#define INTERFACE IComboBoxRow

DECLARE_INTERFACE_(IComboBoxRow, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IComboBoxRow methods */
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* Order) PURE;
    STDMETHOD(put_Order)(THIS_ long Order) PURE;
};

DEFINE_GUID(IID_IComboBoxes,0x63D1ACF6L,0xD901,0x4B48,0x8F,0x5B,0xE8,0x82,0xD4,0x89,0x6E,0x3D);

/* Definition of interface: IComboBoxes */
#undef INTERFACE
#define INTERFACE IComboBoxes

DECLARE_INTERFACE_(IComboBoxes, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IComboBoxes methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IComboBox FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IComboBoxRows,0x531A6C2CL,0x6642,0x40E3,0x84,0x33,0x49,0xCD,0x01,0x91,0x76,0x95);

/* Definition of interface: IComboBoxRows */
#undef INTERFACE
#define INTERFACE IComboBoxRows

DECLARE_INTERFACE_(IComboBoxRows, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IComboBoxRows methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IComboBoxRow FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropListBoxRow {
    eplbwOrder = 0,
    eplbwValue = 10,
    eplbwText = 11
} EnumPropListBoxRow;

typedef enum EnumPropListBox {
    eplbProperty = 0
} EnumPropListBox;

typedef enum EnumListBoxChild {
    eplbcRow = 0
} EnumListBoxChild;

DEFINE_GUID(IID_IListBox,0xD5920E5EL,0x4909,0x47B4,0xB9,0x0A,0xB1,0xF2,0x3C,0x16,0x35,0xC4);

/* Definition of interface: IListBox */
#undef INTERFACE
#define INTERFACE IListBox

DECLARE_INTERFACE_(IListBox, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IListBox methods */
    STDMETHOD(AddChild)(THIS_ EnumListBoxChild edcChild, BSTR strOrder, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_IListBoxRows)(THIS_ IListBoxRows FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
};

DEFINE_GUID(IID_IListBox2,0xF2218550L,0xDE48,0x4C40,0xA4,0x82,0x49,0x2F,0x5C,0x9C,0x70,0x54);

/* Definition of interface: IListBox2 */
#undef INTERFACE
#define INTERFACE IListBox2

DECLARE_INTERFACE_(IListBox2, IListBox)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IListBox methods */
    STDMETHOD(AddChild)(THIS_ EnumListBoxChild edcChild, BSTR strOrder, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_IListBoxRows)(THIS_ IListBoxRows FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
#endif

    /* IListBox2 methods */
    STDMETHOD(Build)(THIS_ IListBox2 FAR* pListBox, BSTR sLanguage) PURE;
};

DEFINE_GUID(IID_IListBoxRow,0x956FBE78L,0xBA6F,0x4C3C,0xBF,0xC8,0x72,0x56,0x5A,0x07,0x17,0x1B);

/* Definition of interface: IListBoxRow */
#undef INTERFACE
#define INTERFACE IListBoxRow

DECLARE_INTERFACE_(IListBoxRow, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IListBoxRow methods */
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* Order) PURE;
    STDMETHOD(put_Order)(THIS_ long Order) PURE;
};

DEFINE_GUID(IID_IListBoxes,0x4A91563CL,0x34AC,0x46A9,0xBF,0x44,0xE8,0x6E,0x23,0x6D,0x5A,0xF0);

/* Definition of interface: IListBoxes */
#undef INTERFACE
#define INTERFACE IListBoxes

DECLARE_INTERFACE_(IListBoxes, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IListBoxes methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IListBox FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IListBoxRows,0xD70E6CA0L,0x41CD,0x404C,0xB9,0x4B,0x6B,0x01,0x5A,0x81,0xC6,0xA8);

/* Definition of interface: IListBoxRows */
#undef INTERFACE
#define INTERFACE IListBoxRows

DECLARE_INTERFACE_(IListBoxRows, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IListBoxRows methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IListBoxRow FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropListViewRow {
    eplvrValue = 10,
    eplvrText = 11,
    eplvrImagePath = 12
} EnumPropListViewRow;

typedef enum EnumPropListView {
    eplvProperty = 0
} EnumPropListView;

typedef enum EnumListViewChild {
    eplvcRow = 0
} EnumListViewChild;

DEFINE_GUID(IID_IListView,0xC9DB6820L,0x411A,0x48E2,0xAF,0xCF,0x02,0xDF,0x46,0x91,0x5E,0x8E);

/* Definition of interface: IListView */
#undef INTERFACE
#define INTERFACE IListView

DECLARE_INTERFACE_(IListView, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IListView methods */
    STDMETHOD(AddChild)(THIS_ EnumListViewChild edcChild, BSTR strOrder, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_IListViewRows)(THIS_ IListViewRows FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
};

DEFINE_GUID(IID_IListView2,0x470890BDL,0x5181,0x4F38,0xAC,0x85,0x9D,0x80,0x8C,0x95,0xE7,0xBD);

/* Definition of interface: IListView2 */
#undef INTERFACE
#define INTERFACE IListView2

DECLARE_INTERFACE_(IListView2, IListView)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IListView methods */
    STDMETHOD(AddChild)(THIS_ EnumListViewChild edcChild, BSTR strOrder, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_IListViewRows)(THIS_ IListViewRows FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
#endif

    /* IListView2 methods */
    STDMETHOD(Build)(THIS_ IListView2 FAR* pListView, BSTR sLanguage) PURE;
};

DEFINE_GUID(IID_IListViewRow,0xCB54DAD8L,0x11D8,0x41BA,0xB9,0x0C,0x4E,0xE4,0x34,0xBB,0xB8,0x25);

/* Definition of interface: IListViewRow */
#undef INTERFACE
#define INTERFACE IListViewRow

DECLARE_INTERFACE_(IListViewRow, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IListViewRow methods */
    STDMETHOD(get_Order)(THIS_ long FAR* Order) PURE;
    STDMETHOD(put_Order)(THIS_ long Order) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_ImagePath)(THIS_ BSTR FAR* ImagePath) PURE;
    STDMETHOD(put_ImagePath)(THIS_ BSTR ImagePath) PURE;
};

DEFINE_GUID(IID_IListViewRow2,0x4860E504L,0x9A80,0x47E4,0xB3,0xC6,0x44,0xDE,0x8D,0xC5,0x5B,0x21);

/* Definition of interface: IListViewRow2 */
#undef INTERFACE
#define INTERFACE IListViewRow2

DECLARE_INTERFACE_(IListViewRow2, IListViewRow)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IListViewRow methods */
    STDMETHOD(get_Order)(THIS_ long FAR* Order) PURE;
    STDMETHOD(put_Order)(THIS_ long Order) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_ImagePath)(THIS_ BSTR FAR* ImagePath) PURE;
    STDMETHOD(put_ImagePath)(THIS_ BSTR ImagePath) PURE;
#endif

    /* IListViewRow2 methods */
    STDMETHOD(Build)(THIS_ IListViewRow2 FAR* pListView) PURE;
};

DEFINE_GUID(IID_IListViewRowIndore,0x9B705255L,0xB7C2,0x444E,0xBE,0x7F,0x5B,0x56,0x38,0xC7,0xEA,0x06);

/* Definition of interface: IListViewRowIndore */
#undef INTERFACE
#define INTERFACE IListViewRowIndore

DECLARE_INTERFACE_(IListViewRowIndore, IListViewRow2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IListViewRow methods */
    STDMETHOD(get_Order)(THIS_ long FAR* Order) PURE;
    STDMETHOD(put_Order)(THIS_ long Order) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_ImagePath)(THIS_ BSTR FAR* ImagePath) PURE;
    STDMETHOD(put_ImagePath)(THIS_ BSTR ImagePath) PURE;

    /* IListViewRow2 methods */
    STDMETHOD(Build)(THIS_ IListViewRow2 FAR* pListView) PURE;
#endif

    /* IListViewRowIndore methods */
    STDMETHOD(get_Binary)(THIS_ BSTR FAR* Binary) PURE;
    STDMETHOD(put_Binary)(THIS_ BSTR Binary) PURE;
};

DEFINE_GUID(IID_IListViews,0xCC37C2A0L,0xDBCE,0x4AA3,0xA8,0xA7,0x39,0x6C,0xD3,0xC7,0x54,0x7F);

/* Definition of interface: IListViews */
#undef INTERFACE
#define INTERFACE IListViews

DECLARE_INTERFACE_(IListViews, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IListViews methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IListView FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IListViewRows,0xFA6E5083L,0x5F5E,0x4766,0xAE,0x56,0x7F,0x45,0x7E,0xE7,0xF1,0x33);

/* Definition of interface: IListViewRows */
#undef INTERFACE
#define INTERFACE IListViewRows

DECLARE_INTERFACE_(IListViewRows, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IListViewRows methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IListViewRow FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IRadioButtonRows,0xACC0FD0CL,0x6367,0x4B0F,0x80,0x29,0x10,0x17,0x4F,0x9D,0x3A,0x73);

/* Definition of interface: IRadioButtonRows */
#undef INTERFACE
#define INTERFACE IRadioButtonRows

DECLARE_INTERFACE_(IRadioButtonRows, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRadioButtonRows methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IRadioButtonRow FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropRadioButton {
    eprbProperty = 10,
    eprbOrder = 11,
    eprbValue = 12,
    eprbXPos = 13,
    eprbYPos = 14,
    eprbWidth = 15,
    eprbHeight = 16,
    eprbText = 17,
    eprbHelp = 18
} EnumPropRadioButton;

DEFINE_GUID(IID_IRadioButtonRow,0x7AF70A23L,0x6DA9,0x4718,0xB3,0xB3,0x2D,0x4B,0xFA,0x5E,0x90,0x41);

/* Definition of interface: IRadioButtonRow */
#undef INTERFACE
#define INTERFACE IRadioButtonRow

DECLARE_INTERFACE_(IRadioButtonRow, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRadioButtonRow methods */
    STDMETHOD(get_Order)(THIS_ BSTR FAR* Order) PURE;
    STDMETHOD(put_Order)(THIS_ BSTR Order) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_XPos)(THIS_ long FAR* XPos) PURE;
    STDMETHOD(put_XPos)(THIS_ long XPos) PURE;
    STDMETHOD(get_YPos)(THIS_ long FAR* YPos) PURE;
    STDMETHOD(put_YPos)(THIS_ long YPos) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_Help)(THIS_ BSTR FAR* Help) PURE;
    STDMETHOD(put_Help)(THIS_ BSTR Help) PURE;
};

DEFINE_GUID(IID_IRadioButtonRowNeptune,0x561D5A89L,0xCA78,0x4D0B,0x80,0x86,0x0F,0xE0,0x5B,0xBF,0x04,0x74);

/* Definition of interface: IRadioButtonRowNeptune */
#undef INTERFACE
#define INTERFACE IRadioButtonRowNeptune

DECLARE_INTERFACE_(IRadioButtonRowNeptune, IRadioButtonRow)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRadioButtonRow methods */
    STDMETHOD(get_Order)(THIS_ BSTR FAR* Order) PURE;
    STDMETHOD(put_Order)(THIS_ BSTR Order) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_XPos)(THIS_ long FAR* XPos) PURE;
    STDMETHOD(put_XPos)(THIS_ long XPos) PURE;
    STDMETHOD(get_YPos)(THIS_ long FAR* YPos) PURE;
    STDMETHOD(put_YPos)(THIS_ long YPos) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_Help)(THIS_ BSTR FAR* Help) PURE;
    STDMETHOD(put_Help)(THIS_ BSTR Help) PURE;
#endif

    /* IRadioButtonRowNeptune methods */
    STDMETHOD(get_ControlId)(THIS_ long FAR* pControlId) PURE;
    STDMETHOD(put_ControlId)(THIS_ long ControlId) PURE;
};

DEFINE_GUID(IID_IRadioButton,0x074C87DBL,0xC605,0x45D5,0xAC,0x32,0xDC,0x16,0xB1,0xE0,0xD7,0x94);

/* Definition of interface: IRadioButton */
#undef INTERFACE
#define INTERFACE IRadioButton

DECLARE_INTERFACE_(IRadioButton, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRadioButton methods */
    STDMETHOD(get_Property)(THIS_ BSTR FAR* Property) PURE;
    STDMETHOD(put_Property)(THIS_ BSTR Property) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* Order) PURE;
    STDMETHOD(put_Order)(THIS_ long Order) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_XPos)(THIS_ long FAR* XPos) PURE;
    STDMETHOD(put_XPos)(THIS_ long XPos) PURE;
    STDMETHOD(get_YPos)(THIS_ long FAR* YPos) PURE;
    STDMETHOD(put_YPos)(THIS_ long YPos) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_Help)(THIS_ BSTR FAR* Help) PURE;
    STDMETHOD(put_Help)(THIS_ BSTR Help) PURE;
};

DEFINE_GUID(IID_IRadioButton2,0x49D9528EL,0x517E,0x464D,0xAA,0x5D,0x67,0x74,0x3B,0x2D,0xF7,0x25);

/* Definition of interface: IRadioButton2 */
#undef INTERFACE
#define INTERFACE IRadioButton2

DECLARE_INTERFACE_(IRadioButton2, IRadioButton)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRadioButton methods */
    STDMETHOD(get_Property)(THIS_ BSTR FAR* Property) PURE;
    STDMETHOD(put_Property)(THIS_ BSTR Property) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* Order) PURE;
    STDMETHOD(put_Order)(THIS_ long Order) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_XPos)(THIS_ long FAR* XPos) PURE;
    STDMETHOD(put_XPos)(THIS_ long XPos) PURE;
    STDMETHOD(get_YPos)(THIS_ long FAR* YPos) PURE;
    STDMETHOD(put_YPos)(THIS_ long YPos) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_Help)(THIS_ BSTR FAR* Help) PURE;
    STDMETHOD(put_Help)(THIS_ BSTR Help) PURE;
#endif

    /* IRadioButton2 methods */
    STDMETHOD(Build)(THIS_ IRadioButton2 FAR* pRadioButton) PURE;
};

DEFINE_GUID(IID_IRadioButtonNeptune,0x686D010EL,0xC12E,0x494C,0x88,0x65,0xA3,0x74,0xC7,0xB7,0xCD,0x27);

/* Definition of interface: IRadioButtonNeptune */
#undef INTERFACE
#define INTERFACE IRadioButtonNeptune

DECLARE_INTERFACE_(IRadioButtonNeptune, IRadioButton2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRadioButton methods */
    STDMETHOD(get_Property)(THIS_ BSTR FAR* Property) PURE;
    STDMETHOD(put_Property)(THIS_ BSTR Property) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* Order) PURE;
    STDMETHOD(put_Order)(THIS_ long Order) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_XPos)(THIS_ long FAR* XPos) PURE;
    STDMETHOD(put_XPos)(THIS_ long XPos) PURE;
    STDMETHOD(get_YPos)(THIS_ long FAR* YPos) PURE;
    STDMETHOD(put_YPos)(THIS_ long YPos) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* Width) PURE;
    STDMETHOD(put_Width)(THIS_ long Width) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* Height) PURE;
    STDMETHOD(put_Height)(THIS_ long Height) PURE;
    STDMETHOD(get_Text)(THIS_ BSTR FAR* Text) PURE;
    STDMETHOD(put_Text)(THIS_ BSTR Text) PURE;
    STDMETHOD(get_Help)(THIS_ BSTR FAR* Help) PURE;
    STDMETHOD(put_Help)(THIS_ BSTR Help) PURE;

    /* IRadioButton2 methods */
    STDMETHOD(Build)(THIS_ IRadioButton2 FAR* pRadioButton) PURE;
#endif

    /* IRadioButtonNeptune methods */
    STDMETHOD(get_ControlId)(THIS_ long FAR* pControlId) PURE;
    STDMETHOD(put_ControlId)(THIS_ long ControlId) PURE;
};

DEFINE_GUID(IID_IRadioButtons,0xC58029AAL,0x00DA,0x427A,0xAF,0xEA,0x96,0x49,0x5A,0x41,0x6F,0xA2);

/* Definition of interface: IRadioButtons */
#undef INTERFACE
#define INTERFACE IRadioButtons

DECLARE_INTERFACE_(IRadioButtons, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRadioButtons methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IRadioButton FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IRadioButtons2,0x3B955C30L,0xE417,0x4415,0xA0,0xF3,0xD4,0x2E,0xA8,0x7F,0x2C,0x95);

/* Definition of interface: IRadioButtons2 */
#undef INTERFACE
#define INTERFACE IRadioButtons2

DECLARE_INTERFACE_(IRadioButtons2, IRadioButtons)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRadioButtons methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IRadioButton FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
#endif

    /* IRadioButtons2 methods */
    STDMETHOD(get_ItemEx)(THIS_ BSTR bstrProperty, long lOrder, IRadioButton FAR* FAR* Return) PURE;
};

typedef enum EnumPropStringEntry {
    epseValue = 10,
    epseComments = 11,
    epseTimeStamp = 12
} EnumPropStringEntry;

DEFINE_GUID(IID_IStringIdSearch,0x3393E995L,0x93CE,0x4A4A,0x82,0x0A,0x57,0xF3,0x99,0xFE,0x1D,0x9B);

/* Definition of interface: IStringIdSearch */
#undef INTERFACE
#define INTERFACE IStringIdSearch

DECLARE_INTERFACE_(IStringIdSearch, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IStringIdSearch methods */
    STDMETHOD(Found)(THIS_ BSTR sStringInfo) PURE;
};

DEFINE_GUID(IID_IStringEntry,0x55C9751AL,0xD7DD,0x4932,0x89,0xB0,0x9B,0xB4,0xE6,0x67,0x09,0xC3);

/* Definition of interface: IStringEntry */
#undef INTERFACE
#define INTERFACE IStringEntry

DECLARE_INTERFACE_(IStringEntry, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IStringEntry methods */
    STDMETHOD(get_Id)(THIS_ BSTR FAR* Id) PURE;
    STDMETHOD(put_Id)(THIS_ BSTR Id) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;
    STDMETHOD(get_TimeStamp)(THIS_ BSTR FAR* sTimeStamp) PURE;
    STDMETHOD(put_TimeStamp)(THIS_ BSTR sTimeStamp) PURE;
    STDMETHOD(FindInProject)(THIS_ IStringIdSearch FAR* pSearchCallBack) PURE;
};

DEFINE_GUID(IID_IStringEntry2,0x55A438ECL,0xB463,0x46E4,0x9B,0x1E,0x91,0x47,0x6B,0x52,0x28,0x4F);

/* Definition of interface: IStringEntry2 */
#undef INTERFACE
#define INTERFACE IStringEntry2

DECLARE_INTERFACE_(IStringEntry2, IStringEntry)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IStringEntry methods */
    STDMETHOD(get_Id)(THIS_ BSTR FAR* Id) PURE;
    STDMETHOD(put_Id)(THIS_ BSTR Id) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;
    STDMETHOD(get_TimeStamp)(THIS_ BSTR FAR* sTimeStamp) PURE;
    STDMETHOD(put_TimeStamp)(THIS_ BSTR sTimeStamp) PURE;
    STDMETHOD(FindInProject)(THIS_ IStringIdSearch FAR* pSearchCallBack) PURE;
#endif

    /* IStringEntry2 methods */
    STDMETHOD(get_TimeStamp)(THIS_ double FAR* timestamp) PURE;
    STDMETHOD(get_FormattedTimeStamp)(THIS_ BSTR FAR* bstrTimestamp) PURE;
    STDMETHOD(PropagateToAllLangs)(THIS_ BSTR bstrDefaultValue, BSTR bstrDefaultComment) PURE;
    STDMETHOD(get_ValueUnicode)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_ValueUnicode)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IStringEntries,0xA9BA75F0L,0x9D15,0x4738,0x86,0x6C,0x1C,0xC3,0x2B,0x94,0xD0,0x04);

/* Definition of interface: IStringEntries */
#undef INTERFACE
#define INTERFACE IStringEntries

DECLARE_INTERFACE_(IStringEntries, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IStringEntries methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IStringEntry FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IStringEntriesNeptune,0xA9BA75F1L,0x9D15,0x4738,0x86,0x6C,0x1C,0xC3,0x2B,0x94,0xD0,0x04);

/* Definition of interface: IStringEntriesNeptune */
#undef INTERFACE
#define INTERFACE IStringEntriesNeptune

DECLARE_INTERFACE_(IStringEntriesNeptune, IStringEntries)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IStringEntries methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IStringEntry FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
#endif

    /* IStringEntriesNeptune methods */
    STDMETHOD(SetFilter)(THIS_ BSTR bstrTable, BSTR bstrColumn) PURE;
};

typedef enum EnumLanguageChild {
    elcDialog = 1,
    elcStringEntry = 2,
    elcStringEntryOneLanguage = 3,
    elcStringEntryUnicode = 4,
    elcStringEntryOneLanguageUnicode = 5
} EnumLanguageChild;

typedef enum EnumPropLanguage {
    eplLanguageID = 0,
    eplIncluded = 10
} EnumPropLanguage;

DEFINE_GUID(IID_IIsmAutoStringTableEvents,0xB1CF6EA0L,0xE781,0x48E3,0xB8,0x6C,0x02,0x60,0x9C,0x8D,0xB9,0x07);

/* Definition of interface: IIsmAutoStringTableEvents */
#undef INTERFACE
#define INTERFACE IIsmAutoStringTableEvents

DECLARE_INTERFACE_(IIsmAutoStringTableEvents, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIsmAutoStringTableEvents methods */
    STDMETHOD(OnOverwrite)(THIS_ long nLineNum, BSTR sExistingID, BSTR sOldValue, BSTR sOldComment, BSTR sNewValue, BSTR sNewComment, VARIANT_BOOL FAR* bCancel, VARIANT_BOOL FAR* pAllowOverwrite) PURE;
    STDMETHOD(OnBadFormat)(THIS_ long nLineNum, VARIANT_BOOL FAR* pCancel) PURE;
};

DEFINE_GUID(IID_ILanguage,0x4C34D7DEL,0xB25B,0x435F,0x8A,0x55,0x63,0xAB,0x58,0x62,0xF1,0x9A);

/* Definition of interface: ILanguage */
#undef INTERFACE
#define INTERFACE ILanguage

DECLARE_INTERFACE_(ILanguage, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILanguage methods */
    STDMETHOD(AddChild)(THIS_ EnumLanguageChild elcChild, BSTR strName, VARIANT vsValue, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Id)(THIS_ BSTR FAR* LanguageId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* LanguageName) PURE;
    STDMETHOD(get_IsIncluded)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsIncluded)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_StringEntries)(THIS_ IStringEntries FAR* FAR* pVal) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_ILanguage2,0x3B4EE170L,0xB291,0x4861,0x92,0x92,0x97,0xB2,0x7D,0xC4,0x04,0x0B);

/* Definition of interface: ILanguage2 */
#undef INTERFACE
#define INTERFACE ILanguage2

DECLARE_INTERFACE_(ILanguage2, ILanguage)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILanguage methods */
    STDMETHOD(AddChild)(THIS_ EnumLanguageChild elcChild, BSTR strName, VARIANT vsValue, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Id)(THIS_ BSTR FAR* LanguageId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* LanguageName) PURE;
    STDMETHOD(get_IsIncluded)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsIncluded)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_StringEntries)(THIS_ IStringEntries FAR* FAR* pVal) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pVal) PURE;
#endif

    /* ILanguage2 methods */
    STDMETHOD(ImportStrings)(THIS_ BSTR filename, IIsmAutoStringTableEvents FAR* pEventSink) PURE;
    STDMETHOD(ExportStrings)(THIS_ BSTR filename) PURE;
    STDMETHOD(PropagateStringsToAllLangs)(THIS) PURE;
    STDMETHOD(ImportStringsEx)(THIS_ BSTR filename, IIsmAutoStringTableEvents FAR* pEventSink, VARIANT_BOOL vbStampTime) PURE;
};

DEFINE_GUID(IID_ILanguageNeptune,0xC043013FL,0x40FD,0x4993,0xA5,0xA6,0x0D,0xF9,0xF9,0x1C,0x86,0x6C);

/* Definition of interface: ILanguageNeptune */
#undef INTERFACE
#define INTERFACE ILanguageNeptune

DECLARE_INTERFACE_(ILanguageNeptune, ILanguage2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILanguage methods */
    STDMETHOD(AddChild)(THIS_ EnumLanguageChild elcChild, BSTR strName, VARIANT vsValue, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Id)(THIS_ BSTR FAR* LanguageId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* LanguageName) PURE;
    STDMETHOD(get_IsIncluded)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsIncluded)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_StringEntries)(THIS_ IStringEntries FAR* FAR* pVal) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pVal) PURE;

    /* ILanguage2 methods */
    STDMETHOD(ImportStrings)(THIS_ BSTR filename, IIsmAutoStringTableEvents FAR* pEventSink) PURE;
    STDMETHOD(ExportStrings)(THIS_ BSTR filename) PURE;
    STDMETHOD(PropagateStringsToAllLangs)(THIS) PURE;
    STDMETHOD(ImportStringsEx)(THIS_ BSTR filename, IIsmAutoStringTableEvents FAR* pEventSink, VARIANT_BOOL vbStampTime) PURE;
#endif

    /* ILanguageNeptune methods */
    STDMETHOD(put_IsIncludedEx)(THIS_ VARIANT_BOOL vbIncluded, VARIANT_BOOL vbUpdateStrings) PURE;
    STDMETHOD(ImportSpecificStringsFromFile)(THIS_ BSTR filename, IIsStrings FAR* pStringIds, IIsmAutoStringTableEvents FAR* pEventSink, VARIANT_BOOL vbStampTime) PURE;
    STDMETHOD(GetUniqueStringIDEx)(THIS_ BSTR bstrTemplate, BSTR FAR* strId) PURE;
};

DEFINE_GUID(IID_ILanguageLoyalty,0xF5255AB5L,0x56FA,0x42A6,0xBC,0xD6,0x0D,0x0C,0xEF,0xCE,0x77,0xF6);

/* Definition of interface: ILanguageLoyalty */
#undef INTERFACE
#define INTERFACE ILanguageLoyalty

DECLARE_INTERFACE_(ILanguageLoyalty, ILanguageNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILanguage methods */
    STDMETHOD(AddChild)(THIS_ EnumLanguageChild elcChild, BSTR strName, VARIANT vsValue, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Id)(THIS_ BSTR FAR* LanguageId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* LanguageName) PURE;
    STDMETHOD(get_IsIncluded)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsIncluded)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_StringEntries)(THIS_ IStringEntries FAR* FAR* pVal) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pVal) PURE;

    /* ILanguage2 methods */
    STDMETHOD(ImportStrings)(THIS_ BSTR filename, IIsmAutoStringTableEvents FAR* pEventSink) PURE;
    STDMETHOD(ExportStrings)(THIS_ BSTR filename) PURE;
    STDMETHOD(PropagateStringsToAllLangs)(THIS) PURE;
    STDMETHOD(ImportStringsEx)(THIS_ BSTR filename, IIsmAutoStringTableEvents FAR* pEventSink, VARIANT_BOOL vbStampTime) PURE;

    /* ILanguageNeptune methods */
    STDMETHOD(put_IsIncludedEx)(THIS_ VARIANT_BOOL vbIncluded, VARIANT_BOOL vbUpdateStrings) PURE;
    STDMETHOD(ImportSpecificStringsFromFile)(THIS_ BSTR filename, IIsStrings FAR* pStringIds, IIsmAutoStringTableEvents FAR* pEventSink, VARIANT_BOOL vbStampTime) PURE;
    STDMETHOD(GetUniqueStringIDEx)(THIS_ BSTR bstrTemplate, BSTR FAR* strId) PURE;
#endif

    /* ILanguageLoyalty methods */
    STDMETHOD(ExportStringsEx)(THIS_ BSTR filename, DATE dtMin, long lLangID) PURE;
};

DEFINE_GUID(IID_ILanguageJack,0x575C2C45L,0x7487,0x40E1,0x87,0x69,0x0B,0xBE,0x21,0x74,0xC5,0x02);

/* Definition of interface: ILanguageJack */
#undef INTERFACE
#define INTERFACE ILanguageJack

DECLARE_INTERFACE_(ILanguageJack, ILanguageLoyalty)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILanguage methods */
    STDMETHOD(AddChild)(THIS_ EnumLanguageChild elcChild, BSTR strName, VARIANT vsValue, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Id)(THIS_ BSTR FAR* LanguageId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* LanguageName) PURE;
    STDMETHOD(get_IsIncluded)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsIncluded)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_StringEntries)(THIS_ IStringEntries FAR* FAR* pVal) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pVal) PURE;

    /* ILanguage2 methods */
    STDMETHOD(ImportStrings)(THIS_ BSTR filename, IIsmAutoStringTableEvents FAR* pEventSink) PURE;
    STDMETHOD(ExportStrings)(THIS_ BSTR filename) PURE;
    STDMETHOD(PropagateStringsToAllLangs)(THIS) PURE;
    STDMETHOD(ImportStringsEx)(THIS_ BSTR filename, IIsmAutoStringTableEvents FAR* pEventSink, VARIANT_BOOL vbStampTime) PURE;

    /* ILanguageNeptune methods */
    STDMETHOD(put_IsIncludedEx)(THIS_ VARIANT_BOOL vbIncluded, VARIANT_BOOL vbUpdateStrings) PURE;
    STDMETHOD(ImportSpecificStringsFromFile)(THIS_ BSTR filename, IIsStrings FAR* pStringIds, IIsmAutoStringTableEvents FAR* pEventSink, VARIANT_BOOL vbStampTime) PURE;
    STDMETHOD(GetUniqueStringIDEx)(THIS_ BSTR bstrTemplate, BSTR FAR* strId) PURE;

    /* ILanguageLoyalty methods */
    STDMETHOD(ExportStringsEx)(THIS_ BSTR filename, DATE dtMin, long lLangID) PURE;
#endif

    /* ILanguageJack methods */
    STDMETHOD(ImportStringFromTemplate)(THIS_ BSTR bstrStringId, VARIANT_BOOL vbOverwrite) PURE;
    STDMETHOD(GetStringIdValueFromTemplate)(THIS_ BSTR bstrStringId, BSTR FAR* bstrStringValue) PURE;
};

DEFINE_GUID(IID_ILanguages,0xC97A4DB7L,0xEFC5,0x4F99,0x98,0xE5,0xAE,0x2D,0x39,0xAA,0x4C,0xE7);

/* Definition of interface: ILanguages */
#undef INTERFACE
#define INTERFACE ILanguages

DECLARE_INTERFACE_(ILanguages, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILanguages methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILanguage FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumIniFileChild {
    eifcSection = 0
} EnumIniFileChild;

typedef enum EnumPropIniFile {
    epifName = 0,
    epifFileName = 11,
    epifDirectory = 12
} EnumPropIniFile;

typedef enum EnumSectionChild {
    esncEntry = 0
} EnumSectionChild;

typedef enum EnumPropSection {
    epsnName = 0
} EnumPropSection;

typedef enum EnumPropEntry {
    epreKey = 11,
    epreValue = 12,
    epreAction = 13
} EnumPropEntry;

typedef enum EnumValueAction {
    evaCreateUpdate = 0,
    evaCreateNotExist = 1,
    evaDeleteLine = 2,
    evaAppend = 3,
    evaDeleteTag = 4
} EnumValueAction;

interface IIniSections;

interface IIniEntries;

interface IIniSection;

interface IIniEntry;

DEFINE_GUID(IID_IFlatIniFile,0xDD661A1BL,0xD809,0x4132,0xBC,0xC3,0xD2,0x18,0x78,0x92,0x31,0x71);

/* Definition of interface: IFlatIniFile */
#undef INTERFACE
#define INTERFACE IFlatIniFile

DECLARE_INTERFACE_(IFlatIniFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFlatIniFile methods */
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* FileName) PURE;
    STDMETHOD(put_FileName)(THIS_ BSTR FileName) PURE;
    STDMETHOD(get_SectionName)(THIS_ BSTR FAR* SectionName) PURE;
    STDMETHOD(put_SectionName)(THIS_ BSTR SectionName) PURE;
    STDMETHOD(get_KeyWord)(THIS_ BSTR FAR* KeyWord) PURE;
    STDMETHOD(put_KeyWord)(THIS_ BSTR Key) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Action)(THIS_ long FAR* Action) PURE;
    STDMETHOD(put_Action)(THIS_ long Action) PURE;
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* Directory) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR Directory) PURE;
    STDMETHOD(get_ComponentKey)(THIS_ BSTR FAR* ComponentKey) PURE;
    STDMETHOD(put_ComponentKey)(THIS_ BSTR ComponentKey) PURE;
    STDMETHOD(get_MSITableKey)(THIS_ BSTR FAR* MSITableKey) PURE;
    STDMETHOD(Delete)(THIS) PURE;
};

DEFINE_GUID(IID_IFlatIniFiles,0xC7D92D2DL,0x4BDA,0x4A70,0x86,0xF9,0xCC,0x68,0x79,0xDE,0xBE,0x98);

/* Definition of interface: IFlatIniFiles */
#undef INTERFACE
#define INTERFACE IFlatIniFiles

DECLARE_INTERFACE_(IFlatIniFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFlatIniFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IFlatIniFile FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IIniFile,0xCA2D2DDEL,0x4C85,0x4AF1,0xB9,0xFA,0x2A,0x8B,0x3F,0xC1,0x9F,0x33);

/* Definition of interface: IIniFile */
#undef INTERFACE
#define INTERFACE IIniFile

DECLARE_INTERFACE_(IIniFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIniFile methods */
    STDMETHOD(AddChild)(THIS_ EnumIniFileChild eifcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Sections)(THIS_ IIniSections FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* FileName) PURE;
    STDMETHOD(put_FileName)(THIS_ BSTR FileName) PURE;
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* Directory) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR Directory) PURE;
    STDMETHOD(InsertSection)(THIS_ IIniSection FAR* pSection, IIniSection FAR* FAR* pReturnSection) PURE;
    STDMETHOD(get_ComponentKey)(THIS_ BSTR FAR* ComponentKey) PURE;
    STDMETHOD(put_ComponentKey)(THIS_ BSTR ComponentKey) PURE;
    STDMETHOD(InsertCopy)(THIS_ IIniSection FAR* pSection, VARIANT_BOOL bOverWrite, IIniSection FAR* FAR* pReturnSection) PURE;
};

DEFINE_GUID(IID_IIniFiles,0xA394B89BL,0xCAC4,0x421C,0x9D,0x38,0x5F,0xAC,0x08,0x7C,0xE0,0x12);

/* Definition of interface: IIniFiles */
#undef INTERFACE
#define INTERFACE IIniFiles

DECLARE_INTERFACE_(IIniFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIniFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IIniFile FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IIniSection,0xF28DBC62L,0x1353,0x4C48,0x8E,0x37,0x7D,0x96,0xE9,0x56,0x22,0xAC);

/* Definition of interface: IIniSection */
#undef INTERFACE
#define INTERFACE IIniSection

DECLARE_INTERFACE_(IIniSection, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIniSection methods */
    STDMETHOD(AddChild)(THIS_ EnumSectionChild esncChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Entries)(THIS_ IIniEntries FAR* FAR* pKeyValue) PURE;
    STDMETHOD(InsertEntry)(THIS_ IIniEntry FAR* pEntry, IIniEntry FAR* FAR* pReturnEntry) PURE;
    STDMETHOD(InsertCopy)(THIS_ IIniEntry FAR* pEntry, VARIANT_BOOL bOverWrite, IIniEntry FAR* FAR* pReturnEntry) PURE;
};

DEFINE_GUID(IID_IIniSections,0x70D8FA1BL,0xFA39,0x47B6,0x9E,0x22,0x77,0xF4,0xE1,0x60,0xB1,0xF0);

/* Definition of interface: IIniSections */
#undef INTERFACE
#define INTERFACE IIniSections

DECLARE_INTERFACE_(IIniSections, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIniSections methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IIniSection FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IIniEntry,0xA8F23209L,0x81A3,0x4963,0xA7,0xE2,0xDA,0x4D,0x90,0xE2,0xEA,0x8A);

/* Definition of interface: IIniEntry */
#undef INTERFACE
#define INTERFACE IIniEntry

DECLARE_INTERFACE_(IIniEntry, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIniEntry methods */
    STDMETHOD(get_Key)(THIS_ BSTR FAR* Key) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR Key) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Action)(THIS_ long FAR* Action) PURE;
    STDMETHOD(put_Action)(THIS_ long Action) PURE;
    STDMETHOD(get_MSITableKey)(THIS_ BSTR FAR* MSITableKey) PURE;
};

DEFINE_GUID(IID_IIniEntries,0x03C6B837L,0x497F,0x4BAD,0xAD,0xCB,0x14,0x9C,0xEF,0x2B,0xB5,0xC4);

/* Definition of interface: IIniEntries */
#undef INTERFACE
#define INTERFACE IIniEntries

DECLARE_INTERFACE_(IIniEntries, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIniEntries methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IIniEntry FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ILightINIEntry,0x17BDC79AL,0x506D,0x4855,0xBE,0x14,0x76,0x79,0x73,0x49,0x07,0xA0);

/* Definition of interface: ILightINIEntry */
#undef INTERFACE
#define INTERFACE ILightINIEntry

DECLARE_INTERFACE_(ILightINIEntry, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightINIEntry methods */
    STDMETHOD(put_IniFile)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_IniFile)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_FileName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DirProperty)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DirProperty)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Section)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Section)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Action)(THIS_ long lVal) PURE;
    STDMETHOD(get_Action)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(Save)(THIS) PURE;
};

DEFINE_GUID(IID_ILightINI,0x18EADE22L,0x5726,0x404B,0x83,0xC4,0xE5,0x52,0xFE,0x47,0x37,0x94);

/* Definition of interface: ILightINI */
#undef INTERFACE
#define INTERFACE ILightINI

DECLARE_INTERFACE_(ILightINI, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightINI methods */
    STDMETHOD(OpenSession)(THIS) PURE;
    STDMETHOD(CloseSession)(THIS) PURE;
    STDMETHOD(NewEntry)(THIS_ ILightINIEntry FAR* FAR* pLightINIEntry) PURE;
};

typedef enum EnumExtChild {
    eecVerb = 0,
    eecMIME = 1
} EnumExtChild;

typedef enum EnumPropExt {
    epextName = 0,
    epextProgID = 11,
    epextShellNew = 12,
    epextShellNewValue = 13,
    epextFeature = 14
} EnumPropExt;

typedef enum EnumVerbChild {
    evcMIME = 0
} EnumVerbChild;

typedef enum EnumPropVerb {
    epvName = 0,
    epvSequence = 11,
    epvCommand = 12,
    epvArgument = 13
} EnumPropVerb;

typedef enum EnumPropMIME {
    epmName = 0,
    epmExtension = 11,
    epmCLSID = 12
} EnumPropMIME;

typedef enum EnumPropProgID {
    eppidName = 0,
    eppidParent = 11,
    eppidCLSID = 12,
    eppidDescription = 13,
    eppidICON = 14,
    eppidIconIndex = 15,
    eppidExtractIcon = 16,
    eppidInsertable = 17
} EnumPropProgID;

typedef enum EnumProgIDInsertable {
    epidiNotInsertable = 0,
    epidiInsertable = 1,
    epidiNeither = 2
} EnumProgIDInsertable;

interface IFileExtensionVerbs;

interface IMIMEType;

interface IMIMETypes;

interface IComponent;

DEFINE_GUID(IID_IFileExtension,0xDEA13FEDL,0x094B,0x4384,0x8F,0x4D,0x29,0xCA,0x75,0x18,0x17,0x7B);

/* Definition of interface: IFileExtension */
#undef INTERFACE
#define INTERFACE IFileExtension

DECLARE_INTERFACE_(IFileExtension, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileExtension methods */
    STDMETHOD(AddChild)(THIS_ EnumExtChild eecChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_ProgID)(THIS_ BSTR FAR* ProgID) PURE;
    STDMETHOD(put_ProgID)(THIS_ BSTR ProgID) PURE;
    STDMETHOD(get_ShellNew)(THIS_ BSTR FAR* ShellNew) PURE;
    STDMETHOD(put_ShellNew)(THIS_ BSTR ShellNew) PURE;
    STDMETHOD(get_ShellNewValue)(THIS_ BSTR FAR* ShellNewValue) PURE;
    STDMETHOD(put_ShellNewValue)(THIS_ BSTR ShellNewValue) PURE;
    STDMETHOD(get_Feature)(THIS_ BSTR FAR* Feature) PURE;
    STDMETHOD(put_Feature)(THIS_ BSTR Feature) PURE;
    STDMETHOD(get_Verbs)(THIS_ IFileExtensionVerbs FAR* FAR* pVerbs) PURE;
    STDMETHOD(Copy)(THIS_ IComponent FAR* pTargetComp, BSTR strFeature, VARIANT_BOOL bUpdate, IFileExtension FAR* FAR* pNewFileExt) PURE;
};

DEFINE_GUID(IID_IFileExtension2,0x7B16B0C9L,0x72C9,0x4CA5,0xB2,0xE3,0x62,0x51,0xF7,0x30,0x83,0xCD);

/* Definition of interface: IFileExtension2 */
#undef INTERFACE
#define INTERFACE IFileExtension2

DECLARE_INTERFACE_(IFileExtension2, IFileExtension)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFileExtension methods */
    STDMETHOD(AddChild)(THIS_ EnumExtChild eecChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_ProgID)(THIS_ BSTR FAR* ProgID) PURE;
    STDMETHOD(put_ProgID)(THIS_ BSTR ProgID) PURE;
    STDMETHOD(get_ShellNew)(THIS_ BSTR FAR* ShellNew) PURE;
    STDMETHOD(put_ShellNew)(THIS_ BSTR ShellNew) PURE;
    STDMETHOD(get_ShellNewValue)(THIS_ BSTR FAR* ShellNewValue) PURE;
    STDMETHOD(put_ShellNewValue)(THIS_ BSTR ShellNewValue) PURE;
    STDMETHOD(get_Feature)(THIS_ BSTR FAR* Feature) PURE;
    STDMETHOD(put_Feature)(THIS_ BSTR Feature) PURE;
    STDMETHOD(get_Verbs)(THIS_ IFileExtensionVerbs FAR* FAR* pVerbs) PURE;
    STDMETHOD(Copy)(THIS_ IComponent FAR* pTargetComp, BSTR strFeature, VARIANT_BOOL bUpdate, IFileExtension FAR* FAR* pNewFileExt) PURE;
#endif

    /* IFileExtension2 methods */
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMEType) PURE;
    STDMETHOD(get_MIME)(THIS_ BSTR FAR* pMIME) PURE;
    STDMETHOD(put_MIME)(THIS_ BSTR MIME) PURE;
};

DEFINE_GUID(IID_IFileExtensions,0x2A4196CAL,0xD049,0x40FC,0xA7,0x15,0x35,0x9F,0x49,0xB4,0x9E,0xAB);

/* Definition of interface: IFileExtensions */
#undef INTERFACE
#define INTERFACE IFileExtensions

DECLARE_INTERFACE_(IFileExtensions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileExtensions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IFileExtension FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IFileExtensionVerb,0x5A6C863DL,0x4C23,0x4C19,0xB7,0xE2,0x60,0x28,0x92,0x78,0x8E,0x4F);

/* Definition of interface: IFileExtensionVerb */
#undef INTERFACE
#define INTERFACE IFileExtensionVerb

DECLARE_INTERFACE_(IFileExtensionVerb, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileExtensionVerb methods */
    STDMETHOD(AddChild)(THIS_ EnumVerbChild evcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_Command)(THIS_ BSTR FAR* Command) PURE;
    STDMETHOD(put_Command)(THIS_ BSTR Command) PURE;
    STDMETHOD(get_Argument)(THIS_ BSTR FAR* Argument) PURE;
    STDMETHOD(put_Argument)(THIS_ BSTR Argument) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pKeyValue) PURE;
    STDMETHOD(InsertMIMEType)(THIS_ IMIMEType FAR* pObject) PURE;
};

DEFINE_GUID(IID_IFileExtensionVerbIndoreSP1,0x5747B57FL,0x8B4B,0x4B3A,0x80,0x4C,0x8F,0xB9,0x7A,0x21,0x2E,0x5E);

/* Definition of interface: IFileExtensionVerbIndoreSP1 */
#undef INTERFACE
#define INTERFACE IFileExtensionVerbIndoreSP1

DECLARE_INTERFACE_(IFileExtensionVerbIndoreSP1, IFileExtensionVerb)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFileExtensionVerb methods */
    STDMETHOD(AddChild)(THIS_ EnumVerbChild evcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_Command)(THIS_ BSTR FAR* Command) PURE;
    STDMETHOD(put_Command)(THIS_ BSTR Command) PURE;
    STDMETHOD(get_Argument)(THIS_ BSTR FAR* Argument) PURE;
    STDMETHOD(put_Argument)(THIS_ BSTR Argument) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pKeyValue) PURE;
    STDMETHOD(InsertMIMEType)(THIS_ IMIMEType FAR* pObject) PURE;
#endif

    /* IFileExtensionVerbIndoreSP1 methods */
    STDMETHOD(get_HasNonNullSequence)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
};

DEFINE_GUID(IID_IFileExtensionVerbs,0x2D01F79DL,0xCF2C,0x4810,0xAC,0x8E,0x6D,0x7C,0x09,0x96,0xAA,0xB9);

/* Definition of interface: IFileExtensionVerbs */
#undef INTERFACE
#define INTERFACE IFileExtensionVerbs

DECLARE_INTERFACE_(IFileExtensionVerbs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileExtensionVerbs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IFileExtensionVerb FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IMIMEType,0x15C24EDBL,0xB0BA,0x4525,0xAF,0x78,0x1C,0x02,0x3F,0x06,0x14,0xA6);

/* Definition of interface: IMIMEType */
#undef INTERFACE
#define INTERFACE IMIMEType

DECLARE_INTERFACE_(IMIMEType, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMIMEType methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Extension)(THIS_ BSTR FAR* Extension) PURE;
    STDMETHOD(put_Extension)(THIS_ BSTR Extension) PURE;
    STDMETHOD(get_CLSID)(THIS_ BSTR FAR* CLSID) PURE;
    STDMETHOD(put_CLSID)(THIS_ BSTR CLSID) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
};

DEFINE_GUID(IID_IMIMETypes,0x619696BEL,0x8D12,0x4E43,0x9C,0x02,0xA2,0x2E,0x3F,0xE0,0xAA,0x0D);

/* Definition of interface: IMIMETypes */
#undef INTERFACE
#define INTERFACE IMIMETypes

DECLARE_INTERFACE_(IMIMETypes, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMIMETypes methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IMIMEType FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

interface IProgIDs;

interface IIcon;

DEFINE_GUID(IID_IProgID,0xE938889EL,0xE222,0x4454,0xB8,0x46,0x63,0x60,0xDB,0x3F,0xC3,0x43);

/* Definition of interface: IProgID */
#undef INTERFACE
#define INTERFACE IProgID

DECLARE_INTERFACE_(IProgID, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProgID methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* Parent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR Parent) PURE;
    STDMETHOD(get_CLSID)(THIS_ BSTR FAR* CLSID) PURE;
    STDMETHOD(put_CLSID)(THIS_ BSTR CLSID) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Icon)(THIS_ BSTR FAR* Icon) PURE;
    STDMETHOD(put_Icon)(THIS_ BSTR Icon) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* IconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long IconIndex) PURE;
    STDMETHOD(get_ExtractIcon)(THIS_ VARIANT_BOOL FAR* ExtractIcon) PURE;
    STDMETHOD(put_ExtractIcon)(THIS_ VARIANT_BOOL ExtractIcon) PURE;
    STDMETHOD(get_Insertable)(THIS_ EnumProgIDInsertable FAR* Insertable) PURE;
    STDMETHOD(put_Insertable)(THIS_ EnumProgIDInsertable Insertable) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
};

DEFINE_GUID(IID_IProgID2,0x3254FBE6L,0x5B71,0x4AC9,0x9F,0x77,0x74,0xFA,0x58,0x62,0x11,0x2F);

/* Definition of interface: IProgID2 */
#undef INTERFACE
#define INTERFACE IProgID2

DECLARE_INTERFACE_(IProgID2, IProgID)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProgID methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* Parent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR Parent) PURE;
    STDMETHOD(get_CLSID)(THIS_ BSTR FAR* CLSID) PURE;
    STDMETHOD(put_CLSID)(THIS_ BSTR CLSID) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Icon)(THIS_ BSTR FAR* Icon) PURE;
    STDMETHOD(put_Icon)(THIS_ BSTR Icon) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* IconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long IconIndex) PURE;
    STDMETHOD(get_ExtractIcon)(THIS_ VARIANT_BOOL FAR* ExtractIcon) PURE;
    STDMETHOD(put_ExtractIcon)(THIS_ VARIANT_BOOL ExtractIcon) PURE;
    STDMETHOD(get_Insertable)(THIS_ EnumProgIDInsertable FAR* Insertable) PURE;
    STDMETHOD(put_Insertable)(THIS_ EnumProgIDInsertable Insertable) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
#endif

    /* IProgID2 methods */
    STDMETHOD(AddChild)(THIS_ BSTR bstrName, IProgID FAR* FAR* ppVersionIndependentChild) PURE;
    STDMETHOD(get_VersionIndependentProgIds)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_Icon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(DirectModeBuildProgIdIcon)(THIS_ BSTR bstrFilePath, long lSrcFileIconIndex) PURE;
};

DEFINE_GUID(IID_IProgIDs,0x5D782E41L,0x34A1,0x4C87,0x88,0xB5,0x1F,0x27,0x03,0x7A,0xF3,0x05);

/* Definition of interface: IProgIDs */
#undef INTERFACE
#define INTERFACE IProgIDs

DECLARE_INTERFACE_(IProgIDs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProgIDs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IProgID FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

interface IComponent2;

interface IDirectory2;

typedef enum EnumPropFile {
    epfiName = 0,
    epfiUseSystemSettings = 1,
    epfiSelfRegister = 2,
    epfiCheckVersion = 3,
    epfiShortName = 4,
    epfiDisplayName = 5,
    epfiVital = 6,
    epfiHidden = 7,
    epfiReadOnly = 8,
    epfiSystem = 9,
    epfiCompress = 10,
    epfiPermanent = 11,
    epfiCompanionFile = 12,
    epfiCheckLanguage = 13,
    epfiVersion = 14,
    epfiSize = 15,
    epfiAttributes = 16,
    epfiModified = 17,
    epfiFullPath = 18,
    epfiLanguages = 19,
    epfiFontTitle = 20,
    epfiUIVisible = 21,
    epfiFolder = 22,
    epfiSequence = 23
} EnumPropFile;

typedef enum EnumLinkingType {
    ltDynamic = 1,
    ltFileList = 2,
    ltSourceControl = 4
} EnumLinkingType;

typedef enum EnumIncludeFlags {
    eifIncludeSubFolder = 1,
    eifIncludeAllFiles = 2,
    eifIncludeFilter = 4
} EnumIncludeFlags;

typedef enum EnumPropFileLinking {
    epflType = 10,
    epflSourceFolder = 11,
    epflIncludeFiles = 12,
    epflExcludeFiles = 13,
    epflIncludeFlags = 14,
    epflFileSpec = 15
} EnumPropFileLinking;

typedef enum EnumFileCompTypes {
    efctUncompressed = 0,
    efctCompressed = 1,
    efctCompressedInMsi = 2
} EnumFileCompTypes;

interface IFileLinking;

interface IFileLinkings;

DEFINE_GUID(IID_IFile,0x5BF3F7B9L,0xD0A8,0x4240,0x85,0xE1,0x06,0x23,0x39,0x39,0x3D,0x03);

/* Definition of interface: IFile */
#undef INTERFACE
#define INTERFACE IFile

DECLARE_INTERFACE_(IFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFile methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_UseSystemSettings)(THIS_ VARIANT_BOOL FAR* UseSystemSettings) PURE;
    STDMETHOD(put_UseSystemSettings)(THIS_ VARIANT_BOOL UseSystemSettings) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_ShortName)(THIS_ BSTR FAR* ShortName) PURE;
    STDMETHOD(put_ShortName)(THIS_ BSTR ShortName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Vital)(THIS_ VARIANT_BOOL FAR* Vital) PURE;
    STDMETHOD(put_Vital)(THIS_ VARIANT_BOOL Vital) PURE;
    STDMETHOD(get_Hidden)(THIS_ VARIANT_BOOL FAR* Hidden) PURE;
    STDMETHOD(put_Hidden)(THIS_ VARIANT_BOOL Hidden) PURE;
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* ReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL ReadOnly) PURE;
    STDMETHOD(get_System)(THIS_ VARIANT_BOOL FAR* System) PURE;
    STDMETHOD(put_System)(THIS_ VARIANT_BOOL System) PURE;
    STDMETHOD(get_Compress)(THIS_ VARIANT_BOOL FAR* Compress) PURE;
    STDMETHOD(put_Compress)(THIS_ VARIANT_BOOL Compress) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_CompanionFile)(THIS_ BSTR FAR* CompanionFile) PURE;
    STDMETHOD(put_CompanionFile)(THIS_ BSTR CompanionFile) PURE;
    STDMETHOD(get_CheckLanguage)(THIS_ VARIANT_BOOL FAR* CheckLanguage) PURE;
    STDMETHOD(put_CheckLanguage)(THIS_ VARIANT_BOOL CheckLanguage) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Size)(THIS_ long FAR* Size) PURE;
    STDMETHOD(put_Size)(THIS_ long Size) PURE;
    STDMETHOD(get_Attributes)(THIS_ BSTR FAR* Attributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ BSTR Attributes) PURE;
    STDMETHOD(get_Modified)(THIS_ BSTR FAR* Modified) PURE;
    STDMETHOD(put_Modified)(THIS_ BSTR Modified) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* FullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR FullPath) PURE;
    STDMETHOD(get_Languages)(THIS_ BSTR FAR* Languages) PURE;
    STDMETHOD(put_Languages)(THIS_ BSTR Languages) PURE;
    STDMETHOD(get_FontTitle)(THIS_ BSTR FAR* FontTitle) PURE;
    STDMETHOD(put_FontTitle)(THIS_ BSTR FontTitle) PURE;
    STDMETHOD(get_UIVisible)(THIS_ VARIANT_BOOL FAR* UIVisible) PURE;
    STDMETHOD(put_UIVisible)(THIS_ VARIANT_BOOL UIVisible) PURE;
    STDMETHOD(get_DynamicFile)(THIS_ VARIANT_BOOL FAR* DynamicFile) PURE;
    STDMETHOD(put_DynamicFile)(THIS_ VARIANT_BOOL DynamicFile) PURE;
    STDMETHOD(get_LinkSummary)(THIS_ BSTR FAR* LinkSummary) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* Path) PURE;
};

DEFINE_GUID(IID_IFile2,0x48FBCC92L,0xB566,0x42DF,0xB3,0x82,0xB8,0x86,0x3C,0xD7,0x12,0xFC);

/* Definition of interface: IFile2 */
#undef INTERFACE
#define INTERFACE IFile2

DECLARE_INTERFACE_(IFile2, IFile)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFile methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_UseSystemSettings)(THIS_ VARIANT_BOOL FAR* UseSystemSettings) PURE;
    STDMETHOD(put_UseSystemSettings)(THIS_ VARIANT_BOOL UseSystemSettings) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_ShortName)(THIS_ BSTR FAR* ShortName) PURE;
    STDMETHOD(put_ShortName)(THIS_ BSTR ShortName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Vital)(THIS_ VARIANT_BOOL FAR* Vital) PURE;
    STDMETHOD(put_Vital)(THIS_ VARIANT_BOOL Vital) PURE;
    STDMETHOD(get_Hidden)(THIS_ VARIANT_BOOL FAR* Hidden) PURE;
    STDMETHOD(put_Hidden)(THIS_ VARIANT_BOOL Hidden) PURE;
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* ReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL ReadOnly) PURE;
    STDMETHOD(get_System)(THIS_ VARIANT_BOOL FAR* System) PURE;
    STDMETHOD(put_System)(THIS_ VARIANT_BOOL System) PURE;
    STDMETHOD(get_Compress)(THIS_ VARIANT_BOOL FAR* Compress) PURE;
    STDMETHOD(put_Compress)(THIS_ VARIANT_BOOL Compress) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_CompanionFile)(THIS_ BSTR FAR* CompanionFile) PURE;
    STDMETHOD(put_CompanionFile)(THIS_ BSTR CompanionFile) PURE;
    STDMETHOD(get_CheckLanguage)(THIS_ VARIANT_BOOL FAR* CheckLanguage) PURE;
    STDMETHOD(put_CheckLanguage)(THIS_ VARIANT_BOOL CheckLanguage) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Size)(THIS_ long FAR* Size) PURE;
    STDMETHOD(put_Size)(THIS_ long Size) PURE;
    STDMETHOD(get_Attributes)(THIS_ BSTR FAR* Attributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ BSTR Attributes) PURE;
    STDMETHOD(get_Modified)(THIS_ BSTR FAR* Modified) PURE;
    STDMETHOD(put_Modified)(THIS_ BSTR Modified) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* FullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR FullPath) PURE;
    STDMETHOD(get_Languages)(THIS_ BSTR FAR* Languages) PURE;
    STDMETHOD(put_Languages)(THIS_ BSTR Languages) PURE;
    STDMETHOD(get_FontTitle)(THIS_ BSTR FAR* FontTitle) PURE;
    STDMETHOD(put_FontTitle)(THIS_ BSTR FontTitle) PURE;
    STDMETHOD(get_UIVisible)(THIS_ VARIANT_BOOL FAR* UIVisible) PURE;
    STDMETHOD(put_UIVisible)(THIS_ VARIANT_BOOL UIVisible) PURE;
    STDMETHOD(get_DynamicFile)(THIS_ VARIANT_BOOL FAR* DynamicFile) PURE;
    STDMETHOD(put_DynamicFile)(THIS_ VARIANT_BOOL DynamicFile) PURE;
    STDMETHOD(get_LinkSummary)(THIS_ BSTR FAR* LinkSummary) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* Path) PURE;
#endif

    /* IFile2 methods */
    STDMETHOD(get_Sequence)(THIS_ short FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ short Sequence) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent2 FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* pComponentName) PURE;
    STDMETHOD(put_ComponentName)(THIS_ BSTR ComponentName) PURE;
    STDMETHOD(get_MsiAttributes)(THIS_ short FAR* pMsiAttributes) PURE;
    STDMETHOD(put_MsiAttributes)(THIS_ short MsiAttributes) PURE;
    STDMETHOD(get_LongName)(THIS_ BSTR FAR* LongName) PURE;
    STDMETHOD(put_LongName)(THIS_ BSTR LongName) PURE;
    STDMETHOD(get_FullPathEx)(THIS_ BSTR FAR* FullPathEx) PURE;
    STDMETHOD(get_FileLinking)(THIS_ IFileLinking FAR* FAR* ppFileLinking) PURE;
    STDMETHOD(get_DotNet)(THIS_ VARIANT_BOOL FAR* pvbDotNetFile) PURE;
    STDMETHOD(put_DotNet)(THIS_ VARIANT_BOOL vbDotNetFile) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumFileCompTypes FAR* peCompType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumFileCompTypes eCompType) PURE;
    STDMETHOD(ExtractCOMData)(THIS) PURE;
    STDMETHOD(get_AlwaysOverwrite)(THIS_ VARIANT_BOOL FAR* pvbAlwaysOverwrite) PURE;
    STDMETHOD(put_AlwaysOverwrite)(THIS_ VARIANT_BOOL vbAlwaysOverwrite) PURE;
    STDMETHOD(get_OverrideSystemSize)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemSize)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemVersion)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemVersion)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemLanguage)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemLanguage)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemAttributes)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemAttributes)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_UseFileHash)(THIS_ VARIANT_BOOL FAR* pvbUseHash) PURE;
    STDMETHOD(put_UseFileHash)(THIS_ VARIANT_BOOL pvbUseHash) PURE;
};

DEFINE_GUID(IID_IFileNeptune,0xFF77D7DEL,0x510B,0x406E,0xBA,0x9C,0xA0,0xF2,0x4F,0x1A,0x91,0xF8);

/* Definition of interface: IFileNeptune */
#undef INTERFACE
#define INTERFACE IFileNeptune

DECLARE_INTERFACE_(IFileNeptune, IFile2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFile methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_UseSystemSettings)(THIS_ VARIANT_BOOL FAR* UseSystemSettings) PURE;
    STDMETHOD(put_UseSystemSettings)(THIS_ VARIANT_BOOL UseSystemSettings) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_ShortName)(THIS_ BSTR FAR* ShortName) PURE;
    STDMETHOD(put_ShortName)(THIS_ BSTR ShortName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Vital)(THIS_ VARIANT_BOOL FAR* Vital) PURE;
    STDMETHOD(put_Vital)(THIS_ VARIANT_BOOL Vital) PURE;
    STDMETHOD(get_Hidden)(THIS_ VARIANT_BOOL FAR* Hidden) PURE;
    STDMETHOD(put_Hidden)(THIS_ VARIANT_BOOL Hidden) PURE;
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* ReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL ReadOnly) PURE;
    STDMETHOD(get_System)(THIS_ VARIANT_BOOL FAR* System) PURE;
    STDMETHOD(put_System)(THIS_ VARIANT_BOOL System) PURE;
    STDMETHOD(get_Compress)(THIS_ VARIANT_BOOL FAR* Compress) PURE;
    STDMETHOD(put_Compress)(THIS_ VARIANT_BOOL Compress) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_CompanionFile)(THIS_ BSTR FAR* CompanionFile) PURE;
    STDMETHOD(put_CompanionFile)(THIS_ BSTR CompanionFile) PURE;
    STDMETHOD(get_CheckLanguage)(THIS_ VARIANT_BOOL FAR* CheckLanguage) PURE;
    STDMETHOD(put_CheckLanguage)(THIS_ VARIANT_BOOL CheckLanguage) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Size)(THIS_ long FAR* Size) PURE;
    STDMETHOD(put_Size)(THIS_ long Size) PURE;
    STDMETHOD(get_Attributes)(THIS_ BSTR FAR* Attributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ BSTR Attributes) PURE;
    STDMETHOD(get_Modified)(THIS_ BSTR FAR* Modified) PURE;
    STDMETHOD(put_Modified)(THIS_ BSTR Modified) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* FullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR FullPath) PURE;
    STDMETHOD(get_Languages)(THIS_ BSTR FAR* Languages) PURE;
    STDMETHOD(put_Languages)(THIS_ BSTR Languages) PURE;
    STDMETHOD(get_FontTitle)(THIS_ BSTR FAR* FontTitle) PURE;
    STDMETHOD(put_FontTitle)(THIS_ BSTR FontTitle) PURE;
    STDMETHOD(get_UIVisible)(THIS_ VARIANT_BOOL FAR* UIVisible) PURE;
    STDMETHOD(put_UIVisible)(THIS_ VARIANT_BOOL UIVisible) PURE;
    STDMETHOD(get_DynamicFile)(THIS_ VARIANT_BOOL FAR* DynamicFile) PURE;
    STDMETHOD(put_DynamicFile)(THIS_ VARIANT_BOOL DynamicFile) PURE;
    STDMETHOD(get_LinkSummary)(THIS_ BSTR FAR* LinkSummary) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* Path) PURE;

    /* IFile2 methods */
    STDMETHOD(get_Sequence)(THIS_ short FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ short Sequence) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent2 FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* pComponentName) PURE;
    STDMETHOD(put_ComponentName)(THIS_ BSTR ComponentName) PURE;
    STDMETHOD(get_MsiAttributes)(THIS_ short FAR* pMsiAttributes) PURE;
    STDMETHOD(put_MsiAttributes)(THIS_ short MsiAttributes) PURE;
    STDMETHOD(get_LongName)(THIS_ BSTR FAR* LongName) PURE;
    STDMETHOD(put_LongName)(THIS_ BSTR LongName) PURE;
    STDMETHOD(get_FullPathEx)(THIS_ BSTR FAR* FullPathEx) PURE;
    STDMETHOD(get_FileLinking)(THIS_ IFileLinking FAR* FAR* ppFileLinking) PURE;
    STDMETHOD(get_DotNet)(THIS_ VARIANT_BOOL FAR* pvbDotNetFile) PURE;
    STDMETHOD(put_DotNet)(THIS_ VARIANT_BOOL vbDotNetFile) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumFileCompTypes FAR* peCompType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumFileCompTypes eCompType) PURE;
    STDMETHOD(ExtractCOMData)(THIS) PURE;
    STDMETHOD(get_AlwaysOverwrite)(THIS_ VARIANT_BOOL FAR* pvbAlwaysOverwrite) PURE;
    STDMETHOD(put_AlwaysOverwrite)(THIS_ VARIANT_BOOL vbAlwaysOverwrite) PURE;
    STDMETHOD(get_OverrideSystemSize)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemSize)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemVersion)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemVersion)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemLanguage)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemLanguage)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemAttributes)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemAttributes)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_UseFileHash)(THIS_ VARIANT_BOOL FAR* pvbUseHash) PURE;
    STDMETHOD(put_UseFileHash)(THIS_ VARIANT_BOOL pvbUseHash) PURE;
#endif

    /* IFileNeptune methods */
    STDMETHOD(get_DirectModeDeleteFileOnSave)(THIS_ VARIANT_BOOL FAR* pvbDirectModeDeleteFileOnSave) PURE;
    STDMETHOD(put_DirectModeDeleteFileOnSave)(THIS_ VARIANT_BOOL pvbDirectModeDeleteFileOnSave) PURE;
    STDMETHOD(HasLockPermissions)(THIS_ BSTR strFileID, VARIANT_BOOL FAR* bHasLockPermissions) PURE;
};

DEFINE_GUID(IID_IFileNeptunePDC,0xF54E4B27L,0x47C2,0x4617,0x8E,0xD2,0x1E,0x39,0x93,0xB5,0x01,0x67);

/* Definition of interface: IFileNeptunePDC */
#undef INTERFACE
#define INTERFACE IFileNeptunePDC

DECLARE_INTERFACE_(IFileNeptunePDC, IFileNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFile methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_UseSystemSettings)(THIS_ VARIANT_BOOL FAR* UseSystemSettings) PURE;
    STDMETHOD(put_UseSystemSettings)(THIS_ VARIANT_BOOL UseSystemSettings) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_ShortName)(THIS_ BSTR FAR* ShortName) PURE;
    STDMETHOD(put_ShortName)(THIS_ BSTR ShortName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Vital)(THIS_ VARIANT_BOOL FAR* Vital) PURE;
    STDMETHOD(put_Vital)(THIS_ VARIANT_BOOL Vital) PURE;
    STDMETHOD(get_Hidden)(THIS_ VARIANT_BOOL FAR* Hidden) PURE;
    STDMETHOD(put_Hidden)(THIS_ VARIANT_BOOL Hidden) PURE;
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* ReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL ReadOnly) PURE;
    STDMETHOD(get_System)(THIS_ VARIANT_BOOL FAR* System) PURE;
    STDMETHOD(put_System)(THIS_ VARIANT_BOOL System) PURE;
    STDMETHOD(get_Compress)(THIS_ VARIANT_BOOL FAR* Compress) PURE;
    STDMETHOD(put_Compress)(THIS_ VARIANT_BOOL Compress) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_CompanionFile)(THIS_ BSTR FAR* CompanionFile) PURE;
    STDMETHOD(put_CompanionFile)(THIS_ BSTR CompanionFile) PURE;
    STDMETHOD(get_CheckLanguage)(THIS_ VARIANT_BOOL FAR* CheckLanguage) PURE;
    STDMETHOD(put_CheckLanguage)(THIS_ VARIANT_BOOL CheckLanguage) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Size)(THIS_ long FAR* Size) PURE;
    STDMETHOD(put_Size)(THIS_ long Size) PURE;
    STDMETHOD(get_Attributes)(THIS_ BSTR FAR* Attributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ BSTR Attributes) PURE;
    STDMETHOD(get_Modified)(THIS_ BSTR FAR* Modified) PURE;
    STDMETHOD(put_Modified)(THIS_ BSTR Modified) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* FullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR FullPath) PURE;
    STDMETHOD(get_Languages)(THIS_ BSTR FAR* Languages) PURE;
    STDMETHOD(put_Languages)(THIS_ BSTR Languages) PURE;
    STDMETHOD(get_FontTitle)(THIS_ BSTR FAR* FontTitle) PURE;
    STDMETHOD(put_FontTitle)(THIS_ BSTR FontTitle) PURE;
    STDMETHOD(get_UIVisible)(THIS_ VARIANT_BOOL FAR* UIVisible) PURE;
    STDMETHOD(put_UIVisible)(THIS_ VARIANT_BOOL UIVisible) PURE;
    STDMETHOD(get_DynamicFile)(THIS_ VARIANT_BOOL FAR* DynamicFile) PURE;
    STDMETHOD(put_DynamicFile)(THIS_ VARIANT_BOOL DynamicFile) PURE;
    STDMETHOD(get_LinkSummary)(THIS_ BSTR FAR* LinkSummary) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* Path) PURE;

    /* IFile2 methods */
    STDMETHOD(get_Sequence)(THIS_ short FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ short Sequence) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent2 FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* pComponentName) PURE;
    STDMETHOD(put_ComponentName)(THIS_ BSTR ComponentName) PURE;
    STDMETHOD(get_MsiAttributes)(THIS_ short FAR* pMsiAttributes) PURE;
    STDMETHOD(put_MsiAttributes)(THIS_ short MsiAttributes) PURE;
    STDMETHOD(get_LongName)(THIS_ BSTR FAR* LongName) PURE;
    STDMETHOD(put_LongName)(THIS_ BSTR LongName) PURE;
    STDMETHOD(get_FullPathEx)(THIS_ BSTR FAR* FullPathEx) PURE;
    STDMETHOD(get_FileLinking)(THIS_ IFileLinking FAR* FAR* ppFileLinking) PURE;
    STDMETHOD(get_DotNet)(THIS_ VARIANT_BOOL FAR* pvbDotNetFile) PURE;
    STDMETHOD(put_DotNet)(THIS_ VARIANT_BOOL vbDotNetFile) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumFileCompTypes FAR* peCompType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumFileCompTypes eCompType) PURE;
    STDMETHOD(ExtractCOMData)(THIS) PURE;
    STDMETHOD(get_AlwaysOverwrite)(THIS_ VARIANT_BOOL FAR* pvbAlwaysOverwrite) PURE;
    STDMETHOD(put_AlwaysOverwrite)(THIS_ VARIANT_BOOL vbAlwaysOverwrite) PURE;
    STDMETHOD(get_OverrideSystemSize)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemSize)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemVersion)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemVersion)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemLanguage)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemLanguage)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemAttributes)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemAttributes)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_UseFileHash)(THIS_ VARIANT_BOOL FAR* pvbUseHash) PURE;
    STDMETHOD(put_UseFileHash)(THIS_ VARIANT_BOOL pvbUseHash) PURE;

    /* IFileNeptune methods */
    STDMETHOD(get_DirectModeDeleteFileOnSave)(THIS_ VARIANT_BOOL FAR* pvbDirectModeDeleteFileOnSave) PURE;
    STDMETHOD(put_DirectModeDeleteFileOnSave)(THIS_ VARIANT_BOOL pvbDirectModeDeleteFileOnSave) PURE;
    STDMETHOD(HasLockPermissions)(THIS_ BSTR strFileID, VARIANT_BOOL FAR* bHasLockPermissions) PURE;
#endif

    /* IFileNeptunePDC methods */
    STDMETHOD(get_ExcludeFromBuild)(THIS_ VARIANT_BOOL FAR* vb) PURE;
    STDMETHOD(put_ExcludeFromBuild)(THIS_ VARIANT_BOOL vb) PURE;
};

DEFINE_GUID(IID_IFileProteusSP,0xA3023C7DL,0x4B40,0x4164,0x82,0xFE,0x69,0x70,0x31,0xA3,0xA3,0x3B);

/* Definition of interface: IFileProteusSP */
#undef INTERFACE
#define INTERFACE IFileProteusSP

DECLARE_INTERFACE_(IFileProteusSP, IFileNeptunePDC)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFile methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_UseSystemSettings)(THIS_ VARIANT_BOOL FAR* UseSystemSettings) PURE;
    STDMETHOD(put_UseSystemSettings)(THIS_ VARIANT_BOOL UseSystemSettings) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_ShortName)(THIS_ BSTR FAR* ShortName) PURE;
    STDMETHOD(put_ShortName)(THIS_ BSTR ShortName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Vital)(THIS_ VARIANT_BOOL FAR* Vital) PURE;
    STDMETHOD(put_Vital)(THIS_ VARIANT_BOOL Vital) PURE;
    STDMETHOD(get_Hidden)(THIS_ VARIANT_BOOL FAR* Hidden) PURE;
    STDMETHOD(put_Hidden)(THIS_ VARIANT_BOOL Hidden) PURE;
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* ReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL ReadOnly) PURE;
    STDMETHOD(get_System)(THIS_ VARIANT_BOOL FAR* System) PURE;
    STDMETHOD(put_System)(THIS_ VARIANT_BOOL System) PURE;
    STDMETHOD(get_Compress)(THIS_ VARIANT_BOOL FAR* Compress) PURE;
    STDMETHOD(put_Compress)(THIS_ VARIANT_BOOL Compress) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_CompanionFile)(THIS_ BSTR FAR* CompanionFile) PURE;
    STDMETHOD(put_CompanionFile)(THIS_ BSTR CompanionFile) PURE;
    STDMETHOD(get_CheckLanguage)(THIS_ VARIANT_BOOL FAR* CheckLanguage) PURE;
    STDMETHOD(put_CheckLanguage)(THIS_ VARIANT_BOOL CheckLanguage) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Size)(THIS_ long FAR* Size) PURE;
    STDMETHOD(put_Size)(THIS_ long Size) PURE;
    STDMETHOD(get_Attributes)(THIS_ BSTR FAR* Attributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ BSTR Attributes) PURE;
    STDMETHOD(get_Modified)(THIS_ BSTR FAR* Modified) PURE;
    STDMETHOD(put_Modified)(THIS_ BSTR Modified) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* FullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR FullPath) PURE;
    STDMETHOD(get_Languages)(THIS_ BSTR FAR* Languages) PURE;
    STDMETHOD(put_Languages)(THIS_ BSTR Languages) PURE;
    STDMETHOD(get_FontTitle)(THIS_ BSTR FAR* FontTitle) PURE;
    STDMETHOD(put_FontTitle)(THIS_ BSTR FontTitle) PURE;
    STDMETHOD(get_UIVisible)(THIS_ VARIANT_BOOL FAR* UIVisible) PURE;
    STDMETHOD(put_UIVisible)(THIS_ VARIANT_BOOL UIVisible) PURE;
    STDMETHOD(get_DynamicFile)(THIS_ VARIANT_BOOL FAR* DynamicFile) PURE;
    STDMETHOD(put_DynamicFile)(THIS_ VARIANT_BOOL DynamicFile) PURE;
    STDMETHOD(get_LinkSummary)(THIS_ BSTR FAR* LinkSummary) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* Path) PURE;

    /* IFile2 methods */
    STDMETHOD(get_Sequence)(THIS_ short FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ short Sequence) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent2 FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* pComponentName) PURE;
    STDMETHOD(put_ComponentName)(THIS_ BSTR ComponentName) PURE;
    STDMETHOD(get_MsiAttributes)(THIS_ short FAR* pMsiAttributes) PURE;
    STDMETHOD(put_MsiAttributes)(THIS_ short MsiAttributes) PURE;
    STDMETHOD(get_LongName)(THIS_ BSTR FAR* LongName) PURE;
    STDMETHOD(put_LongName)(THIS_ BSTR LongName) PURE;
    STDMETHOD(get_FullPathEx)(THIS_ BSTR FAR* FullPathEx) PURE;
    STDMETHOD(get_FileLinking)(THIS_ IFileLinking FAR* FAR* ppFileLinking) PURE;
    STDMETHOD(get_DotNet)(THIS_ VARIANT_BOOL FAR* pvbDotNetFile) PURE;
    STDMETHOD(put_DotNet)(THIS_ VARIANT_BOOL vbDotNetFile) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumFileCompTypes FAR* peCompType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumFileCompTypes eCompType) PURE;
    STDMETHOD(ExtractCOMData)(THIS) PURE;
    STDMETHOD(get_AlwaysOverwrite)(THIS_ VARIANT_BOOL FAR* pvbAlwaysOverwrite) PURE;
    STDMETHOD(put_AlwaysOverwrite)(THIS_ VARIANT_BOOL vbAlwaysOverwrite) PURE;
    STDMETHOD(get_OverrideSystemSize)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemSize)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemVersion)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemVersion)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemLanguage)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemLanguage)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemAttributes)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemAttributes)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_UseFileHash)(THIS_ VARIANT_BOOL FAR* pvbUseHash) PURE;
    STDMETHOD(put_UseFileHash)(THIS_ VARIANT_BOOL pvbUseHash) PURE;

    /* IFileNeptune methods */
    STDMETHOD(get_DirectModeDeleteFileOnSave)(THIS_ VARIANT_BOOL FAR* pvbDirectModeDeleteFileOnSave) PURE;
    STDMETHOD(put_DirectModeDeleteFileOnSave)(THIS_ VARIANT_BOOL pvbDirectModeDeleteFileOnSave) PURE;
    STDMETHOD(HasLockPermissions)(THIS_ BSTR strFileID, VARIANT_BOOL FAR* bHasLockPermissions) PURE;

    /* IFileNeptunePDC methods */
    STDMETHOD(get_ExcludeFromBuild)(THIS_ VARIANT_BOOL FAR* vb) PURE;
    STDMETHOD(put_ExcludeFromBuild)(THIS_ VARIANT_BOOL vb) PURE;
#endif

    /* IFileProteusSP methods */
    STDMETHOD(put_MsiFileHash)(THIS_ long lOptions) PURE;
};

DEFINE_GUID(IID_IFileIxtapa,0xAA97DA8EL,0xEFF5,0x4D84,0xA3,0x30,0x10,0x28,0xEC,0xF5,0x58,0x5E);

/* Definition of interface: IFileIxtapa */
#undef INTERFACE
#define INTERFACE IFileIxtapa

DECLARE_INTERFACE_(IFileIxtapa, IFileProteusSP)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFile methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_UseSystemSettings)(THIS_ VARIANT_BOOL FAR* UseSystemSettings) PURE;
    STDMETHOD(put_UseSystemSettings)(THIS_ VARIANT_BOOL UseSystemSettings) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_ShortName)(THIS_ BSTR FAR* ShortName) PURE;
    STDMETHOD(put_ShortName)(THIS_ BSTR ShortName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Vital)(THIS_ VARIANT_BOOL FAR* Vital) PURE;
    STDMETHOD(put_Vital)(THIS_ VARIANT_BOOL Vital) PURE;
    STDMETHOD(get_Hidden)(THIS_ VARIANT_BOOL FAR* Hidden) PURE;
    STDMETHOD(put_Hidden)(THIS_ VARIANT_BOOL Hidden) PURE;
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* ReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL ReadOnly) PURE;
    STDMETHOD(get_System)(THIS_ VARIANT_BOOL FAR* System) PURE;
    STDMETHOD(put_System)(THIS_ VARIANT_BOOL System) PURE;
    STDMETHOD(get_Compress)(THIS_ VARIANT_BOOL FAR* Compress) PURE;
    STDMETHOD(put_Compress)(THIS_ VARIANT_BOOL Compress) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_CompanionFile)(THIS_ BSTR FAR* CompanionFile) PURE;
    STDMETHOD(put_CompanionFile)(THIS_ BSTR CompanionFile) PURE;
    STDMETHOD(get_CheckLanguage)(THIS_ VARIANT_BOOL FAR* CheckLanguage) PURE;
    STDMETHOD(put_CheckLanguage)(THIS_ VARIANT_BOOL CheckLanguage) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Size)(THIS_ long FAR* Size) PURE;
    STDMETHOD(put_Size)(THIS_ long Size) PURE;
    STDMETHOD(get_Attributes)(THIS_ BSTR FAR* Attributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ BSTR Attributes) PURE;
    STDMETHOD(get_Modified)(THIS_ BSTR FAR* Modified) PURE;
    STDMETHOD(put_Modified)(THIS_ BSTR Modified) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* FullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR FullPath) PURE;
    STDMETHOD(get_Languages)(THIS_ BSTR FAR* Languages) PURE;
    STDMETHOD(put_Languages)(THIS_ BSTR Languages) PURE;
    STDMETHOD(get_FontTitle)(THIS_ BSTR FAR* FontTitle) PURE;
    STDMETHOD(put_FontTitle)(THIS_ BSTR FontTitle) PURE;
    STDMETHOD(get_UIVisible)(THIS_ VARIANT_BOOL FAR* UIVisible) PURE;
    STDMETHOD(put_UIVisible)(THIS_ VARIANT_BOOL UIVisible) PURE;
    STDMETHOD(get_DynamicFile)(THIS_ VARIANT_BOOL FAR* DynamicFile) PURE;
    STDMETHOD(put_DynamicFile)(THIS_ VARIANT_BOOL DynamicFile) PURE;
    STDMETHOD(get_LinkSummary)(THIS_ BSTR FAR* LinkSummary) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* Path) PURE;

    /* IFile2 methods */
    STDMETHOD(get_Sequence)(THIS_ short FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ short Sequence) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent2 FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* pComponentName) PURE;
    STDMETHOD(put_ComponentName)(THIS_ BSTR ComponentName) PURE;
    STDMETHOD(get_MsiAttributes)(THIS_ short FAR* pMsiAttributes) PURE;
    STDMETHOD(put_MsiAttributes)(THIS_ short MsiAttributes) PURE;
    STDMETHOD(get_LongName)(THIS_ BSTR FAR* LongName) PURE;
    STDMETHOD(put_LongName)(THIS_ BSTR LongName) PURE;
    STDMETHOD(get_FullPathEx)(THIS_ BSTR FAR* FullPathEx) PURE;
    STDMETHOD(get_FileLinking)(THIS_ IFileLinking FAR* FAR* ppFileLinking) PURE;
    STDMETHOD(get_DotNet)(THIS_ VARIANT_BOOL FAR* pvbDotNetFile) PURE;
    STDMETHOD(put_DotNet)(THIS_ VARIANT_BOOL vbDotNetFile) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumFileCompTypes FAR* peCompType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumFileCompTypes eCompType) PURE;
    STDMETHOD(ExtractCOMData)(THIS) PURE;
    STDMETHOD(get_AlwaysOverwrite)(THIS_ VARIANT_BOOL FAR* pvbAlwaysOverwrite) PURE;
    STDMETHOD(put_AlwaysOverwrite)(THIS_ VARIANT_BOOL vbAlwaysOverwrite) PURE;
    STDMETHOD(get_OverrideSystemSize)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemSize)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemVersion)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemVersion)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemLanguage)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemLanguage)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemAttributes)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemAttributes)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_UseFileHash)(THIS_ VARIANT_BOOL FAR* pvbUseHash) PURE;
    STDMETHOD(put_UseFileHash)(THIS_ VARIANT_BOOL pvbUseHash) PURE;

    /* IFileNeptune methods */
    STDMETHOD(get_DirectModeDeleteFileOnSave)(THIS_ VARIANT_BOOL FAR* pvbDirectModeDeleteFileOnSave) PURE;
    STDMETHOD(put_DirectModeDeleteFileOnSave)(THIS_ VARIANT_BOOL pvbDirectModeDeleteFileOnSave) PURE;
    STDMETHOD(HasLockPermissions)(THIS_ BSTR strFileID, VARIANT_BOOL FAR* bHasLockPermissions) PURE;

    /* IFileNeptunePDC methods */
    STDMETHOD(get_ExcludeFromBuild)(THIS_ VARIANT_BOOL FAR* vb) PURE;
    STDMETHOD(put_ExcludeFromBuild)(THIS_ VARIANT_BOOL vb) PURE;

    /* IFileProteusSP methods */
    STDMETHOD(put_MsiFileHash)(THIS_ long lOptions) PURE;
#endif

    /* IFileIxtapa methods */
    STDMETHOD(get_ClickOnceMigrate)(THIS_ VARIANT_BOOL FAR* pvb) PURE;
    STDMETHOD(put_ClickOnceMigrate)(THIS_ VARIANT_BOOL vb) PURE;
    STDMETHOD(get_ManifestFileElement)(THIS_ BSTR FAR* pManifestFileElement) PURE;
    STDMETHOD(put_ManifestFileElement)(THIS_ BSTR ManifestFileElement) PURE;
    STDMETHOD(get_RegFreeComRefreshAtBuild)(THIS_ VARIANT_BOOL FAR* pvb) PURE;
    STDMETHOD(put_RegFreeComRefreshAtBuild)(THIS_ VARIANT_BOOL vb) PURE;
};

DEFINE_GUID(IID_IFileIndoreSP1,0xF33FD392L,0xCF2B,0x4DC5,0x8C,0x90,0x04,0xD2,0xE8,0x58,0x0E,0x58);

/* Definition of interface: IFileIndoreSP1 */
#undef INTERFACE
#define INTERFACE IFileIndoreSP1

DECLARE_INTERFACE_(IFileIndoreSP1, IFileIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFile methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_UseSystemSettings)(THIS_ VARIANT_BOOL FAR* UseSystemSettings) PURE;
    STDMETHOD(put_UseSystemSettings)(THIS_ VARIANT_BOOL UseSystemSettings) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_ShortName)(THIS_ BSTR FAR* ShortName) PURE;
    STDMETHOD(put_ShortName)(THIS_ BSTR ShortName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Vital)(THIS_ VARIANT_BOOL FAR* Vital) PURE;
    STDMETHOD(put_Vital)(THIS_ VARIANT_BOOL Vital) PURE;
    STDMETHOD(get_Hidden)(THIS_ VARIANT_BOOL FAR* Hidden) PURE;
    STDMETHOD(put_Hidden)(THIS_ VARIANT_BOOL Hidden) PURE;
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* ReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL ReadOnly) PURE;
    STDMETHOD(get_System)(THIS_ VARIANT_BOOL FAR* System) PURE;
    STDMETHOD(put_System)(THIS_ VARIANT_BOOL System) PURE;
    STDMETHOD(get_Compress)(THIS_ VARIANT_BOOL FAR* Compress) PURE;
    STDMETHOD(put_Compress)(THIS_ VARIANT_BOOL Compress) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_CompanionFile)(THIS_ BSTR FAR* CompanionFile) PURE;
    STDMETHOD(put_CompanionFile)(THIS_ BSTR CompanionFile) PURE;
    STDMETHOD(get_CheckLanguage)(THIS_ VARIANT_BOOL FAR* CheckLanguage) PURE;
    STDMETHOD(put_CheckLanguage)(THIS_ VARIANT_BOOL CheckLanguage) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Size)(THIS_ long FAR* Size) PURE;
    STDMETHOD(put_Size)(THIS_ long Size) PURE;
    STDMETHOD(get_Attributes)(THIS_ BSTR FAR* Attributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ BSTR Attributes) PURE;
    STDMETHOD(get_Modified)(THIS_ BSTR FAR* Modified) PURE;
    STDMETHOD(put_Modified)(THIS_ BSTR Modified) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* FullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR FullPath) PURE;
    STDMETHOD(get_Languages)(THIS_ BSTR FAR* Languages) PURE;
    STDMETHOD(put_Languages)(THIS_ BSTR Languages) PURE;
    STDMETHOD(get_FontTitle)(THIS_ BSTR FAR* FontTitle) PURE;
    STDMETHOD(put_FontTitle)(THIS_ BSTR FontTitle) PURE;
    STDMETHOD(get_UIVisible)(THIS_ VARIANT_BOOL FAR* UIVisible) PURE;
    STDMETHOD(put_UIVisible)(THIS_ VARIANT_BOOL UIVisible) PURE;
    STDMETHOD(get_DynamicFile)(THIS_ VARIANT_BOOL FAR* DynamicFile) PURE;
    STDMETHOD(put_DynamicFile)(THIS_ VARIANT_BOOL DynamicFile) PURE;
    STDMETHOD(get_LinkSummary)(THIS_ BSTR FAR* LinkSummary) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* Path) PURE;

    /* IFile2 methods */
    STDMETHOD(get_Sequence)(THIS_ short FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ short Sequence) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent2 FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* pComponentName) PURE;
    STDMETHOD(put_ComponentName)(THIS_ BSTR ComponentName) PURE;
    STDMETHOD(get_MsiAttributes)(THIS_ short FAR* pMsiAttributes) PURE;
    STDMETHOD(put_MsiAttributes)(THIS_ short MsiAttributes) PURE;
    STDMETHOD(get_LongName)(THIS_ BSTR FAR* LongName) PURE;
    STDMETHOD(put_LongName)(THIS_ BSTR LongName) PURE;
    STDMETHOD(get_FullPathEx)(THIS_ BSTR FAR* FullPathEx) PURE;
    STDMETHOD(get_FileLinking)(THIS_ IFileLinking FAR* FAR* ppFileLinking) PURE;
    STDMETHOD(get_DotNet)(THIS_ VARIANT_BOOL FAR* pvbDotNetFile) PURE;
    STDMETHOD(put_DotNet)(THIS_ VARIANT_BOOL vbDotNetFile) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumFileCompTypes FAR* peCompType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumFileCompTypes eCompType) PURE;
    STDMETHOD(ExtractCOMData)(THIS) PURE;
    STDMETHOD(get_AlwaysOverwrite)(THIS_ VARIANT_BOOL FAR* pvbAlwaysOverwrite) PURE;
    STDMETHOD(put_AlwaysOverwrite)(THIS_ VARIANT_BOOL vbAlwaysOverwrite) PURE;
    STDMETHOD(get_OverrideSystemSize)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemSize)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemVersion)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemVersion)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemLanguage)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemLanguage)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_OverrideSystemAttributes)(THIS_ VARIANT_BOOL FAR* pvbOverride) PURE;
    STDMETHOD(put_OverrideSystemAttributes)(THIS_ VARIANT_BOOL pvbOverride) PURE;
    STDMETHOD(get_UseFileHash)(THIS_ VARIANT_BOOL FAR* pvbUseHash) PURE;
    STDMETHOD(put_UseFileHash)(THIS_ VARIANT_BOOL pvbUseHash) PURE;

    /* IFileNeptune methods */
    STDMETHOD(get_DirectModeDeleteFileOnSave)(THIS_ VARIANT_BOOL FAR* pvbDirectModeDeleteFileOnSave) PURE;
    STDMETHOD(put_DirectModeDeleteFileOnSave)(THIS_ VARIANT_BOOL pvbDirectModeDeleteFileOnSave) PURE;
    STDMETHOD(HasLockPermissions)(THIS_ BSTR strFileID, VARIANT_BOOL FAR* bHasLockPermissions) PURE;

    /* IFileNeptunePDC methods */
    STDMETHOD(get_ExcludeFromBuild)(THIS_ VARIANT_BOOL FAR* vb) PURE;
    STDMETHOD(put_ExcludeFromBuild)(THIS_ VARIANT_BOOL vb) PURE;

    /* IFileProteusSP methods */
    STDMETHOD(put_MsiFileHash)(THIS_ long lOptions) PURE;

    /* IFileIxtapa methods */
    STDMETHOD(get_ClickOnceMigrate)(THIS_ VARIANT_BOOL FAR* pvb) PURE;
    STDMETHOD(put_ClickOnceMigrate)(THIS_ VARIANT_BOOL vb) PURE;
    STDMETHOD(get_ManifestFileElement)(THIS_ BSTR FAR* pManifestFileElement) PURE;
    STDMETHOD(put_ManifestFileElement)(THIS_ BSTR ManifestFileElement) PURE;
    STDMETHOD(get_RegFreeComRefreshAtBuild)(THIS_ VARIANT_BOOL FAR* pvb) PURE;
    STDMETHOD(put_RegFreeComRefreshAtBuild)(THIS_ VARIANT_BOOL vb) PURE;
#endif

    /* IFileIndoreSP1 methods */
    STDMETHOD(get_DestinationPath)(THIS_ BSTR FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_IFiles,0xE4983EE2L,0x9E20,0x45A4,0x8F,0x2D,0xF3,0x46,0xEA,0x12,0x55,0xA2);

/* Definition of interface: IFiles */
#undef INTERFACE
#define INTERFACE IFiles

DECLARE_INTERFACE_(IFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IFile FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumConflictId {
    ecrYes = 1,
    ecrYesAll = 2,
    ecrNo = 4,
    ecrNoAll = 8,
    ecrCancel = 16
} EnumConflictId;

DEFINE_GUID(IID_IFileEvent,0xBB649237L,0xD984,0x452A,0xA8,0xEC,0x8A,0xB5,0xD6,0xAB,0xF2,0xCD);

/* Definition of interface: IFileEvent */
#undef INTERFACE
#define INTERFACE IFileEvent

DECLARE_INTERFACE_(IFileEvent, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileEvent methods */
    STDMETHOD(OnNoDynamic)(THIS) PURE;
    STDMETHOD(OnDelete)(THIS) PURE;
    STDMETHOD(OnConflict)(THIS_ IFile FAR* pCurrentFile, IFile FAR* pOldFile, EnumConflictId FAR* plReturn) PURE;
    STDMETHOD(OnFileReplace)(THIS_ IFile FAR* pOldFile, IFile FAR* pNewFile) PURE;
};

DEFINE_GUID(IID_IFileEventNeptune,0xF737BEC7L,0xEAC2,0x40E0,0xB7,0x99,0xCB,0x9E,0x9C,0xF9,0x52,0xB7);

/* Definition of interface: IFileEventNeptune */
#undef INTERFACE
#define INTERFACE IFileEventNeptune

DECLARE_INTERFACE_(IFileEventNeptune, IFileEvent)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFileEvent methods */
    STDMETHOD(OnNoDynamic)(THIS) PURE;
    STDMETHOD(OnDelete)(THIS) PURE;
    STDMETHOD(OnConflict)(THIS_ IFile FAR* pCurrentFile, IFile FAR* pOldFile, EnumConflictId FAR* plReturn) PURE;
    STDMETHOD(OnFileReplace)(THIS_ IFile FAR* pOldFile, IFile FAR* pNewFile) PURE;
#endif

    /* IFileEventNeptune methods */
    STDMETHOD(IncrementStatusBar)(THIS) PURE;
    STDMETHOD(SetStatusText)(THIS_ BSTR bstrFileName) PURE;
    STDMETHOD(ResetStatusBar)(THIS_ long lMax, VARIANT_BOOL vbReserved) PURE;
};

DEFINE_GUID(IID_IFileHeader,0x515FB43BL,0xA713,0x4E3C,0xA1,0x5D,0x6D,0x11,0x4F,0x3A,0x62,0xEE);

/* Definition of interface: IFileHeader */
#undef INTERFACE
#define INTERFACE IFileHeader

DECLARE_INTERFACE_(IFileHeader, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileHeader methods */
    STDMETHOD(get_FileCount)(THIS_ long FAR* count) PURE;
    STDMETHOD(get_Files)(THIS_ IFiles FAR* FAR* files) PURE;
    STDMETHOD(get_FileLinkings)(THIS_ IFileLinkings FAR* FAR* pVal) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(AddFile)(THIS_ BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AddDynamicLink)(THIS_ BSTR sSourceFolder, EnumIncludeFlags eIncludeFlags, BSTR sIncludeFiles, BSTR sExcludeFiles, VARIANT_BOOL bDynamicSubFolders, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IFileEvent FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(AddFileEx)(THIS_ BSTR strName, IBusinessObject FAR* FAR* pDeletedConflictFile, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IFileHeader2,0x50AE6A49L,0xCC5A,0x4289,0xA0,0x27,0x38,0x00,0x7E,0x99,0xAA,0xD3);

/* Definition of interface: IFileHeader2 */
#undef INTERFACE
#define INTERFACE IFileHeader2

DECLARE_INTERFACE_(IFileHeader2, IFileHeader)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFileHeader methods */
    STDMETHOD(get_FileCount)(THIS_ long FAR* count) PURE;
    STDMETHOD(get_Files)(THIS_ IFiles FAR* FAR* files) PURE;
    STDMETHOD(get_FileLinkings)(THIS_ IFileLinkings FAR* FAR* pVal) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(AddFile)(THIS_ BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AddDynamicLink)(THIS_ BSTR sSourceFolder, EnumIncludeFlags eIncludeFlags, BSTR sIncludeFiles, BSTR sExcludeFiles, VARIANT_BOOL bDynamicSubFolders, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IFileEvent FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(AddFileEx)(THIS_ BSTR strName, IBusinessObject FAR* FAR* pDeletedConflictFile, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
#endif

    /* IFileHeader2 methods */
    STDMETHOD(get_DynamicFiles)(THIS_ IFiles FAR* FAR* files) PURE;
    STDMETHOD(AddDynamicLinkEx)(THIS_ BSTR sSourceFolder, EnumIncludeFlags eIncludeFlags, BSTR sIncludeFiles, BSTR sExcludeFiles, VARIANT_BOOL bDynamicSubFolders, VARIANT_BOOL bPopulateFileLink, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AddFileDotNet)(THIS_ BSTR strName, BSTR FAR* pbstrConflictFileKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AddFileEx)(THIS_ BSTR strName, BSTR FAR* pbstrConflictFileKey, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IFileHeaderJustice,0x65D361B6L,0x4A8E,0x440D,0xBC,0x49,0xD6,0xBC,0xA7,0xF5,0xBE,0x55);

/* Definition of interface: IFileHeaderJustice */
#undef INTERFACE
#define INTERFACE IFileHeaderJustice

DECLARE_INTERFACE_(IFileHeaderJustice, IFileHeader2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFileHeader methods */
    STDMETHOD(get_FileCount)(THIS_ long FAR* count) PURE;
    STDMETHOD(get_Files)(THIS_ IFiles FAR* FAR* files) PURE;
    STDMETHOD(get_FileLinkings)(THIS_ IFileLinkings FAR* FAR* pVal) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(AddFile)(THIS_ BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AddDynamicLink)(THIS_ BSTR sSourceFolder, EnumIncludeFlags eIncludeFlags, BSTR sIncludeFiles, BSTR sExcludeFiles, VARIANT_BOOL bDynamicSubFolders, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IFileEvent FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(AddFileEx)(THIS_ BSTR strName, IBusinessObject FAR* FAR* pDeletedConflictFile, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;

    /* IFileHeader2 methods */
    STDMETHOD(get_DynamicFiles)(THIS_ IFiles FAR* FAR* files) PURE;
    STDMETHOD(AddDynamicLinkEx)(THIS_ BSTR sSourceFolder, EnumIncludeFlags eIncludeFlags, BSTR sIncludeFiles, BSTR sExcludeFiles, VARIANT_BOOL bDynamicSubFolders, VARIANT_BOOL bPopulateFileLink, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AddFileDotNet)(THIS_ BSTR strName, BSTR FAR* pbstrConflictFileKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AddFileEx)(THIS_ BSTR strName, BSTR FAR* pbstrConflictFileKey, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
#endif

    /* IFileHeaderJustice methods */
    STDMETHOD(get_DynamicFilesEx)(THIS_ VARIANT_BOOL bIncludeDynamicFiles, IFiles FAR* FAR* files) PURE;
};

DEFINE_GUID(IID_IFileHeaderEx,0x2E99B996L,0x93F4,0x417E,0x8A,0xF3,0x82,0x85,0x5F,0x80,0xC5,0x06);

/* Definition of interface: IFileHeaderEx */
#undef INTERFACE
#define INTERFACE IFileHeaderEx

DECLARE_INTERFACE_(IFileHeaderEx, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileHeaderEx methods */
    STDMETHOD(DynamicFiles)(THIS_ IUnknown * FAR* files) PURE;
};

DEFINE_GUID(IID_IFileHeaderExJustice,0x958F8810L,0xC99B,0x4D13,0x87,0x2A,0xFC,0x31,0x25,0x68,0x5B,0x12);

/* Definition of interface: IFileHeaderExJustice */
#undef INTERFACE
#define INTERFACE IFileHeaderExJustice

DECLARE_INTERFACE_(IFileHeaderExJustice, IFileHeaderEx)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFileHeaderEx methods */
    STDMETHOD(DynamicFiles)(THIS_ IUnknown * FAR* files) PURE;
#endif

    /* IFileHeaderExJustice methods */
    STDMETHOD(DynamicFilesEx)(THIS_ VARIANT_BOOL bIncludeDynamicFiles, IUnknown * FAR* files) PURE;
};

DEFINE_GUID(IID_IFileLinking,0x13764C5AL,0x12E5,0x485F,0x82,0x1A,0xED,0x88,0x2B,0xA7,0xD0,0xC3);

/* Definition of interface: IFileLinking */
#undef INTERFACE
#define INTERFACE IFileLinking

DECLARE_INTERFACE_(IFileLinking, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileLinking methods */
    STDMETHOD(get_LinkingType)(THIS_ EnumLinkingType FAR* LinkingType) PURE;
    STDMETHOD(put_LinkingType)(THIS_ EnumLinkingType LinkingType) PURE;
    STDMETHOD(get_SourceFolder)(THIS_ BSTR FAR* SourceFolder) PURE;
    STDMETHOD(put_SourceFolder)(THIS_ BSTR SourceFolder) PURE;
    STDMETHOD(get_IncludeFlags)(THIS_ EnumIncludeFlags FAR* IncludeFlags) PURE;
    STDMETHOD(put_IncludeFlags)(THIS_ EnumIncludeFlags IncludeFlags) PURE;
    STDMETHOD(get_IncludeFiles)(THIS_ BSTR FAR* IncludeFiles) PURE;
    STDMETHOD(put_IncludeFiles)(THIS_ BSTR IncludeFiles) PURE;
    STDMETHOD(get_ExcludeFiles)(THIS_ BSTR FAR* ExcludeFiles) PURE;
    STDMETHOD(put_ExcludeFiles)(THIS_ BSTR ExcludeFiles) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

DEFINE_GUID(IID_IFileLinking2,0x9AAA1D41L,0x8787,0x451D,0x85,0xB9,0xCE,0x20,0xFC,0x58,0xC1,0xEB);

/* Definition of interface: IFileLinking2 */
#undef INTERFACE
#define INTERFACE IFileLinking2

DECLARE_INTERFACE_(IFileLinking2, IFileLinking)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFileLinking methods */
    STDMETHOD(get_LinkingType)(THIS_ EnumLinkingType FAR* LinkingType) PURE;
    STDMETHOD(put_LinkingType)(THIS_ EnumLinkingType LinkingType) PURE;
    STDMETHOD(get_SourceFolder)(THIS_ BSTR FAR* SourceFolder) PURE;
    STDMETHOD(put_SourceFolder)(THIS_ BSTR SourceFolder) PURE;
    STDMETHOD(get_IncludeFlags)(THIS_ EnumIncludeFlags FAR* IncludeFlags) PURE;
    STDMETHOD(put_IncludeFlags)(THIS_ EnumIncludeFlags IncludeFlags) PURE;
    STDMETHOD(get_IncludeFiles)(THIS_ BSTR FAR* IncludeFiles) PURE;
    STDMETHOD(put_IncludeFiles)(THIS_ BSTR IncludeFiles) PURE;
    STDMETHOD(get_ExcludeFiles)(THIS_ BSTR FAR* ExcludeFiles) PURE;
    STDMETHOD(put_ExcludeFiles)(THIS_ BSTR ExcludeFiles) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
#endif

    /* IFileLinking2 methods */
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* pvbSelfReg) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL vbSelfReg) PURE;
    STDMETHOD(get_DynamicSubfolders)(THIS_ VARIANT_BOOL FAR* pvbDynamicSubfolders) PURE;
    STDMETHOD(put_DynamicSubfolders)(THIS_ VARIANT_BOOL vbDynamicSubfolders) PURE;
    STDMETHOD(get_DontGenerateKeys)(THIS_ VARIANT_BOOL FAR* pvbDontGenerateKeys) PURE;
    STDMETHOD(put_DontGenerateKeys)(THIS_ VARIANT_BOOL vbDontGenerateKeys) PURE;
};

DEFINE_GUID(IID_IFileLinkingJustice,0x5429C52FL,0xC871,0x4FF6,0xB8,0x4E,0x80,0x7E,0x33,0x7E,0xC2,0xEE);

/* Definition of interface: IFileLinkingJustice */
#undef INTERFACE
#define INTERFACE IFileLinkingJustice

DECLARE_INTERFACE_(IFileLinkingJustice, IFileLinking2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFileLinking methods */
    STDMETHOD(get_LinkingType)(THIS_ EnumLinkingType FAR* LinkingType) PURE;
    STDMETHOD(put_LinkingType)(THIS_ EnumLinkingType LinkingType) PURE;
    STDMETHOD(get_SourceFolder)(THIS_ BSTR FAR* SourceFolder) PURE;
    STDMETHOD(put_SourceFolder)(THIS_ BSTR SourceFolder) PURE;
    STDMETHOD(get_IncludeFlags)(THIS_ EnumIncludeFlags FAR* IncludeFlags) PURE;
    STDMETHOD(put_IncludeFlags)(THIS_ EnumIncludeFlags IncludeFlags) PURE;
    STDMETHOD(get_IncludeFiles)(THIS_ BSTR FAR* IncludeFiles) PURE;
    STDMETHOD(put_IncludeFiles)(THIS_ BSTR IncludeFiles) PURE;
    STDMETHOD(get_ExcludeFiles)(THIS_ BSTR FAR* ExcludeFiles) PURE;
    STDMETHOD(put_ExcludeFiles)(THIS_ BSTR ExcludeFiles) PURE;
    STDMETHOD(Refresh)(THIS) PURE;

    /* IFileLinking2 methods */
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* pvbSelfReg) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL vbSelfReg) PURE;
    STDMETHOD(get_DynamicSubfolders)(THIS_ VARIANT_BOOL FAR* pvbDynamicSubfolders) PURE;
    STDMETHOD(put_DynamicSubfolders)(THIS_ VARIANT_BOOL vbDynamicSubfolders) PURE;
    STDMETHOD(get_DontGenerateKeys)(THIS_ VARIANT_BOOL FAR* pvbDontGenerateKeys) PURE;
    STDMETHOD(put_DontGenerateKeys)(THIS_ VARIANT_BOOL vbDontGenerateKeys) PURE;
#endif

    /* IFileLinkingJustice methods */
    STDMETHOD(get_CreateBestPracticeComponents)(THIS_ VARIANT_BOOL FAR* pvbCreateBPComps) PURE;
    STDMETHOD(put_CreateBestPracticeComponents)(THIS_ VARIANT_BOOL vbCreateBPComps) PURE;
};

DEFINE_GUID(IID_IFileLinkings,0x8818B33CL,0x76DE,0x4798,0x9F,0xAD,0xFD,0x5D,0x02,0xFF,0x96,0xF4);

/* Definition of interface: IFileLinkings */
#undef INTERFACE
#define INTERFACE IFileLinkings

DECLARE_INTERFACE_(IFileLinkings, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileLinkings methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IFileLinking FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IISSelfReg,0x4F5DE8B0L,0x6DDB,0x4524,0xAE,0x14,0x6F,0x95,0x29,0x01,0x95,0xC5);

/* Definition of interface: IISSelfReg */
#undef INTERFACE
#define INTERFACE IISSelfReg

DECLARE_INTERFACE_(IISSelfReg, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISSelfReg methods */
    STDMETHOD(get_FileKey)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_FileKey)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Cost)(THIS_ short FAR* nVal) PURE;
    STDMETHOD(put_Cost)(THIS_ short nVal) PURE;
    STDMETHOD(get_Order)(THIS_ short FAR* nVal) PURE;
    STDMETHOD(put_Order)(THIS_ short nVal) PURE;
    STDMETHOD(get_CmdLine)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_CmdLine)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_IISSelfRegs,0xCDE6903BL,0x66B0,0x4B4D,0xA3,0x44,0x5C,0xE4,0x44,0x1A,0x4A,0x09);

/* Definition of interface: IISSelfRegs */
#undef INTERFACE
#define INTERFACE IISSelfRegs

DECLARE_INTERFACE_(IISSelfRegs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISSelfRegs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IISSelfReg FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ILightFileEntry,0x2779991DL,0xB7D9,0x4CA3,0x86,0xA4,0x29,0xCA,0x16,0x39,0x30,0x3D);

/* Definition of interface: ILightFileEntry */
#undef INTERFACE
#define INTERFACE ILightFileEntry

DECLARE_INTERFACE_(ILightFileEntry, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightFileEntry methods */
    STDMETHOD(put_File)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Attributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Sequence)(THIS_ long lVal) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_FileName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_FileSize)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FileSize)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Language)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Language)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISBuildSourcePath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISBuildSourcePath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_FontTitle)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FontTitle)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(Save)(THIS) PURE;
    STDMETHOD(get_DestinationPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_DestinationDirId)(THIS_ BSTR FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_ILightFileEntryIndore,0xE601510DL,0x8A27,0x44BA,0x92,0x7A,0x10,0x3B,0xA0,0xCF,0xAF,0xD0);

/* Definition of interface: ILightFileEntryIndore */
#undef INTERFACE
#define INTERFACE ILightFileEntryIndore

DECLARE_INTERFACE_(ILightFileEntryIndore, ILightFileEntry)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILightFileEntry methods */
    STDMETHOD(put_File)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Attributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Sequence)(THIS_ long lVal) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_FileName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_FileSize)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FileSize)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Language)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Language)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISBuildSourcePath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISBuildSourcePath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_FontTitle)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FontTitle)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(Save)(THIS) PURE;
    STDMETHOD(get_DestinationPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_DestinationDirId)(THIS_ BSTR FAR* bstrVal) PURE;
#endif

    /* ILightFileEntryIndore methods */
    STDMETHOD(put_FileEx)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FileEx)(THIS_ BSTR FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_ILightFile,0x76EB6EFDL,0x7C78,0x4C7A,0xA3,0x9A,0xB8,0x6D,0x55,0xE8,0x76,0x87);

/* Definition of interface: ILightFile */
#undef INTERFACE
#define INTERFACE ILightFile

DECLARE_INTERFACE_(ILightFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightFile methods */
    STDMETHOD(OpenSession)(THIS) PURE;
    STDMETHOD(CloseSession)(THIS) PURE;
    STDMETHOD(NewEntry)(THIS_ ILightFileEntry FAR* FAR* pLightFileEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightFileEntry FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ILightFileIndore,0xEEBE52D4L,0x5F46,0x455F,0x9C,0x2F,0x6F,0xE4,0xE7,0xF3,0x39,0x9B);

/* Definition of interface: ILightFileIndore */
#undef INTERFACE
#define INTERFACE ILightFileIndore

DECLARE_INTERFACE_(ILightFileIndore, ILightFile)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILightFile methods */
    STDMETHOD(OpenSession)(THIS) PURE;
    STDMETHOD(CloseSession)(THIS) PURE;
    STDMETHOD(NewEntry)(THIS_ ILightFileEntry FAR* FAR* pLightFileEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightFileEntry FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
#endif

    /* ILightFileIndore methods */
    STDMETHOD(get_ItemEx)(THIS_ VARIANT Item, ILightFileEntry FAR* FAR* Return) PURE;
};

typedef enum EnumRemoveFileInstallMode {
    erfimOnInstall = 1,
    erfimOnRemove = 2,
    erfimOnBoth = 3
} EnumRemoveFileInstallMode;

DEFINE_GUID(IID_IRemoveFile,0xB0471260L,0xC7BF,0x48B8,0x8B,0xA6,0xEA,0x88,0xFF,0xBC,0x33,0x6A);

/* Definition of interface: IRemoveFile */
#undef INTERFACE
#define INTERFACE IRemoveFile

DECLARE_INTERFACE_(IRemoveFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRemoveFile methods */
    STDMETHOD(get_FileKey)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_FileKey)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_IComponent)(THIS_ IComponent2 FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pbstrComponentName) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponentName) PURE;
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* pbstrFileName) PURE;
    STDMETHOD(put_FileName)(THIS_ BSTR bstrFileName) PURE;
    STDMETHOD(get_DirProperty)(THIS_ BSTR FAR* pbstrDirProperty) PURE;
    STDMETHOD(put_DirProperty)(THIS_ BSTR bstrDirProperty) PURE;
    STDMETHOD(get_DirPropertyIDirectory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(get_InstallMode)(THIS_ EnumRemoveFileInstallMode FAR* eMode) PURE;
    STDMETHOD(put_InstallMode)(THIS_ EnumRemoveFileInstallMode eMode) PURE;
};

DEFINE_GUID(IID_IRemoveFiles,0xF1552A75L,0x3311,0x4058,0x84,0x8B,0x83,0xF8,0x62,0x96,0x23,0x16);

/* Definition of interface: IRemoveFiles */
#undef INTERFACE
#define INTERFACE IRemoveFiles

DECLARE_INTERFACE_(IRemoveFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRemoveFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IRemoveFile FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IIsVisualElement,0x4A435815L,0x5CC5,0x4A73,0x87,0xDB,0x92,0xE9,0x86,0x68,0x3A,0x9D);

/* Definition of interface: IIsVisualElement */
#undef INTERFACE
#define INTERFACE IIsVisualElement

DECLARE_INTERFACE_(IIsVisualElement, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIsVisualElement methods */
    STDMETHOD(get_File)(THIS_ BSTR FAR* File) PURE;
    STDMETHOD(put_File)(THIS_ BSTR File) PURE;
    STDMETHOD(get_BackgroundColor)(THIS_ BSTR FAR* BackgroundColor) PURE;
    STDMETHOD(put_BackgroundColor)(THIS_ BSTR BackgroundColor) PURE;
    STDMETHOD(get_ForegroundText)(THIS_ BSTR FAR* ForegroundText) PURE;
    STDMETHOD(put_ForegroundText)(THIS_ BSTR ForegroundText) PURE;
    STDMETHOD(get_ShowNameOn150x150)(THIS_ BSTR FAR* ShowNameOn150x150) PURE;
    STDMETHOD(put_ShowNameOn150x150)(THIS_ BSTR ShowNameOn150x150) PURE;
    STDMETHOD(get_Square150x150Logo)(THIS_ BSTR FAR* Square150x150Logo) PURE;
    STDMETHOD(put_Square150x150Logo)(THIS_ BSTR Square150x150Logo) PURE;
    STDMETHOD(get_Square70x70Logo)(THIS_ BSTR FAR* Square70x70Logo) PURE;
    STDMETHOD(put_Square70x70Logo)(THIS_ BSTR Square70x70Logo) PURE;
};

DEFINE_GUID(IID_IIsVisualElements,0x28F9AF1FL,0x1785,0x4175,0x9D,0xB8,0x9A,0xAC,0xE7,0x30,0xD0,0x9C);

/* Definition of interface: IIsVisualElements */
#undef INTERFACE
#define INTERFACE IIsVisualElements

DECLARE_INTERFACE_(IIsVisualElements, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIsVisualElements methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IIsVisualElement FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IFileUtil,0xC767FC09L,0x154C,0x4089,0x83,0xE0,0x54,0x84,0x7A,0x7E,0x5B,0x6B);

/* Definition of interface: IFileUtil */
#undef INTERFACE
#define INTERFACE IFileUtil

DECLARE_INTERFACE_(IFileUtil, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileUtil methods */
    STDMETHOD(IsSelfReg)(THIS_ BSTR sFullPathFile, VARIANT_BOOL FAR* bIsSelfReg) PURE;
};

typedef enum EnumFolderChild {
    efcFolder = 1,
    efcShortcut = 2
} EnumFolderChild;

typedef enum EnumPropShortcut {
    epsTarget = 2,
    epsicon = 3,
    epsIconindex = 4,
    epsDescription = 5,
    epsDisplayname = 6,
    epsArguments = 7,
    epsHotkey = 8,
    epsWorkingdir = 9,
    epsComments = 10,
    epsRun = 11,
    epsComponentDisplayList = 12
} EnumPropShortcut;

typedef enum EnumPropFolder {
    epfrDescription = 5,
    epfrDisplayname = 6
} EnumPropFolder;

typedef enum EnumShortcutType {
    estAutomatic = 0,
    estPersonal = 1,
    estCommon = 2
} EnumShortcutType;

interface IFolders;

interface IShortcut;

interface IShortcuts;

interface IMsiShortcutProperties;

DEFINE_GUID(IID_IFolder,0x04DD1996L,0x5631,0x419B,0xB7,0x17,0x7A,0x13,0x9B,0x9C,0x71,0xE3);

/* Definition of interface: IFolder */
#undef INTERFACE
#define INTERFACE IFolder

DECLARE_INTERFACE_(IFolder, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFolder methods */
    STDMETHOD(AddChild)(THIS_ EnumFolderChild efcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_SubFolders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* pShortcuts) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* strDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR strDescription) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* strDisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR strDisplayName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* strName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* lType) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;
};

DEFINE_GUID(IID_IFolder2,0x39D594DEL,0xEE08,0x4572,0x88,0x6E,0xD4,0x8E,0xA2,0x77,0xC9,0xAE);

/* Definition of interface: IFolder2 */
#undef INTERFACE
#define INTERFACE IFolder2

DECLARE_INTERFACE_(IFolder2, IFolder)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFolder methods */
    STDMETHOD(AddChild)(THIS_ EnumFolderChild efcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_SubFolders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* pShortcuts) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* strDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR strDescription) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* strDisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR strDisplayName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* strName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* lType) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;
#endif

    /* IFolder2 methods */
    STDMETHOD(InsertFolder)(THIS_ IFolder FAR* pFolder) PURE;
    STDMETHOD(InsertShortcut)(THIS_ IShortcut FAR* pShortcut) PURE;
    STDMETHOD(InsertFolderCopy)(THIS_ IFolder FAR* pFolder, IFolder FAR* FAR* ppNewFolder) PURE;
    STDMETHOD(InsertShortcutCopy)(THIS_ IShortcut FAR* pShortcut, IShortcut FAR* FAR* ppNewShortcut) PURE;
    STDMETHOD(AddChild2)(THIS_ EnumFolderChild efcChild, BSTR strName, IComponent FAR* pComp, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lVal) PURE;
};

DEFINE_GUID(IID_IFolderNeptune,0x606BAD23L,0xE268,0x4AF0,0x9F,0x3B,0x27,0xC9,0xA1,0x44,0xD2,0x26);

/* Definition of interface: IFolderNeptune */
#undef INTERFACE
#define INTERFACE IFolderNeptune

DECLARE_INTERFACE_(IFolderNeptune, IFolder2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFolder methods */
    STDMETHOD(AddChild)(THIS_ EnumFolderChild efcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_SubFolders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* pShortcuts) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* strDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR strDescription) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* strDisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR strDisplayName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* strName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* lType) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;

    /* IFolder2 methods */
    STDMETHOD(InsertFolder)(THIS_ IFolder FAR* pFolder) PURE;
    STDMETHOD(InsertShortcut)(THIS_ IShortcut FAR* pShortcut) PURE;
    STDMETHOD(InsertFolderCopy)(THIS_ IFolder FAR* pFolder, IFolder FAR* FAR* ppNewFolder) PURE;
    STDMETHOD(InsertShortcutCopy)(THIS_ IShortcut FAR* pShortcut, IShortcut FAR* FAR* ppNewShortcut) PURE;
    STDMETHOD(AddChild2)(THIS_ EnumFolderChild efcChild, BSTR strName, IComponent FAR* pComp, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lVal) PURE;
#endif

    /* IFolderNeptune methods */
    STDMETHOD(put_FolderName)(THIS_ BSTR bstrFolderName) PURE;
    STDMETHOD(get_FolderName)(THIS_ BSTR FAR* pbstrFolderName) PURE;
    STDMETHOD(put_Shared)(THIS_ VARIANT_BOOL vbShared) PURE;
    STDMETHOD(get_Shared)(THIS_ VARIANT_BOOL FAR* pvbShared) PURE;
    STDMETHOD(CreateRemoveFileEntry)(THIS) PURE;
};

DEFINE_GUID(IID_IFolders,0xC3C94CD1L,0x0C3F,0x4C78,0xB0,0xF3,0x22,0x9F,0x28,0x21,0xAA,0x82);

/* Definition of interface: IFolders */
#undef INTERFACE
#define INTERFACE IFolders

DECLARE_INTERFACE_(IFolders, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFolders methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IFolder FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IShortcut,0x9DFCBE72L,0xF08F,0x480D,0xB8,0x71,0xF6,0xDF,0x03,0xB7,0xA8,0x8E);

/* Definition of interface: IShortcut */
#undef INTERFACE
#define INTERFACE IShortcut

DECLARE_INTERFACE_(IShortcut, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IShortcut methods */
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* Arguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_IconFile)(THIS_ BSTR FAR* IconFile) PURE;
    STDMETHOD(put_IconFile)(THIS_ BSTR IconFile) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* IconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long IconIndex) PURE;
    STDMETHOD(get_WorkingDirectory)(THIS_ BSTR FAR* WorkingDirectory) PURE;
    STDMETHOD(put_WorkingDirectory)(THIS_ BSTR WorkingDirectory) PURE;
    STDMETHOD(get_RunAs)(THIS_ long FAR* RunAs) PURE;
    STDMETHOD(put_RunAs)(THIS_ long RunAs) PURE;
    STDMETHOD(get_HotKey)(THIS_ long FAR* HotKey) PURE;
    STDMETHOD(put_HotKey)(THIS_ long HotKey) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* strName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;
};

interface IFeature;

DEFINE_GUID(IID_IShortcut2,0xBBAA1CEFL,0x89A6,0x4DCD,0x99,0x8A,0x42,0x45,0xCB,0x4C,0x22,0x58);

/* Definition of interface: IShortcut2 */
#undef INTERFACE
#define INTERFACE IShortcut2

DECLARE_INTERFACE_(IShortcut2, IShortcut)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IShortcut methods */
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* Arguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_IconFile)(THIS_ BSTR FAR* IconFile) PURE;
    STDMETHOD(put_IconFile)(THIS_ BSTR IconFile) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* IconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long IconIndex) PURE;
    STDMETHOD(get_WorkingDirectory)(THIS_ BSTR FAR* WorkingDirectory) PURE;
    STDMETHOD(put_WorkingDirectory)(THIS_ BSTR WorkingDirectory) PURE;
    STDMETHOD(get_RunAs)(THIS_ long FAR* RunAs) PURE;
    STDMETHOD(put_RunAs)(THIS_ long RunAs) PURE;
    STDMETHOD(get_HotKey)(THIS_ long FAR* HotKey) PURE;
    STDMETHOD(put_HotKey)(THIS_ long HotKey) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* strName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;
#endif

    /* IShortcut2 methods */
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponentName) PURE;
    STDMETHOD(get_FirstFeature)(THIS_ IFeature FAR* FAR* ppFeature) PURE;
    STDMETHOD(get_ComponentObj)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_ComponentObj)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(get_IsAdvertised)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsAdvertised)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_TargetDisplay)(THIS_ BSTR FAR* pDisplay) PURE;
    STDMETHOD(put_DefaultAdvertisedIcon)(THIS_ BSTR bstrIconFileName) PURE;
    STDMETHOD(get_Icon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(DirectModeBuildShortcutIcon)(THIS_ BSTR bstrFilePath, long lSrcFileIconIndex) PURE;
};

DEFINE_GUID(IID_IShortcutNeptune,0xDC35B0F9L,0x0D20,0x478A,0xB7,0x59,0xAA,0xCC,0xBB,0x6A,0x9F,0xBE);

/* Definition of interface: IShortcutNeptune */
#undef INTERFACE
#define INTERFACE IShortcutNeptune

DECLARE_INTERFACE_(IShortcutNeptune, IShortcut2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IShortcut methods */
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* Arguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_IconFile)(THIS_ BSTR FAR* IconFile) PURE;
    STDMETHOD(put_IconFile)(THIS_ BSTR IconFile) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* IconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long IconIndex) PURE;
    STDMETHOD(get_WorkingDirectory)(THIS_ BSTR FAR* WorkingDirectory) PURE;
    STDMETHOD(put_WorkingDirectory)(THIS_ BSTR WorkingDirectory) PURE;
    STDMETHOD(get_RunAs)(THIS_ long FAR* RunAs) PURE;
    STDMETHOD(put_RunAs)(THIS_ long RunAs) PURE;
    STDMETHOD(get_HotKey)(THIS_ long FAR* HotKey) PURE;
    STDMETHOD(put_HotKey)(THIS_ long HotKey) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* strName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;

    /* IShortcut2 methods */
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponentName) PURE;
    STDMETHOD(get_FirstFeature)(THIS_ IFeature FAR* FAR* ppFeature) PURE;
    STDMETHOD(get_ComponentObj)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_ComponentObj)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(get_IsAdvertised)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsAdvertised)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_TargetDisplay)(THIS_ BSTR FAR* pDisplay) PURE;
    STDMETHOD(put_DefaultAdvertisedIcon)(THIS_ BSTR bstrIconFileName) PURE;
    STDMETHOD(get_Icon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(DirectModeBuildShortcutIcon)(THIS_ BSTR bstrFilePath, long lSrcFileIconIndex) PURE;
#endif

    /* IShortcutNeptune methods */
    STDMETHOD(get_ComponentDisplayList)(THIS_ BSTR FAR* pbstrComponentDisplayList) PURE;
    STDMETHOD(get_InternetShortcut)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_InternetShortcut)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Uninstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_Uninstall)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Type)(THIS_ EnumShortcutType FAR* pVal) PURE;
    STDMETHOD(put_Type)(THIS_ EnumShortcutType pVal) PURE;
    STDMETHOD(get_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_DotNetProjectOutput)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DotNetProjectOutput)(THIS_ VARIANT_BOOL pVal) PURE;
};

DEFINE_GUID(IID_IShortcutIbiza,0xB54A9729L,0x90AD,0x475E,0x95,0x06,0x09,0x32,0x10,0x00,0x86,0xED);

/* Definition of interface: IShortcutIbiza */
#undef INTERFACE
#define INTERFACE IShortcutIbiza

DECLARE_INTERFACE_(IShortcutIbiza, IShortcutNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IShortcut methods */
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* Arguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_IconFile)(THIS_ BSTR FAR* IconFile) PURE;
    STDMETHOD(put_IconFile)(THIS_ BSTR IconFile) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* IconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long IconIndex) PURE;
    STDMETHOD(get_WorkingDirectory)(THIS_ BSTR FAR* WorkingDirectory) PURE;
    STDMETHOD(put_WorkingDirectory)(THIS_ BSTR WorkingDirectory) PURE;
    STDMETHOD(get_RunAs)(THIS_ long FAR* RunAs) PURE;
    STDMETHOD(put_RunAs)(THIS_ long RunAs) PURE;
    STDMETHOD(get_HotKey)(THIS_ long FAR* HotKey) PURE;
    STDMETHOD(put_HotKey)(THIS_ long HotKey) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* strName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;

    /* IShortcut2 methods */
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponentName) PURE;
    STDMETHOD(get_FirstFeature)(THIS_ IFeature FAR* FAR* ppFeature) PURE;
    STDMETHOD(get_ComponentObj)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_ComponentObj)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(get_IsAdvertised)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsAdvertised)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_TargetDisplay)(THIS_ BSTR FAR* pDisplay) PURE;
    STDMETHOD(put_DefaultAdvertisedIcon)(THIS_ BSTR bstrIconFileName) PURE;
    STDMETHOD(get_Icon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(DirectModeBuildShortcutIcon)(THIS_ BSTR bstrFilePath, long lSrcFileIconIndex) PURE;

    /* IShortcutNeptune methods */
    STDMETHOD(get_ComponentDisplayList)(THIS_ BSTR FAR* pbstrComponentDisplayList) PURE;
    STDMETHOD(get_InternetShortcut)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_InternetShortcut)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Uninstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_Uninstall)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Type)(THIS_ EnumShortcutType FAR* pVal) PURE;
    STDMETHOD(put_Type)(THIS_ EnumShortcutType pVal) PURE;
    STDMETHOD(get_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_DotNetProjectOutput)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DotNetProjectOutput)(THIS_ VARIANT_BOOL pVal) PURE;
#endif

    /* IShortcutIbiza methods */
    STDMETHOD(get_IsAssociated)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
};

DEFINE_GUID(IID_IShortcutIxtapa,0x71B47F5CL,0xC8C9,0x4F23,0x8B,0x1B,0xBC,0xFC,0x80,0xC7,0xE0,0xCB);

/* Definition of interface: IShortcutIxtapa */
#undef INTERFACE
#define INTERFACE IShortcutIxtapa

DECLARE_INTERFACE_(IShortcutIxtapa, IShortcutIbiza)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IShortcut methods */
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* Arguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_IconFile)(THIS_ BSTR FAR* IconFile) PURE;
    STDMETHOD(put_IconFile)(THIS_ BSTR IconFile) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* IconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long IconIndex) PURE;
    STDMETHOD(get_WorkingDirectory)(THIS_ BSTR FAR* WorkingDirectory) PURE;
    STDMETHOD(put_WorkingDirectory)(THIS_ BSTR WorkingDirectory) PURE;
    STDMETHOD(get_RunAs)(THIS_ long FAR* RunAs) PURE;
    STDMETHOD(put_RunAs)(THIS_ long RunAs) PURE;
    STDMETHOD(get_HotKey)(THIS_ long FAR* HotKey) PURE;
    STDMETHOD(put_HotKey)(THIS_ long HotKey) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* strName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;

    /* IShortcut2 methods */
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponentName) PURE;
    STDMETHOD(get_FirstFeature)(THIS_ IFeature FAR* FAR* ppFeature) PURE;
    STDMETHOD(get_ComponentObj)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_ComponentObj)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(get_IsAdvertised)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsAdvertised)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_TargetDisplay)(THIS_ BSTR FAR* pDisplay) PURE;
    STDMETHOD(put_DefaultAdvertisedIcon)(THIS_ BSTR bstrIconFileName) PURE;
    STDMETHOD(get_Icon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(DirectModeBuildShortcutIcon)(THIS_ BSTR bstrFilePath, long lSrcFileIconIndex) PURE;

    /* IShortcutNeptune methods */
    STDMETHOD(get_ComponentDisplayList)(THIS_ BSTR FAR* pbstrComponentDisplayList) PURE;
    STDMETHOD(get_InternetShortcut)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_InternetShortcut)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Uninstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_Uninstall)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Type)(THIS_ EnumShortcutType FAR* pVal) PURE;
    STDMETHOD(put_Type)(THIS_ EnumShortcutType pVal) PURE;
    STDMETHOD(get_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_DotNetProjectOutput)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DotNetProjectOutput)(THIS_ VARIANT_BOOL pVal) PURE;

    /* IShortcutIbiza methods */
    STDMETHOD(get_IsAssociated)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
#endif

    /* IShortcutIxtapa methods */
    STDMETHOD(put_IsShortcutToFileInDim)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_IsShortcutToFileInDim)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_WorkingDirectoryId)(THIS_ BSTR FAR* WorkingDirectoryId) PURE;
    STDMETHOD(put_WorkingDirectoryId)(THIS_ BSTR WorkingDirectoryId) PURE;
};

DEFINE_GUID(IID_IShortcutIndore,0x868E2171L,0xA679,0x4ED5,0x83,0x39,0xC0,0xFF,0x9B,0xA4,0xC0,0x59);

/* Definition of interface: IShortcutIndore */
#undef INTERFACE
#define INTERFACE IShortcutIndore

DECLARE_INTERFACE_(IShortcutIndore, IShortcutIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IShortcut methods */
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* Arguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_IconFile)(THIS_ BSTR FAR* IconFile) PURE;
    STDMETHOD(put_IconFile)(THIS_ BSTR IconFile) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* IconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long IconIndex) PURE;
    STDMETHOD(get_WorkingDirectory)(THIS_ BSTR FAR* WorkingDirectory) PURE;
    STDMETHOD(put_WorkingDirectory)(THIS_ BSTR WorkingDirectory) PURE;
    STDMETHOD(get_RunAs)(THIS_ long FAR* RunAs) PURE;
    STDMETHOD(put_RunAs)(THIS_ long RunAs) PURE;
    STDMETHOD(get_HotKey)(THIS_ long FAR* HotKey) PURE;
    STDMETHOD(put_HotKey)(THIS_ long HotKey) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* strName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;

    /* IShortcut2 methods */
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponentName) PURE;
    STDMETHOD(get_FirstFeature)(THIS_ IFeature FAR* FAR* ppFeature) PURE;
    STDMETHOD(get_ComponentObj)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_ComponentObj)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(get_IsAdvertised)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsAdvertised)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_TargetDisplay)(THIS_ BSTR FAR* pDisplay) PURE;
    STDMETHOD(put_DefaultAdvertisedIcon)(THIS_ BSTR bstrIconFileName) PURE;
    STDMETHOD(get_Icon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(DirectModeBuildShortcutIcon)(THIS_ BSTR bstrFilePath, long lSrcFileIconIndex) PURE;

    /* IShortcutNeptune methods */
    STDMETHOD(get_ComponentDisplayList)(THIS_ BSTR FAR* pbstrComponentDisplayList) PURE;
    STDMETHOD(get_InternetShortcut)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_InternetShortcut)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Uninstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_Uninstall)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Type)(THIS_ EnumShortcutType FAR* pVal) PURE;
    STDMETHOD(put_Type)(THIS_ EnumShortcutType pVal) PURE;
    STDMETHOD(get_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_DotNetProjectOutput)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DotNetProjectOutput)(THIS_ VARIANT_BOOL pVal) PURE;

    /* IShortcutIbiza methods */
    STDMETHOD(get_IsAssociated)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IShortcutIxtapa methods */
    STDMETHOD(put_IsShortcutToFileInDim)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_IsShortcutToFileInDim)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_WorkingDirectoryId)(THIS_ BSTR FAR* WorkingDirectoryId) PURE;
    STDMETHOD(put_WorkingDirectoryId)(THIS_ BSTR WorkingDirectoryId) PURE;
#endif

    /* IShortcutIndore methods */
    STDMETHOD(get_DisplayResourceDLL)(THIS_ BSTR FAR* DisplayResourceDLL) PURE;
    STDMETHOD(put_DisplayResourceDLL)(THIS_ BSTR DisplayResourceDLL) PURE;
    STDMETHOD(get_DisplayResourceId)(THIS_ long FAR* DisplayResourceId) PURE;
    STDMETHOD(put_DisplayResourceId)(THIS_ long DisplayResourceId) PURE;
    STDMETHOD(get_DescriptionResourceDLL)(THIS_ BSTR FAR* DescriptionResourceDLL) PURE;
    STDMETHOD(put_DescriptionResourceDLL)(THIS_ BSTR DescriptionResourceDLL) PURE;
    STDMETHOD(get_DescriptionResourceId)(THIS_ long FAR* DescriptionResourceId) PURE;
    STDMETHOD(put_DescriptionResourceId)(THIS_ long DescriptionResourceId) PURE;
};

DEFINE_GUID(IID_IShortcutIronwood,0xBC949CE6L,0xCC70,0x409D,0x9D,0xC1,0xF8,0x99,0x09,0xCE,0x79,0x8F);

/* Definition of interface: IShortcutIronwood */
#undef INTERFACE
#define INTERFACE IShortcutIronwood

DECLARE_INTERFACE_(IShortcutIronwood, IShortcutIndore)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IShortcut methods */
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* Arguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_IconFile)(THIS_ BSTR FAR* IconFile) PURE;
    STDMETHOD(put_IconFile)(THIS_ BSTR IconFile) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* IconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long IconIndex) PURE;
    STDMETHOD(get_WorkingDirectory)(THIS_ BSTR FAR* WorkingDirectory) PURE;
    STDMETHOD(put_WorkingDirectory)(THIS_ BSTR WorkingDirectory) PURE;
    STDMETHOD(get_RunAs)(THIS_ long FAR* RunAs) PURE;
    STDMETHOD(put_RunAs)(THIS_ long RunAs) PURE;
    STDMETHOD(get_HotKey)(THIS_ long FAR* HotKey) PURE;
    STDMETHOD(put_HotKey)(THIS_ long HotKey) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* strName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;

    /* IShortcut2 methods */
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponentName) PURE;
    STDMETHOD(get_FirstFeature)(THIS_ IFeature FAR* FAR* ppFeature) PURE;
    STDMETHOD(get_ComponentObj)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_ComponentObj)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(get_IsAdvertised)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsAdvertised)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_TargetDisplay)(THIS_ BSTR FAR* pDisplay) PURE;
    STDMETHOD(put_DefaultAdvertisedIcon)(THIS_ BSTR bstrIconFileName) PURE;
    STDMETHOD(get_Icon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(DirectModeBuildShortcutIcon)(THIS_ BSTR bstrFilePath, long lSrcFileIconIndex) PURE;

    /* IShortcutNeptune methods */
    STDMETHOD(get_ComponentDisplayList)(THIS_ BSTR FAR* pbstrComponentDisplayList) PURE;
    STDMETHOD(get_InternetShortcut)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_InternetShortcut)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Uninstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_Uninstall)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Type)(THIS_ EnumShortcutType FAR* pVal) PURE;
    STDMETHOD(put_Type)(THIS_ EnumShortcutType pVal) PURE;
    STDMETHOD(get_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_DotNetProjectOutput)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DotNetProjectOutput)(THIS_ VARIANT_BOOL pVal) PURE;

    /* IShortcutIbiza methods */
    STDMETHOD(get_IsAssociated)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IShortcutIxtapa methods */
    STDMETHOD(put_IsShortcutToFileInDim)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_IsShortcutToFileInDim)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_WorkingDirectoryId)(THIS_ BSTR FAR* WorkingDirectoryId) PURE;
    STDMETHOD(put_WorkingDirectoryId)(THIS_ BSTR WorkingDirectoryId) PURE;

    /* IShortcutIndore methods */
    STDMETHOD(get_DisplayResourceDLL)(THIS_ BSTR FAR* DisplayResourceDLL) PURE;
    STDMETHOD(put_DisplayResourceDLL)(THIS_ BSTR DisplayResourceDLL) PURE;
    STDMETHOD(get_DisplayResourceId)(THIS_ long FAR* DisplayResourceId) PURE;
    STDMETHOD(put_DisplayResourceId)(THIS_ long DisplayResourceId) PURE;
    STDMETHOD(get_DescriptionResourceDLL)(THIS_ BSTR FAR* DescriptionResourceDLL) PURE;
    STDMETHOD(put_DescriptionResourceDLL)(THIS_ BSTR DescriptionResourceDLL) PURE;
    STDMETHOD(get_DescriptionResourceId)(THIS_ long FAR* DescriptionResourceId) PURE;
    STDMETHOD(put_DescriptionResourceId)(THIS_ long DescriptionResourceId) PURE;
#endif

    /* IShortcutIronwood methods */
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* bstrDirectory) PURE;
};

typedef enum EnumShortcutChild {
    escMsiShortcutProperty
} EnumShortcutChild;

DEFINE_GUID(IID_IShortcutLoyaltySP1,0xD32E55EEL,0x104F,0x4E3E,0x80,0x7F,0x8C,0xE6,0xE0,0x40,0xDE,0x14);

/* Definition of interface: IShortcutLoyaltySP1 */
#undef INTERFACE
#define INTERFACE IShortcutLoyaltySP1

DECLARE_INTERFACE_(IShortcutLoyaltySP1, IShortcutIronwood)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IShortcut methods */
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* Arguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_IconFile)(THIS_ BSTR FAR* IconFile) PURE;
    STDMETHOD(put_IconFile)(THIS_ BSTR IconFile) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* IconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long IconIndex) PURE;
    STDMETHOD(get_WorkingDirectory)(THIS_ BSTR FAR* WorkingDirectory) PURE;
    STDMETHOD(put_WorkingDirectory)(THIS_ BSTR WorkingDirectory) PURE;
    STDMETHOD(get_RunAs)(THIS_ long FAR* RunAs) PURE;
    STDMETHOD(put_RunAs)(THIS_ long RunAs) PURE;
    STDMETHOD(get_HotKey)(THIS_ long FAR* HotKey) PURE;
    STDMETHOD(put_HotKey)(THIS_ long HotKey) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* strName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;

    /* IShortcut2 methods */
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponentName) PURE;
    STDMETHOD(get_FirstFeature)(THIS_ IFeature FAR* FAR* ppFeature) PURE;
    STDMETHOD(get_ComponentObj)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_ComponentObj)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(get_IsAdvertised)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsAdvertised)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_TargetDisplay)(THIS_ BSTR FAR* pDisplay) PURE;
    STDMETHOD(put_DefaultAdvertisedIcon)(THIS_ BSTR bstrIconFileName) PURE;
    STDMETHOD(get_Icon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(DirectModeBuildShortcutIcon)(THIS_ BSTR bstrFilePath, long lSrcFileIconIndex) PURE;

    /* IShortcutNeptune methods */
    STDMETHOD(get_ComponentDisplayList)(THIS_ BSTR FAR* pbstrComponentDisplayList) PURE;
    STDMETHOD(get_InternetShortcut)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_InternetShortcut)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Uninstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_Uninstall)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Type)(THIS_ EnumShortcutType FAR* pVal) PURE;
    STDMETHOD(put_Type)(THIS_ EnumShortcutType pVal) PURE;
    STDMETHOD(get_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_DotNetProjectOutput)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DotNetProjectOutput)(THIS_ VARIANT_BOOL pVal) PURE;

    /* IShortcutIbiza methods */
    STDMETHOD(get_IsAssociated)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IShortcutIxtapa methods */
    STDMETHOD(put_IsShortcutToFileInDim)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_IsShortcutToFileInDim)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_WorkingDirectoryId)(THIS_ BSTR FAR* WorkingDirectoryId) PURE;
    STDMETHOD(put_WorkingDirectoryId)(THIS_ BSTR WorkingDirectoryId) PURE;

    /* IShortcutIndore methods */
    STDMETHOD(get_DisplayResourceDLL)(THIS_ BSTR FAR* DisplayResourceDLL) PURE;
    STDMETHOD(put_DisplayResourceDLL)(THIS_ BSTR DisplayResourceDLL) PURE;
    STDMETHOD(get_DisplayResourceId)(THIS_ long FAR* DisplayResourceId) PURE;
    STDMETHOD(put_DisplayResourceId)(THIS_ long DisplayResourceId) PURE;
    STDMETHOD(get_DescriptionResourceDLL)(THIS_ BSTR FAR* DescriptionResourceDLL) PURE;
    STDMETHOD(put_DescriptionResourceDLL)(THIS_ BSTR DescriptionResourceDLL) PURE;
    STDMETHOD(get_DescriptionResourceId)(THIS_ long FAR* DescriptionResourceId) PURE;
    STDMETHOD(put_DescriptionResourceId)(THIS_ long DescriptionResourceId) PURE;

    /* IShortcutIronwood methods */
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* bstrDirectory) PURE;
#endif

    /* IShortcutLoyaltySP1 methods */
    STDMETHOD(get_MsiShortcutProperties)(THIS_ IMsiShortcutProperties FAR* FAR* ppVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumShortcutChild eShortChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* ppBusObj) PURE;
};

DEFINE_GUID(IID_IShortcutPunk,0x956CE28CL,0x89CE,0x4C1A,0xA9,0x06,0xC1,0x29,0x8D,0xD0,0x56,0xE6);

/* Definition of interface: IShortcutPunk */
#undef INTERFACE
#define INTERFACE IShortcutPunk

DECLARE_INTERFACE_(IShortcutPunk, IShortcutLoyaltySP1)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IShortcut methods */
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* Arguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_IconFile)(THIS_ BSTR FAR* IconFile) PURE;
    STDMETHOD(put_IconFile)(THIS_ BSTR IconFile) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* IconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long IconIndex) PURE;
    STDMETHOD(get_WorkingDirectory)(THIS_ BSTR FAR* WorkingDirectory) PURE;
    STDMETHOD(put_WorkingDirectory)(THIS_ BSTR WorkingDirectory) PURE;
    STDMETHOD(get_RunAs)(THIS_ long FAR* RunAs) PURE;
    STDMETHOD(put_RunAs)(THIS_ long RunAs) PURE;
    STDMETHOD(get_HotKey)(THIS_ long FAR* HotKey) PURE;
    STDMETHOD(put_HotKey)(THIS_ long HotKey) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* strName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;

    /* IShortcut2 methods */
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponentName) PURE;
    STDMETHOD(get_FirstFeature)(THIS_ IFeature FAR* FAR* ppFeature) PURE;
    STDMETHOD(get_ComponentObj)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_ComponentObj)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(get_IsAdvertised)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsAdvertised)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_TargetDisplay)(THIS_ BSTR FAR* pDisplay) PURE;
    STDMETHOD(put_DefaultAdvertisedIcon)(THIS_ BSTR bstrIconFileName) PURE;
    STDMETHOD(get_Icon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(DirectModeBuildShortcutIcon)(THIS_ BSTR bstrFilePath, long lSrcFileIconIndex) PURE;

    /* IShortcutNeptune methods */
    STDMETHOD(get_ComponentDisplayList)(THIS_ BSTR FAR* pbstrComponentDisplayList) PURE;
    STDMETHOD(get_InternetShortcut)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_InternetShortcut)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Uninstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_Uninstall)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Type)(THIS_ EnumShortcutType FAR* pVal) PURE;
    STDMETHOD(put_Type)(THIS_ EnumShortcutType pVal) PURE;
    STDMETHOD(get_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ReplaceExistingIfFound)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_DotNetProjectOutput)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DotNetProjectOutput)(THIS_ VARIANT_BOOL pVal) PURE;

    /* IShortcutIbiza methods */
    STDMETHOD(get_IsAssociated)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IShortcutIxtapa methods */
    STDMETHOD(put_IsShortcutToFileInDim)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_IsShortcutToFileInDim)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_WorkingDirectoryId)(THIS_ BSTR FAR* WorkingDirectoryId) PURE;
    STDMETHOD(put_WorkingDirectoryId)(THIS_ BSTR WorkingDirectoryId) PURE;

    /* IShortcutIndore methods */
    STDMETHOD(get_DisplayResourceDLL)(THIS_ BSTR FAR* DisplayResourceDLL) PURE;
    STDMETHOD(put_DisplayResourceDLL)(THIS_ BSTR DisplayResourceDLL) PURE;
    STDMETHOD(get_DisplayResourceId)(THIS_ long FAR* DisplayResourceId) PURE;
    STDMETHOD(put_DisplayResourceId)(THIS_ long DisplayResourceId) PURE;
    STDMETHOD(get_DescriptionResourceDLL)(THIS_ BSTR FAR* DescriptionResourceDLL) PURE;
    STDMETHOD(put_DescriptionResourceDLL)(THIS_ BSTR DescriptionResourceDLL) PURE;
    STDMETHOD(get_DescriptionResourceId)(THIS_ long FAR* DescriptionResourceId) PURE;
    STDMETHOD(put_DescriptionResourceId)(THIS_ long DescriptionResourceId) PURE;

    /* IShortcutIronwood methods */
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* bstrDirectory) PURE;

    /* IShortcutLoyaltySP1 methods */
    STDMETHOD(get_MsiShortcutProperties)(THIS_ IMsiShortcutProperties FAR* FAR* ppVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumShortcutChild eShortChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* ppBusObj) PURE;
#endif

    /* IShortcutPunk methods */
    STDMETHOD(put_Win8StartPinOption)(THIS_ VARIANT_BOOL pVal) PURE;
    STDMETHOD(get_Win8StartPinOption)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProPreventPinning)(THIS_ VARIANT_BOOL val) PURE;
    STDMETHOD(get_ProPreventPinning)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProExcludeFromNewInstall)(THIS_ VARIANT_BOOL val) PURE;
    STDMETHOD(get_ProExcludeFromNewInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
};

DEFINE_GUID(IID_IShortcuts,0xAF19FAC7L,0x409C,0x461F,0xAB,0x21,0xF3,0xF9,0x41,0x48,0x24,0xC4);

/* Definition of interface: IShortcuts */
#undef INTERFACE
#define INTERFACE IShortcuts

DECLARE_INTERFACE_(IShortcuts, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IShortcuts methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IShortcut FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumRootFolder {
    erfTaskBar = 1,
    erfSendTo = 2,
    erfDesktop = 3,
    erfProgramsMenu = 4,
    erfStartup = 5
} EnumRootFolder;

DEFINE_GUID(IID_IMsiShortcutProperty,0x23B9FDDFL,0xF3C1,0x409B,0xA9,0xA3,0x0D,0x22,0xF6,0xDA,0x16,0x38);

/* Definition of interface: IMsiShortcutProperty */
#undef INTERFACE
#define INTERFACE IMsiShortcutProperty

DECLARE_INTERFACE_(IMsiShortcutProperty, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMsiShortcutProperty methods */
    STDMETHOD(get_MsiShortcutProperty)(THIS_ BSTR FAR* MsiShortcutProperty) PURE;
    STDMETHOD(put_MsiShortcutProperty)(THIS_ BSTR MsiShortcutProperty) PURE;
    STDMETHOD(get_Shortcut)(THIS_ BSTR FAR* Shortcut) PURE;
    STDMETHOD(put_Shortcut)(THIS_ BSTR Shortcut) PURE;
    STDMETHOD(get_PropertyKey)(THIS_ BSTR FAR* PropertyKey) PURE;
    STDMETHOD(put_PropertyKey)(THIS_ BSTR PropertyKey) PURE;
    STDMETHOD(get_PropVariantValue)(THIS_ BSTR FAR* PropVariantValue) PURE;
    STDMETHOD(put_PropVariantValue)(THIS_ BSTR PropVariantValue) PURE;
};

DEFINE_GUID(IID_IMsiShortcutProperties,0x865FABADL,0x61E0,0x46BC,0xB1,0x85,0x9E,0xBD,0x3E,0xD7,0xE9,0x17);

/* Definition of interface: IMsiShortcutProperties */
#undef INTERFACE
#define INTERFACE IMsiShortcutProperties

DECLARE_INTERFACE_(IMsiShortcutProperties, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMsiShortcutProperties methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IMsiShortcutProperty FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropServiceInstall {
    epsiDisplayName = 10,
    epsiType = 11,
    epsiStartType = 12,
    epsiErrorControl = 13,
    epsiLoadOrderGroup = 14,
    epsiDependencies = 15,
    epsiStartName = 16,
    epsiPassword = 17,
    epsiArguments = 18
} EnumPropServiceInstall;

typedef enum EnumPropServiceInstallType {
    epsitServiceTypeWin32OwnProcess = 16,
    epsitServiceTypeWin32ShareProcess = 32,
    epsitServiceTypeKernelDriver = 1,
    epsitServiceTypeFileSystemDriver = 2
} EnumPropServiceInstallType;

typedef enum EnumPropServiceInstallStartType {
    epsisStartTypeAutoStart = 2,
    epsisStartTypeDemandStart = 3,
    epsisStartTypeDisabled = 4,
    epsisStartTypeBootStart = 0,
    epsisStartTypeSystemStart = 1
} EnumPropServiceInstallStartType;

typedef enum EnumPropServiceInstallErrorControl {
    epsieErrorControlIgnore = 0,
    epsieErrorControlNormal = 1,
    epsieErrorControlCritical = 3,
    epsieErrorControlInstallVital = 32768,
    epsieErrorControlNormalVital = 32769,
    epsieErrorControlCriticalVital = 32771
} EnumPropServiceInstallErrorControl;

DEFINE_GUID(IID_IServiceInstall,0x7A1F46B1L,0x5475,0x46FB,0xB7,0x63,0x88,0xE8,0xA0,0xF9,0xD9,0x4F);

/* Definition of interface: IServiceInstall */
#undef INTERFACE
#define INTERFACE IServiceInstall

DECLARE_INTERFACE_(IServiceInstall, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IServiceInstall methods */
    STDMETHOD(GetProperty)(THIS_ EnumPropServiceInstall epsiServiceInstall, IIsProperty FAR* FAR* pProperty) PURE;
};

DEFINE_GUID(IID_IServiceInstall2,0x5028A8ACL,0xD541,0x4CAE,0xAE,0xC0,0xE9,0x0B,0xE8,0x6E,0x96,0xAE);

/* Definition of interface: IServiceInstall2 */
#undef INTERFACE
#define INTERFACE IServiceInstall2

DECLARE_INTERFACE_(IServiceInstall2, IServiceInstall)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IServiceInstall methods */
    STDMETHOD(GetProperty)(THIS_ EnumPropServiceInstall epsiServiceInstall, IIsProperty FAR* FAR* pProperty) PURE;
#endif

    /* IServiceInstall2 methods */
    STDMETHOD(get_ServiceInstall)(THIS_ BSTR FAR* ServiceInstall) PURE;
    STDMETHOD(put_ServiceInstall)(THIS_ BSTR ServiceInstall) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_ServiceType)(THIS_ EnumPropServiceInstallType FAR* ePropServiceInstallType) PURE;
    STDMETHOD(put_ServiceType)(THIS_ EnumPropServiceInstallType ePropServiceInstallType) PURE;
    STDMETHOD(get_ServiceTypeInteractiveProcess)(THIS_ VARIANT_BOOL FAR* ServiceTypeInteractiveProcess) PURE;
    STDMETHOD(put_ServiceTypeInteractiveProcess)(THIS_ VARIANT_BOOL ServiceTypeInteractiveProcess) PURE;
    STDMETHOD(get_StartType)(THIS_ EnumPropServiceInstallStartType FAR* ePropServiceInstallStartType) PURE;
    STDMETHOD(put_StartType)(THIS_ EnumPropServiceInstallStartType ePropServiceInstallStartType) PURE;
    STDMETHOD(get_ErrorControlType)(THIS_ EnumPropServiceInstallErrorControl FAR* ePropServiceInstallErrorControl) PURE;
    STDMETHOD(put_ErrorControlType)(THIS_ EnumPropServiceInstallErrorControl ePropServiceInstallErrorControl) PURE;
    STDMETHOD(get_LoadOrderGroup)(THIS_ BSTR FAR* pLoadOrderGroup) PURE;
    STDMETHOD(put_LoadOrderGroup)(THIS_ BSTR LoadOrderGroup) PURE;
    STDMETHOD(get_Dependencies)(THIS_ BSTR FAR* pDependencies) PURE;
    STDMETHOD(put_Dependencies)(THIS_ BSTR Dependencies) PURE;
    STDMETHOD(get_StartName)(THIS_ BSTR FAR* pStartName) PURE;
    STDMETHOD(put_StartName)(THIS_ BSTR Dependencies) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* pPassword) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* pArguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR pComponent) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
};

DEFINE_GUID(IID_IServiceInstalls,0x5DA5E1BAL,0x802D,0x4D06,0xB7,0x35,0xB7,0x4D,0xD0,0x42,0x76,0xBC);

/* Definition of interface: IServiceInstalls */
#undef INTERFACE
#define INTERFACE IServiceInstalls

DECLARE_INTERFACE_(IServiceInstalls, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IServiceInstalls methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IServiceInstall FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IServiceInstallLoyaltySP1,0x0B9763BDL,0xF349,0x45BF,0x92,0x45,0xD4,0xD7,0x8F,0x64,0xC6,0x45);

/* Definition of interface: IServiceInstallLoyaltySP1 */
#undef INTERFACE
#define INTERFACE IServiceInstallLoyaltySP1

DECLARE_INTERFACE_(IServiceInstallLoyaltySP1, IServiceInstall2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IServiceInstall methods */
    STDMETHOD(GetProperty)(THIS_ EnumPropServiceInstall epsiServiceInstall, IIsProperty FAR* FAR* pProperty) PURE;

    /* IServiceInstall2 methods */
    STDMETHOD(get_ServiceInstall)(THIS_ BSTR FAR* ServiceInstall) PURE;
    STDMETHOD(put_ServiceInstall)(THIS_ BSTR ServiceInstall) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_ServiceType)(THIS_ EnumPropServiceInstallType FAR* ePropServiceInstallType) PURE;
    STDMETHOD(put_ServiceType)(THIS_ EnumPropServiceInstallType ePropServiceInstallType) PURE;
    STDMETHOD(get_ServiceTypeInteractiveProcess)(THIS_ VARIANT_BOOL FAR* ServiceTypeInteractiveProcess) PURE;
    STDMETHOD(put_ServiceTypeInteractiveProcess)(THIS_ VARIANT_BOOL ServiceTypeInteractiveProcess) PURE;
    STDMETHOD(get_StartType)(THIS_ EnumPropServiceInstallStartType FAR* ePropServiceInstallStartType) PURE;
    STDMETHOD(put_StartType)(THIS_ EnumPropServiceInstallStartType ePropServiceInstallStartType) PURE;
    STDMETHOD(get_ErrorControlType)(THIS_ EnumPropServiceInstallErrorControl FAR* ePropServiceInstallErrorControl) PURE;
    STDMETHOD(put_ErrorControlType)(THIS_ EnumPropServiceInstallErrorControl ePropServiceInstallErrorControl) PURE;
    STDMETHOD(get_LoadOrderGroup)(THIS_ BSTR FAR* pLoadOrderGroup) PURE;
    STDMETHOD(put_LoadOrderGroup)(THIS_ BSTR LoadOrderGroup) PURE;
    STDMETHOD(get_Dependencies)(THIS_ BSTR FAR* pDependencies) PURE;
    STDMETHOD(put_Dependencies)(THIS_ BSTR Dependencies) PURE;
    STDMETHOD(get_StartName)(THIS_ BSTR FAR* pStartName) PURE;
    STDMETHOD(put_StartName)(THIS_ BSTR Dependencies) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* pPassword) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* pArguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR pComponent) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
#endif

    /* IServiceInstallLoyaltySP1 methods */
    STDMETHOD(get_ServiceInstallKey)(THIS_ BSTR FAR* Key) PURE;
    STDMETHOD(put_ServiceInstallKey)(THIS_ BSTR Key) PURE;
};

typedef enum EnumServiceControlChild {
    esccServiceControlEvent = 1
} EnumServiceControlChild;

typedef enum EnumPropServiceControl {
    epscDisplayName = 1
} EnumPropServiceControl;

typedef enum EnumPropServiceControlEvent {
    epsctInstallStart = 10,
    epsctInstallStop = 11,
    epsctInstallDelete = 12,
    epsctUninstallStart = 13,
    epsctUninstallStop = 14,
    epsctUninstallDelete = 15,
    epsctArgument = 16,
    epsctWait = 17
} EnumPropServiceControlEvent;

typedef enum EnumPropServiceControlEventWait {
    epscwWaitForSCM = 0,
    epscwWaitForEvent = 1
} EnumPropServiceControlEventWait;

interface IServiceControlEvents;

DEFINE_GUID(IID_IServiceControl,0x94356A78L,0xE1C0,0x4C1C,0x9D,0x90,0x9A,0xBE,0xFF,0xB8,0xEB,0x2F);

/* Definition of interface: IServiceControl */
#undef INTERFACE
#define INTERFACE IServiceControl

DECLARE_INTERFACE_(IServiceControl, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IServiceControl methods */
    STDMETHOD(AddChild)(THIS_ EnumServiceControlChild esccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetProperty)(THIS_ EnumPropServiceControl epscServiceControl, IIsProperty FAR* FAR* pProperty) PURE;
    STDMETHOD(get_ServiceControlEvents)(THIS_ IServiceControlEvents FAR* FAR* pEvents) PURE;
};

DEFINE_GUID(IID_IServiceControl2,0x3E91679EL,0x8414,0x487A,0xB8,0x9D,0x2C,0xF9,0x87,0x7B,0x10,0xD2);

/* Definition of interface: IServiceControl2 */
#undef INTERFACE
#define INTERFACE IServiceControl2

DECLARE_INTERFACE_(IServiceControl2, IServiceControl)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IServiceControl methods */
    STDMETHOD(AddChild)(THIS_ EnumServiceControlChild esccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetProperty)(THIS_ EnumPropServiceControl epscServiceControl, IIsProperty FAR* FAR* pProperty) PURE;
    STDMETHOD(get_ServiceControlEvents)(THIS_ IServiceControlEvents FAR* FAR* pEvents) PURE;
#endif

    /* IServiceControl2 methods */
    STDMETHOD(get_ServiceControlName)(THIS_ BSTR FAR* sServiceControlName) PURE;
    STDMETHOD(put_ServiceControlName)(THIS_ BSTR sServiceControlName) PURE;
};

DEFINE_GUID(IID_IServiceControlLoyaltySP1,0x874C9BAEL,0x7857,0x46AE,0x91,0xA4,0xF6,0x6D,0xDB,0xB6,0xB1,0xC6);

/* Definition of interface: IServiceControlLoyaltySP1 */
#undef INTERFACE
#define INTERFACE IServiceControlLoyaltySP1

DECLARE_INTERFACE_(IServiceControlLoyaltySP1, IServiceControl2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IServiceControl methods */
    STDMETHOD(AddChild)(THIS_ EnumServiceControlChild esccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetProperty)(THIS_ EnumPropServiceControl epscServiceControl, IIsProperty FAR* FAR* pProperty) PURE;
    STDMETHOD(get_ServiceControlEvents)(THIS_ IServiceControlEvents FAR* FAR* pEvents) PURE;

    /* IServiceControl2 methods */
    STDMETHOD(get_ServiceControlName)(THIS_ BSTR FAR* sServiceControlName) PURE;
    STDMETHOD(put_ServiceControlName)(THIS_ BSTR sServiceControlName) PURE;
#endif

    /* IServiceControlLoyaltySP1 methods */
    STDMETHOD(get_ServiceControl)(THIS_ BSTR FAR* sServiceControl) PURE;
    STDMETHOD(put_ServiceControl)(THIS_ BSTR sServiceControl) PURE;
    STDMETHOD(get_ServiceName)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_ServiceName)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_ServiceEvent)(THIS_ long FAR* lEvent) PURE;
    STDMETHOD(put_ServiceEvent)(THIS_ long lEvent) PURE;
    STDMETHOD(get_ServiceArguments)(THIS_ BSTR FAR* Arguments) PURE;
    STDMETHOD(put_ServiceArguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_ServiceWait)(THIS_ EnumPropServiceControlEventWait FAR* ePropServiceControlEventWait) PURE;
    STDMETHOD(put_ServiceWait)(THIS_ EnumPropServiceControlEventWait ePropServiceControlEventWait) PURE;
};

DEFINE_GUID(IID_IServiceControlPunk,0x7F75C1CDL,0x63A0,0x4888,0xB3,0x3D,0x8F,0x7B,0xE4,0x62,0x36,0xCD);

/* Definition of interface: IServiceControlPunk */
#undef INTERFACE
#define INTERFACE IServiceControlPunk

DECLARE_INTERFACE_(IServiceControlPunk, IServiceControlLoyaltySP1)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IServiceControl methods */
    STDMETHOD(AddChild)(THIS_ EnumServiceControlChild esccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetProperty)(THIS_ EnumPropServiceControl epscServiceControl, IIsProperty FAR* FAR* pProperty) PURE;
    STDMETHOD(get_ServiceControlEvents)(THIS_ IServiceControlEvents FAR* FAR* pEvents) PURE;

    /* IServiceControl2 methods */
    STDMETHOD(get_ServiceControlName)(THIS_ BSTR FAR* sServiceControlName) PURE;
    STDMETHOD(put_ServiceControlName)(THIS_ BSTR sServiceControlName) PURE;

    /* IServiceControlLoyaltySP1 methods */
    STDMETHOD(get_ServiceControl)(THIS_ BSTR FAR* sServiceControl) PURE;
    STDMETHOD(put_ServiceControl)(THIS_ BSTR sServiceControl) PURE;
    STDMETHOD(get_ServiceName)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_ServiceName)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_ServiceEvent)(THIS_ long FAR* lEvent) PURE;
    STDMETHOD(put_ServiceEvent)(THIS_ long lEvent) PURE;
    STDMETHOD(get_ServiceArguments)(THIS_ BSTR FAR* Arguments) PURE;
    STDMETHOD(put_ServiceArguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_ServiceWait)(THIS_ EnumPropServiceControlEventWait FAR* ePropServiceControlEventWait) PURE;
    STDMETHOD(put_ServiceWait)(THIS_ EnumPropServiceControlEventWait ePropServiceControlEventWait) PURE;
#endif

    /* IServiceControlPunk methods */
    STDMETHOD(get_Component)(THIS_ BSTR FAR* sComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR sComponent) PURE;
    STDMETHOD(get_ServiceEventStart)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_ServiceEventStart)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ServiceEventStop)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_ServiceEventStop)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ServiceEventDelete)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_ServiceEventDelete)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ServiceEventUninstallStart)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_ServiceEventUninstallStart)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ServiceEventUninstallStop)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_ServiceEventUninstallStop)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ServiceEventUninstallDelete)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_ServiceEventUninstallDelete)(THIS_ VARIANT_BOOL bVal) PURE;
};

DEFINE_GUID(IID_IServiceControls,0x1B7E55F5L,0x06D1,0x43BB,0xAB,0x8E,0xBD,0x93,0xC7,0x1F,0x0A,0x93);

/* Definition of interface: IServiceControls */
#undef INTERFACE
#define INTERFACE IServiceControls

DECLARE_INTERFACE_(IServiceControls, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IServiceControls methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IServiceControl FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IServiceControlEvent,0x9B736D53L,0xF7C6,0x40B3,0xA1,0x60,0x39,0x65,0x7E,0x1A,0x07,0xB9);

/* Definition of interface: IServiceControlEvent */
#undef INTERFACE
#define INTERFACE IServiceControlEvent

DECLARE_INTERFACE_(IServiceControlEvent, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IServiceControlEvent methods */
    STDMETHOD(GetProperty)(THIS_ EnumPropServiceControlEvent epsceServiceControlEvent, IIsProperty FAR* FAR* pProperty) PURE;
};

DEFINE_GUID(IID_IServiceControlEvent2,0x4785F3FBL,0xDE0B,0x41A0,0x8A,0x63,0x5B,0x6D,0x35,0x97,0x0E,0x17);

/* Definition of interface: IServiceControlEvent2 */
#undef INTERFACE
#define INTERFACE IServiceControlEvent2

DECLARE_INTERFACE_(IServiceControlEvent2, IServiceControlEvent)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IServiceControlEvent methods */
    STDMETHOD(GetProperty)(THIS_ EnumPropServiceControlEvent epsceServiceControlEvent, IIsProperty FAR* FAR* pProperty) PURE;
#endif

    /* IServiceControlEvent2 methods */
    STDMETHOD(get_InstallStart)(THIS_ VARIANT_BOOL FAR* InstallStart) PURE;
    STDMETHOD(put_InstallStart)(THIS_ VARIANT_BOOL InstallStart) PURE;
    STDMETHOD(get_InstallStop)(THIS_ VARIANT_BOOL FAR* InstallStop) PURE;
    STDMETHOD(put_InstallStop)(THIS_ VARIANT_BOOL InstallStop) PURE;
    STDMETHOD(get_InstallDelete)(THIS_ VARIANT_BOOL FAR* InstallDelete) PURE;
    STDMETHOD(put_InstallDelete)(THIS_ VARIANT_BOOL InstallDelete) PURE;
    STDMETHOD(get_UnInstallStart)(THIS_ VARIANT_BOOL FAR* UnInstallStart) PURE;
    STDMETHOD(put_UnInstallStart)(THIS_ VARIANT_BOOL UnInstallStart) PURE;
    STDMETHOD(get_UnInstallStop)(THIS_ VARIANT_BOOL FAR* UnInstallStop) PURE;
    STDMETHOD(put_UnInstallStop)(THIS_ VARIANT_BOOL UnInstallStop) PURE;
    STDMETHOD(get_UnInstallDelete)(THIS_ VARIANT_BOOL FAR* UnInstallDelete) PURE;
    STDMETHOD(put_UnInstallDelete)(THIS_ VARIANT_BOOL UnInstallDelete) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* Arguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR Arguments) PURE;
    STDMETHOD(get_Wait)(THIS_ EnumPropServiceControlEventWait FAR* ePropServiceControlEventWait) PURE;
    STDMETHOD(put_Wait)(THIS_ EnumPropServiceControlEventWait ePropServiceControlEventWait) PURE;
};

DEFINE_GUID(IID_IServiceControlEvents,0xF7199ED1L,0x6BD1,0x4888,0x9D,0xA4,0x8B,0x26,0x5D,0xB9,0x6B,0x56);

/* Definition of interface: IServiceControlEvents */
#undef INTERFACE
#define INTERFACE IServiceControlEvents

DECLARE_INTERFACE_(IServiceControlEvents, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IServiceControlEvents methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IServiceControlEvent FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropMsiServiceConfigEvent {
    epmsceInstall = 1,
    epmsceUninstall = 2,
    epmsceReinstall = 4
} EnumPropMsiServiceConfigEvent;

typedef enum EnumPropMsiServiceConfigType {
    epmsctDelayedAutoStart = 3,
    epmsctFailureActions = 4,
    epmsctAddSvcSID = 5,
    epmsctReqPrivileges = 6,
    epmsctPreShutdown = 7
} EnumPropMsiServiceConfigType;

DEFINE_GUID(IID_IMsiServiceConfig,0x8F0B8290L,0xF868,0x4E38,0x85,0x54,0x75,0x7B,0xBD,0xCF,0xD5,0x1D);

/* Definition of interface: IMsiServiceConfig */
#undef INTERFACE
#define INTERFACE IMsiServiceConfig

DECLARE_INTERFACE_(IMsiServiceConfig, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMsiServiceConfig methods */
    STDMETHOD(get_MsiServiceConfig)(THIS_ BSTR FAR* MsiServiceConfig) PURE;
    STDMETHOD(put_MsiServiceConfig)(THIS_ BSTR MsiServiceConfig) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Event)(THIS_ EnumPropMsiServiceConfigEvent FAR* eEvent) PURE;
    STDMETHOD(put_Event)(THIS_ EnumPropMsiServiceConfigEvent eEvent) PURE;
    STDMETHOD(get_ConfigType)(THIS_ EnumPropMsiServiceConfigType FAR* eType) PURE;
    STDMETHOD(put_ConfigType)(THIS_ EnumPropMsiServiceConfigType eType) PURE;
    STDMETHOD(get_Argument)(THIS_ BSTR FAR* pArgument) PURE;
    STDMETHOD(put_Argument)(THIS_ BSTR Argument) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR pComponent) PURE;
};

DEFINE_GUID(IID_IMsiServiceConfigs,0xEA927B1CL,0x8B5C,0x487B,0x9C,0x69,0xE8,0xFC,0xD1,0x3E,0x0B,0xCE);

/* Definition of interface: IMsiServiceConfigs */
#undef INTERFACE
#define INTERFACE IMsiServiceConfigs

DECLARE_INTERFACE_(IMsiServiceConfigs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMsiServiceConfigs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IMsiServiceConfig FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IMsiServiceConfigFailureAction,0x4B48B235L,0xA731,0x4D6A,0xBB,0x33,0xC1,0xDB,0x2D,0xEA,0x80,0x66);

/* Definition of interface: IMsiServiceConfigFailureAction */
#undef INTERFACE
#define INTERFACE IMsiServiceConfigFailureAction

DECLARE_INTERFACE_(IMsiServiceConfigFailureAction, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMsiServiceConfigFailureAction methods */
    STDMETHOD(get_MsiServiceConfigFailureActions)(THIS_ BSTR FAR* sKey) PURE;
    STDMETHOD(put_MsiServiceConfigFailureActions)(THIS_ BSTR sKey) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Event)(THIS_ EnumPropMsiServiceConfigEvent FAR* eEvent) PURE;
    STDMETHOD(put_Event)(THIS_ EnumPropMsiServiceConfigEvent eEvent) PURE;
    STDMETHOD(get_ResetPeriod)(THIS_ long FAR* nPeriod) PURE;
    STDMETHOD(put_ResetPeriod)(THIS_ long nPeriod) PURE;
    STDMETHOD(get_RebootMessage)(THIS_ BSTR FAR* pRebootMessage) PURE;
    STDMETHOD(put_RebootMessage)(THIS_ BSTR RebootMessage) PURE;
    STDMETHOD(get_Command)(THIS_ BSTR FAR* pCommand) PURE;
    STDMETHOD(put_Command)(THIS_ BSTR Command) PURE;
    STDMETHOD(get_Actions)(THIS_ BSTR FAR* pActions) PURE;
    STDMETHOD(put_Actions)(THIS_ BSTR Actions) PURE;
    STDMETHOD(get_DelayActions)(THIS_ BSTR FAR* pDelayActions) PURE;
    STDMETHOD(put_DelayActions)(THIS_ BSTR DelayActions) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR pComponent) PURE;
};

DEFINE_GUID(IID_IMsiServiceConfigFailureActions,0x750E4420L,0xA40B,0x4133,0xA4,0xEC,0x85,0xD2,0xA3,0xD6,0xE2,0x17);

/* Definition of interface: IMsiServiceConfigFailureActions */
#undef INTERFACE
#define INTERFACE IMsiServiceConfigFailureActions

DECLARE_INTERFACE_(IMsiServiceConfigFailureActions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMsiServiceConfigFailureActions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IMsiServiceConfigFailureAction FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumODBCDriverChild {
    eodcODBCAttribute = 1
} EnumODBCDriverChild;

typedef enum EnumPropODBCDriver {
    epodDescription = 10,
    epodFileSetup = 11,
    epodFileKey = 12
} EnumPropODBCDriver;

typedef enum EnumPropODBCAttribute {
    epodaAttribute = 10,
    epodaValue = 11
} EnumPropODBCAttribute;

interface IODBCAttributes;

DEFINE_GUID(IID_IODBCDriver,0x7ABE38E9L,0x67A9,0x401F,0x90,0x4A,0x4E,0x8B,0x91,0xF1,0x9F,0xFA);

/* Definition of interface: IODBCDriver */
#undef INTERFACE
#define INTERFACE IODBCDriver

DECLARE_INTERFACE_(IODBCDriver, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IODBCDriver methods */
    STDMETHOD(AddChild)(THIS_ EnumODBCDriverChild eodcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetProperty)(THIS_ EnumPropODBCDriver epodODBCDriver, IIsProperty FAR* FAR* pProperty) PURE;
    STDMETHOD(get_ODBCAttributes)(THIS_ IODBCAttributes FAR* FAR* pAttr) PURE;
};

DEFINE_GUID(IID_IODBCDriver2,0x7EC4EC1EL,0xD9AC,0x4094,0xB2,0xDF,0x0A,0xC2,0xB1,0x88,0x97,0xD6);

/* Definition of interface: IODBCDriver2 */
#undef INTERFACE
#define INTERFACE IODBCDriver2

DECLARE_INTERFACE_(IODBCDriver2, IODBCDriver)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IODBCDriver methods */
    STDMETHOD(AddChild)(THIS_ EnumODBCDriverChild eodcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetProperty)(THIS_ EnumPropODBCDriver epodODBCDriver, IIsProperty FAR* FAR* pProperty) PURE;
    STDMETHOD(get_ODBCAttributes)(THIS_ IODBCAttributes FAR* FAR* pAttr) PURE;
#endif

    /* IODBCDriver2 methods */
    STDMETHOD(get_Driver)(THIS_ BSTR FAR* pDriver) PURE;
    STDMETHOD(put_Driver)(THIS_ BSTR Driver) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Component) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* pFile) PURE;
    STDMETHOD(put_File)(THIS_ BSTR File) PURE;
    STDMETHOD(get_File_Setup)(THIS_ BSTR FAR* pFile_Setup) PURE;
    STDMETHOD(put_File_Setup)(THIS_ BSTR File_Setup) PURE;
    STDMETHOD(get_File_Display)(THIS_ BSTR FAR* pFile) PURE;
    STDMETHOD(put_File_Display)(THIS_ BSTR File) PURE;
    STDMETHOD(get_File_Setup_Display)(THIS_ BSTR FAR* pFile_Setup) PURE;
    STDMETHOD(put_File_Setup_Display)(THIS_ BSTR File_Setup) PURE;
    STDMETHOD(get_SetupComponent)(THIS_ BSTR FAR* psCompName) PURE;
    STDMETHOD(put_SetupComponent)(THIS_ BSTR sCompName) PURE;
};

DEFINE_GUID(IID_IODBCDrivers,0x2129BD12L,0xBFE6,0x486E,0x9A,0x5A,0x35,0xAB,0xEE,0x13,0x33,0xE8);

/* Definition of interface: IODBCDrivers */
#undef INTERFACE
#define INTERFACE IODBCDrivers

DECLARE_INTERFACE_(IODBCDrivers, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IODBCDrivers methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IODBCDriver FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IODBCAttribute,0xFD424C5DL,0xB810,0x49E0,0x8A,0x9D,0x6E,0x98,0x9F,0x90,0xB5,0x9D);

/* Definition of interface: IODBCAttribute */
#undef INTERFACE
#define INTERFACE IODBCAttribute

DECLARE_INTERFACE_(IODBCAttribute, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IODBCAttribute methods */
    STDMETHOD(GetProperty)(THIS_ EnumPropODBCAttribute epsceODBCAttribute, IIsProperty FAR* FAR* pProperty) PURE;
};

DEFINE_GUID(IID_IODBCAttribute2,0xDE052204L,0x5C99,0x4699,0xBC,0x7C,0xB7,0xE4,0xA5,0x4E,0xF7,0x4D);

/* Definition of interface: IODBCAttribute2 */
#undef INTERFACE
#define INTERFACE IODBCAttribute2

DECLARE_INTERFACE_(IODBCAttribute2, IODBCAttribute)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IODBCAttribute methods */
    STDMETHOD(GetProperty)(THIS_ EnumPropODBCAttribute epsceODBCAttribute, IIsProperty FAR* FAR* pProperty) PURE;
#endif

    /* IODBCAttribute2 methods */
    STDMETHOD(get_Driver)(THIS_ BSTR FAR* pDriver) PURE;
    STDMETHOD(put_Driver)(THIS_ BSTR Driver) PURE;
    STDMETHOD(get_Attribute)(THIS_ BSTR FAR* pAttribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ BSTR Attribute) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IODBCAttributes,0x311E234EL,0x8E27,0x466E,0xBE,0x6D,0xCB,0xD3,0x03,0x86,0x23,0x82);

/* Definition of interface: IODBCAttributes */
#undef INTERFACE
#define INTERFACE IODBCAttributes

DECLARE_INTERFACE_(IODBCAttributes, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IODBCAttributes methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IODBCAttribute FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumODBCDataSourceChild {
    eodscODBCDataSourceAttribute = 1
} EnumODBCDataSourceChild;

typedef enum EnumPropODBCDataSource {
    epodsDescription = 10,
    epodsRegistration = 11,
    epodsDriverDescription = 12
} EnumPropODBCDataSource;

typedef enum EnumPropODBCDataSourceType {
    epodstSystem = 0,
    epodstUser = 1
} EnumPropODBCDataSourceType;

typedef enum EnumPropODBCDataSourceAttribute {
    epodsaAttribute = 10,
    epodsaValue = 11
} EnumPropODBCDataSourceAttribute;

interface IODBCDataSourceAttributes;

DEFINE_GUID(IID_IODBCDataSource,0x3925EA9BL,0x14E5,0x48A8,0x9D,0xE4,0x9C,0x86,0x99,0xB1,0xB9,0xB1);

/* Definition of interface: IODBCDataSource */
#undef INTERFACE
#define INTERFACE IODBCDataSource

DECLARE_INTERFACE_(IODBCDataSource, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IODBCDataSource methods */
    STDMETHOD(AddChild)(THIS_ EnumODBCDataSourceChild eodscChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetProperty)(THIS_ EnumPropODBCDataSource epodsODBCDataSource, IIsProperty FAR* FAR* pProperty) PURE;
    STDMETHOD(get_ODBCDataSourceAttributes)(THIS_ IODBCDataSourceAttributes FAR* FAR* pAttr) PURE;
};

DEFINE_GUID(IID_IODBCDataSource2,0x73712D72L,0xAC72,0x420C,0xB3,0xBB,0xB8,0xB2,0x6E,0xB7,0x66,0x2F);

/* Definition of interface: IODBCDataSource2 */
#undef INTERFACE
#define INTERFACE IODBCDataSource2

DECLARE_INTERFACE_(IODBCDataSource2, IODBCDataSource)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IODBCDataSource methods */
    STDMETHOD(AddChild)(THIS_ EnumODBCDataSourceChild eodscChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetProperty)(THIS_ EnumPropODBCDataSource epodsODBCDataSource, IIsProperty FAR* FAR* pProperty) PURE;
    STDMETHOD(get_ODBCDataSourceAttributes)(THIS_ IODBCDataSourceAttributes FAR* FAR* pAttr) PURE;
#endif

    /* IODBCDataSource2 methods */
    STDMETHOD(get_DataSource)(THIS_ BSTR FAR* pDataSource) PURE;
    STDMETHOD(put_DataSource)(THIS_ BSTR DataSource) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Component) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_DriverDescription)(THIS_ BSTR FAR* pDriverDescription) PURE;
    STDMETHOD(put_DriverDescription)(THIS_ BSTR DriverDescription) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumPropODBCDataSourceType FAR* pRegistration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumPropODBCDataSourceType Registration) PURE;
    STDMETHOD(get_SetupComponent)(THIS_ BSTR FAR* psCompName) PURE;
    STDMETHOD(put_SetupComponent)(THIS_ BSTR sCompName) PURE;
};

DEFINE_GUID(IID_IODBCDataSources,0x659821ACL,0x3BD5,0x46FD,0xAD,0xFE,0x49,0x23,0xE2,0x8E,0x66,0x78);

/* Definition of interface: IODBCDataSources */
#undef INTERFACE
#define INTERFACE IODBCDataSources

DECLARE_INTERFACE_(IODBCDataSources, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IODBCDataSources methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IODBCDataSource FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IODBCDataSourceAttribute,0xA8F79DADL,0x6A00,0x48D2,0x99,0x61,0x91,0x4D,0xF2,0xBA,0xB7,0xC6);

/* Definition of interface: IODBCDataSourceAttribute */
#undef INTERFACE
#define INTERFACE IODBCDataSourceAttribute

DECLARE_INTERFACE_(IODBCDataSourceAttribute, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IODBCDataSourceAttribute methods */
    STDMETHOD(GetProperty)(THIS_ EnumPropODBCDataSourceAttribute epodsaODBCDataSourceAttribute, IIsProperty FAR* FAR* pProperty) PURE;
};

DEFINE_GUID(IID_IODBCDataSourceAttribute2,0x11B3931CL,0xEF17,0x4E56,0x97,0x61,0x6A,0x5A,0x84,0xB2,0x63,0x0F);

/* Definition of interface: IODBCDataSourceAttribute2 */
#undef INTERFACE
#define INTERFACE IODBCDataSourceAttribute2

DECLARE_INTERFACE_(IODBCDataSourceAttribute2, IODBCDataSourceAttribute)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IODBCDataSourceAttribute methods */
    STDMETHOD(GetProperty)(THIS_ EnumPropODBCDataSourceAttribute epodsaODBCDataSourceAttribute, IIsProperty FAR* FAR* pProperty) PURE;
#endif

    /* IODBCDataSourceAttribute2 methods */
    STDMETHOD(get_DataSource)(THIS_ BSTR FAR* pDataSource) PURE;
    STDMETHOD(put_DataSource)(THIS_ BSTR DataSource) PURE;
    STDMETHOD(get_Attribute)(THIS_ BSTR FAR* pAttribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ BSTR Attribute) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IODBCDataSourceAttributes,0x780C7505L,0xE177,0x4398,0x8D,0x81,0x3C,0x3A,0x89,0x37,0x41,0x73);

/* Definition of interface: IODBCDataSourceAttributes */
#undef INTERFACE
#define INTERFACE IODBCDataSourceAttributes

DECLARE_INTERFACE_(IODBCDataSourceAttributes, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IODBCDataSourceAttributes methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IODBCDataSourceAttribute FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropODBCTranslator {
    epotDescription = 10,
    epotFileSetup = 11,
    epotFileKey = 12
} EnumPropODBCTranslator;

DEFINE_GUID(IID_IODBCTranslator,0xC872F340L,0xA882,0x442F,0x8F,0xE8,0xE6,0x54,0x1A,0x01,0x50,0x9E);

/* Definition of interface: IODBCTranslator */
#undef INTERFACE
#define INTERFACE IODBCTranslator

DECLARE_INTERFACE_(IODBCTranslator, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IODBCTranslator methods */
    STDMETHOD(GetProperty)(THIS_ EnumPropODBCTranslator epotODBCTranslator, IIsProperty FAR* FAR* pProperty) PURE;
};

DEFINE_GUID(IID_IODBCTranslator2,0xF4E38135L,0x8532,0x4B70,0x90,0x14,0x3B,0x9C,0xEF,0x27,0x3D,0x6B);

/* Definition of interface: IODBCTranslator2 */
#undef INTERFACE
#define INTERFACE IODBCTranslator2

DECLARE_INTERFACE_(IODBCTranslator2, IODBCTranslator)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IODBCTranslator methods */
    STDMETHOD(GetProperty)(THIS_ EnumPropODBCTranslator epotODBCTranslator, IIsProperty FAR* FAR* pProperty) PURE;
#endif

    /* IODBCTranslator2 methods */
    STDMETHOD(get_Translator)(THIS_ BSTR FAR* pTranslator) PURE;
    STDMETHOD(put_Translator)(THIS_ BSTR Translator) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Component) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* pFile) PURE;
    STDMETHOD(put_File)(THIS_ BSTR File) PURE;
    STDMETHOD(get_File_Setup)(THIS_ BSTR FAR* pFile_Setup) PURE;
    STDMETHOD(put_File_Setup)(THIS_ BSTR File_Setup) PURE;
    STDMETHOD(get_File_Display)(THIS_ BSTR FAR* pFile) PURE;
    STDMETHOD(put_File_Display)(THIS_ BSTR File) PURE;
    STDMETHOD(get_File_Setup_Display)(THIS_ BSTR FAR* pFile_Setup) PURE;
    STDMETHOD(put_File_Setup_Display)(THIS_ BSTR File_Setup) PURE;
    STDMETHOD(get_SetupComponent)(THIS_ BSTR FAR* psCompName) PURE;
    STDMETHOD(put_SetupComponent)(THIS_ BSTR sCompName) PURE;
};

DEFINE_GUID(IID_IODBCTranslators,0xC829BDC3L,0xDCA2,0x49DE,0x97,0x47,0x19,0xD9,0x69,0xB9,0x8E,0x6E);

/* Definition of interface: IODBCTranslators */
#undef INTERFACE
#define INTERFACE IODBCTranslators

DECLARE_INTERFACE_(IODBCTranslators, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IODBCTranslators methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IODBCTranslator FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPathVariableType {
    epvtPreDefined = 1,
    epvtCustom = 2,
    epvtEnvironment = 4,
    epvtRegistry = 8
} EnumPathVariableType;

typedef enum EnumPropPathVariable {
    eppvValue = 10,
    eppvTestValue = 11,
    eppvType = 12
} EnumPropPathVariable;

interface IPathVariables;

interface IPathVariable;

DEFINE_GUID(IID_IPathVariableSet,0x0BA82B2EL,0x46EA,0x444C,0x91,0x97,0x84,0x2D,0x6E,0x2E,0x60,0x89);

/* Definition of interface: IPathVariableSet */
#undef INTERFACE
#define INTERFACE IPathVariableSet

DECLARE_INTERFACE_(IPathVariableSet, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPathVariableSet methods */
    STDMETHOD(AbsolutePath)(THIS_ BSTR sPathVariable, VARIANT bUseTestVal, BSTR FAR* sValue) PURE;
    STDMETHOD(AddPathVariable)(THIS_ EnumPathVariableType ePathType, VARIANT sName, IPathVariable FAR* FAR* pVal) PURE;
    STDMETHOD(Search)(THIS_ BSTR sAbsolutePath, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_PathVariables)(THIS_ IPathVariables FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(GetUniquePathVariable)(THIS_ EnumPathVariableType ePathType, BSTR FAR* sPathVariable) PURE;
};

DEFINE_GUID(IID_IPathVariableSetIbiza,0x35AC7028L,0xB634,0x4FB4,0x9D,0xDB,0xA0,0x89,0x75,0x08,0x75,0x3D);

/* Definition of interface: IPathVariableSetIbiza */
#undef INTERFACE
#define INTERFACE IPathVariableSetIbiza

DECLARE_INTERFACE_(IPathVariableSetIbiza, IPathVariableSet)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPathVariableSet methods */
    STDMETHOD(AbsolutePath)(THIS_ BSTR sPathVariable, VARIANT bUseTestVal, BSTR FAR* sValue) PURE;
    STDMETHOD(AddPathVariable)(THIS_ EnumPathVariableType ePathType, VARIANT sName, IPathVariable FAR* FAR* pVal) PURE;
    STDMETHOD(Search)(THIS_ BSTR sAbsolutePath, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_PathVariables)(THIS_ IPathVariables FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(GetUniquePathVariable)(THIS_ EnumPathVariableType ePathType, BSTR FAR* sPathVariable) PURE;
#endif

    /* IPathVariableSetIbiza methods */
    STDMETHOD(put_Dirty)(THIS_ VARIANT_BOOL vbDirty) PURE;
};

DEFINE_GUID(IID_IPathVariableSetJustice,0xA8ADD8EFL,0x9286,0x46FC,0x98,0x58,0x3A,0xE3,0xC8,0x30,0xE0,0x67);

/* Definition of interface: IPathVariableSetJustice */
#undef INTERFACE
#define INTERFACE IPathVariableSetJustice

DECLARE_INTERFACE_(IPathVariableSetJustice, IPathVariableSetIbiza)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPathVariableSet methods */
    STDMETHOD(AbsolutePath)(THIS_ BSTR sPathVariable, VARIANT bUseTestVal, BSTR FAR* sValue) PURE;
    STDMETHOD(AddPathVariable)(THIS_ EnumPathVariableType ePathType, VARIANT sName, IPathVariable FAR* FAR* pVal) PURE;
    STDMETHOD(Search)(THIS_ BSTR sAbsolutePath, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_PathVariables)(THIS_ IPathVariables FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(GetUniquePathVariable)(THIS_ EnumPathVariableType ePathType, BSTR FAR* sPathVariable) PURE;

    /* IPathVariableSetIbiza methods */
    STDMETHOD(put_Dirty)(THIS_ VARIANT_BOOL vbDirty) PURE;
#endif

    /* IPathVariableSetJustice methods */
    STDMETHOD(SetPathVariableOverride)(THIS_ BSTR bstrName, BSTR bstrPath) PURE;
};

DEFINE_GUID(IID_IPathVariableSetRipley,0x5D532D69L,0xA5CA,0x4FE6,0x89,0x70,0xF8,0x94,0xD4,0x54,0xD0,0x5B);

/* Definition of interface: IPathVariableSetRipley */
#undef INTERFACE
#define INTERFACE IPathVariableSetRipley

DECLARE_INTERFACE_(IPathVariableSetRipley, IPathVariableSetJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPathVariableSet methods */
    STDMETHOD(AbsolutePath)(THIS_ BSTR sPathVariable, VARIANT bUseTestVal, BSTR FAR* sValue) PURE;
    STDMETHOD(AddPathVariable)(THIS_ EnumPathVariableType ePathType, VARIANT sName, IPathVariable FAR* FAR* pVal) PURE;
    STDMETHOD(Search)(THIS_ BSTR sAbsolutePath, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_PathVariables)(THIS_ IPathVariables FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(GetUniquePathVariable)(THIS_ EnumPathVariableType ePathType, BSTR FAR* sPathVariable) PURE;

    /* IPathVariableSetIbiza methods */
    STDMETHOD(put_Dirty)(THIS_ VARIANT_BOOL vbDirty) PURE;

    /* IPathVariableSetJustice methods */
    STDMETHOD(SetPathVariableOverride)(THIS_ BSTR bstrName, BSTR bstrPath) PURE;
#endif

    /* IPathVariableSetRipley methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IPathVariableSets,0x0AB5889AL,0xA920,0x4774,0x8B,0xD8,0x2C,0x0D,0xED,0xE7,0xF3,0x72);

/* Definition of interface: IPathVariableSets */
#undef INTERFACE
#define INTERFACE IPathVariableSets

DECLARE_INTERFACE_(IPathVariableSets, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPathVariableSets methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IPathVariableSet FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IPathVariable,0x51199E00L,0xBF3E,0x4A26,0x8F,0x11,0x3B,0x0E,0x81,0x6D,0xA3,0x9E);

/* Definition of interface: IPathVariable */
#undef INTERFACE
#define INTERFACE IPathVariable

DECLARE_INTERFACE_(IPathVariable, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPathVariable methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* sValue) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR sValue) PURE;
    STDMETHOD(get_ActualValue)(THIS_ BSTR FAR* sActualValue) PURE;
    STDMETHOD(get_TestValue)(THIS_ BSTR FAR* sTestValue) PURE;
    STDMETHOD(put_TestValue)(THIS_ BSTR sTestValue) PURE;
    STDMETHOD(get_Type)(THIS_ EnumPathVariableType FAR* pType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumPathVariableType pType) PURE;
};

DEFINE_GUID(IID_IPathVariable2,0xDDF039EAL,0x26CA,0x4EA6,0xBA,0x3F,0x75,0x9A,0xE3,0x90,0x78,0x96);

/* Definition of interface: IPathVariable2 */
#undef INTERFACE
#define INTERFACE IPathVariable2

DECLARE_INTERFACE_(IPathVariable2, IPathVariable)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPathVariable methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* sValue) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR sValue) PURE;
    STDMETHOD(get_ActualValue)(THIS_ BSTR FAR* sActualValue) PURE;
    STDMETHOD(get_TestValue)(THIS_ BSTR FAR* sTestValue) PURE;
    STDMETHOD(put_TestValue)(THIS_ BSTR sTestValue) PURE;
    STDMETHOD(get_Type)(THIS_ EnumPathVariableType FAR* pType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumPathVariableType pType) PURE;
#endif

    /* IPathVariable2 methods */
    STDMETHOD(get_ActualTestValue)(THIS_ BSTR FAR* sName) PURE;
};

DEFINE_GUID(IID_IPathVariables,0x445DA070L,0x6BDC,0x4448,0xB9,0x7E,0x24,0x77,0xAB,0x38,0x9F,0xE6);

/* Definition of interface: IPathVariables */
#undef INTERFACE
#define INTERFACE IPathVariables

DECLARE_INTERFACE_(IPathVariables, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPathVariables methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IPathVariable FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropProperty {
    eppyName = 0,
    eppyValue = 10,
    eppyComments = 12
} EnumPropProperty;

DEFINE_GUID(IID_IProperty,0x045DBE89L,0x1017,0x41F1,0xB2,0x3B,0x55,0x29,0xCC,0x8B,0x8D,0x16);

/* Definition of interface: IProperty */
#undef INTERFACE
#define INTERFACE IProperty

DECLARE_INTERFACE_(IProperty, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProperty methods */
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* sComments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR sComments) PURE;
};

DEFINE_GUID(IID_IPropertyJustice,0xCE62DAEEL,0xB4F0,0x47A0,0xB3,0xEF,0xC0,0x01,0xB7,0xB7,0x42,0xA8);

/* Definition of interface: IPropertyJustice */
#undef INTERFACE
#define INTERFACE IPropertyJustice

DECLARE_INTERFACE_(IPropertyJustice, IProperty)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProperty methods */
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* sComments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR sComments) PURE;
#endif

    /* IPropertyJustice methods */
    STDMETHOD(get_ValueEx)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_ValueEx)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Localizable)(THIS_ VARIANT_BOOL FAR* vbValue) PURE;
    STDMETHOD(put_Localizable)(THIS_ VARIANT_BOOL vbValue) PURE;
};

DEFINE_GUID(IID_IProperties,0x57E9026EL,0x3E39,0x46E7,0x9D,0x23,0xC1,0xF1,0x53,0x0E,0x69,0xAD);

/* Definition of interface: IProperties */
#undef INTERFACE
#define INTERFACE IProperties

DECLARE_INTERFACE_(IProperties, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProperties methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IProperty FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumErrorType {
    eetPreDefined = 1,
    eetCustom = 2
} EnumErrorType;

typedef enum EnumPropError {
    epeName = 0,
    epeErrorId = 10,
    epeDescription = 11
} EnumPropError;

DEFINE_GUID(IID_IError,0x93C08895L,0x6995,0x4701,0x81,0x18,0xA7,0x0C,0x14,0xE8,0x4F,0xEC);

/* Definition of interface: IError */
#undef INTERFACE
#define INTERFACE IError

DECLARE_INTERFACE_(IError, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IError methods */
    STDMETHOD(GetProperty)(THIS_ EnumPropError epeError, IIsProperty FAR* FAR* pProperty) PURE;
};

DEFINE_GUID(IID_IErrors,0x2CE58F62L,0x323F,0x48D4,0x83,0xA1,0x86,0xEE,0x2E,0x6D,0x93,0x7D);

/* Definition of interface: IErrors */
#undef INTERFACE
#define INTERFACE IErrors

DECLARE_INTERFACE_(IErrors, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IErrors methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IError FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumUITextStringType {
    euitPreDefined = 1,
    euitCustom = 2
} EnumUITextStringType;

typedef enum EnumPropUITextString {
    epuiKey = 10,
    epuiText = 11
} EnumPropUITextString;

DEFINE_GUID(IID_IUITextString,0xEBD12E8BL,0xABB8,0x4CB5,0x81,0xEF,0x76,0x91,0xFC,0x4A,0x0B,0xA8);

/* Definition of interface: IUITextString */
#undef INTERFACE
#define INTERFACE IUITextString

DECLARE_INTERFACE_(IUITextString, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IUITextString methods */
    STDMETHOD(GetProperty)(THIS_ EnumPropUITextString epuiUITextString, IIsProperty FAR* FAR* pProperty) PURE;
};

DEFINE_GUID(IID_IUITextStrings,0x634E9F62L,0xF757,0x49B8,0xA9,0xC1,0x3B,0x7E,0x25,0x4C,0xDC,0xA3);

/* Definition of interface: IUITextStrings */
#undef INTERFACE
#define INTERFACE IUITextStrings

DECLARE_INTERFACE_(IUITextStrings, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IUITextStrings methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IUITextString FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropTextStyle {
    eptsFaceName = 10,
    eptsSize = 11,
    eptsColor = 12,
    eptsStyleBits = 13
} EnumPropTextStyle;

DEFINE_GUID(IID_ITextStyle,0x6E5ACE27L,0xB676,0x4D7D,0x98,0x49,0xC1,0xBA,0xAB,0x7C,0x82,0x16);

/* Definition of interface: ITextStyle */
#undef INTERFACE
#define INTERFACE ITextStyle

DECLARE_INTERFACE_(ITextStyle, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ITextStyle methods */
    STDMETHOD(get_TextStyle)(THIS_ BSTR FAR* TextStyle) PURE;
    STDMETHOD(put_TextStyle)(THIS_ BSTR TextStyle) PURE;
    STDMETHOD(get_Size)(THIS_ long FAR* Size) PURE;
    STDMETHOD(put_Size)(THIS_ long Size) PURE;
    STDMETHOD(get_Color)(THIS_ long FAR* Color) PURE;
    STDMETHOD(put_Color)(THIS_ long Color) PURE;
    STDMETHOD(get_StyleBits)(THIS_ long FAR* StyleBits) PURE;
    STDMETHOD(put_StyleBits)(THIS_ long StyleBits) PURE;
    STDMETHOD(get_FaceName)(THIS_ BSTR FAR* FaceName) PURE;
    STDMETHOD(put_FaceName)(THIS_ BSTR FaceName) PURE;
};

DEFINE_GUID(IID_ITextStyles,0x84439A46L,0xE292,0x4CAB,0xA4,0x1E,0xD1,0xCC,0x5C,0x8A,0x8F,0x95);

/* Definition of interface: ITextStyles */
#undef INTERFACE
#define INTERFACE ITextStyles

DECLARE_INTERFACE_(ITextStyles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ITextStyles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ITextStyle FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropCreateFolder {
    epcfDirectory = 0,
    epcfComponent = 10
} EnumPropCreateFolder;

DEFINE_GUID(IID_ICreateFolder,0x33F9027CL,0x5F6B,0x4D41,0xB8,0xAD,0x9B,0xD4,0xEC,0xDE,0xAA,0xA5);

/* Definition of interface: ICreateFolder */
#undef INTERFACE
#define INTERFACE ICreateFolder

DECLARE_INTERFACE_(ICreateFolder, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICreateFolder methods */
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrNew) PURE;
};

DEFINE_GUID(IID_ICreateFolderIndoreSP1,0x78E15B00L,0xC6D3,0x4540,0xB7,0xF6,0x35,0x62,0x35,0xF3,0x3F,0xBB);

/* Definition of interface: ICreateFolderIndoreSP1 */
#undef INTERFACE
#define INTERFACE ICreateFolderIndoreSP1

DECLARE_INTERFACE_(ICreateFolderIndoreSP1, ICreateFolder)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICreateFolder methods */
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrNew) PURE;
#endif

    /* ICreateFolderIndoreSP1 methods */
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* pDirectory) PURE;
};

DEFINE_GUID(IID_ICreateFolders,0x6C60AFA6L,0x8E60,0x46FE,0xB7,0xCD,0x34,0xAB,0xEB,0xC4,0x04,0x0B);

/* Definition of interface: ICreateFolders */
#undef INTERFACE
#define INTERFACE ICreateFolders

DECLARE_INTERFACE_(ICreateFolders, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICreateFolders methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ICreateFolder FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IMsiAssemblyName,0x441E8C3BL,0x1899,0x47A8,0xBD,0x7C,0x36,0x34,0xDA,0x37,0xFE,0xF1);

/* Definition of interface: IMsiAssemblyName */
#undef INTERFACE
#define INTERFACE IMsiAssemblyName

DECLARE_INTERFACE_(IMsiAssemblyName, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMsiAssemblyName methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pBstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pBstrValue) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;
};

DEFINE_GUID(IID_IMsiAssemblyNames,0x8D1B8D29L,0x2FA3,0x4456,0x94,0x10,0x10,0xB9,0x6E,0x1C,0x9A,0x01);

/* Definition of interface: IMsiAssemblyNames */
#undef INTERFACE
#define INTERFACE IMsiAssemblyNames

DECLARE_INTERFACE_(IMsiAssemblyNames, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMsiAssemblyNames methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IMsiAssemblyName FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IMsiAssembly,0xEDF417AEL,0x6AF7,0x48BB,0x89,0x17,0xCE,0x8C,0xD7,0x05,0x58,0x34);

/* Definition of interface: IMsiAssembly */
#undef INTERFACE
#define INTERFACE IMsiAssembly

DECLARE_INTERFACE_(IMsiAssembly, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMsiAssembly methods */
    STDMETHOD(get_Manifest)(THIS_ BSTR FAR* pBstrManifest) PURE;
    STDMETHOD(put_Manifest)(THIS_ BSTR bstrManifest) PURE;
    STDMETHOD(get_Application)(THIS_ BSTR FAR* pBstrApplication) PURE;
    STDMETHOD(put_Application)(THIS_ BSTR bstrApplication) PURE;
    STDMETHOD(get_Attributes)(THIS_ short FAR* pBstrAttribute) PURE;
    STDMETHOD(put_Attributes)(THIS_ short bstrAttributes) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;
    STDMETHOD(get_FeatureName)(THIS_ BSTR FAR* bstrFeatureName) PURE;
    STDMETHOD(put_ManifestFileKey)(THIS_ BSTR bstrManifestFileKey) PURE;
    STDMETHOD(put_ApplicationFileKey)(THIS_ BSTR bstrApplicationFileKey) PURE;
};

interface IRegistryFileImporterEvents;

typedef enum ERegFilterType {
    rftComponent,
    rftFeature,
    rftProduct
} ERegFilterType;

typedef enum EnumPropRegistryKey {
    eprkPermanent = 10,
    eprkUninstallOnly = 11,
    eprkAppendToExisting = 12,
    eprkPrependToExisting = 13,
    eprkRemoveAtInstallation = 14,
    eprkRemoveAllValues = 15,
    eprkRemoveAllSubKeys = 16,
    eprkKeyType = 17,
    eprkMSIKey = 18,
    eprkKeyName = 19,
    eprkFullKeyPath = 20,
    eprkInstallOp = 21,
    eprkMsiPath = 22
} EnumPropRegistryKey;

typedef enum EnumPropRegistryValue {
    eprvValue = 10,
    eprvValueType = 11,
    eprvMSIKey = 12
} EnumPropRegistryValue;

typedef enum EnumRegistryDataType {
    erdtInteger = 0,
    erdtString = 1,
    erdtBinary = 2,
    erdtMultiString = 3,
    erdtExpandString = 4
} EnumRegistryDataType;

typedef enum EnumPropAppPath {
    epapFile = 20,
    epapPath = 21
} EnumPropAppPath;

typedef enum EnumRegistryInstallOp {
    erioAutomatic = 0,
    erioInstallOnly = 1,
    erioUnInstallOnly = 2,
    erioBoth = 3
} EnumRegistryInstallOp;

typedef enum EnumRegistryPlatform {
    erpfAny = 0,
    erpfWin32 = 1,
    erpfWin64 = 2
} EnumRegistryPlatform;

interface IRegistryKeys;

DEFINE_GUID(IID_IRegistryValue,0x664F25FDL,0x21F6,0x4EDF,0x8B,0x76,0x3C,0x7C,0xA7,0x8C,0x6D,0xE3);

/* Definition of interface: IRegistryValue */
#undef INTERFACE
#define INTERFACE IRegistryValue

DECLARE_INTERFACE_(IRegistryValue, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRegistryValue methods */
    STDMETHOD(get_ValueName)(THIS_ BSTR FAR* ValueName) PURE;
    STDMETHOD(put_ValueName)(THIS_ BSTR ValueName) PURE;
    STDMETHOD(get_ValueType)(THIS_ EnumRegistryDataType FAR* ValueType) PURE;
    STDMETHOD(put_ValueType)(THIS_ EnumRegistryDataType ValueType) PURE;
    STDMETHOD(get_ValueData)(THIS_ BSTR FAR* ValueData) PURE;
    STDMETHOD(put_ValueData)(THIS_ BSTR ValueData) PURE;
    STDMETHOD(get_ValueMSIKey)(THIS_ BSTR FAR* sValueMSIKey) PURE;
    STDMETHOD(put_ValueMSIKey)(THIS_ BSTR sValueMSIKey) PURE;
};

DEFINE_GUID(IID_IRegistryValue2,0x4508C95FL,0x18A9,0x459D,0xBE,0x3B,0x76,0xCD,0xB5,0xE1,0x0A,0x9A);

/* Definition of interface: IRegistryValue2 */
#undef INTERFACE
#define INTERFACE IRegistryValue2

DECLARE_INTERFACE_(IRegistryValue2, IRegistryValue)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRegistryValue methods */
    STDMETHOD(get_ValueName)(THIS_ BSTR FAR* ValueName) PURE;
    STDMETHOD(put_ValueName)(THIS_ BSTR ValueName) PURE;
    STDMETHOD(get_ValueType)(THIS_ EnumRegistryDataType FAR* ValueType) PURE;
    STDMETHOD(put_ValueType)(THIS_ EnumRegistryDataType ValueType) PURE;
    STDMETHOD(get_ValueData)(THIS_ BSTR FAR* ValueData) PURE;
    STDMETHOD(put_ValueData)(THIS_ BSTR ValueData) PURE;
    STDMETHOD(get_ValueMSIKey)(THIS_ BSTR FAR* sValueMSIKey) PURE;
    STDMETHOD(put_ValueMSIKey)(THIS_ BSTR sValueMSIKey) PURE;
#endif

    /* IRegistryValue2 methods */
    STDMETHOD(PutValueDataEx)(THIS_ EnumRegistryDataType eValueType, BSTR bstrValueData) PURE;
    STDMETHOD(get_ValueComponentName)(THIS_ BSTR FAR* sValueComponentName) PURE;
};

DEFINE_GUID(IID_IRegistryValueNeptune,0x25E7F21EL,0xDF0D,0x4327,0x9B,0xF9,0x39,0xC7,0x16,0x8A,0x75,0xD6);

/* Definition of interface: IRegistryValueNeptune */
#undef INTERFACE
#define INTERFACE IRegistryValueNeptune

DECLARE_INTERFACE_(IRegistryValueNeptune, IRegistryValue2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRegistryValue methods */
    STDMETHOD(get_ValueName)(THIS_ BSTR FAR* ValueName) PURE;
    STDMETHOD(put_ValueName)(THIS_ BSTR ValueName) PURE;
    STDMETHOD(get_ValueType)(THIS_ EnumRegistryDataType FAR* ValueType) PURE;
    STDMETHOD(put_ValueType)(THIS_ EnumRegistryDataType ValueType) PURE;
    STDMETHOD(get_ValueData)(THIS_ BSTR FAR* ValueData) PURE;
    STDMETHOD(put_ValueData)(THIS_ BSTR ValueData) PURE;
    STDMETHOD(get_ValueMSIKey)(THIS_ BSTR FAR* sValueMSIKey) PURE;
    STDMETHOD(put_ValueMSIKey)(THIS_ BSTR sValueMSIKey) PURE;

    /* IRegistryValue2 methods */
    STDMETHOD(PutValueDataEx)(THIS_ EnumRegistryDataType eValueType, BSTR bstrValueData) PURE;
    STDMETHOD(get_ValueComponentName)(THIS_ BSTR FAR* sValueComponentName) PURE;
#endif

    /* IRegistryValueNeptune methods */
    STDMETHOD(get_DoNotUninstall)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_DoNotUninstall)(THIS_ VARIANT_BOOL bVal) PURE;
};

DEFINE_GUID(IID_IRegistryValues,0x7474C192L,0x76B1,0x4652,0x9F,0xE2,0x1D,0x38,0x4F,0x6B,0xA1,0x41);

/* Definition of interface: IRegistryValues */
#undef INTERFACE
#define INTERFACE IRegistryValues

DECLARE_INTERFACE_(IRegistryValues, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRegistryValues methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IRegistryValue FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IRegistryKey,0xEE538B40L,0x9F1A,0x4EC2,0x82,0x14,0x7D,0x1F,0x29,0x4E,0x6D,0xA6);

/* Definition of interface: IRegistryKey */
#undef INTERFACE
#define INTERFACE IRegistryKey

DECLARE_INTERFACE_(IRegistryKey, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRegistryKey methods */
    STDMETHOD(AddKey)(THIS_ BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Addvalue)(THIS_ EnumRegistryDataType erdtDataType, BSTR strName, BSTR strValue, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_SubKeys)(THIS_ IRegistryKeys FAR* FAR* pKeys) PURE;
    STDMETHOD(get_Values)(THIS_ IRegistryValues FAR* FAR* pValues) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_UninstallOnly)(THIS_ VARIANT_BOOL FAR* UninstallOnly) PURE;
    STDMETHOD(put_UninstallOnly)(THIS_ VARIANT_BOOL UninstallOnly) PURE;
    STDMETHOD(get_AppendToExisting)(THIS_ VARIANT_BOOL FAR* AppendToExisting) PURE;
    STDMETHOD(put_AppendToExisting)(THIS_ VARIANT_BOOL AppendToExisting) PURE;
    STDMETHOD(get_PrependToExisting)(THIS_ VARIANT_BOOL FAR* PrependToExisting) PURE;
    STDMETHOD(put_PrependToExisting)(THIS_ VARIANT_BOOL PrependToExisting) PURE;
    STDMETHOD(get_RemoveAtInstallation)(THIS_ VARIANT_BOOL FAR* RemoveAtInstallation) PURE;
    STDMETHOD(put_RemoveAtInstallation)(THIS_ VARIANT_BOOL RemoveAtInstallation) PURE;
    STDMETHOD(get_RemoveAllValues)(THIS_ VARIANT_BOOL FAR* RemoveAllValues) PURE;
    STDMETHOD(put_RemoveAllValues)(THIS_ VARIANT_BOOL RemoveAllValues) PURE;
    STDMETHOD(get_RemoveAllSubKeys)(THIS_ VARIANT_BOOL FAR* RemoveAllSubKeys) PURE;
    STDMETHOD(put_RemoveAllSubKeys)(THIS_ VARIANT_BOOL RemoveAllSubKeys) PURE;
    STDMETHOD(get_KeyType)(THIS_ long FAR* KeyType) PURE;
    STDMETHOD(put_KeyType)(THIS_ long KeyType) PURE;
    STDMETHOD(InsertKey)(THIS_ IRegistryKey FAR* pRegKey) PURE;
    STDMETHOD(InsertValue)(THIS_ IRegistryValue FAR* pRegValue) PURE;
    STDMETHOD(InsertCopy)(THIS_ IRegistryKey FAR* pRegKey, VARIANT_BOOL bOverWrite) PURE;
    STDMETHOD(get_KeyMSIKey)(THIS_ BSTR FAR* sKeyMSIKey) PURE;
    STDMETHOD(put_KeyMSIKey)(THIS_ BSTR sKeyMSIKey) PURE;
};

DEFINE_GUID(IID_IRegistryKey2,0x75760525L,0xDD28,0x4E23,0x87,0xC9,0x93,0x36,0xF2,0x67,0x44,0x0F);

/* Definition of interface: IRegistryKey2 */
#undef INTERFACE
#define INTERFACE IRegistryKey2

DECLARE_INTERFACE_(IRegistryKey2, IRegistryKey)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRegistryKey methods */
    STDMETHOD(AddKey)(THIS_ BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Addvalue)(THIS_ EnumRegistryDataType erdtDataType, BSTR strName, BSTR strValue, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_SubKeys)(THIS_ IRegistryKeys FAR* FAR* pKeys) PURE;
    STDMETHOD(get_Values)(THIS_ IRegistryValues FAR* FAR* pValues) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_UninstallOnly)(THIS_ VARIANT_BOOL FAR* UninstallOnly) PURE;
    STDMETHOD(put_UninstallOnly)(THIS_ VARIANT_BOOL UninstallOnly) PURE;
    STDMETHOD(get_AppendToExisting)(THIS_ VARIANT_BOOL FAR* AppendToExisting) PURE;
    STDMETHOD(put_AppendToExisting)(THIS_ VARIANT_BOOL AppendToExisting) PURE;
    STDMETHOD(get_PrependToExisting)(THIS_ VARIANT_BOOL FAR* PrependToExisting) PURE;
    STDMETHOD(put_PrependToExisting)(THIS_ VARIANT_BOOL PrependToExisting) PURE;
    STDMETHOD(get_RemoveAtInstallation)(THIS_ VARIANT_BOOL FAR* RemoveAtInstallation) PURE;
    STDMETHOD(put_RemoveAtInstallation)(THIS_ VARIANT_BOOL RemoveAtInstallation) PURE;
    STDMETHOD(get_RemoveAllValues)(THIS_ VARIANT_BOOL FAR* RemoveAllValues) PURE;
    STDMETHOD(put_RemoveAllValues)(THIS_ VARIANT_BOOL RemoveAllValues) PURE;
    STDMETHOD(get_RemoveAllSubKeys)(THIS_ VARIANT_BOOL FAR* RemoveAllSubKeys) PURE;
    STDMETHOD(put_RemoveAllSubKeys)(THIS_ VARIANT_BOOL RemoveAllSubKeys) PURE;
    STDMETHOD(get_KeyType)(THIS_ long FAR* KeyType) PURE;
    STDMETHOD(put_KeyType)(THIS_ long KeyType) PURE;
    STDMETHOD(InsertKey)(THIS_ IRegistryKey FAR* pRegKey) PURE;
    STDMETHOD(InsertValue)(THIS_ IRegistryValue FAR* pRegValue) PURE;
    STDMETHOD(InsertCopy)(THIS_ IRegistryKey FAR* pRegKey, VARIANT_BOOL bOverWrite) PURE;
    STDMETHOD(get_KeyMSIKey)(THIS_ BSTR FAR* sKeyMSIKey) PURE;
    STDMETHOD(put_KeyMSIKey)(THIS_ BSTR sKeyMSIKey) PURE;
#endif

    /* IRegistryKey2 methods */
    STDMETHOD(get_KeyName)(THIS_ BSTR FAR* sKeyName) PURE;
    STDMETHOD(put_KeyName)(THIS_ BSTR KeyName) PURE;
    STDMETHOD(get_FullKeyPath)(THIS_ BSTR FAR* sFullKeyPath) PURE;
    STDMETHOD(get_InstallOp)(THIS_ EnumRegistryInstallOp FAR* erioOp) PURE;
    STDMETHOD(put_InstallOp)(THIS_ EnumRegistryInstallOp erioOp) PURE;
};

DEFINE_GUID(IID_IRegistryKeyNeptune,0x74A80D90L,0xFC4E,0x422D,0x9A,0x70,0x81,0x64,0x11,0x72,0x75,0x03);

/* Definition of interface: IRegistryKeyNeptune */
#undef INTERFACE
#define INTERFACE IRegistryKeyNeptune

DECLARE_INTERFACE_(IRegistryKeyNeptune, IRegistryKey2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRegistryKey methods */
    STDMETHOD(AddKey)(THIS_ BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Addvalue)(THIS_ EnumRegistryDataType erdtDataType, BSTR strName, BSTR strValue, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_SubKeys)(THIS_ IRegistryKeys FAR* FAR* pKeys) PURE;
    STDMETHOD(get_Values)(THIS_ IRegistryValues FAR* FAR* pValues) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_UninstallOnly)(THIS_ VARIANT_BOOL FAR* UninstallOnly) PURE;
    STDMETHOD(put_UninstallOnly)(THIS_ VARIANT_BOOL UninstallOnly) PURE;
    STDMETHOD(get_AppendToExisting)(THIS_ VARIANT_BOOL FAR* AppendToExisting) PURE;
    STDMETHOD(put_AppendToExisting)(THIS_ VARIANT_BOOL AppendToExisting) PURE;
    STDMETHOD(get_PrependToExisting)(THIS_ VARIANT_BOOL FAR* PrependToExisting) PURE;
    STDMETHOD(put_PrependToExisting)(THIS_ VARIANT_BOOL PrependToExisting) PURE;
    STDMETHOD(get_RemoveAtInstallation)(THIS_ VARIANT_BOOL FAR* RemoveAtInstallation) PURE;
    STDMETHOD(put_RemoveAtInstallation)(THIS_ VARIANT_BOOL RemoveAtInstallation) PURE;
    STDMETHOD(get_RemoveAllValues)(THIS_ VARIANT_BOOL FAR* RemoveAllValues) PURE;
    STDMETHOD(put_RemoveAllValues)(THIS_ VARIANT_BOOL RemoveAllValues) PURE;
    STDMETHOD(get_RemoveAllSubKeys)(THIS_ VARIANT_BOOL FAR* RemoveAllSubKeys) PURE;
    STDMETHOD(put_RemoveAllSubKeys)(THIS_ VARIANT_BOOL RemoveAllSubKeys) PURE;
    STDMETHOD(get_KeyType)(THIS_ long FAR* KeyType) PURE;
    STDMETHOD(put_KeyType)(THIS_ long KeyType) PURE;
    STDMETHOD(InsertKey)(THIS_ IRegistryKey FAR* pRegKey) PURE;
    STDMETHOD(InsertValue)(THIS_ IRegistryValue FAR* pRegValue) PURE;
    STDMETHOD(InsertCopy)(THIS_ IRegistryKey FAR* pRegKey, VARIANT_BOOL bOverWrite) PURE;
    STDMETHOD(get_KeyMSIKey)(THIS_ BSTR FAR* sKeyMSIKey) PURE;
    STDMETHOD(put_KeyMSIKey)(THIS_ BSTR sKeyMSIKey) PURE;

    /* IRegistryKey2 methods */
    STDMETHOD(get_KeyName)(THIS_ BSTR FAR* sKeyName) PURE;
    STDMETHOD(put_KeyName)(THIS_ BSTR KeyName) PURE;
    STDMETHOD(get_FullKeyPath)(THIS_ BSTR FAR* sFullKeyPath) PURE;
    STDMETHOD(get_InstallOp)(THIS_ EnumRegistryInstallOp FAR* erioOp) PURE;
    STDMETHOD(put_InstallOp)(THIS_ EnumRegistryInstallOp erioOp) PURE;
#endif

    /* IRegistryKeyNeptune methods */
    STDMETHOD(AddKeyEx)(THIS_ BSTR strName, BSTR bstrComponent, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrComponent) PURE;
    STDMETHOD(HasLockPermissions)(THIS_ BSTR strRegID, VARIANT_BOOL FAR* bHasLockPermissions) PURE;
};

DEFINE_GUID(IID_IRegistryKeyIbiza,0x94C87E74L,0x2915,0x4523,0x96,0xA1,0xD7,0x79,0x63,0x46,0xA3,0xC6);

/* Definition of interface: IRegistryKeyIbiza */
#undef INTERFACE
#define INTERFACE IRegistryKeyIbiza

DECLARE_INTERFACE_(IRegistryKeyIbiza, IRegistryKeyNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRegistryKey methods */
    STDMETHOD(AddKey)(THIS_ BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Addvalue)(THIS_ EnumRegistryDataType erdtDataType, BSTR strName, BSTR strValue, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_SubKeys)(THIS_ IRegistryKeys FAR* FAR* pKeys) PURE;
    STDMETHOD(get_Values)(THIS_ IRegistryValues FAR* FAR* pValues) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_UninstallOnly)(THIS_ VARIANT_BOOL FAR* UninstallOnly) PURE;
    STDMETHOD(put_UninstallOnly)(THIS_ VARIANT_BOOL UninstallOnly) PURE;
    STDMETHOD(get_AppendToExisting)(THIS_ VARIANT_BOOL FAR* AppendToExisting) PURE;
    STDMETHOD(put_AppendToExisting)(THIS_ VARIANT_BOOL AppendToExisting) PURE;
    STDMETHOD(get_PrependToExisting)(THIS_ VARIANT_BOOL FAR* PrependToExisting) PURE;
    STDMETHOD(put_PrependToExisting)(THIS_ VARIANT_BOOL PrependToExisting) PURE;
    STDMETHOD(get_RemoveAtInstallation)(THIS_ VARIANT_BOOL FAR* RemoveAtInstallation) PURE;
    STDMETHOD(put_RemoveAtInstallation)(THIS_ VARIANT_BOOL RemoveAtInstallation) PURE;
    STDMETHOD(get_RemoveAllValues)(THIS_ VARIANT_BOOL FAR* RemoveAllValues) PURE;
    STDMETHOD(put_RemoveAllValues)(THIS_ VARIANT_BOOL RemoveAllValues) PURE;
    STDMETHOD(get_RemoveAllSubKeys)(THIS_ VARIANT_BOOL FAR* RemoveAllSubKeys) PURE;
    STDMETHOD(put_RemoveAllSubKeys)(THIS_ VARIANT_BOOL RemoveAllSubKeys) PURE;
    STDMETHOD(get_KeyType)(THIS_ long FAR* KeyType) PURE;
    STDMETHOD(put_KeyType)(THIS_ long KeyType) PURE;
    STDMETHOD(InsertKey)(THIS_ IRegistryKey FAR* pRegKey) PURE;
    STDMETHOD(InsertValue)(THIS_ IRegistryValue FAR* pRegValue) PURE;
    STDMETHOD(InsertCopy)(THIS_ IRegistryKey FAR* pRegKey, VARIANT_BOOL bOverWrite) PURE;
    STDMETHOD(get_KeyMSIKey)(THIS_ BSTR FAR* sKeyMSIKey) PURE;
    STDMETHOD(put_KeyMSIKey)(THIS_ BSTR sKeyMSIKey) PURE;

    /* IRegistryKey2 methods */
    STDMETHOD(get_KeyName)(THIS_ BSTR FAR* sKeyName) PURE;
    STDMETHOD(put_KeyName)(THIS_ BSTR KeyName) PURE;
    STDMETHOD(get_FullKeyPath)(THIS_ BSTR FAR* sFullKeyPath) PURE;
    STDMETHOD(get_InstallOp)(THIS_ EnumRegistryInstallOp FAR* erioOp) PURE;
    STDMETHOD(put_InstallOp)(THIS_ EnumRegistryInstallOp erioOp) PURE;

    /* IRegistryKeyNeptune methods */
    STDMETHOD(AddKeyEx)(THIS_ BSTR strName, BSTR bstrComponent, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrComponent) PURE;
    STDMETHOD(HasLockPermissions)(THIS_ BSTR strRegID, VARIANT_BOOL FAR* bHasLockPermissions) PURE;
#endif

    /* IRegistryKeyIbiza methods */
    STDMETHOD(get_MSIRecordPath)(THIS_ BSTR FAR* sMsiRecordPath) PURE;
};

DEFINE_GUID(IID_IRegistryKeys,0xA7C345FFL,0x39F6,0x4635,0xAB,0xD6,0x95,0x05,0x4C,0xAF,0x7B,0x55);

/* Definition of interface: IRegistryKeys */
#undef INTERFACE
#define INTERFACE IRegistryKeys

DECLARE_INTERFACE_(IRegistryKeys, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRegistryKeys methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IRegistryKey FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IRegistryEntries,0x4133B341L,0x3B8E,0x42B9,0x83,0x8E,0x48,0xE1,0x6D,0xEB,0x7C,0xC2);

/* Definition of interface: IRegistryEntries */
#undef INTERFACE
#define INTERFACE IRegistryEntries

DECLARE_INTERFACE_(IRegistryEntries, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRegistryEntries methods */
    STDMETHOD(get_ClassesRoot)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_LocalMachine)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_CurrentUser)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_Users)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_UserSelectable)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
};

DEFINE_GUID(IID_IRegistryEntriesPunk,0x28325CCFL,0xE0F7,0x4E8A,0xAD,0x3E,0xFD,0x9C,0x5E,0xBD,0x7C,0x9D);

/* Definition of interface: IRegistryEntriesPunk */
#undef INTERFACE
#define INTERFACE IRegistryEntriesPunk

DECLARE_INTERFACE_(IRegistryEntriesPunk, IRegistryEntries)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRegistryEntries methods */
    STDMETHOD(get_ClassesRoot)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_LocalMachine)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_CurrentUser)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_Users)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_UserSelectable)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
#endif

    /* IRegistryEntriesPunk methods */
    STDMETHOD(get_ClassesRootEx)(THIS_ EnumRegistryPlatform eTargetPlatform, IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_LocalMachineEx)(THIS_ EnumRegistryPlatform eTargetPlatform, IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_CurrentUserEx)(THIS_ EnumRegistryPlatform eTargetPlatform, IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_UsersEx)(THIS_ EnumRegistryPlatform eTargetPlatform, IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_UserSelectableEx)(THIS_ EnumRegistryPlatform eTargetPlatform, IRegistryKey FAR* FAR* pKey) PURE;
};

DEFINE_GUID(IID_IRegistryEntriesPunkSP,0xDA70DDADL,0x4942,0x487F,0x99,0xB0,0x18,0x6F,0xB6,0x57,0x9B,0xF1);

/* Definition of interface: IRegistryEntriesPunkSP */
#undef INTERFACE
#define INTERFACE IRegistryEntriesPunkSP

DECLARE_INTERFACE_(IRegistryEntriesPunkSP, IRegistryEntriesPunk)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRegistryEntries methods */
    STDMETHOD(get_ClassesRoot)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_LocalMachine)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_CurrentUser)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_Users)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_UserSelectable)(THIS_ IRegistryKey FAR* FAR* pKey) PURE;

    /* IRegistryEntriesPunk methods */
    STDMETHOD(get_ClassesRootEx)(THIS_ EnumRegistryPlatform eTargetPlatform, IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_LocalMachineEx)(THIS_ EnumRegistryPlatform eTargetPlatform, IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_CurrentUserEx)(THIS_ EnumRegistryPlatform eTargetPlatform, IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_UsersEx)(THIS_ EnumRegistryPlatform eTargetPlatform, IRegistryKey FAR* FAR* pKey) PURE;
    STDMETHOD(get_UserSelectableEx)(THIS_ EnumRegistryPlatform eTargetPlatform, IRegistryKey FAR* FAR* pKey) PURE;
#endif

    /* IRegistryEntriesPunkSP methods */
    STDMETHOD(put_RefreshNeeded)(THIS_ VARIANT_BOOL vbVal) PURE;
};

DEFINE_GUID(IID_IAppPath,0x8D85715EL,0x6FAC,0x47DD,0xB7,0xE8,0x2C,0xC7,0x6B,0x8D,0x58,0xB4);

/* Definition of interface: IAppPath */
#undef INTERFACE
#define INTERFACE IAppPath

DECLARE_INTERFACE_(IAppPath, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IAppPath methods */
    STDMETHOD(get_File)(THIS_ BSTR FAR* File) PURE;
    STDMETHOD(put_File)(THIS_ BSTR File) PURE;
    STDMETHOD(get_ApplicationPath)(THIS_ BSTR FAR* ApplicationPath) PURE;
    STDMETHOD(put_ApplicationPath)(THIS_ BSTR ApplicationPath) PURE;
};

DEFINE_GUID(IID_IAppPaths,0x10079B58L,0x11DC,0x41E4,0x96,0x92,0x88,0xED,0x23,0x67,0x87,0x34);

/* Definition of interface: IAppPaths */
#undef INTERFACE
#define INTERFACE IAppPaths

DECLARE_INTERFACE_(IAppPaths, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IAppPaths methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IAppPath FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

DEFINE_GUID(IID_ILightRegistryEntry,0x2390D0A5L,0x3EBC,0x4900,0x9F,0x00,0xEC,0xBD,0x58,0x06,0x14,0xE0);

/* Definition of interface: ILightRegistryEntry */
#undef INTERFACE
#define INTERFACE ILightRegistryEntry

DECLARE_INTERFACE_(ILightRegistryEntry, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightRegistryEntry methods */
    STDMETHOD(put_Registry)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Registry)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Root)(THIS_ long lVal) PURE;
    STDMETHOD(get_Root)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(SetValue)(THIS_ long lType, BSTR bstrValue) PURE;
    STDMETHOD(Save)(THIS) PURE;
};

DEFINE_GUID(IID_ILightRegistryEntryJustice,0x91A19B09L,0xEC47,0x4DC3,0x80,0xAF,0x74,0x22,0x6E,0x5C,0xFB,0x31);

/* Definition of interface: ILightRegistryEntryJustice */
#undef INTERFACE
#define INTERFACE ILightRegistryEntryJustice

DECLARE_INTERFACE_(ILightRegistryEntryJustice, ILightRegistryEntry)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILightRegistryEntry methods */
    STDMETHOD(put_Registry)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Registry)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Root)(THIS_ long lVal) PURE;
    STDMETHOD(get_Root)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(SetValue)(THIS_ long lType, BSTR bstrValue) PURE;
    STDMETHOD(Save)(THIS) PURE;
#endif

    /* ILightRegistryEntryJustice methods */
    STDMETHOD(put_RegistryEx)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_RegistryEx)(THIS_ BSTR FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_ILightRegistry,0x7A7B4DB4L,0x8AD0,0x4478,0xB3,0xAF,0xBB,0x66,0xA0,0x01,0x4F,0x2C);

/* Definition of interface: ILightRegistry */
#undef INTERFACE
#define INTERFACE ILightRegistry

DECLARE_INTERFACE_(ILightRegistry, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightRegistry methods */
    STDMETHOD(OpenSession)(THIS) PURE;
    STDMETHOD(CloseSession)(THIS) PURE;
    STDMETHOD(NewEntry)(THIS_ ILightRegistryEntry FAR* FAR* pLightRegEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightRegistryEntry FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ILightRegistryPunkSP,0xB7DE1F40L,0xF37A,0x49B3,0xA7,0x7A,0x9A,0xCB,0xE0,0xB1,0x09,0x0B);

/* Definition of interface: ILightRegistryPunkSP */
#undef INTERFACE
#define INTERFACE ILightRegistryPunkSP

DECLARE_INTERFACE_(ILightRegistryPunkSP, ILightRegistry)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILightRegistry methods */
    STDMETHOD(OpenSession)(THIS) PURE;
    STDMETHOD(CloseSession)(THIS) PURE;
    STDMETHOD(NewEntry)(THIS_ ILightRegistryEntry FAR* FAR* pLightRegEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightRegistryEntry FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
#endif

    /* ILightRegistryPunkSP methods */
    STDMETHOD(get_IsTableEmpty)(THIS_ VARIANT_BOOL FAR* pvbEmpty) PURE;
};

DEFINE_GUID(IID_IRegistrySetNeptune,0xB2A05148L,0x1E1F,0x4A43,0x9D,0xBB,0x73,0xAC,0xF7,0x14,0xD7,0x8D);

/* Definition of interface: IRegistrySetNeptune */
#undef INTERFACE
#define INTERFACE IRegistrySetNeptune

DECLARE_INTERFACE_(IRegistrySetNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRegistrySetNeptune methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_IsDefault)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
};

DEFINE_GUID(IID_IRegistrySetsNeptune,0x5F6F9252L,0x9369,0x4CFB,0xB9,0x75,0x23,0x44,0x38,0x86,0x3C,0x31);

/* Definition of interface: IRegistrySetsNeptune */
#undef INTERFACE
#define INTERFACE IRegistrySetsNeptune

DECLARE_INTERFACE_(IRegistrySetsNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRegistrySetsNeptune methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IRegistrySetNeptune FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumComponentChild {
    eccIniFile = 1,
    eccServiceControl = 2,
    eccServiceInstall = 3,
    eccODBCDriver = 4,
    eccODBCDataSource = 5,
    eccODBCTranslator = 6,
    eccFolder = 7,
    eccShortcut = 8,
    eccFileExtension = 9,
    eccProgID = 10,
    eccPubComp = 11,
    eccClass = 12,
    eccAppPath = 13,
    eccTypeLib = 14,
    eccCreateFolder = 15,
    eccDotNetMsiAssembly = 16,
    eccWin32MsiAssembly = 17,
    eccMsiAssemblyName = 18,
    eccComPlusApplication = 19,
    eccComponentSubfolder = 20,
    eccDriverPackage = 21,
    eccSQLScript = 22,
    eccVRoot = 23,
    eccCEApp = 24,
    eccPalmApp = 25,
    eccIisWebServiceExtension = 26,
    eccIisAppPool = 27,
    eccEnvironment = 28,
    eccIisItem = 29,
    eccSearchReplaceSet = 30,
    eccMsiServiceConfig = 31,
    eccMsiServiceConfigFailureAction = 32,
    eccNetworkShare = 33,
    eccScheduledTask = 34,
    eccRemoveFile = 35
} EnumComponentChild;

typedef enum EnumDisplayComponentChild {
    edccFile = 1,
    edccRegistry = 2,
    edccShortcut = 3,
    edccAdvancedSettings = 4,
    edccAppPath = 5,
    edccAssembly = 6,
    edccComRegistration = 7,
    edccFileTypes = 8,
    edccControlService = 9,
    edccInstallService = 10,
    edccPublishing = 11,
    edccODBC = 12,
    edccAny = 13,
    edccComponentSubfolder = 14,
    edccEnvironment = 15,
    edccIniFile = 16,
    edccRemoveReg = 17,
    edccComPlus = 18,
    edccDuplicateFile = 19,
    edccMoveFile = 20,
    edccRemoveIniFile = 21,
    edccReserveCost = 22,
    edccOtherData = 23,
    edccService = 24
} EnumDisplayComponentChild;

typedef enum EnumPropComponent {
    epcName = 0,
    epcGuid = 10,
    epcKeyPath = 11,
    epcDestination = 12,
    epcRunFromSource = 13,
    epcCondition = 14,
    epcTransitive = 15,
    epcSelfRegister = 16,
    epcRegistration = 16,
    epcCheckVersion = 17,
    epcComments = 18,
    epcKeyPathType = 19,
    epcNeverOverwrite = 20,
    epcPermanent = 21,
    epcSharedDLLRefCount = 22,
    epcType = 23,
    epcLinkingType = 24,
    epcDynamicFileSpec = 25,
    epcExcludeFlags = 26,
    epcIncludeFlags = 27,
    epcLangFilter = 28,
    epcCompressType = 29,
    epcSourceLocation = 30,
    epc64Bit = 31
} EnumPropComponent;

typedef enum EnumCompressionType {
    ectSinglePack = 1,
    ectUncompressed = 2,
    ectCombination = 4
} EnumCompressionType;

typedef enum EnumKeyPathType {
    kptRegistry = 1,
    kptFile = 2,
    kptFolder = 3,
    kptODBC = 4
} EnumKeyPathType;

typedef enum EnumRunFromSource {
    rfsLocal = 0,
    rfsSource = 1,
    rfsFollowParent = 2
} EnumRunFromSource;

typedef enum EnumComponentType {
    ctGeneral = 1,
    ctComServer = 2,
    ctFont = 4,
    ctHelp = 8,
    ctInstallService = 16,
    ctControlService = 32,
    ctODBCDriver = 64,
    ctODBCDataSource = 128,
    ctODBCTranslator = 256
} EnumComponentType;

typedef enum EnumFolderType {
    eftRoot = 1,
    eftTaskBar = 2,
    eftDeskTop = 3,
    eftSendTo = 4,
    eftStartMenu = 5,
    eftProgramMenu = 6,
    eftStartUp = 7
} EnumFolderType;

typedef enum EnumRegistrationType {
    ertStatic = 0,
    ertSelfReg = -1,
    ertDynamic = -2
} EnumRegistrationType;

typedef enum EnumODBCResourcesType {
    eortAny = 0,
    eortDrivers = 1,
    eortTranslators = 2,
    eortDataSources = 3
} EnumODBCResourcesType;

typedef enum EnumISDNetScanAtBuild {
    ednbNone = 0,
    ednbProps = 1,
    ednbDepAndProps = 2
} EnumISDNetScanAtBuild;

typedef enum EnumComponentSubfolderChild {
    ecsFolder = 1
} EnumComponentSubfolderChild;

typedef enum EnumComponentOverwriteMainOptions {
    ecomoAlways = 0,
    ecomoNever = 1,
    ecomoByDate = 2,
    ecomoByVersion = 3,
    ecomoByVersionThenDate = 4
} EnumComponentOverwriteMainOptions;

typedef enum EnumComponentOverwriteSubOptions {
    ecomsoNewer = 0,
    ecomsoNewerOrSame = 1,
    ecomsoOlder = 2
} EnumComponentOverwriteSubOptions;

typedef enum EnumComponentPlatformSuiteCheck {
    ecpscSuiteIndependent = 0,
    ecpscAtLeastOne = 1,
    ecpscAll = 2
} EnumComponentPlatformSuiteCheck;

typedef enum EnumPlatformSuites {
    epsWinXPPro = 1,
    epsWinXPHome = 2,
    epsWinServer = 4,
    epsWinWorkstation = 8,
    epsTerminalServices = 16,
    epsMSBackOffice = 32,
    epsWin2kOrWinDotNetDatacenterServer = 64,
    epsWin2kAdvSvrOrWinDotNetEnterpriseServer = 128,
    epsMSSmallBusinessServer = 256,
    epsMSSmallBusinessServerWithRestrictiveLiscense = 512,
    epsArchIa64 = 1024,
    epsArchAmd64 = 2048,
    epsArchIntel32 = 4096,
    epsWinServer2003R2 = 8192,
    epsCountDefaultSuites = 8,
    epsCountAllSuites = 14
} EnumPlatformSuites;

interface IFileSetsNeptune;

interface IFileSetDirectoryNeptune;

DEFINE_GUID(IID_IFileSetNeptune,0xF54E4B26L,0x47C2,0x4617,0x8E,0xD2,0x1E,0x39,0x93,0xB5,0x01,0x67);

/* Definition of interface: IFileSetNeptune */
#undef INTERFACE
#define INTERFACE IFileSetNeptune

DECLARE_INTERFACE_(IFileSetNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileSetNeptune methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_FileSetDirectory)(THIS_ IFileSetDirectoryNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(put_FileSetDirectory)(THIS_ IFileSetDirectoryNeptune FAR* pVal) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(RefreshFileHeader)(THIS) PURE;
    STDMETHOD(get_DisplayName)(THIS_ VARIANT_BOOL vbCompact, BSTR FAR* pRet) PURE;
    STDMETHOD(get_ContainingComponent)(THIS_ IComponent FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_IFileSetsNeptune,0xFD00B9B9L,0xBA1E,0x4769,0x9A,0xBE,0x26,0xD4,0xE8,0x9D,0x41,0x0F);

/* Definition of interface: IFileSetsNeptune */
#undef INTERFACE
#define INTERFACE IFileSetsNeptune

DECLARE_INTERFACE_(IFileSetsNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileSetsNeptune methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IFileSetNeptune FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

interface IComponentSubfoldersNeptune;

DEFINE_GUID(IID_IComponentSubfolderNeptune,0x4E64EE68L,0xC418,0x4B1D,0x88,0x0C,0x7A,0x55,0xF9,0x59,0x3D,0x13);

/* Definition of interface: IComponentSubfolderNeptune */
#undef INTERFACE
#define INTERFACE IComponentSubfolderNeptune

DECLARE_INTERFACE_(IComponentSubfolderNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IComponentSubfolderNeptune methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_Subfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumComponentSubfolderChild ecsChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_ISSubFolderVal)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsStatic)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(ChangeIntoComponent)(THIS_ IComponent FAR* pNewSelf) PURE;
    STDMETHOD(MoveToComponent)(THIS_ IComponent FAR* pNewParent) PURE;
    STDMETHOD(MoveToComponentSubfolder)(THIS_ IComponentSubfolderNeptune FAR* pNewParent) PURE;
};

DEFINE_GUID(IID_IComponentSubfoldersNeptune,0xC7819B60L,0xC801,0x425D,0xB0,0x86,0x62,0x95,0xE5,0xA0,0x89,0x30);

/* Definition of interface: IComponentSubfoldersNeptune */
#undef INTERFACE
#define INTERFACE IComponentSubfoldersNeptune

DECLARE_INTERFACE_(IComponentSubfoldersNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IComponentSubfoldersNeptune methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IComponentSubfolderNeptune FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

interface IISComponentExtended;

DEFINE_GUID(IID_IComponent,0x8127ACC9L,0x8746,0x4F41,0xA8,0xB1,0xA3,0xEB,0x96,0x62,0x22,0x42);

/* Definition of interface: IComponent */
#undef INTERFACE
#define INTERFACE IComponent

DECLARE_INTERFACE_(IComponent, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;
};

interface IPubComps;

interface IClasses;

interface ITypeLibs;

DEFINE_GUID(IID_IComponent2,0x37308DCDL,0x3F85,0x43B2,0xAE,0x92,0x62,0xFB,0x81,0xB7,0x02,0x92);

/* Definition of interface: IComponent2 */
#undef INTERFACE
#define INTERFACE IComponent2

DECLARE_INTERFACE_(IComponent2, IComponent)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;
#endif

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
};

interface IISComPlusApplicationsNeptune;

DEFINE_GUID(IID_IComponentNeptune,0xCD030CB7L,0x1230,0x4244,0xAC,0xBA,0xD6,0xEF,0xE8,0x95,0xB9,0x66);

/* Definition of interface: IComponentNeptune */
#undef INTERFACE
#define INTERFACE IComponentNeptune

DECLARE_INTERFACE_(IComponentNeptune, IComponent2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
#endif

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
};

interface IDeviceDriverPackageNeptunePDC;

DEFINE_GUID(IID_IComponentNeptunePDC,0xE170AFDCL,0xFDFD,0x4669,0xA4,0x39,0x4C,0xB4,0xEA,0xDD,0xC0,0xC7);

/* Definition of interface: IComponentNeptunePDC */
#undef INTERFACE
#define INTERFACE IComponentNeptunePDC

DECLARE_INTERFACE_(IComponentNeptunePDC, IComponentNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
#endif

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;
};

interface IISComPlusProxiesProteus;

interface IVRoots;

interface ICEApps;

interface IPalmAppsProteus;

DEFINE_GUID(IID_IComponentProteus,0x588CC6ABL,0xCE37,0x4B12,0xBD,0x57,0xFF,0x94,0xB9,0x1E,0xCD,0xA5);

/* Definition of interface: IComponentProteus */
#undef INTERFACE
#define INTERFACE IComponentProteus

DECLARE_INTERFACE_(IComponentProteus, IComponentNeptunePDC)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;
#endif

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;
};

DEFINE_GUID(IID_IComponentProteusSP2,0xD130D9CAL,0xE08A,0x440E,0x9D,0xDD,0xFF,0xE6,0x04,0xB2,0xD9,0x1B);

/* Definition of interface: IComponentProteusSP2 */
#undef INTERFACE
#define INTERFACE IComponentProteusSP2

DECLARE_INTERFACE_(IComponentProteusSP2, IComponentProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;
#endif

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;
};

interface IXmlFilesPluto;

DEFINE_GUID(IID_IComponentPluto,0x50BA62F0L,0xF041,0x4A74,0xA7,0x33,0x1A,0xAB,0xEA,0x63,0x25,0x03);

/* Definition of interface: IComponentPluto */
#undef INTERFACE
#define INTERFACE IComponentPluto

DECLARE_INTERFACE_(IComponentPluto, IComponentProteusSP2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;
#endif

    /* IComponentPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(ImportXmlFile)(THIS_ BSTR bstrXmlFilePath, BSTR bstrXmlElementsToImport, VARIANT_BOOL vbIncludeSubElements, VARIANT_BOOL vbIncludeAttribs) PURE;
};

interface IIisWebServiceExtensions;

interface IIisAppPools;

DEFINE_GUID(IID_IComponentIbiza,0x963FC6EEL,0xFC8E,0x49BA,0x89,0x27,0x82,0x54,0x5A,0xF6,0xB6,0x22);

/* Definition of interface: IComponentIbiza */
#undef INTERFACE
#define INTERFACE IComponentIbiza

DECLARE_INTERFACE_(IComponentIbiza, IComponentPluto)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;

    /* IComponentPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(ImportXmlFile)(THIS_ BSTR bstrXmlFilePath, BSTR bstrXmlElementsToImport, VARIANT_BOOL vbIncludeSubElements, VARIANT_BOOL vbIncludeAttribs) PURE;
#endif

    /* IComponentIbiza methods */
    STDMETHOD(CreateDuplicateComponent)(THIS_ IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisAppPools FAR* FAR* ppVal) PURE;
};

interface IProject;

DEFINE_GUID(IID_IComponentIxtapa,0xA555A381L,0x5D56,0x4FB0,0xB0,0x9A,0x73,0xD7,0x57,0x9C,0x24,0xDC);

/* Definition of interface: IComponentIxtapa */
#undef INTERFACE
#define INTERFACE IComponentIxtapa

DECLARE_INTERFACE_(IComponentIxtapa, IComponentIbiza)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;

    /* IComponentPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(ImportXmlFile)(THIS_ BSTR bstrXmlFilePath, BSTR bstrXmlElementsToImport, VARIANT_BOOL vbIncludeSubElements, VARIANT_BOOL vbIncludeAttribs) PURE;

    /* IComponentIbiza methods */
    STDMETHOD(CreateDuplicateComponent)(THIS_ IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisAppPools FAR* FAR* ppVal) PURE;
#endif

    /* IComponentIxtapa methods */
    STDMETHOD(ImportREGFileDuringBuild)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths, IProject FAR* pSrcProjectForBuild) PURE;
};

DEFINE_GUID(IID_IComponentIndore,0x18DB88B2L,0x15E8,0x4AD5,0x89,0xF2,0x18,0x66,0x3B,0xF6,0x25,0x2E);

/* Definition of interface: IComponentIndore */
#undef INTERFACE
#define INTERFACE IComponentIndore

DECLARE_INTERFACE_(IComponentIndore, IComponentIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;

    /* IComponentPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(ImportXmlFile)(THIS_ BSTR bstrXmlFilePath, BSTR bstrXmlElementsToImport, VARIANT_BOOL vbIncludeSubElements, VARIANT_BOOL vbIncludeAttribs) PURE;

    /* IComponentIbiza methods */
    STDMETHOD(CreateDuplicateComponent)(THIS_ IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisAppPools FAR* FAR* ppVal) PURE;

    /* IComponentIxtapa methods */
    STDMETHOD(ImportREGFileDuringBuild)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths, IProject FAR* pSrcProjectForBuild) PURE;
#endif

    /* IComponentIndore methods */
    STDMETHOD(get_DisableRegistryReflection)(THIS_ VARIANT_BOOL FAR* DisableRegistryReflection) PURE;
    STDMETHOD(put_DisableRegistryReflection)(THIS_ VARIANT_BOOL DisableRegistryReflection) PURE;
};

interface IEnvironments;

DEFINE_GUID(IID_IComponentIronwood,0x3DABCEB5L,0xD13F,0x4487,0xA1,0xE3,0x6E,0xCF,0xDD,0x80,0xA0,0xDE);

/* Definition of interface: IComponentIronwood */
#undef INTERFACE
#define INTERFACE IComponentIronwood

DECLARE_INTERFACE_(IComponentIronwood, IComponentIndore)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;

    /* IComponentPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(ImportXmlFile)(THIS_ BSTR bstrXmlFilePath, BSTR bstrXmlElementsToImport, VARIANT_BOOL vbIncludeSubElements, VARIANT_BOOL vbIncludeAttribs) PURE;

    /* IComponentIbiza methods */
    STDMETHOD(CreateDuplicateComponent)(THIS_ IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisAppPools FAR* FAR* ppVal) PURE;

    /* IComponentIxtapa methods */
    STDMETHOD(ImportREGFileDuringBuild)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths, IProject FAR* pSrcProjectForBuild) PURE;

    /* IComponentIndore methods */
    STDMETHOD(get_DisableRegistryReflection)(THIS_ VARIANT_BOOL FAR* DisableRegistryReflection) PURE;
    STDMETHOD(put_DisableRegistryReflection)(THIS_ VARIANT_BOOL DisableRegistryReflection) PURE;
#endif

    /* IComponentIronwood methods */
    STDMETHOD(CreateDuplicateComponentEx)(THIS_ VARIANT_BOOL vbDeepAll, IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
};

DEFINE_GUID(IID_IComponentJustice,0xC2E10874L,0xAB8D,0x4761,0xB4,0xE8,0x62,0xDA,0x99,0xBB,0x2C,0xAC);

/* Definition of interface: IComponentJustice */
#undef INTERFACE
#define INTERFACE IComponentJustice

DECLARE_INTERFACE_(IComponentJustice, IComponentIronwood)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;

    /* IComponentPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(ImportXmlFile)(THIS_ BSTR bstrXmlFilePath, BSTR bstrXmlElementsToImport, VARIANT_BOOL vbIncludeSubElements, VARIANT_BOOL vbIncludeAttribs) PURE;

    /* IComponentIbiza methods */
    STDMETHOD(CreateDuplicateComponent)(THIS_ IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisAppPools FAR* FAR* ppVal) PURE;

    /* IComponentIxtapa methods */
    STDMETHOD(ImportREGFileDuringBuild)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths, IProject FAR* pSrcProjectForBuild) PURE;

    /* IComponentIndore methods */
    STDMETHOD(get_DisableRegistryReflection)(THIS_ VARIANT_BOOL FAR* DisableRegistryReflection) PURE;
    STDMETHOD(put_DisableRegistryReflection)(THIS_ VARIANT_BOOL DisableRegistryReflection) PURE;

    /* IComponentIronwood methods */
    STDMETHOD(CreateDuplicateComponentEx)(THIS_ VARIANT_BOOL vbDeepAll, IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
#endif

    /* IComponentJustice methods */
    STDMETHOD(get_KeyPathWithMMGuid)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(get_ComponentAttributesShared)(THIS_ VARIANT_BOOL FAR* vbComponentShared) PURE;
    STDMETHOD(put_ComponentAttributesShared)(THIS_ VARIANT_BOOL vbComponentShared) PURE;
    STDMETHOD(get_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(put_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL vbSupersede) PURE;
};

interface IIisItems;

DEFINE_GUID(IID_IComponentLoyalty,0x9EEF0497L,0x3EBC,0x4B92,0x9A,0xE3,0xDF,0xAF,0x89,0x9D,0xA0,0x11);

/* Definition of interface: IComponentLoyalty */
#undef INTERFACE
#define INTERFACE IComponentLoyalty

DECLARE_INTERFACE_(IComponentLoyalty, IComponentJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;

    /* IComponentPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(ImportXmlFile)(THIS_ BSTR bstrXmlFilePath, BSTR bstrXmlElementsToImport, VARIANT_BOOL vbIncludeSubElements, VARIANT_BOOL vbIncludeAttribs) PURE;

    /* IComponentIbiza methods */
    STDMETHOD(CreateDuplicateComponent)(THIS_ IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisAppPools FAR* FAR* ppVal) PURE;

    /* IComponentIxtapa methods */
    STDMETHOD(ImportREGFileDuringBuild)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths, IProject FAR* pSrcProjectForBuild) PURE;

    /* IComponentIndore methods */
    STDMETHOD(get_DisableRegistryReflection)(THIS_ VARIANT_BOOL FAR* DisableRegistryReflection) PURE;
    STDMETHOD(put_DisableRegistryReflection)(THIS_ VARIANT_BOOL DisableRegistryReflection) PURE;

    /* IComponentIronwood methods */
    STDMETHOD(CreateDuplicateComponentEx)(THIS_ VARIANT_BOOL vbDeepAll, IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;

    /* IComponentJustice methods */
    STDMETHOD(get_KeyPathWithMMGuid)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(get_ComponentAttributesShared)(THIS_ VARIANT_BOOL FAR* vbComponentShared) PURE;
    STDMETHOD(put_ComponentAttributesShared)(THIS_ VARIANT_BOOL vbComponentShared) PURE;
    STDMETHOD(get_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(put_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL vbSupersede) PURE;
#endif

    /* IComponentLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppWebServiceExtensions) PURE;
};

DEFINE_GUID(IID_IComponentLoyaltySP1,0x5F31F09AL,0x631A,0x4FD1,0x98,0xD7,0xD2,0x72,0x50,0x43,0x6F,0x2E);

/* Definition of interface: IComponentLoyaltySP1 */
#undef INTERFACE
#define INTERFACE IComponentLoyaltySP1

DECLARE_INTERFACE_(IComponentLoyaltySP1, IComponentLoyalty)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;

    /* IComponentPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(ImportXmlFile)(THIS_ BSTR bstrXmlFilePath, BSTR bstrXmlElementsToImport, VARIANT_BOOL vbIncludeSubElements, VARIANT_BOOL vbIncludeAttribs) PURE;

    /* IComponentIbiza methods */
    STDMETHOD(CreateDuplicateComponent)(THIS_ IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisAppPools FAR* FAR* ppVal) PURE;

    /* IComponentIxtapa methods */
    STDMETHOD(ImportREGFileDuringBuild)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths, IProject FAR* pSrcProjectForBuild) PURE;

    /* IComponentIndore methods */
    STDMETHOD(get_DisableRegistryReflection)(THIS_ VARIANT_BOOL FAR* DisableRegistryReflection) PURE;
    STDMETHOD(put_DisableRegistryReflection)(THIS_ VARIANT_BOOL DisableRegistryReflection) PURE;

    /* IComponentIronwood methods */
    STDMETHOD(CreateDuplicateComponentEx)(THIS_ VARIANT_BOOL vbDeepAll, IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;

    /* IComponentJustice methods */
    STDMETHOD(get_KeyPathWithMMGuid)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(get_ComponentAttributesShared)(THIS_ VARIANT_BOOL FAR* vbComponentShared) PURE;
    STDMETHOD(put_ComponentAttributesShared)(THIS_ VARIANT_BOOL vbComponentShared) PURE;
    STDMETHOD(get_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(put_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL vbSupersede) PURE;

    /* IComponentLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppWebServiceExtensions) PURE;
#endif

    /* IComponentLoyaltySP1 methods */
    STDMETHOD(get_MsiServiceConfigs)(THIS_ IMsiServiceConfigs FAR* FAR* ppMsiServiceConfigss) PURE;
    STDMETHOD(get_MsiServiceConfigFailureActions)(THIS_ IMsiServiceConfigFailureActions FAR* FAR* ppMsiServiceConfigFailureActions) PURE;
    STDMETHOD(GetServiceByName)(THIS_ BSTR bstrName, BSTR bstrTableName, IBusinessObject FAR* FAR* ppBusObj) PURE;
    STDMETHOD(get_ServiceControlsByName)(THIS_ BSTR bstrName, IServiceControls FAR* FAR* ppSvcCtrls) PURE;
    STDMETHOD(get_MsiServiceConfigsByName)(THIS_ BSTR bstrName, IMsiServiceConfigs FAR* FAR* ppSvcCfgs) PURE;
    STDMETHOD(get_MsiServiceConfigActionFailuresByName)(THIS_ BSTR bstrName, IMsiServiceConfigFailureActions FAR* FAR* ppSvcCfgFailActions) PURE;
};

DEFINE_GUID(IID_IComponentOpus,0x9AD7422BL,0x23CD,0x47E0,0xA8,0x4E,0xB3,0xF1,0xF7,0xD9,0x46,0xDD);

/* Definition of interface: IComponentOpus */
#undef INTERFACE
#define INTERFACE IComponentOpus

DECLARE_INTERFACE_(IComponentOpus, IComponentLoyaltySP1)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;

    /* IComponentPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(ImportXmlFile)(THIS_ BSTR bstrXmlFilePath, BSTR bstrXmlElementsToImport, VARIANT_BOOL vbIncludeSubElements, VARIANT_BOOL vbIncludeAttribs) PURE;

    /* IComponentIbiza methods */
    STDMETHOD(CreateDuplicateComponent)(THIS_ IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisAppPools FAR* FAR* ppVal) PURE;

    /* IComponentIxtapa methods */
    STDMETHOD(ImportREGFileDuringBuild)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths, IProject FAR* pSrcProjectForBuild) PURE;

    /* IComponentIndore methods */
    STDMETHOD(get_DisableRegistryReflection)(THIS_ VARIANT_BOOL FAR* DisableRegistryReflection) PURE;
    STDMETHOD(put_DisableRegistryReflection)(THIS_ VARIANT_BOOL DisableRegistryReflection) PURE;

    /* IComponentIronwood methods */
    STDMETHOD(CreateDuplicateComponentEx)(THIS_ VARIANT_BOOL vbDeepAll, IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;

    /* IComponentJustice methods */
    STDMETHOD(get_KeyPathWithMMGuid)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(get_ComponentAttributesShared)(THIS_ VARIANT_BOOL FAR* vbComponentShared) PURE;
    STDMETHOD(put_ComponentAttributesShared)(THIS_ VARIANT_BOOL vbComponentShared) PURE;
    STDMETHOD(get_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(put_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL vbSupersede) PURE;

    /* IComponentLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppWebServiceExtensions) PURE;

    /* IComponentLoyaltySP1 methods */
    STDMETHOD(get_MsiServiceConfigs)(THIS_ IMsiServiceConfigs FAR* FAR* ppMsiServiceConfigss) PURE;
    STDMETHOD(get_MsiServiceConfigFailureActions)(THIS_ IMsiServiceConfigFailureActions FAR* FAR* ppMsiServiceConfigFailureActions) PURE;
    STDMETHOD(GetServiceByName)(THIS_ BSTR bstrName, BSTR bstrTableName, IBusinessObject FAR* FAR* ppBusObj) PURE;
    STDMETHOD(get_ServiceControlsByName)(THIS_ BSTR bstrName, IServiceControls FAR* FAR* ppSvcCtrls) PURE;
    STDMETHOD(get_MsiServiceConfigsByName)(THIS_ BSTR bstrName, IMsiServiceConfigs FAR* FAR* ppSvcCfgs) PURE;
    STDMETHOD(get_MsiServiceConfigActionFailuresByName)(THIS_ BSTR bstrName, IMsiServiceConfigFailureActions FAR* FAR* ppSvcCfgFailActions) PURE;
#endif

    /* IComponentOpus methods */
    STDMETHOD(get_NetworkShare)(THIS_ INetworkShare FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_IComponentPunk,0x0AB8CAD2L,0x2990,0x4404,0xB3,0x2B,0x58,0xC7,0x12,0xC6,0x3F,0xB5);

/* Definition of interface: IComponentPunk */
#undef INTERFACE
#define INTERFACE IComponentPunk

DECLARE_INTERFACE_(IComponentPunk, IComponentOpus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;

    /* IComponentPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(ImportXmlFile)(THIS_ BSTR bstrXmlFilePath, BSTR bstrXmlElementsToImport, VARIANT_BOOL vbIncludeSubElements, VARIANT_BOOL vbIncludeAttribs) PURE;

    /* IComponentIbiza methods */
    STDMETHOD(CreateDuplicateComponent)(THIS_ IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisAppPools FAR* FAR* ppVal) PURE;

    /* IComponentIxtapa methods */
    STDMETHOD(ImportREGFileDuringBuild)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths, IProject FAR* pSrcProjectForBuild) PURE;

    /* IComponentIndore methods */
    STDMETHOD(get_DisableRegistryReflection)(THIS_ VARIANT_BOOL FAR* DisableRegistryReflection) PURE;
    STDMETHOD(put_DisableRegistryReflection)(THIS_ VARIANT_BOOL DisableRegistryReflection) PURE;

    /* IComponentIronwood methods */
    STDMETHOD(CreateDuplicateComponentEx)(THIS_ VARIANT_BOOL vbDeepAll, IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;

    /* IComponentJustice methods */
    STDMETHOD(get_KeyPathWithMMGuid)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(get_ComponentAttributesShared)(THIS_ VARIANT_BOOL FAR* vbComponentShared) PURE;
    STDMETHOD(put_ComponentAttributesShared)(THIS_ VARIANT_BOOL vbComponentShared) PURE;
    STDMETHOD(get_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(put_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL vbSupersede) PURE;

    /* IComponentLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppWebServiceExtensions) PURE;

    /* IComponentLoyaltySP1 methods */
    STDMETHOD(get_MsiServiceConfigs)(THIS_ IMsiServiceConfigs FAR* FAR* ppMsiServiceConfigss) PURE;
    STDMETHOD(get_MsiServiceConfigFailureActions)(THIS_ IMsiServiceConfigFailureActions FAR* FAR* ppMsiServiceConfigFailureActions) PURE;
    STDMETHOD(GetServiceByName)(THIS_ BSTR bstrName, BSTR bstrTableName, IBusinessObject FAR* FAR* ppBusObj) PURE;
    STDMETHOD(get_ServiceControlsByName)(THIS_ BSTR bstrName, IServiceControls FAR* FAR* ppSvcCtrls) PURE;
    STDMETHOD(get_MsiServiceConfigsByName)(THIS_ BSTR bstrName, IMsiServiceConfigs FAR* FAR* ppSvcCfgs) PURE;
    STDMETHOD(get_MsiServiceConfigActionFailuresByName)(THIS_ BSTR bstrName, IMsiServiceConfigFailureActions FAR* FAR* ppSvcCfgFailActions) PURE;

    /* IComponentOpus methods */
    STDMETHOD(get_NetworkShare)(THIS_ INetworkShare FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;
#endif

    /* IComponentPunk methods */
    STDMETHOD(get_DefaultServiceControl)(THIS_ BSTR bstrName, VARIANT_BOOL vbCreateIfMissing, IServiceControl FAR* FAR* ppVal) PURE;
    STDMETHOD(get_HasServiceByName)(THIS_ BSTR bstrName, VARIANT_BOOL FAR* vbHasServiceByName) PURE;
};

DEFINE_GUID(IID_IComponentQi,0x00EF082DL,0x5787,0x42C5,0xAD,0x22,0x8C,0x63,0xD5,0xE0,0xA4,0xFD);

/* Definition of interface: IComponentQi */
#undef INTERFACE
#define INTERFACE IComponentQi

DECLARE_INTERFACE_(IComponentQi, IComponentPunk)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;

    /* IComponentPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(ImportXmlFile)(THIS_ BSTR bstrXmlFilePath, BSTR bstrXmlElementsToImport, VARIANT_BOOL vbIncludeSubElements, VARIANT_BOOL vbIncludeAttribs) PURE;

    /* IComponentIbiza methods */
    STDMETHOD(CreateDuplicateComponent)(THIS_ IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisAppPools FAR* FAR* ppVal) PURE;

    /* IComponentIxtapa methods */
    STDMETHOD(ImportREGFileDuringBuild)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths, IProject FAR* pSrcProjectForBuild) PURE;

    /* IComponentIndore methods */
    STDMETHOD(get_DisableRegistryReflection)(THIS_ VARIANT_BOOL FAR* DisableRegistryReflection) PURE;
    STDMETHOD(put_DisableRegistryReflection)(THIS_ VARIANT_BOOL DisableRegistryReflection) PURE;

    /* IComponentIronwood methods */
    STDMETHOD(CreateDuplicateComponentEx)(THIS_ VARIANT_BOOL vbDeepAll, IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;

    /* IComponentJustice methods */
    STDMETHOD(get_KeyPathWithMMGuid)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(get_ComponentAttributesShared)(THIS_ VARIANT_BOOL FAR* vbComponentShared) PURE;
    STDMETHOD(put_ComponentAttributesShared)(THIS_ VARIANT_BOOL vbComponentShared) PURE;
    STDMETHOD(get_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(put_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL vbSupersede) PURE;

    /* IComponentLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppWebServiceExtensions) PURE;

    /* IComponentLoyaltySP1 methods */
    STDMETHOD(get_MsiServiceConfigs)(THIS_ IMsiServiceConfigs FAR* FAR* ppMsiServiceConfigss) PURE;
    STDMETHOD(get_MsiServiceConfigFailureActions)(THIS_ IMsiServiceConfigFailureActions FAR* FAR* ppMsiServiceConfigFailureActions) PURE;
    STDMETHOD(GetServiceByName)(THIS_ BSTR bstrName, BSTR bstrTableName, IBusinessObject FAR* FAR* ppBusObj) PURE;
    STDMETHOD(get_ServiceControlsByName)(THIS_ BSTR bstrName, IServiceControls FAR* FAR* ppSvcCtrls) PURE;
    STDMETHOD(get_MsiServiceConfigsByName)(THIS_ BSTR bstrName, IMsiServiceConfigs FAR* FAR* ppSvcCfgs) PURE;
    STDMETHOD(get_MsiServiceConfigActionFailuresByName)(THIS_ BSTR bstrName, IMsiServiceConfigFailureActions FAR* FAR* ppSvcCfgFailActions) PURE;

    /* IComponentOpus methods */
    STDMETHOD(get_NetworkShare)(THIS_ INetworkShare FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;

    /* IComponentPunk methods */
    STDMETHOD(get_DefaultServiceControl)(THIS_ BSTR bstrName, VARIANT_BOOL vbCreateIfMissing, IServiceControl FAR* FAR* ppVal) PURE;
    STDMETHOD(get_HasServiceByName)(THIS_ BSTR bstrName, VARIANT_BOOL FAR* vbHasServiceByName) PURE;
#endif

    /* IComponentQi methods */
    STDMETHOD(get_RemoveFiles)(THIS_ IRemoveFiles FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_IComponentRipley,0x847151ADL,0x3D75,0x477A,0xA3,0xE0,0x43,0x25,0xDD,0x20,0x86,0x51);

/* Definition of interface: IComponentRipley */
#undef INTERFACE
#define INTERFACE IComponentRipley

DECLARE_INTERFACE_(IComponentRipley, IComponentQi)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;

    /* IComponentPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(ImportXmlFile)(THIS_ BSTR bstrXmlFilePath, BSTR bstrXmlElementsToImport, VARIANT_BOOL vbIncludeSubElements, VARIANT_BOOL vbIncludeAttribs) PURE;

    /* IComponentIbiza methods */
    STDMETHOD(CreateDuplicateComponent)(THIS_ IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisAppPools FAR* FAR* ppVal) PURE;

    /* IComponentIxtapa methods */
    STDMETHOD(ImportREGFileDuringBuild)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths, IProject FAR* pSrcProjectForBuild) PURE;

    /* IComponentIndore methods */
    STDMETHOD(get_DisableRegistryReflection)(THIS_ VARIANT_BOOL FAR* DisableRegistryReflection) PURE;
    STDMETHOD(put_DisableRegistryReflection)(THIS_ VARIANT_BOOL DisableRegistryReflection) PURE;

    /* IComponentIronwood methods */
    STDMETHOD(CreateDuplicateComponentEx)(THIS_ VARIANT_BOOL vbDeepAll, IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;

    /* IComponentJustice methods */
    STDMETHOD(get_KeyPathWithMMGuid)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(get_ComponentAttributesShared)(THIS_ VARIANT_BOOL FAR* vbComponentShared) PURE;
    STDMETHOD(put_ComponentAttributesShared)(THIS_ VARIANT_BOOL vbComponentShared) PURE;
    STDMETHOD(get_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(put_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL vbSupersede) PURE;

    /* IComponentLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppWebServiceExtensions) PURE;

    /* IComponentLoyaltySP1 methods */
    STDMETHOD(get_MsiServiceConfigs)(THIS_ IMsiServiceConfigs FAR* FAR* ppMsiServiceConfigss) PURE;
    STDMETHOD(get_MsiServiceConfigFailureActions)(THIS_ IMsiServiceConfigFailureActions FAR* FAR* ppMsiServiceConfigFailureActions) PURE;
    STDMETHOD(GetServiceByName)(THIS_ BSTR bstrName, BSTR bstrTableName, IBusinessObject FAR* FAR* ppBusObj) PURE;
    STDMETHOD(get_ServiceControlsByName)(THIS_ BSTR bstrName, IServiceControls FAR* FAR* ppSvcCtrls) PURE;
    STDMETHOD(get_MsiServiceConfigsByName)(THIS_ BSTR bstrName, IMsiServiceConfigs FAR* FAR* ppSvcCfgs) PURE;
    STDMETHOD(get_MsiServiceConfigActionFailuresByName)(THIS_ BSTR bstrName, IMsiServiceConfigFailureActions FAR* FAR* ppSvcCfgFailActions) PURE;

    /* IComponentOpus methods */
    STDMETHOD(get_NetworkShare)(THIS_ INetworkShare FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;

    /* IComponentPunk methods */
    STDMETHOD(get_DefaultServiceControl)(THIS_ BSTR bstrName, VARIANT_BOOL vbCreateIfMissing, IServiceControl FAR* FAR* ppVal) PURE;
    STDMETHOD(get_HasServiceByName)(THIS_ BSTR bstrName, VARIANT_BOOL FAR* vbHasServiceByName) PURE;

    /* IComponentQi methods */
    STDMETHOD(get_RemoveFiles)(THIS_ IRemoveFiles FAR* FAR* ppVal) PURE;
#endif

    /* IComponentRipley methods */
    STDMETHOD(get_IsDeletable)(THIS_ VARIANT_BOOL FAR* pvbVal) PURE;
};

interface ISearchReplaceSets;

DEFINE_GUID(IID_IComponentSecret,0x32D3EA1AL,0xB22F,0x4962,0x92,0x92,0x80,0xB1,0x02,0x42,0xB6,0x4D);

/* Definition of interface: IComponentSecret */
#undef INTERFACE
#define INTERFACE IComponentSecret

DECLARE_INTERFACE_(IComponentSecret, IComponentRipley)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponent methods */
    STDMETHOD(AddChild)(THIS_ EnumComponentChild eccChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_FileHeader)(THIS_ IFileHeader FAR* FAR* pVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegEntries) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ServiceControls)(THIS_ IServiceControls FAR* FAR* pServiceControls) PURE;
    STDMETHOD(get_ServiceInstalls)(THIS_ IServiceInstalls FAR* FAR* pServiceInstalls) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pDrivers) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pSources) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pTranslators) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR KeyPath) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_RunFromSource)(THIS_ EnumRunFromSource FAR* RunFromSource) PURE;
    STDMETHOD(put_RunFromSource)(THIS_ EnumRunFromSource RunFromSource) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Condition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Condition) PURE;
    STDMETHOD(get_Transitive)(THIS_ VARIANT_BOOL FAR* Transitive) PURE;
    STDMETHOD(put_Transitive)(THIS_ VARIANT_BOOL Transitive) PURE;
    STDMETHOD(get_SelfRegister)(THIS_ VARIANT_BOOL FAR* SelfRegister) PURE;
    STDMETHOD(put_SelfRegister)(THIS_ VARIANT_BOOL SelfRegister) PURE;
    STDMETHOD(get_CheckVersion)(THIS_ VARIANT_BOOL FAR* CheckVersion) PURE;
    STDMETHOD(put_CheckVersion)(THIS_ VARIANT_BOOL CheckVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_KeyPathType)(THIS_ EnumKeyPathType FAR* KeyPathType) PURE;
    STDMETHOD(put_KeyPathType)(THIS_ EnumKeyPathType KeyPathType) PURE;
    STDMETHOD(get_NeverOverwrite)(THIS_ VARIANT_BOOL FAR* NeverOverwrite) PURE;
    STDMETHOD(put_NeverOverwrite)(THIS_ VARIANT_BOOL NeverOverwrite) PURE;
    STDMETHOD(get_Permanent)(THIS_ VARIANT_BOOL FAR* Permanent) PURE;
    STDMETHOD(put_Permanent)(THIS_ VARIANT_BOOL Permanent) PURE;
    STDMETHOD(get_SharedDLLRefCount)(THIS_ VARIANT_BOOL FAR* SharedDLLRefCount) PURE;
    STDMETHOD(put_SharedDLLRefCount)(THIS_ VARIANT_BOOL SharedDLLRefCount) PURE;
    STDMETHOD(get_Type)(THIS_ EnumComponentType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumComponentType Type) PURE;
    STDMETHOD(get_LangFilter)(THIS_ BSTR FAR* sLangFilter) PURE;
    STDMETHOD(put_LangFilter)(THIS_ BSTR sLangFilter) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_CompressionType)(THIS_ EnumCompressionType FAR* eCompressionType) PURE;
    STDMETHOD(put_CompressionType)(THIS_ EnumCompressionType eCompressionType) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ BSTR FAR* sSourceLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ BSTR sSourceLocation) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumRegistrationType FAR* Registration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumRegistrationType Registration) PURE;
    STDMETHOD(AddDynamicSubFolders)(THIS_ VARIANT pFileLinking) PURE;
    STDMETHOD(AnalyzeComponentForCom)(THIS_ VARIANT_BOOL bDeleteCom, VARIANT_BOOL FAR* bHasCom, long FAR* lReturn) PURE;
    STDMETHOD(InsertIniFile)(THIS_ IIniFile FAR* pObject) PURE;
    STDMETHOD(get_FileExtensions)(THIS_ IFileExtensions FAR* FAR* pFileExtensions) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(InsertProgID)(THIS_ IProgID FAR* pObject) PURE;
    STDMETHOD(get_HasODBCResources)(THIS_ EnumODBCResourcesType eRT, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Refcount)(THIS_ long FAR* lCount) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(get_ParentFeatureKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ParentFeatureNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_HasShellResources)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_StoreKey)(THIS_ BSTR FAR* pStrStoreKey) PURE;
    STDMETHOD(get_Attrib64Bit)(THIS_ VARIANT_BOOL FAR* Attrib64Bit) PURE;
    STDMETHOD(put_Attrib64Bit)(THIS_ VARIANT_BOOL Attrib64Bit) PURE;

    /* IComponent2 methods */
    STDMETHOD(get_PubComps)(THIS_ IPubComps FAR* FAR* ppPubComps) PURE;
    STDMETHOD(get_ClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_ExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_RawName)(THIS_ BSTR FAR* RawName) PURE;
    STDMETHOD(put_RawName)(THIS_ BSTR RawName) PURE;
    STDMETHOD(get_Classes)(THIS_ IClasses FAR* FAR* ppClasses) PURE;
    STDMETHOD(get_AppPaths)(THIS_ IAppPaths FAR* FAR* ppAppPaths) PURE;
    STDMETHOD(get_TypeLibs)(THIS_ ITypeLibs FAR* FAR* ppTypeLibs) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_VersionIndependentClassProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_VersionIndependentExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ProgIDs) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VersionedClassProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_VersionedExtensionProgIDs)(THIS_ IProgIDs FAR* FAR* ppProgIDs) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* sOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long sOSFilter) PURE;
    STDMETHOD(get_MsiAssembly)(THIS_ IMsiAssembly FAR* FAR* ppMsiAssembly) PURE;
    STDMETHOD(get_MsiAssemblyNames)(THIS_ IMsiAssemblyNames FAR* FAR* ppMsiAssemblyNames) PURE;
    STDMETHOD(get_DisplayCondition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayCondition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuild)(THIS_ EnumISDNetScanAtBuild Val) PURE;
    STDMETHOD(get_DNetAssemblyScanAtBuildFile)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyScanAtBuildFile)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyCOMInteropAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFile)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(get_RegFileToMergeAtBuild)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_RegFileToMergeAtBuild)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_DNetAssemblyInstallerClassAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ImportREGFileEx)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath) PURE;
    STDMETHOD(get_HasLockPermissions)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_HasLockPermissions)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(RefreshRegistryEntries)(THIS) PURE;
    STDMETHOD(get_IsAnyFileReferencedByODBC)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_JITCompileAtInstall)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_JITCompileAtInstall)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(put_DNetInstallerArgsInstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsInstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsCommit)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsCommit)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsUninstall)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsUninstall)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_DNetInstallerArgsRollback)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DNetInstallerArgsRollback)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pVal) PURE;

    /* IComponentNeptune methods */
    STDMETHOD(get_ComplusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ComponentSubfolders)(THIS_ IComponentSubfoldersNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_DotNetAssembly)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_DotNetAssembly)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteMainOptions)(THIS_ EnumComponentOverwriteMainOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsVersion)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions FAR* Val) PURE;
    STDMETHOD(put_OverwriteSubOptionsDate)(THIS_ EnumComponentOverwriteSubOptions Val) PURE;
    STDMETHOD(get_StaticFiles)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_StaticFiles)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Difference)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_Difference)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck FAR* Val) PURE;
    STDMETHOD(put_PlatformSuiteCheck)(THIS_ EnumComponentPlatformSuiteCheck Val) PURE;
    STDMETHOD(get_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_IsPlatformSelected)(THIS_ EnumPlatformSuites Suite, VARIANT_BOOL Val) PURE;
    STDMETHOD(put_PlatformSuiteDirect)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_PlatformSuites)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(get_PotentiallyLocked)(THIS_ VARIANT_BOOL FAR* Val) PURE;
    STDMETHOD(put_PotentiallyLocked)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* Val) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ParentFeatureUniqueKeys)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IComponentNeptunePDC methods */
    STDMETHOD(get_DeviceDriverPackage)(THIS_ IDeviceDriverPackageNeptunePDC FAR* FAR* ppVal) PURE;

    /* IComponentProteus methods */
    STDMETHOD(CopyParentFeatures)(THIS_ IComponent FAR* pCopyTo) PURE;
    STDMETHOD(get_ComplusProxies)(THIS_ IISComPlusProxiesProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVal) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppVal) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL FAR* vbBool) PURE;
    STDMETHOD(put_DeviceDriverScanAtBuild)(THIS_ VARIANT_BOOL vbBool) PURE;

    /* IComponentProteusSP2 methods */
    STDMETHOD(ImportREGFileEx2)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths) PURE;

    /* IComponentPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(ImportXmlFile)(THIS_ BSTR bstrXmlFilePath, BSTR bstrXmlElementsToImport, VARIANT_BOOL vbIncludeSubElements, VARIANT_BOOL vbIncludeAttribs) PURE;

    /* IComponentIbiza methods */
    STDMETHOD(CreateDuplicateComponent)(THIS_ IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisAppPools FAR* FAR* ppVal) PURE;

    /* IComponentIxtapa methods */
    STDMETHOD(ImportREGFileDuringBuild)(THIS_ BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents, VARIANT_BOOL bTranslatePathsToMsiDirIds, BSTR sComponentKeyFilePath, VARIANT_BOOL bUseLongPaths, IProject FAR* pSrcProjectForBuild) PURE;

    /* IComponentIndore methods */
    STDMETHOD(get_DisableRegistryReflection)(THIS_ VARIANT_BOOL FAR* DisableRegistryReflection) PURE;
    STDMETHOD(put_DisableRegistryReflection)(THIS_ VARIANT_BOOL DisableRegistryReflection) PURE;

    /* IComponentIronwood methods */
    STDMETHOD(CreateDuplicateComponentEx)(THIS_ VARIANT_BOOL vbDeepAll, IComponentIbiza FAR* FAR* ppDup) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;

    /* IComponentJustice methods */
    STDMETHOD(get_KeyPathWithMMGuid)(THIS_ BSTR FAR* KeyPath) PURE;
    STDMETHOD(get_ComponentAttributesShared)(THIS_ VARIANT_BOOL FAR* vbComponentShared) PURE;
    STDMETHOD(put_ComponentAttributesShared)(THIS_ VARIANT_BOOL vbComponentShared) PURE;
    STDMETHOD(get_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(put_ComponentAttributesUninstallOnSupersedence)(THIS_ VARIANT_BOOL vbSupersede) PURE;

    /* IComponentLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppWebServiceExtensions) PURE;

    /* IComponentLoyaltySP1 methods */
    STDMETHOD(get_MsiServiceConfigs)(THIS_ IMsiServiceConfigs FAR* FAR* ppMsiServiceConfigss) PURE;
    STDMETHOD(get_MsiServiceConfigFailureActions)(THIS_ IMsiServiceConfigFailureActions FAR* FAR* ppMsiServiceConfigFailureActions) PURE;
    STDMETHOD(GetServiceByName)(THIS_ BSTR bstrName, BSTR bstrTableName, IBusinessObject FAR* FAR* ppBusObj) PURE;
    STDMETHOD(get_ServiceControlsByName)(THIS_ BSTR bstrName, IServiceControls FAR* FAR* ppSvcCtrls) PURE;
    STDMETHOD(get_MsiServiceConfigsByName)(THIS_ BSTR bstrName, IMsiServiceConfigs FAR* FAR* ppSvcCfgs) PURE;
    STDMETHOD(get_MsiServiceConfigActionFailuresByName)(THIS_ BSTR bstrName, IMsiServiceConfigFailureActions FAR* FAR* ppSvcCfgFailActions) PURE;

    /* IComponentOpus methods */
    STDMETHOD(get_NetworkShare)(THIS_ INetworkShare FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;

    /* IComponentPunk methods */
    STDMETHOD(get_DefaultServiceControl)(THIS_ BSTR bstrName, VARIANT_BOOL vbCreateIfMissing, IServiceControl FAR* FAR* ppVal) PURE;
    STDMETHOD(get_HasServiceByName)(THIS_ BSTR bstrName, VARIANT_BOOL FAR* vbHasServiceByName) PURE;

    /* IComponentQi methods */
    STDMETHOD(get_RemoveFiles)(THIS_ IRemoveFiles FAR* FAR* ppVal) PURE;

    /* IComponentRipley methods */
    STDMETHOD(get_IsDeletable)(THIS_ VARIANT_BOOL FAR* pvbVal) PURE;
#endif

    /* IComponentSecret methods */
    STDMETHOD(get_SearchReplaceSets)(THIS_ ISearchReplaceSets FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_IComponents,0xB2B542CEL,0x1DD1,0x47B3,0xB5,0xC5,0xA6,0x31,0xF9,0x78,0x6C,0xAB);

/* Definition of interface: IComponents */
#undef INTERFACE
#define INTERFACE IComponents

DECLARE_INTERFACE_(IComponents, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IComponents methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IComponent FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IComponentsIronwood,0x6B6405ECL,0xDAFA,0x49B2,0x82,0x2F,0x12,0x94,0x82,0x66,0xB4,0x75);

/* Definition of interface: IComponentsIronwood */
#undef INTERFACE
#define INTERFACE IComponentsIronwood

DECLARE_INTERFACE_(IComponentsIronwood, IComponents)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IComponents methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IComponent FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
#endif

    /* IComponentsIronwood methods */
    STDMETHOD(get_ItemEx)(THIS_ VARIANT Item, IComponent FAR* FAR* Return) PURE;
};

DEFINE_GUID(IID_IComponentChild,0xFEB87AF1L,0x2D25,0x47A9,0xA2,0x1B,0x33,0xFC,0xBF,0x74,0xD3,0x73);

/* Definition of interface: IComponentChild */
#undef INTERFACE
#define INTERFACE IComponentChild

DECLARE_INTERFACE_(IComponentChild, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IComponentChild methods */
    STDMETHOD(get_Component)(THIS_ IComponent FAR* FAR* pComponent) PURE;
};

DEFINE_GUID(IID_IISComponentExtended,0xE9B81729L,0x9461,0x4184,0x9A,0xA9,0x3C,0x2A,0xE3,0x10,0x51,0x73);

/* Definition of interface: IISComponentExtended */
#undef INTERFACE
#define INTERFACE IISComponentExtended

DECLARE_INTERFACE_(IISComponentExtended, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISComponentExtended methods */
    STDMETHOD(get_OS)(THIS_ long FAR* bstrVal) PURE;
    STDMETHOD(put_OS)(THIS_ long bstrVal) PURE;
    STDMETHOD(get_Language)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Language)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FilterProperty)(THIS_ BSTR FAR* FilterProperty) PURE;
    STDMETHOD(put_FilterProperty)(THIS_ BSTR FilterProperty) PURE;
};

DEFINE_GUID(IID_IISComponentExtendeds,0x3A55B523L,0x54B5,0x4AB2,0x95,0xAF,0xB7,0x47,0xEC,0x01,0x72,0x6F);

/* Definition of interface: IISComponentExtendeds */
#undef INTERFACE
#define INTERFACE IISComponentExtendeds

DECLARE_INTERFACE_(IISComponentExtendeds, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISComponentExtendeds methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IISComponentExtended FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ILightComponentEntry,0x3E7A5463L,0xE5B9,0x4B30,0x84,0x05,0xDE,0x96,0x6C,0x9E,0xCC,0x60);

/* Definition of interface: ILightComponentEntry */
#undef INTERFACE
#define INTERFACE ILightComponentEntry

DECLARE_INTERFACE_(ILightComponentEntry, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComponentEntry methods */
    STDMETHOD(put_Component)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Attributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_ComponentID)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ComponentID)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Feature)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Feature)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISComments)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComments)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(Save)(THIS) PURE;
};

DEFINE_GUID(IID_ILightComponentEntryIndore,0x91E07862L,0xBABD,0x44FF,0x8D,0x88,0x72,0xF7,0xCA,0x75,0xC7,0xB5);

/* Definition of interface: ILightComponentEntryIndore */
#undef INTERFACE
#define INTERFACE ILightComponentEntryIndore

DECLARE_INTERFACE_(ILightComponentEntryIndore, ILightComponentEntry)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILightComponentEntry methods */
    STDMETHOD(put_Component)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Attributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_ComponentID)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ComponentID)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_KeyPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_KeyPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Feature)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Feature)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISComments)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComments)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(Save)(THIS) PURE;
#endif

    /* ILightComponentEntryIndore methods */
    STDMETHOD(put_ComponentEx)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ComponentEx)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pvbVal) PURE;
    STDMETHOD(HasChild)(THIS_ EnumDisplayComponentChild edccChild, VARIANT_BOOL FAR* pVal) PURE;
};

DEFINE_GUID(IID_ILightComponent,0xD21F71A3L,0xFCC0,0x4272,0xBA,0x31,0x80,0x1F,0xDA,0x5B,0x24,0x2E);

/* Definition of interface: ILightComponent */
#undef INTERFACE
#define INTERFACE ILightComponent

DECLARE_INTERFACE_(ILightComponent, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComponent methods */
    STDMETHOD(OpenSession)(THIS) PURE;
    STDMETHOD(CloseSession)(THIS) PURE;
    STDMETHOD(NewEntry)(THIS_ ILightComponentEntry FAR* FAR* pLightComponentEntry) PURE;
};

DEFINE_GUID(IID_ILightComponentIndore,0x9A5AB5E0L,0x43DE,0x45B0,0x80,0xF9,0x8E,0xF6,0xC0,0xF3,0xD8,0x71);

/* Definition of interface: ILightComponentIndore */
#undef INTERFACE
#define INTERFACE ILightComponentIndore

DECLARE_INTERFACE_(ILightComponentIndore, ILightComponent)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILightComponent methods */
    STDMETHOD(OpenSession)(THIS) PURE;
    STDMETHOD(CloseSession)(THIS) PURE;
    STDMETHOD(NewEntry)(THIS_ ILightComponentEntry FAR* FAR* pLightComponentEntry) PURE;
#endif

    /* ILightComponentIndore methods */
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightComponentEntry FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(get_ItemEx)(THIS_ VARIANT Item, ILightComponentEntry FAR* FAR* Return) PURE;
};

typedef enum EnumPropMergeModule {
    emmpName = 0,
    emmpDestination = 10
} EnumPropMergeModule;

typedef enum EnumMergeModuleChild {
    emmcCustomAction = 1,
    emmcDialog = 2
} EnumMergeModuleChild;

typedef enum EnumISObjectChild {
    eiocProperty = 1
} EnumISObjectChild;

typedef enum EnumMMAuthoringAddRemove {
    emmarDependency = 0,
    emmarExclusion = 1
} EnumMMAuthoringAddRemove;

typedef enum EnumMsmCfgValueFormat {
    emcfText = 0,
    emcfKey = 1,
    emcfInteger = 2,
    emcfBitfield = 3
} EnumMsmCfgValueFormat;

DEFINE_GUID(IID_IMergeModuleCfgValue,0x3CDFA53BL,0x1E40,0x49A9,0xAB,0x54,0xEF,0x84,0x61,0x2C,0x9A,0x40);

/* Definition of interface: IMergeModuleCfgValue */
#undef INTERFACE
#define INTERFACE IMergeModuleCfgValue

DECLARE_INTERFACE_(IMergeModuleCfgValue, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMergeModuleCfgValue methods */
    STDMETHOD(get_ISMergeModule)(THIS_ BSTR FAR* pbstrISMergeModule) PURE;
    STDMETHOD(get_Language)(THIS_ short FAR* pnLangID) PURE;
    STDMETHOD(get_ModuleConfiguration)(THIS_ BSTR FAR* pbstrModuleConfiguration) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pbstrValue) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(get_Format)(THIS_ EnumMsmCfgValueFormat FAR* pemcfFormat) PURE;
    STDMETHOD(get_Type)(THIS_ BSTR FAR* pbstrType) PURE;
    STDMETHOD(get_ContextData)(THIS_ BSTR FAR* pbstrContextData) PURE;
    STDMETHOD(get_DefaultValue)(THIS_ BSTR FAR* pbstrDefaultValue) PURE;
    STDMETHOD(get_Attributes)(THIS_ short FAR* pnAttributes) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pbstrDisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pbstrDescription) PURE;
    STDMETHOD(get_HelpLocation)(THIS_ BSTR FAR* pbstrHelpLocation) PURE;
    STDMETHOD(get_HelpKeyword)(THIS_ BSTR FAR* pbstrHelpKeyword) PURE;
    STDMETHOD(get_ValueOptions)(THIS_ IIsStrings FAR* FAR* ppValueOptionsEnumDisplayNames, IIsStrings FAR* FAR* ppValueOptionsEnumActualValues) PURE;
};

DEFINE_GUID(IID_IMergeModuleCfgValues,0x6632F233L,0xA853,0x4ACA,0x9E,0x31,0xDF,0x42,0x4A,0x1A,0xB8,0x6F);

/* Definition of interface: IMergeModuleCfgValues */
#undef INTERFACE
#define INTERFACE IMergeModuleCfgValues

DECLARE_INTERFACE_(IMergeModuleCfgValues, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMergeModuleCfgValues methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IMergeModuleCfgValue FAR* FAR* pMergeModuleCfgValue) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IMergeModule,0x4F0E756FL,0x1AE5,0x4D89,0x8B,0xFB,0x10,0xF6,0x17,0x97,0xF8,0x54);

/* Definition of interface: IMergeModule */
#undef INTERFACE
#define INTERFACE IMergeModule

DECLARE_INTERFACE_(IMergeModule, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMergeModule methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(get_Author)(THIS_ BSTR FAR* sAuthor) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* sComment) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* sVersion) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* sDestination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR sDestination) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* sGuid) PURE;
    STDMETHOD(get_Dependencies)(THIS_ IMMDependencies FAR* FAR* pDependencies) PURE;
    STDMETHOD(get_Exclusions)(THIS_ IMMExclusions FAR* FAR* pExclusions) PURE;
    STDMETHOD(AddChild)(THIS_ EnumMergeModuleChild emMMChild, BSTR strName, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IMMDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_CustomActions)(THIS_ IMMCustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_MsmDialogs)(THIS_ IDispatch * FAR* pDialogs) PURE;
    STDMETHOD(get_MsmCustomActions)(THIS_ IDispatch * FAR* pCustomActions) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
};

DEFINE_GUID(IID_IMergeModule2,0x08FDD9F0L,0xF3C4,0x4490,0xAB,0x94,0xE7,0x0F,0x82,0xC0,0x28,0x27);

/* Definition of interface: IMergeModule2 */
#undef INTERFACE
#define INTERFACE IMergeModule2

DECLARE_INTERFACE_(IMergeModule2, IMergeModule)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IMergeModule methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(get_Author)(THIS_ BSTR FAR* sAuthor) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* sComment) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* sVersion) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* sDestination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR sDestination) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* sGuid) PURE;
    STDMETHOD(get_Dependencies)(THIS_ IMMDependencies FAR* FAR* pDependencies) PURE;
    STDMETHOD(get_Exclusions)(THIS_ IMMExclusions FAR* FAR* pExclusions) PURE;
    STDMETHOD(AddChild)(THIS_ EnumMergeModuleChild emMMChild, BSTR strName, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IMMDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_CustomActions)(THIS_ IMMCustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_MsmDialogs)(THIS_ IDispatch * FAR* pDialogs) PURE;
    STDMETHOD(get_MsmCustomActions)(THIS_ IDispatch * FAR* pCustomActions) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
#endif

    /* IMergeModule2 methods */
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(get_Language)(THIS_ short FAR* nLanguage) PURE;
    STDMETHOD(put_Language)(THIS_ short nLanguage) PURE;
    STDMETHOD(get_ObjectProgID)(THIS_ BSTR FAR* bstrObjectProgID) PURE;
    STDMETHOD(get_Files)(THIS_ IMMFiles FAR* FAR* pFiles) PURE;
};

DEFINE_GUID(IID_IMergeModule3,0x55725EC2L,0x5C85,0x41C4,0xB6,0xF1,0xD0,0xC5,0xE2,0xBE,0xE2,0x97);

/* Definition of interface: IMergeModule3 */
#undef INTERFACE
#define INTERFACE IMergeModule3

DECLARE_INTERFACE_(IMergeModule3, IMergeModule2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IMergeModule methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(get_Author)(THIS_ BSTR FAR* sAuthor) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* sComment) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* sVersion) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* sDestination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR sDestination) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* sGuid) PURE;
    STDMETHOD(get_Dependencies)(THIS_ IMMDependencies FAR* FAR* pDependencies) PURE;
    STDMETHOD(get_Exclusions)(THIS_ IMMExclusions FAR* FAR* pExclusions) PURE;
    STDMETHOD(AddChild)(THIS_ EnumMergeModuleChild emMMChild, BSTR strName, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IMMDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_CustomActions)(THIS_ IMMCustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_MsmDialogs)(THIS_ IDispatch * FAR* pDialogs) PURE;
    STDMETHOD(get_MsmCustomActions)(THIS_ IDispatch * FAR* pCustomActions) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IMergeModule2 methods */
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(get_Language)(THIS_ short FAR* nLanguage) PURE;
    STDMETHOD(put_Language)(THIS_ short nLanguage) PURE;
    STDMETHOD(get_ObjectProgID)(THIS_ BSTR FAR* bstrObjectProgID) PURE;
    STDMETHOD(get_Files)(THIS_ IMMFiles FAR* FAR* pFiles) PURE;
#endif

    /* IMergeModule3 methods */
    STDMETHOD(get_MergeModuleCfgValues)(THIS_ IMergeModuleCfgValues FAR* FAR* ppMsmCfgValues) PURE;
    STDMETHOD(get_UniqueID)(THIS_ BSTR FAR* pbstrUniqueID) PURE;
    STDMETHOD(get_IsObject)(THIS_ VARIANT_BOOL FAR* pIsObj) PURE;
    STDMETHOD(put_IsObject)(THIS_ VARIANT_BOOL IsObj) PURE;
    STDMETHOD(ReInitCfgValues)(THIS) PURE;
    STDMETHOD(get_DirectModeMediaLocation)(THIS_ EnumFileCompTypes FAR* efctCompressionType) PURE;
    STDMETHOD(put_DirectModeMediaLocation)(THIS_ EnumFileCompTypes efctCompressionType) PURE;
};

DEFINE_GUID(IID_IMergeModuleEx,0xAF4246BEL,0x8470,0x4689,0x82,0x7A,0x77,0xD1,0xBB,0xF4,0x39,0xF6);

/* Definition of interface: IMergeModuleEx */
#undef INTERFACE
#define INTERFACE IMergeModuleEx

DECLARE_INTERFACE_(IMergeModuleEx, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMergeModuleEx methods */
    STDMETHOD(get_MergeModuleCfgValuesEx)(THIS_ IUnknown * FAR* ppMsmCfgValues) PURE;
};

DEFINE_GUID(IID_IMergeModuleProteus,0x766FACDFL,0x462E,0x409E,0x9E,0xAB,0xEE,0xE9,0x63,0xD3,0x85,0x2C);

/* Definition of interface: IMergeModuleProteus */
#undef INTERFACE
#define INTERFACE IMergeModuleProteus

DECLARE_INTERFACE_(IMergeModuleProteus, IMergeModule3)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IMergeModule methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(get_Author)(THIS_ BSTR FAR* sAuthor) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* sComment) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* sVersion) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* sDestination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR sDestination) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* sGuid) PURE;
    STDMETHOD(get_Dependencies)(THIS_ IMMDependencies FAR* FAR* pDependencies) PURE;
    STDMETHOD(get_Exclusions)(THIS_ IMMExclusions FAR* FAR* pExclusions) PURE;
    STDMETHOD(AddChild)(THIS_ EnumMergeModuleChild emMMChild, BSTR strName, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IMMDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_CustomActions)(THIS_ IMMCustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_MsmDialogs)(THIS_ IDispatch * FAR* pDialogs) PURE;
    STDMETHOD(get_MsmCustomActions)(THIS_ IDispatch * FAR* pCustomActions) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IMergeModule2 methods */
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(get_Language)(THIS_ short FAR* nLanguage) PURE;
    STDMETHOD(put_Language)(THIS_ short nLanguage) PURE;
    STDMETHOD(get_ObjectProgID)(THIS_ BSTR FAR* bstrObjectProgID) PURE;
    STDMETHOD(get_Files)(THIS_ IMMFiles FAR* FAR* pFiles) PURE;

    /* IMergeModule3 methods */
    STDMETHOD(get_MergeModuleCfgValues)(THIS_ IMergeModuleCfgValues FAR* FAR* ppMsmCfgValues) PURE;
    STDMETHOD(get_UniqueID)(THIS_ BSTR FAR* pbstrUniqueID) PURE;
    STDMETHOD(get_IsObject)(THIS_ VARIANT_BOOL FAR* pIsObj) PURE;
    STDMETHOD(put_IsObject)(THIS_ VARIANT_BOOL IsObj) PURE;
    STDMETHOD(ReInitCfgValues)(THIS) PURE;
    STDMETHOD(get_DirectModeMediaLocation)(THIS_ EnumFileCompTypes FAR* efctCompressionType) PURE;
    STDMETHOD(put_DirectModeMediaLocation)(THIS_ EnumFileCompTypes efctCompressionType) PURE;
#endif

    /* IMergeModuleProteus methods */
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrName) PURE;
};

DEFINE_GUID(IID_IMergeModules,0xAF825DCEL,0xACB7,0x405A,0x8B,0x9F,0x64,0x5B,0xFA,0x36,0x9A,0xE8);

/* Definition of interface: IMergeModules */
#undef INTERFACE
#define INTERFACE IMergeModules

DECLARE_INTERFACE_(IMergeModules, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMergeModules methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IMergeModule FAR* FAR* pMergeModule) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

interface IMMAuthoringDependencies;

interface IMMAuthoringExclusions;

interface IMMAuthoringModuleComponents;

DEFINE_GUID(IID_IMMAuthoring,0x9C8B5A55L,0x7278,0x448C,0xA2,0x11,0x1C,0xDD,0x1A,0x48,0xA3,0xA7);

/* Definition of interface: IMMAuthoring */
#undef INTERFACE
#define INTERFACE IMMAuthoring

DECLARE_INTERFACE_(IMMAuthoring, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMAuthoring methods */
    STDMETHOD(get_ModuleID)(THIS_ BSTR FAR* sModuleID) PURE;
    STDMETHOD(put_ModuleID)(THIS_ BSTR sNewVal) PURE;
    STDMETHOD(get_Language)(THIS_ long FAR* Language) PURE;
    STDMETHOD(put_Language)(THIS_ long Language) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Dependencies)(THIS_ IMMAuthoringDependencies FAR* FAR* Dependencies) PURE;
    STDMETHOD(get_Exclusions)(THIS_ IMMAuthoringExclusions FAR* FAR* Exclusions) PURE;
    STDMETHOD(get_ModuleComponents)(THIS_ IMMAuthoringModuleComponents FAR* FAR* ModuleComponents) PURE;
    STDMETHOD(Add)(THIS_ EnumMMAuthoringAddRemove emmarType, VARIANT pMMInMMUpdater, IBusinessObject FAR* FAR* ppRet) PURE;
    STDMETHOD(get_ModuleIDGUID)(THIS_ BSTR FAR* sModuleID) PURE;
    STDMETHOD(put_ModuleIDGUID)(THIS_ BSTR sNewVal) PURE;
};

DEFINE_GUID(IID_IMMAuthoringDependency,0x48F9CC6DL,0x55D3,0x4938,0xBC,0x9F,0x48,0xB2,0xA7,0xF8,0x0B,0x9A);

/* Definition of interface: IMMAuthoringDependency */
#undef INTERFACE
#define INTERFACE IMMAuthoringDependency

DECLARE_INTERFACE_(IMMAuthoringDependency, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMAuthoringDependency methods */
    STDMETHOD(get_ModuleID)(THIS_ BSTR FAR* sModuleID) PURE;
    STDMETHOD(put_ModuleID)(THIS_ BSTR sNewVal) PURE;
    STDMETHOD(get_Language)(THIS_ long FAR* Language) PURE;
    STDMETHOD(put_Language)(THIS_ long Language) PURE;
    STDMETHOD(get_RequiredID)(THIS_ BSTR FAR* sRequiredID) PURE;
    STDMETHOD(put_RequiredID)(THIS_ BSTR sNewRequiredID) PURE;
    STDMETHOD(get_RequiredLanguage)(THIS_ long FAR* RequiredLanguage) PURE;
    STDMETHOD(put_RequiredLanguage)(THIS_ long RequiredLanguage) PURE;
    STDMETHOD(get_RequiredVersion)(THIS_ BSTR FAR* RequiredVersion) PURE;
    STDMETHOD(put_RequiredVersion)(THIS_ BSTR RequiredVersion) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* sDisplayName) PURE;
};

DEFINE_GUID(IID_IMMAuthoringDependencies,0x4DEEBC00L,0xE0B1,0x42A1,0x8A,0x5F,0xED,0x9D,0x1B,0xD5,0x68,0x4D);

/* Definition of interface: IMMAuthoringDependencies */
#undef INTERFACE
#define INTERFACE IMMAuthoringDependencies

DECLARE_INTERFACE_(IMMAuthoringDependencies, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMAuthoringDependencies methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IMMAuthoringDependency FAR* FAR* pDependency) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IMMAuthoringExclusion,0xBBFD2629L,0x6265,0x48E5,0x8C,0xFE,0xC1,0x2A,0x05,0x77,0xA8,0x0C);

/* Definition of interface: IMMAuthoringExclusion */
#undef INTERFACE
#define INTERFACE IMMAuthoringExclusion

DECLARE_INTERFACE_(IMMAuthoringExclusion, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMAuthoringExclusion methods */
    STDMETHOD(get_ModuleID)(THIS_ BSTR FAR* sModuleID) PURE;
    STDMETHOD(put_ModuleID)(THIS_ BSTR sNewVal) PURE;
    STDMETHOD(get_Language)(THIS_ long FAR* Language) PURE;
    STDMETHOD(put_Language)(THIS_ long Language) PURE;
    STDMETHOD(get_ExcludedID)(THIS_ BSTR FAR* sExcludedID) PURE;
    STDMETHOD(put_ExcludedID)(THIS_ BSTR sNewExcludedID) PURE;
    STDMETHOD(get_ExcludedLanguage)(THIS_ long FAR* ExcludedLanguage) PURE;
    STDMETHOD(put_ExcludedLanguage)(THIS_ long ExcludedLanguage) PURE;
    STDMETHOD(get_ExcludedMinVersion)(THIS_ BSTR FAR* ExcludedMinVersion) PURE;
    STDMETHOD(put_ExcludedMinVersion)(THIS_ BSTR ExcludedMinVersion) PURE;
    STDMETHOD(get_ExcludedMaxVersion)(THIS_ BSTR FAR* ExcludedMaxVersion) PURE;
    STDMETHOD(put_ExcludedMaxVersion)(THIS_ BSTR ExcludedMaxVersion) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* sDisplayName) PURE;
};

DEFINE_GUID(IID_IMMAuthoringExclusions,0xA50722FBL,0xAD4E,0x4657,0x8B,0x48,0x85,0xD8,0x44,0xDB,0x91,0x15);

/* Definition of interface: IMMAuthoringExclusions */
#undef INTERFACE
#define INTERFACE IMMAuthoringExclusions

DECLARE_INTERFACE_(IMMAuthoringExclusions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMAuthoringExclusions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IMMAuthoringExclusion FAR* FAR* pExclusion) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IMMAuthoringModuleComponent,0xCC557EBCL,0x1552,0x4C38,0xA7,0x92,0xAB,0xA5,0xBF,0x96,0x9C,0x99);

/* Definition of interface: IMMAuthoringModuleComponent */
#undef INTERFACE
#define INTERFACE IMMAuthoringModuleComponent

DECLARE_INTERFACE_(IMMAuthoringModuleComponent, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMAuthoringModuleComponent methods */
    STDMETHOD(get_Component)(THIS_ BSTR FAR* Component) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Component) PURE;
    STDMETHOD(get_ModuleID)(THIS_ BSTR FAR* sModuleID) PURE;
    STDMETHOD(put_ModuleID)(THIS_ BSTR sModuleID) PURE;
    STDMETHOD(get_ModuleLanguage)(THIS_ long FAR* ModuleLanguage) PURE;
    STDMETHOD(put_ModuleLanguage)(THIS_ long ModuleLanguage) PURE;
};

DEFINE_GUID(IID_IMMAuthoringModuleComponents,0x362452FCL,0x16FE,0x4CF1,0xBC,0xB9,0x82,0x87,0x84,0xEF,0x69,0x97);

/* Definition of interface: IMMAuthoringModuleComponents */
#undef INTERFACE
#define INTERFACE IMMAuthoringModuleComponents

DECLARE_INTERFACE_(IMMAuthoringModuleComponents, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMMAuthoringModuleComponents methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IMMAuthoringModuleComponent FAR* FAR* pModuleComponent) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IISObjectProperty,0x2A8E51A4L,0xA0B0,0x442C,0xA1,0xC0,0xB8,0x02,0xA5,0x48,0x12,0xC3);

/* Definition of interface: IISObjectProperty */
#undef INTERFACE
#define INTERFACE IISObjectProperty

DECLARE_INTERFACE_(IISObjectProperty, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISObjectProperty methods */
    STDMETHOD(get_ObjectName)(THIS_ BSTR FAR* ObjectName) PURE;
    STDMETHOD(put_ObjectName)(THIS_ BSTR ObjectName) PURE;
    STDMETHOD(get_Property)(THIS_ BSTR FAR* Property) PURE;
    STDMETHOD(put_Property)(THIS_ BSTR Property) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IncludeInBuild)(THIS_ VARIANT_BOOL FAR* IncludeInBuild) PURE;
    STDMETHOD(put_IncludeInBuild)(THIS_ VARIANT_BOOL IncludeInBuild) PURE;
};

DEFINE_GUID(IID_IISObjectProperties,0x0C790869L,0x307E,0x4952,0x90,0x49,0x97,0xAC,0xC8,0x44,0x68,0x59);

/* Definition of interface: IISObjectProperties */
#undef INTERFACE
#define INTERFACE IISObjectProperties

DECLARE_INTERFACE_(IISObjectProperties, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISObjectProperties methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IISObjectProperty FAR* FAR* pExclusion) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IISObject,0xE07804F3L,0x8E39,0x41DF,0xAB,0xE8,0x5A,0x39,0xEC,0x10,0x84,0x8D);

/* Definition of interface: IISObject */
#undef INTERFACE
#define INTERFACE IISObject

DECLARE_INTERFACE_(IISObject, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISObject methods */
    STDMETHOD(get_ObjectName)(THIS_ BSTR FAR* ObjectName) PURE;
    STDMETHOD(put_ObjectName)(THIS_ BSTR ObjectName) PURE;
    STDMETHOD(get_Language)(THIS_ BSTR FAR* Language) PURE;
    STDMETHOD(put_Language)(THIS_ BSTR Language) PURE;
    STDMETHOD(AddChild)(THIS_ EnumISObjectChild emMMChild, BSTR strName, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Properties)(THIS_ IISObjectProperties FAR* FAR* Properties) PURE;
};

DEFINE_GUID(IID_IISObjects,0x8659497CL,0xDF15,0x4EB9,0xBB,0x22,0x07,0x54,0xAD,0xDD,0xFF,0xEF);

/* Definition of interface: IISObjects */
#undef INTERFACE
#define INTERFACE IISObjects

DECLARE_INTERFACE_(IISObjects, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISObjects methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IISObject FAR* FAR* pExclusion) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumSetupTypeType {
    estStandard = 10,
    estCustom = 11
} EnumSetupTypeType;

typedef enum EnumPropSetupType {
    epstName = 0,
    epstDisplayName = 10,
    epstDescription = 11,
    epstIcon = 12,
    epstLevel = 13,
    epstPoints = 14,
    epstSelected = 15,
    epstType = 16,
    epstComments = 17
} EnumPropSetupType;

typedef enum EnumPropSetupTypes {
    epstsDialog = 11,
    epstsControl = 12
} EnumPropSetupTypes;

DEFINE_GUID(IID_ISetupType,0x52F5F708L,0x318E,0x49B9,0x80,0x97,0x91,0xBB,0x3C,0x5B,0x98,0x05);

/* Definition of interface: ISetupType */
#undef INTERFACE
#define INTERFACE ISetupType

DECLARE_INTERFACE_(ISetupType, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISetupType methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* sDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR sDescription) PURE;
    STDMETHOD(get_Level)(THIS_ long FAR* lLevel) PURE;
    STDMETHOD(put_Level)(THIS_ long lLevel) PURE;
    STDMETHOD(get_Type)(THIS_ EnumSetupTypeType FAR* estType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumSetupTypeType estType) PURE;
    STDMETHOD(get_Selected)(THIS_ VARIANT_BOOL FAR* bSelected) PURE;
    STDMETHOD(put_Selected)(THIS_ VARIANT_BOOL bSelected) PURE;
    STDMETHOD(get_Icon)(THIS_ BSTR FAR* sIconFile) PURE;
    STDMETHOD(put_Icon)(THIS_ BSTR sIconFile) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* sDisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR sDisplayName) PURE;
    STDMETHOD(get_DescriptionCtrl)(THIS_ IControl FAR* FAR* ppCtrl) PURE;
    STDMETHOD(put_DescriptionCtrl)(THIS_ IControl FAR* pCtrl) PURE;
    STDMETHOD(get_IconCtrl)(THIS_ IControl FAR* FAR* ppCtrl) PURE;
    STDMETHOD(put_IconCtrl)(THIS_ IControl FAR* pCtrl) PURE;
    STDMETHOD(get_RadioBtnCtrl)(THIS_ IRadioButton FAR* FAR* ppCtrl) PURE;
    STDMETHOD(put_RadioBtnCtrl)(THIS_ IRadioButton FAR* pCtrl) PURE;
};

DEFINE_GUID(IID_ISetupTypeNeptune,0x39F117E4L,0x4031,0x4C4C,0xAE,0x88,0xEB,0x70,0x70,0x3B,0x88,0xE8);

/* Definition of interface: ISetupTypeNeptune */
#undef INTERFACE
#define INTERFACE ISetupTypeNeptune

DECLARE_INTERFACE_(ISetupTypeNeptune, ISetupType)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISetupType methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* sDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR sDescription) PURE;
    STDMETHOD(get_Level)(THIS_ long FAR* lLevel) PURE;
    STDMETHOD(put_Level)(THIS_ long lLevel) PURE;
    STDMETHOD(get_Type)(THIS_ EnumSetupTypeType FAR* estType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumSetupTypeType estType) PURE;
    STDMETHOD(get_Selected)(THIS_ VARIANT_BOOL FAR* bSelected) PURE;
    STDMETHOD(put_Selected)(THIS_ VARIANT_BOOL bSelected) PURE;
    STDMETHOD(get_Icon)(THIS_ BSTR FAR* sIconFile) PURE;
    STDMETHOD(put_Icon)(THIS_ BSTR sIconFile) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* sDisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR sDisplayName) PURE;
    STDMETHOD(get_DescriptionCtrl)(THIS_ IControl FAR* FAR* ppCtrl) PURE;
    STDMETHOD(put_DescriptionCtrl)(THIS_ IControl FAR* pCtrl) PURE;
    STDMETHOD(get_IconCtrl)(THIS_ IControl FAR* FAR* ppCtrl) PURE;
    STDMETHOD(put_IconCtrl)(THIS_ IControl FAR* pCtrl) PURE;
    STDMETHOD(get_RadioBtnCtrl)(THIS_ IRadioButton FAR* FAR* ppCtrl) PURE;
    STDMETHOD(put_RadioBtnCtrl)(THIS_ IRadioButton FAR* pCtrl) PURE;
#endif

    /* ISetupTypeNeptune methods */
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* pbstrComments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR bstrComments) PURE;
};

DEFINE_GUID(IID_ISetupTypes,0xA3938359L,0x6E9F,0x4BA8,0xAA,0x9F,0xDE,0x26,0x37,0x0F,0xE9,0x6E);

/* Definition of interface: ISetupTypes */
#undef INTERFACE
#define INTERFACE ISetupTypes

DECLARE_INTERFACE_(ISetupTypes, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISetupTypes methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISetupType FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(Optimize)(THIS) PURE;
    STDMETHOD(get_Dlg)(THIS_ IDialog FAR* FAR* ppDlg) PURE;
    STDMETHOD(put_Dlg)(THIS_ IDialog FAR* pDlg) PURE;
    STDMETHOD(get_RadioBtnGrpCtrl)(THIS_ IControl FAR* FAR* ppCtrl) PURE;
    STDMETHOD(put_RadioBtnGrpCtrl)(THIS_ IControl FAR* pCtrl) PURE;
};

DEFINE_GUID(IID_ICondition,0x8139FFFEL,0xC31E,0x4098,0xAD,0x03,0xE1,0xEE,0x21,0x7B,0xD1,0x2A);

/* Definition of interface: ICondition */
#undef INTERFACE
#define INTERFACE ICondition

DECLARE_INTERFACE_(ICondition, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICondition methods */
    STDMETHOD(put_Level)(THIS_ long lLevel) PURE;
    STDMETHOD(get_Level)(THIS_ long FAR* lLevel) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR bstrCondition) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* bstrCondition) PURE;
    STDMETHOD(put_FeatureKey)(THIS_ BSTR bstrFeatureKey) PURE;
    STDMETHOD(get_FeatureKey)(THIS_ BSTR FAR* bstrFeatureKey) PURE;
};

DEFINE_GUID(IID_IConditions,0x57226CB2L,0xFBEC,0x4434,0x8E,0xCB,0x89,0x27,0xFD,0xD8,0x32,0x6D);

/* Definition of interface: IConditions */
#undef INTERFACE
#define INTERFACE IConditions

DECLARE_INTERFACE_(IConditions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IConditions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ICondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumFeatureChild {
    efcComponent = 1,
    efcSubFeature = 2,
    efcMergeModule = 3,
    efcBillBoard = 4,
    efcCondition = 5,
    efcRequiredFeature = 6,
    efcProObjectProperty = 7,
    efcDimReference = 8,
    efcDim = 9
} EnumFeatureChild;

typedef enum EnumPropFeature {
    epfName = 0,
    epfDisplayName = 10,
    epfDescription = 11,
    epfConfigurable = 12,
    epfDestination = 13,
    epfDisplay = 14,
    epfAttribute = 15,
    epfInstallLevel = 16,
    epfAdvertise = 18,
    epfUIDisallowAbsent = 20,
    epfComments = 21,
    epfSequence = 22
} EnumPropFeature;

typedef enum EnumAdvertise {
    eaAllow = 1,
    eaFavor = 2,
    eaDisallow = 3,
    eaDisableIfNotSupported = 4
} EnumAdvertise;

typedef enum EnumFeatureNeed {
    efnStandard = 0,
    efnHighlyRecommended = 1,
    efnCritical = 2
} EnumFeatureNeed;

DEFINE_GUID(IID_IProObjectPropertyNeptune,0xD57C2BB8L,0xD057,0x4D16,0xA8,0x0A,0x87,0xEF,0x57,0x71,0x59,0x0B);

/* Definition of interface: IProObjectPropertyNeptune */
#undef INTERFACE
#define INTERFACE IProObjectPropertyNeptune

DECLARE_INTERFACE_(IProObjectPropertyNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProObjectPropertyNeptune methods */
    STDMETHOD(put_Name)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pVal) PURE;
};

DEFINE_GUID(IID_IProObjectPropertiesNeptune,0x37B58817L,0xC732,0x4CAA,0xB3,0xF2,0x4C,0x19,0xDC,0xD3,0xA0,0x6C);

/* Definition of interface: IProObjectPropertiesNeptune */
#undef INTERFACE
#define INTERFACE IProObjectPropertiesNeptune

DECLARE_INTERFACE_(IProObjectPropertiesNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProObjectPropertiesNeptune methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IProObjectPropertyNeptune FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

interface IFeatures;

interface IISFeatureExtended;

interface IISRequiredFeatures;

DEFINE_GUID(IID_IFeature,0x4194F818L,0x74BC,0x4106,0xAC,0xD9,0xA6,0x22,0xAA,0x38,0x0D,0x16);

/* Definition of interface: IFeature */
#undef INTERFACE
#define INTERFACE IFeature

DECLARE_INTERFACE_(IFeature, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFeature methods */
    STDMETHOD(AddChild)(THIS_ EnumFeatureChild epcFeature, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(InsertComponent)(THIS_ IComponent FAR* pObject) PURE;
    STDMETHOD(get_SubFeatures)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponents) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Configurable)(THIS_ VARIANT_BOOL FAR* Configurable) PURE;
    STDMETHOD(put_Configurable)(THIS_ VARIANT_BOOL Configurable) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_Display)(THIS_ long FAR* Display) PURE;
    STDMETHOD(put_Display)(THIS_ long Display) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_InstallLevel)(THIS_ long FAR* InstallLevel) PURE;
    STDMETHOD(put_InstallLevel)(THIS_ long InstallLevel) PURE;
    STDMETHOD(get_Advertise)(THIS_ VARIANT_BOOL FAR* Advertise) PURE;
    STDMETHOD(put_Advertise)(THIS_ VARIANT_BOOL Advertise) PURE;
    STDMETHOD(get_UIDisallowAbsent)(THIS_ VARIANT_BOOL FAR* UIDisallowAbsent) PURE;
    STDMETHOD(put_UIDisallowAbsent)(THIS_ VARIANT_BOOL UIDisallowAbsent) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(put_Required)(THIS_ VARIANT_BOOL bRequired) PURE;
    STDMETHOD(get_Required)(THIS_ VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(SetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus estStatus) PURE;
    STDMETHOD(GetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus FAR* estStatus) PURE;
    STDMETHOD(get_DefaultComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(InsertMergeModule)(THIS_ IMergeModule FAR* pObject) PURE;
    STDMETHOD(get_ParentFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(get_Conditions)(THIS_ IConditions FAR* FAR* pConditions) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_AdvertiseEx)(THIS_ EnumAdvertise FAR* peaAdvertise) PURE;
    STDMETHOD(put_AdvertiseEx)(THIS_ EnumAdvertise eaAdvertise) PURE;
};

DEFINE_GUID(IID_ICallbackModuleAdd,0xC84D2B51L,0xC44F,0x4416,0x9B,0x76,0xDE,0x6F,0x7D,0xBD,0x40,0x91);

/* Definition of interface: ICallbackModuleAdd */
#undef INTERFACE
#define INTERFACE ICallbackModuleAdd

DECLARE_INTERFACE_(ICallbackModuleAdd, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICallbackModuleAdd methods */
    STDMETHOD(InformAddingModule)(THIS_ BSTR bstrMsmBeingAdded) PURE;
};

DEFINE_GUID(IID_IFeature2,0x3D21D876L,0x6FD9,0x4532,0x82,0x25,0x25,0xE2,0x32,0xBA,0xD8,0x49);

/* Definition of interface: IFeature2 */
#undef INTERFACE
#define INTERFACE IFeature2

DECLARE_INTERFACE_(IFeature2, IFeature)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFeature methods */
    STDMETHOD(AddChild)(THIS_ EnumFeatureChild epcFeature, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(InsertComponent)(THIS_ IComponent FAR* pObject) PURE;
    STDMETHOD(get_SubFeatures)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponents) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Configurable)(THIS_ VARIANT_BOOL FAR* Configurable) PURE;
    STDMETHOD(put_Configurable)(THIS_ VARIANT_BOOL Configurable) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_Display)(THIS_ long FAR* Display) PURE;
    STDMETHOD(put_Display)(THIS_ long Display) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_InstallLevel)(THIS_ long FAR* InstallLevel) PURE;
    STDMETHOD(put_InstallLevel)(THIS_ long InstallLevel) PURE;
    STDMETHOD(get_Advertise)(THIS_ VARIANT_BOOL FAR* Advertise) PURE;
    STDMETHOD(put_Advertise)(THIS_ VARIANT_BOOL Advertise) PURE;
    STDMETHOD(get_UIDisallowAbsent)(THIS_ VARIANT_BOOL FAR* UIDisallowAbsent) PURE;
    STDMETHOD(put_UIDisallowAbsent)(THIS_ VARIANT_BOOL UIDisallowAbsent) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(put_Required)(THIS_ VARIANT_BOOL bRequired) PURE;
    STDMETHOD(get_Required)(THIS_ VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(SetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus estStatus) PURE;
    STDMETHOD(GetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus FAR* estStatus) PURE;
    STDMETHOD(get_DefaultComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(InsertMergeModule)(THIS_ IMergeModule FAR* pObject) PURE;
    STDMETHOD(get_ParentFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(get_Conditions)(THIS_ IConditions FAR* FAR* pConditions) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_AdvertiseEx)(THIS_ EnumAdvertise FAR* peaAdvertise) PURE;
    STDMETHOD(put_AdvertiseEx)(THIS_ EnumAdvertise eaAdvertise) PURE;
#endif

    /* IFeature2 methods */
    STDMETHOD(MoveLeft)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(MoveRight)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_ISFeatureExtended)(THIS_ IISFeatureExtended FAR* FAR* ppISFeatureExtended) PURE;
    STDMETHOD(get_ISRequiredFeatures)(THIS_ IISRequiredFeatures FAR* FAR* ppISRequiredFeatures) PURE;
    STDMETHOD(IsMergeModuleInFeature)(THIS_ IMergeModule FAR* pMergeModule, VARIANT_BOOL FAR* vbIsMergeModuleInFeature) PURE;
    STDMETHOD(GetFirstISDotNetComponentInFeature)(THIS_ BSTR bstrISDotNetSolution, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegistryEntries) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* vbHasChild) PURE;
    STDMETHOD(DirectModeDoMerge)(THIS_ IMergeModule FAR* pMergeModule) PURE;
};

DEFINE_GUID(IID_IProObjectCallbackNeptune,0xDD6330ADL,0xEF56,0x453B,0xA0,0xC4,0x0A,0xA5,0x0B,0x90,0x99,0xF2);

/* Definition of interface: IProObjectCallbackNeptune */
#undef INTERFACE
#define INTERFACE IProObjectCallbackNeptune

DECLARE_INTERFACE_(IProObjectCallbackNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProObjectCallbackNeptune methods */
    STDMETHOD(ShowWizard)(THIS_ long hObjectSession, long hObjectItem, int FAR* iReturn) PURE;
    STDMETHOD(SetProperties)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(get_FeatureGuid)(THIS_ BSTR FAR* sGuid) PURE;
    STDMETHOD(get_FeatureBaseName)(THIS_ BSTR FAR* pbstrFeatureBaseName) PURE;
};

DEFINE_GUID(IID_IFeatureNeptune,0xCA6831AAL,0x8F86,0x4EA1,0x81,0x32,0xAE,0x51,0x2D,0x56,0x10,0x1D);

/* Definition of interface: IFeatureNeptune */
#undef INTERFACE
#define INTERFACE IFeatureNeptune

DECLARE_INTERFACE_(IFeatureNeptune, IFeature2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFeature methods */
    STDMETHOD(AddChild)(THIS_ EnumFeatureChild epcFeature, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(InsertComponent)(THIS_ IComponent FAR* pObject) PURE;
    STDMETHOD(get_SubFeatures)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponents) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Configurable)(THIS_ VARIANT_BOOL FAR* Configurable) PURE;
    STDMETHOD(put_Configurable)(THIS_ VARIANT_BOOL Configurable) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_Display)(THIS_ long FAR* Display) PURE;
    STDMETHOD(put_Display)(THIS_ long Display) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_InstallLevel)(THIS_ long FAR* InstallLevel) PURE;
    STDMETHOD(put_InstallLevel)(THIS_ long InstallLevel) PURE;
    STDMETHOD(get_Advertise)(THIS_ VARIANT_BOOL FAR* Advertise) PURE;
    STDMETHOD(put_Advertise)(THIS_ VARIANT_BOOL Advertise) PURE;
    STDMETHOD(get_UIDisallowAbsent)(THIS_ VARIANT_BOOL FAR* UIDisallowAbsent) PURE;
    STDMETHOD(put_UIDisallowAbsent)(THIS_ VARIANT_BOOL UIDisallowAbsent) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(put_Required)(THIS_ VARIANT_BOOL bRequired) PURE;
    STDMETHOD(get_Required)(THIS_ VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(SetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus estStatus) PURE;
    STDMETHOD(GetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus FAR* estStatus) PURE;
    STDMETHOD(get_DefaultComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(InsertMergeModule)(THIS_ IMergeModule FAR* pObject) PURE;
    STDMETHOD(get_ParentFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(get_Conditions)(THIS_ IConditions FAR* FAR* pConditions) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_AdvertiseEx)(THIS_ EnumAdvertise FAR* peaAdvertise) PURE;
    STDMETHOD(put_AdvertiseEx)(THIS_ EnumAdvertise eaAdvertise) PURE;

    /* IFeature2 methods */
    STDMETHOD(MoveLeft)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(MoveRight)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_ISFeatureExtended)(THIS_ IISFeatureExtended FAR* FAR* ppISFeatureExtended) PURE;
    STDMETHOD(get_ISRequiredFeatures)(THIS_ IISRequiredFeatures FAR* FAR* ppISRequiredFeatures) PURE;
    STDMETHOD(IsMergeModuleInFeature)(THIS_ IMergeModule FAR* pMergeModule, VARIANT_BOOL FAR* vbIsMergeModuleInFeature) PURE;
    STDMETHOD(GetFirstISDotNetComponentInFeature)(THIS_ BSTR bstrISDotNetSolution, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegistryEntries) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* vbHasChild) PURE;
    STDMETHOD(DirectModeDoMerge)(THIS_ IMergeModule FAR* pMergeModule) PURE;
#endif

    /* IFeatureNeptune methods */
    STDMETHOD(InsertMergeModules)(THIS_ SAFEARRAY FAR* FAR* psaMsms, ICallbackModuleAdd FAR* pCallback) PURE;
    STDMETHOD(InsertMergeModulesNoCallback)(THIS_ SAFEARRAY FAR* FAR* psaMsms) PURE;
    STDMETHOD(get_Visible)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Visible)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_StatusText)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_StatusText)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Need)(THIS_ EnumFeatureNeed FAR* eVal) PURE;
    STDMETHOD(put_Need)(THIS_ EnumFeatureNeed eVal) PURE;
    STDMETHOD(get_IncludeInBuild)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeInBuild)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Encryption)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Encryption)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_CDRomFolder)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_CDRomFolder)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_IsProObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_ProObjectMoniker)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(InsertFileSet)(THIS_ IFileSetNeptune FAR* pVal) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* pFileSets) PURE;
    STDMETHOD(get_StringList)(THIS_ BSTR FAR* pbstrStringList) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ VARIANT_BOOL vbCreateIfNotFound, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(AddProObject)(THIS_ BSTR bstrMoniker, IProObjectCallbackNeptune FAR* pCallback, VARIANT_BOOL bAddPropsManually, IBusinessObject FAR* FAR* pBusObj) PURE;
    STDMETHOD(get_CanModifyObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(ModifyObject)(THIS_ IProObjectCallbackNeptune FAR* pCallback) PURE;
    STDMETHOD(get_ProObjectProperties)(THIS_ IProObjectPropertiesNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RequiredFeaturesStringList)(THIS_ BSTR FAR* pbstrRequiredFeatures) PURE;
    STDMETHOD(get_FeaturePath)(THIS_ BSTR FAR* pbstrPath) PURE;
};

DEFINE_GUID(IID_IFeaturePluto,0x590C32B2L,0x3082,0x402C,0x87,0x67,0x5D,0x17,0xC6,0x98,0xF3,0x64);

/* Definition of interface: IFeaturePluto */
#undef INTERFACE
#define INTERFACE IFeaturePluto

DECLARE_INTERFACE_(IFeaturePluto, IFeatureNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFeature methods */
    STDMETHOD(AddChild)(THIS_ EnumFeatureChild epcFeature, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(InsertComponent)(THIS_ IComponent FAR* pObject) PURE;
    STDMETHOD(get_SubFeatures)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponents) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Configurable)(THIS_ VARIANT_BOOL FAR* Configurable) PURE;
    STDMETHOD(put_Configurable)(THIS_ VARIANT_BOOL Configurable) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_Display)(THIS_ long FAR* Display) PURE;
    STDMETHOD(put_Display)(THIS_ long Display) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_InstallLevel)(THIS_ long FAR* InstallLevel) PURE;
    STDMETHOD(put_InstallLevel)(THIS_ long InstallLevel) PURE;
    STDMETHOD(get_Advertise)(THIS_ VARIANT_BOOL FAR* Advertise) PURE;
    STDMETHOD(put_Advertise)(THIS_ VARIANT_BOOL Advertise) PURE;
    STDMETHOD(get_UIDisallowAbsent)(THIS_ VARIANT_BOOL FAR* UIDisallowAbsent) PURE;
    STDMETHOD(put_UIDisallowAbsent)(THIS_ VARIANT_BOOL UIDisallowAbsent) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(put_Required)(THIS_ VARIANT_BOOL bRequired) PURE;
    STDMETHOD(get_Required)(THIS_ VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(SetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus estStatus) PURE;
    STDMETHOD(GetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus FAR* estStatus) PURE;
    STDMETHOD(get_DefaultComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(InsertMergeModule)(THIS_ IMergeModule FAR* pObject) PURE;
    STDMETHOD(get_ParentFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(get_Conditions)(THIS_ IConditions FAR* FAR* pConditions) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_AdvertiseEx)(THIS_ EnumAdvertise FAR* peaAdvertise) PURE;
    STDMETHOD(put_AdvertiseEx)(THIS_ EnumAdvertise eaAdvertise) PURE;

    /* IFeature2 methods */
    STDMETHOD(MoveLeft)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(MoveRight)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_ISFeatureExtended)(THIS_ IISFeatureExtended FAR* FAR* ppISFeatureExtended) PURE;
    STDMETHOD(get_ISRequiredFeatures)(THIS_ IISRequiredFeatures FAR* FAR* ppISRequiredFeatures) PURE;
    STDMETHOD(IsMergeModuleInFeature)(THIS_ IMergeModule FAR* pMergeModule, VARIANT_BOOL FAR* vbIsMergeModuleInFeature) PURE;
    STDMETHOD(GetFirstISDotNetComponentInFeature)(THIS_ BSTR bstrISDotNetSolution, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegistryEntries) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* vbHasChild) PURE;
    STDMETHOD(DirectModeDoMerge)(THIS_ IMergeModule FAR* pMergeModule) PURE;

    /* IFeatureNeptune methods */
    STDMETHOD(InsertMergeModules)(THIS_ SAFEARRAY FAR* FAR* psaMsms, ICallbackModuleAdd FAR* pCallback) PURE;
    STDMETHOD(InsertMergeModulesNoCallback)(THIS_ SAFEARRAY FAR* FAR* psaMsms) PURE;
    STDMETHOD(get_Visible)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Visible)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_StatusText)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_StatusText)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Need)(THIS_ EnumFeatureNeed FAR* eVal) PURE;
    STDMETHOD(put_Need)(THIS_ EnumFeatureNeed eVal) PURE;
    STDMETHOD(get_IncludeInBuild)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeInBuild)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Encryption)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Encryption)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_CDRomFolder)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_CDRomFolder)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_IsProObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_ProObjectMoniker)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(InsertFileSet)(THIS_ IFileSetNeptune FAR* pVal) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* pFileSets) PURE;
    STDMETHOD(get_StringList)(THIS_ BSTR FAR* pbstrStringList) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ VARIANT_BOOL vbCreateIfNotFound, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(AddProObject)(THIS_ BSTR bstrMoniker, IProObjectCallbackNeptune FAR* pCallback, VARIANT_BOOL bAddPropsManually, IBusinessObject FAR* FAR* pBusObj) PURE;
    STDMETHOD(get_CanModifyObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(ModifyObject)(THIS_ IProObjectCallbackNeptune FAR* pCallback) PURE;
    STDMETHOD(get_ProObjectProperties)(THIS_ IProObjectPropertiesNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RequiredFeaturesStringList)(THIS_ BSTR FAR* pbstrRequiredFeatures) PURE;
    STDMETHOD(get_FeaturePath)(THIS_ BSTR FAR* pbstrPath) PURE;
#endif

    /* IFeaturePluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(CleanFeatureRequirements)(THIS_ VARIANT_BOOL FAR* pvbCleaned) PURE;
};

interface IDimReferencesIxtapa;

DEFINE_GUID(IID_IFeatureIxtapa,0xAA24F616L,0x4BB1,0x4ECF,0x81,0x2E,0xF3,0x56,0x98,0xDD,0x2E,0xFA);

/* Definition of interface: IFeatureIxtapa */
#undef INTERFACE
#define INTERFACE IFeatureIxtapa

DECLARE_INTERFACE_(IFeatureIxtapa, IFeaturePluto)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFeature methods */
    STDMETHOD(AddChild)(THIS_ EnumFeatureChild epcFeature, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(InsertComponent)(THIS_ IComponent FAR* pObject) PURE;
    STDMETHOD(get_SubFeatures)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponents) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Configurable)(THIS_ VARIANT_BOOL FAR* Configurable) PURE;
    STDMETHOD(put_Configurable)(THIS_ VARIANT_BOOL Configurable) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_Display)(THIS_ long FAR* Display) PURE;
    STDMETHOD(put_Display)(THIS_ long Display) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_InstallLevel)(THIS_ long FAR* InstallLevel) PURE;
    STDMETHOD(put_InstallLevel)(THIS_ long InstallLevel) PURE;
    STDMETHOD(get_Advertise)(THIS_ VARIANT_BOOL FAR* Advertise) PURE;
    STDMETHOD(put_Advertise)(THIS_ VARIANT_BOOL Advertise) PURE;
    STDMETHOD(get_UIDisallowAbsent)(THIS_ VARIANT_BOOL FAR* UIDisallowAbsent) PURE;
    STDMETHOD(put_UIDisallowAbsent)(THIS_ VARIANT_BOOL UIDisallowAbsent) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(put_Required)(THIS_ VARIANT_BOOL bRequired) PURE;
    STDMETHOD(get_Required)(THIS_ VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(SetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus estStatus) PURE;
    STDMETHOD(GetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus FAR* estStatus) PURE;
    STDMETHOD(get_DefaultComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(InsertMergeModule)(THIS_ IMergeModule FAR* pObject) PURE;
    STDMETHOD(get_ParentFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(get_Conditions)(THIS_ IConditions FAR* FAR* pConditions) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_AdvertiseEx)(THIS_ EnumAdvertise FAR* peaAdvertise) PURE;
    STDMETHOD(put_AdvertiseEx)(THIS_ EnumAdvertise eaAdvertise) PURE;

    /* IFeature2 methods */
    STDMETHOD(MoveLeft)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(MoveRight)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_ISFeatureExtended)(THIS_ IISFeatureExtended FAR* FAR* ppISFeatureExtended) PURE;
    STDMETHOD(get_ISRequiredFeatures)(THIS_ IISRequiredFeatures FAR* FAR* ppISRequiredFeatures) PURE;
    STDMETHOD(IsMergeModuleInFeature)(THIS_ IMergeModule FAR* pMergeModule, VARIANT_BOOL FAR* vbIsMergeModuleInFeature) PURE;
    STDMETHOD(GetFirstISDotNetComponentInFeature)(THIS_ BSTR bstrISDotNetSolution, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegistryEntries) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* vbHasChild) PURE;
    STDMETHOD(DirectModeDoMerge)(THIS_ IMergeModule FAR* pMergeModule) PURE;

    /* IFeatureNeptune methods */
    STDMETHOD(InsertMergeModules)(THIS_ SAFEARRAY FAR* FAR* psaMsms, ICallbackModuleAdd FAR* pCallback) PURE;
    STDMETHOD(InsertMergeModulesNoCallback)(THIS_ SAFEARRAY FAR* FAR* psaMsms) PURE;
    STDMETHOD(get_Visible)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Visible)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_StatusText)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_StatusText)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Need)(THIS_ EnumFeatureNeed FAR* eVal) PURE;
    STDMETHOD(put_Need)(THIS_ EnumFeatureNeed eVal) PURE;
    STDMETHOD(get_IncludeInBuild)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeInBuild)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Encryption)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Encryption)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_CDRomFolder)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_CDRomFolder)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_IsProObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_ProObjectMoniker)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(InsertFileSet)(THIS_ IFileSetNeptune FAR* pVal) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* pFileSets) PURE;
    STDMETHOD(get_StringList)(THIS_ BSTR FAR* pbstrStringList) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ VARIANT_BOOL vbCreateIfNotFound, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(AddProObject)(THIS_ BSTR bstrMoniker, IProObjectCallbackNeptune FAR* pCallback, VARIANT_BOOL bAddPropsManually, IBusinessObject FAR* FAR* pBusObj) PURE;
    STDMETHOD(get_CanModifyObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(ModifyObject)(THIS_ IProObjectCallbackNeptune FAR* pCallback) PURE;
    STDMETHOD(get_ProObjectProperties)(THIS_ IProObjectPropertiesNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RequiredFeaturesStringList)(THIS_ BSTR FAR* pbstrRequiredFeatures) PURE;
    STDMETHOD(get_FeaturePath)(THIS_ BSTR FAR* pbstrPath) PURE;

    /* IFeaturePluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(CleanFeatureRequirements)(THIS_ VARIANT_BOOL FAR* pvbCleaned) PURE;
#endif

    /* IFeatureIxtapa methods */
    STDMETHOD(InsertDimReference)(THIS_ IDimReferenceIxtapa FAR* pObject) PURE;
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
};

DEFINE_GUID(IID_IFeatureIndore,0xC98DD974L,0x062A,0x4399,0xA5,0x87,0xE6,0x08,0x2E,0x97,0xF1,0x57);

/* Definition of interface: IFeatureIndore */
#undef INTERFACE
#define INTERFACE IFeatureIndore

DECLARE_INTERFACE_(IFeatureIndore, IFeatureIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFeature methods */
    STDMETHOD(AddChild)(THIS_ EnumFeatureChild epcFeature, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(InsertComponent)(THIS_ IComponent FAR* pObject) PURE;
    STDMETHOD(get_SubFeatures)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponents) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Configurable)(THIS_ VARIANT_BOOL FAR* Configurable) PURE;
    STDMETHOD(put_Configurable)(THIS_ VARIANT_BOOL Configurable) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_Display)(THIS_ long FAR* Display) PURE;
    STDMETHOD(put_Display)(THIS_ long Display) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_InstallLevel)(THIS_ long FAR* InstallLevel) PURE;
    STDMETHOD(put_InstallLevel)(THIS_ long InstallLevel) PURE;
    STDMETHOD(get_Advertise)(THIS_ VARIANT_BOOL FAR* Advertise) PURE;
    STDMETHOD(put_Advertise)(THIS_ VARIANT_BOOL Advertise) PURE;
    STDMETHOD(get_UIDisallowAbsent)(THIS_ VARIANT_BOOL FAR* UIDisallowAbsent) PURE;
    STDMETHOD(put_UIDisallowAbsent)(THIS_ VARIANT_BOOL UIDisallowAbsent) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(put_Required)(THIS_ VARIANT_BOOL bRequired) PURE;
    STDMETHOD(get_Required)(THIS_ VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(SetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus estStatus) PURE;
    STDMETHOD(GetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus FAR* estStatus) PURE;
    STDMETHOD(get_DefaultComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(InsertMergeModule)(THIS_ IMergeModule FAR* pObject) PURE;
    STDMETHOD(get_ParentFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(get_Conditions)(THIS_ IConditions FAR* FAR* pConditions) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_AdvertiseEx)(THIS_ EnumAdvertise FAR* peaAdvertise) PURE;
    STDMETHOD(put_AdvertiseEx)(THIS_ EnumAdvertise eaAdvertise) PURE;

    /* IFeature2 methods */
    STDMETHOD(MoveLeft)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(MoveRight)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_ISFeatureExtended)(THIS_ IISFeatureExtended FAR* FAR* ppISFeatureExtended) PURE;
    STDMETHOD(get_ISRequiredFeatures)(THIS_ IISRequiredFeatures FAR* FAR* ppISRequiredFeatures) PURE;
    STDMETHOD(IsMergeModuleInFeature)(THIS_ IMergeModule FAR* pMergeModule, VARIANT_BOOL FAR* vbIsMergeModuleInFeature) PURE;
    STDMETHOD(GetFirstISDotNetComponentInFeature)(THIS_ BSTR bstrISDotNetSolution, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegistryEntries) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* vbHasChild) PURE;
    STDMETHOD(DirectModeDoMerge)(THIS_ IMergeModule FAR* pMergeModule) PURE;

    /* IFeatureNeptune methods */
    STDMETHOD(InsertMergeModules)(THIS_ SAFEARRAY FAR* FAR* psaMsms, ICallbackModuleAdd FAR* pCallback) PURE;
    STDMETHOD(InsertMergeModulesNoCallback)(THIS_ SAFEARRAY FAR* FAR* psaMsms) PURE;
    STDMETHOD(get_Visible)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Visible)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_StatusText)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_StatusText)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Need)(THIS_ EnumFeatureNeed FAR* eVal) PURE;
    STDMETHOD(put_Need)(THIS_ EnumFeatureNeed eVal) PURE;
    STDMETHOD(get_IncludeInBuild)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeInBuild)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Encryption)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Encryption)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_CDRomFolder)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_CDRomFolder)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_IsProObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_ProObjectMoniker)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(InsertFileSet)(THIS_ IFileSetNeptune FAR* pVal) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* pFileSets) PURE;
    STDMETHOD(get_StringList)(THIS_ BSTR FAR* pbstrStringList) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ VARIANT_BOOL vbCreateIfNotFound, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(AddProObject)(THIS_ BSTR bstrMoniker, IProObjectCallbackNeptune FAR* pCallback, VARIANT_BOOL bAddPropsManually, IBusinessObject FAR* FAR* pBusObj) PURE;
    STDMETHOD(get_CanModifyObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(ModifyObject)(THIS_ IProObjectCallbackNeptune FAR* pCallback) PURE;
    STDMETHOD(get_ProObjectProperties)(THIS_ IProObjectPropertiesNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RequiredFeaturesStringList)(THIS_ BSTR FAR* pbstrRequiredFeatures) PURE;
    STDMETHOD(get_FeaturePath)(THIS_ BSTR FAR* pbstrPath) PURE;

    /* IFeaturePluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(CleanFeatureRequirements)(THIS_ VARIANT_BOOL FAR* pvbCleaned) PURE;

    /* IFeatureIxtapa methods */
    STDMETHOD(InsertDimReference)(THIS_ IDimReferenceIxtapa FAR* pObject) PURE;
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
#endif

    /* IFeatureIndore methods */
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
};

interface IDimRefs;

interface IDimRef;

DEFINE_GUID(IID_IFeatureNeo,0x9D642497L,0x71D1,0x477A,0x81,0xF5,0x8E,0xC9,0x7D,0x77,0x85,0xBE);

/* Definition of interface: IFeatureNeo */
#undef INTERFACE
#define INTERFACE IFeatureNeo

DECLARE_INTERFACE_(IFeatureNeo, IFeatureIndore)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFeature methods */
    STDMETHOD(AddChild)(THIS_ EnumFeatureChild epcFeature, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(InsertComponent)(THIS_ IComponent FAR* pObject) PURE;
    STDMETHOD(get_SubFeatures)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponents) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Configurable)(THIS_ VARIANT_BOOL FAR* Configurable) PURE;
    STDMETHOD(put_Configurable)(THIS_ VARIANT_BOOL Configurable) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_Display)(THIS_ long FAR* Display) PURE;
    STDMETHOD(put_Display)(THIS_ long Display) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_InstallLevel)(THIS_ long FAR* InstallLevel) PURE;
    STDMETHOD(put_InstallLevel)(THIS_ long InstallLevel) PURE;
    STDMETHOD(get_Advertise)(THIS_ VARIANT_BOOL FAR* Advertise) PURE;
    STDMETHOD(put_Advertise)(THIS_ VARIANT_BOOL Advertise) PURE;
    STDMETHOD(get_UIDisallowAbsent)(THIS_ VARIANT_BOOL FAR* UIDisallowAbsent) PURE;
    STDMETHOD(put_UIDisallowAbsent)(THIS_ VARIANT_BOOL UIDisallowAbsent) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(put_Required)(THIS_ VARIANT_BOOL bRequired) PURE;
    STDMETHOD(get_Required)(THIS_ VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(SetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus estStatus) PURE;
    STDMETHOD(GetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus FAR* estStatus) PURE;
    STDMETHOD(get_DefaultComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(InsertMergeModule)(THIS_ IMergeModule FAR* pObject) PURE;
    STDMETHOD(get_ParentFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(get_Conditions)(THIS_ IConditions FAR* FAR* pConditions) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_AdvertiseEx)(THIS_ EnumAdvertise FAR* peaAdvertise) PURE;
    STDMETHOD(put_AdvertiseEx)(THIS_ EnumAdvertise eaAdvertise) PURE;

    /* IFeature2 methods */
    STDMETHOD(MoveLeft)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(MoveRight)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_ISFeatureExtended)(THIS_ IISFeatureExtended FAR* FAR* ppISFeatureExtended) PURE;
    STDMETHOD(get_ISRequiredFeatures)(THIS_ IISRequiredFeatures FAR* FAR* ppISRequiredFeatures) PURE;
    STDMETHOD(IsMergeModuleInFeature)(THIS_ IMergeModule FAR* pMergeModule, VARIANT_BOOL FAR* vbIsMergeModuleInFeature) PURE;
    STDMETHOD(GetFirstISDotNetComponentInFeature)(THIS_ BSTR bstrISDotNetSolution, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegistryEntries) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* vbHasChild) PURE;
    STDMETHOD(DirectModeDoMerge)(THIS_ IMergeModule FAR* pMergeModule) PURE;

    /* IFeatureNeptune methods */
    STDMETHOD(InsertMergeModules)(THIS_ SAFEARRAY FAR* FAR* psaMsms, ICallbackModuleAdd FAR* pCallback) PURE;
    STDMETHOD(InsertMergeModulesNoCallback)(THIS_ SAFEARRAY FAR* FAR* psaMsms) PURE;
    STDMETHOD(get_Visible)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Visible)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_StatusText)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_StatusText)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Need)(THIS_ EnumFeatureNeed FAR* eVal) PURE;
    STDMETHOD(put_Need)(THIS_ EnumFeatureNeed eVal) PURE;
    STDMETHOD(get_IncludeInBuild)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeInBuild)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Encryption)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Encryption)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_CDRomFolder)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_CDRomFolder)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_IsProObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_ProObjectMoniker)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(InsertFileSet)(THIS_ IFileSetNeptune FAR* pVal) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* pFileSets) PURE;
    STDMETHOD(get_StringList)(THIS_ BSTR FAR* pbstrStringList) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ VARIANT_BOOL vbCreateIfNotFound, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(AddProObject)(THIS_ BSTR bstrMoniker, IProObjectCallbackNeptune FAR* pCallback, VARIANT_BOOL bAddPropsManually, IBusinessObject FAR* FAR* pBusObj) PURE;
    STDMETHOD(get_CanModifyObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(ModifyObject)(THIS_ IProObjectCallbackNeptune FAR* pCallback) PURE;
    STDMETHOD(get_ProObjectProperties)(THIS_ IProObjectPropertiesNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RequiredFeaturesStringList)(THIS_ BSTR FAR* pbstrRequiredFeatures) PURE;
    STDMETHOD(get_FeaturePath)(THIS_ BSTR FAR* pbstrPath) PURE;

    /* IFeaturePluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(CleanFeatureRequirements)(THIS_ VARIANT_BOOL FAR* pvbCleaned) PURE;

    /* IFeatureIxtapa methods */
    STDMETHOD(InsertDimReference)(THIS_ IDimReferenceIxtapa FAR* pObject) PURE;
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;

    /* IFeatureIndore methods */
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
#endif

    /* IFeatureNeo methods */
    STDMETHOD(InsertDim)(THIS_ IDimRef FAR* pObject) PURE;
    STDMETHOD(get_Dims)(THIS_ IDimRefs FAR* FAR* ppDims) PURE;
    STDMETHOD(IsDimInFeature)(THIS_ IDimRef FAR* pDim, VARIANT_BOOL FAR* vbIsMergeModuleInFeature) PURE;
    STDMETHOD(UpdateFeatureForeignKeys)(THIS_ int nFieldId, BSTR bstrOldValue, BSTR bstrNewValue) PURE;
};

DEFINE_GUID(IID_IFeatureOpus,0x0CFBC8CDL,0x112A,0x4AAA,0xB6,0x45,0xBC,0xF3,0x2A,0xD7,0xAC,0x02);

/* Definition of interface: IFeatureOpus */
#undef INTERFACE
#define INTERFACE IFeatureOpus

DECLARE_INTERFACE_(IFeatureOpus, IFeatureNeo)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFeature methods */
    STDMETHOD(AddChild)(THIS_ EnumFeatureChild epcFeature, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(InsertComponent)(THIS_ IComponent FAR* pObject) PURE;
    STDMETHOD(get_SubFeatures)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponents) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Configurable)(THIS_ VARIANT_BOOL FAR* Configurable) PURE;
    STDMETHOD(put_Configurable)(THIS_ VARIANT_BOOL Configurable) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_Display)(THIS_ long FAR* Display) PURE;
    STDMETHOD(put_Display)(THIS_ long Display) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_InstallLevel)(THIS_ long FAR* InstallLevel) PURE;
    STDMETHOD(put_InstallLevel)(THIS_ long InstallLevel) PURE;
    STDMETHOD(get_Advertise)(THIS_ VARIANT_BOOL FAR* Advertise) PURE;
    STDMETHOD(put_Advertise)(THIS_ VARIANT_BOOL Advertise) PURE;
    STDMETHOD(get_UIDisallowAbsent)(THIS_ VARIANT_BOOL FAR* UIDisallowAbsent) PURE;
    STDMETHOD(put_UIDisallowAbsent)(THIS_ VARIANT_BOOL UIDisallowAbsent) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(put_Required)(THIS_ VARIANT_BOOL bRequired) PURE;
    STDMETHOD(get_Required)(THIS_ VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(SetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus estStatus) PURE;
    STDMETHOD(GetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus FAR* estStatus) PURE;
    STDMETHOD(get_DefaultComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(InsertMergeModule)(THIS_ IMergeModule FAR* pObject) PURE;
    STDMETHOD(get_ParentFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(get_Conditions)(THIS_ IConditions FAR* FAR* pConditions) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_AdvertiseEx)(THIS_ EnumAdvertise FAR* peaAdvertise) PURE;
    STDMETHOD(put_AdvertiseEx)(THIS_ EnumAdvertise eaAdvertise) PURE;

    /* IFeature2 methods */
    STDMETHOD(MoveLeft)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(MoveRight)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_ISFeatureExtended)(THIS_ IISFeatureExtended FAR* FAR* ppISFeatureExtended) PURE;
    STDMETHOD(get_ISRequiredFeatures)(THIS_ IISRequiredFeatures FAR* FAR* ppISRequiredFeatures) PURE;
    STDMETHOD(IsMergeModuleInFeature)(THIS_ IMergeModule FAR* pMergeModule, VARIANT_BOOL FAR* vbIsMergeModuleInFeature) PURE;
    STDMETHOD(GetFirstISDotNetComponentInFeature)(THIS_ BSTR bstrISDotNetSolution, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegistryEntries) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* vbHasChild) PURE;
    STDMETHOD(DirectModeDoMerge)(THIS_ IMergeModule FAR* pMergeModule) PURE;

    /* IFeatureNeptune methods */
    STDMETHOD(InsertMergeModules)(THIS_ SAFEARRAY FAR* FAR* psaMsms, ICallbackModuleAdd FAR* pCallback) PURE;
    STDMETHOD(InsertMergeModulesNoCallback)(THIS_ SAFEARRAY FAR* FAR* psaMsms) PURE;
    STDMETHOD(get_Visible)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Visible)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_StatusText)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_StatusText)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Need)(THIS_ EnumFeatureNeed FAR* eVal) PURE;
    STDMETHOD(put_Need)(THIS_ EnumFeatureNeed eVal) PURE;
    STDMETHOD(get_IncludeInBuild)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeInBuild)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Encryption)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Encryption)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_CDRomFolder)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_CDRomFolder)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_IsProObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_ProObjectMoniker)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(InsertFileSet)(THIS_ IFileSetNeptune FAR* pVal) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* pFileSets) PURE;
    STDMETHOD(get_StringList)(THIS_ BSTR FAR* pbstrStringList) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ VARIANT_BOOL vbCreateIfNotFound, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(AddProObject)(THIS_ BSTR bstrMoniker, IProObjectCallbackNeptune FAR* pCallback, VARIANT_BOOL bAddPropsManually, IBusinessObject FAR* FAR* pBusObj) PURE;
    STDMETHOD(get_CanModifyObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(ModifyObject)(THIS_ IProObjectCallbackNeptune FAR* pCallback) PURE;
    STDMETHOD(get_ProObjectProperties)(THIS_ IProObjectPropertiesNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RequiredFeaturesStringList)(THIS_ BSTR FAR* pbstrRequiredFeatures) PURE;
    STDMETHOD(get_FeaturePath)(THIS_ BSTR FAR* pbstrPath) PURE;

    /* IFeaturePluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(CleanFeatureRequirements)(THIS_ VARIANT_BOOL FAR* pvbCleaned) PURE;

    /* IFeatureIxtapa methods */
    STDMETHOD(InsertDimReference)(THIS_ IDimReferenceIxtapa FAR* pObject) PURE;
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;

    /* IFeatureIndore methods */
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;

    /* IFeatureNeo methods */
    STDMETHOD(InsertDim)(THIS_ IDimRef FAR* pObject) PURE;
    STDMETHOD(get_Dims)(THIS_ IDimRefs FAR* FAR* ppDims) PURE;
    STDMETHOD(IsDimInFeature)(THIS_ IDimRef FAR* pDim, VARIANT_BOOL FAR* vbIsMergeModuleInFeature) PURE;
    STDMETHOD(UpdateFeatureForeignKeys)(THIS_ int nFieldId, BSTR bstrOldValue, BSTR bstrNewValue) PURE;
#endif

    /* IFeatureOpus methods */
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_IFeatureQi,0x3C784A45L,0x0FF2,0x4803,0x84,0xA3,0xD5,0xAC,0x67,0xC5,0x42,0xF0);

/* Definition of interface: IFeatureQi */
#undef INTERFACE
#define INTERFACE IFeatureQi

DECLARE_INTERFACE_(IFeatureQi, IFeatureOpus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFeature methods */
    STDMETHOD(AddChild)(THIS_ EnumFeatureChild epcFeature, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(InsertComponent)(THIS_ IComponent FAR* pObject) PURE;
    STDMETHOD(get_SubFeatures)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponents) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Configurable)(THIS_ VARIANT_BOOL FAR* Configurable) PURE;
    STDMETHOD(put_Configurable)(THIS_ VARIANT_BOOL Configurable) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_Display)(THIS_ long FAR* Display) PURE;
    STDMETHOD(put_Display)(THIS_ long Display) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_InstallLevel)(THIS_ long FAR* InstallLevel) PURE;
    STDMETHOD(put_InstallLevel)(THIS_ long InstallLevel) PURE;
    STDMETHOD(get_Advertise)(THIS_ VARIANT_BOOL FAR* Advertise) PURE;
    STDMETHOD(put_Advertise)(THIS_ VARIANT_BOOL Advertise) PURE;
    STDMETHOD(get_UIDisallowAbsent)(THIS_ VARIANT_BOOL FAR* UIDisallowAbsent) PURE;
    STDMETHOD(put_UIDisallowAbsent)(THIS_ VARIANT_BOOL UIDisallowAbsent) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(put_Required)(THIS_ VARIANT_BOOL bRequired) PURE;
    STDMETHOD(get_Required)(THIS_ VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(SetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus estStatus) PURE;
    STDMETHOD(GetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus FAR* estStatus) PURE;
    STDMETHOD(get_DefaultComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(InsertMergeModule)(THIS_ IMergeModule FAR* pObject) PURE;
    STDMETHOD(get_ParentFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(get_Conditions)(THIS_ IConditions FAR* FAR* pConditions) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_AdvertiseEx)(THIS_ EnumAdvertise FAR* peaAdvertise) PURE;
    STDMETHOD(put_AdvertiseEx)(THIS_ EnumAdvertise eaAdvertise) PURE;

    /* IFeature2 methods */
    STDMETHOD(MoveLeft)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(MoveRight)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_ISFeatureExtended)(THIS_ IISFeatureExtended FAR* FAR* ppISFeatureExtended) PURE;
    STDMETHOD(get_ISRequiredFeatures)(THIS_ IISRequiredFeatures FAR* FAR* ppISRequiredFeatures) PURE;
    STDMETHOD(IsMergeModuleInFeature)(THIS_ IMergeModule FAR* pMergeModule, VARIANT_BOOL FAR* vbIsMergeModuleInFeature) PURE;
    STDMETHOD(GetFirstISDotNetComponentInFeature)(THIS_ BSTR bstrISDotNetSolution, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegistryEntries) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* vbHasChild) PURE;
    STDMETHOD(DirectModeDoMerge)(THIS_ IMergeModule FAR* pMergeModule) PURE;

    /* IFeatureNeptune methods */
    STDMETHOD(InsertMergeModules)(THIS_ SAFEARRAY FAR* FAR* psaMsms, ICallbackModuleAdd FAR* pCallback) PURE;
    STDMETHOD(InsertMergeModulesNoCallback)(THIS_ SAFEARRAY FAR* FAR* psaMsms) PURE;
    STDMETHOD(get_Visible)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Visible)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_StatusText)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_StatusText)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Need)(THIS_ EnumFeatureNeed FAR* eVal) PURE;
    STDMETHOD(put_Need)(THIS_ EnumFeatureNeed eVal) PURE;
    STDMETHOD(get_IncludeInBuild)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeInBuild)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Encryption)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Encryption)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_CDRomFolder)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_CDRomFolder)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_IsProObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_ProObjectMoniker)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(InsertFileSet)(THIS_ IFileSetNeptune FAR* pVal) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* pFileSets) PURE;
    STDMETHOD(get_StringList)(THIS_ BSTR FAR* pbstrStringList) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ VARIANT_BOOL vbCreateIfNotFound, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(AddProObject)(THIS_ BSTR bstrMoniker, IProObjectCallbackNeptune FAR* pCallback, VARIANT_BOOL bAddPropsManually, IBusinessObject FAR* FAR* pBusObj) PURE;
    STDMETHOD(get_CanModifyObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(ModifyObject)(THIS_ IProObjectCallbackNeptune FAR* pCallback) PURE;
    STDMETHOD(get_ProObjectProperties)(THIS_ IProObjectPropertiesNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RequiredFeaturesStringList)(THIS_ BSTR FAR* pbstrRequiredFeatures) PURE;
    STDMETHOD(get_FeaturePath)(THIS_ BSTR FAR* pbstrPath) PURE;

    /* IFeaturePluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(CleanFeatureRequirements)(THIS_ VARIANT_BOOL FAR* pvbCleaned) PURE;

    /* IFeatureIxtapa methods */
    STDMETHOD(InsertDimReference)(THIS_ IDimReferenceIxtapa FAR* pObject) PURE;
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;

    /* IFeatureIndore methods */
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;

    /* IFeatureNeo methods */
    STDMETHOD(InsertDim)(THIS_ IDimRef FAR* pObject) PURE;
    STDMETHOD(get_Dims)(THIS_ IDimRefs FAR* FAR* ppDims) PURE;
    STDMETHOD(IsDimInFeature)(THIS_ IDimRef FAR* pDim, VARIANT_BOOL FAR* vbIsMergeModuleInFeature) PURE;
    STDMETHOD(UpdateFeatureForeignKeys)(THIS_ int nFieldId, BSTR bstrOldValue, BSTR bstrNewValue) PURE;

    /* IFeatureOpus methods */
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;
#endif

    /* IFeatureQi methods */
    STDMETHOD(get_RemoveFiles)(THIS_ IRemoveFiles FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_IFeatureSecret,0xBA48DB26L,0x7872,0x456E,0x99,0x9F,0x06,0x9D,0x49,0xE4,0x16,0x14);

/* Definition of interface: IFeatureSecret */
#undef INTERFACE
#define INTERFACE IFeatureSecret

DECLARE_INTERFACE_(IFeatureSecret, IFeatureQi)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IFeature methods */
    STDMETHOD(AddChild)(THIS_ EnumFeatureChild epcFeature, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(InsertComponent)(THIS_ IComponent FAR* pObject) PURE;
    STDMETHOD(get_SubFeatures)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponents) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Configurable)(THIS_ VARIANT_BOOL FAR* Configurable) PURE;
    STDMETHOD(put_Configurable)(THIS_ VARIANT_BOOL Configurable) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* Destination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Destination) PURE;
    STDMETHOD(get_Display)(THIS_ long FAR* Display) PURE;
    STDMETHOD(put_Display)(THIS_ long Display) PURE;
    STDMETHOD(get_Attribute)(THIS_ long FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ long Attribute) PURE;
    STDMETHOD(get_InstallLevel)(THIS_ long FAR* InstallLevel) PURE;
    STDMETHOD(put_InstallLevel)(THIS_ long InstallLevel) PURE;
    STDMETHOD(get_Advertise)(THIS_ VARIANT_BOOL FAR* Advertise) PURE;
    STDMETHOD(put_Advertise)(THIS_ VARIANT_BOOL Advertise) PURE;
    STDMETHOD(get_UIDisallowAbsent)(THIS_ VARIANT_BOOL FAR* UIDisallowAbsent) PURE;
    STDMETHOD(put_UIDisallowAbsent)(THIS_ VARIANT_BOOL UIDisallowAbsent) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(put_Required)(THIS_ VARIANT_BOOL bRequired) PURE;
    STDMETHOD(get_Required)(THIS_ VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(SetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus estStatus) PURE;
    STDMETHOD(GetSetupTypeStatus)(THIS_ ISetupType FAR* pSetupType, EnumSetupTypeStatus FAR* estStatus) PURE;
    STDMETHOD(get_DefaultComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(InsertMergeModule)(THIS_ IMergeModule FAR* pObject) PURE;
    STDMETHOD(get_ParentFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(get_Conditions)(THIS_ IConditions FAR* FAR* pConditions) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_AdvertiseEx)(THIS_ EnumAdvertise FAR* peaAdvertise) PURE;
    STDMETHOD(put_AdvertiseEx)(THIS_ EnumAdvertise eaAdvertise) PURE;

    /* IFeature2 methods */
    STDMETHOD(MoveLeft)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(MoveRight)(THIS_ IFeature FAR* pParentFeature) PURE;
    STDMETHOD(get_Directory)(THIS_ IDirectory2 FAR* FAR* ppDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ IDirectory2 FAR* ppDirectory) PURE;
    STDMETHOD(get_ISFeatureExtended)(THIS_ IISFeatureExtended FAR* FAR* ppISFeatureExtended) PURE;
    STDMETHOD(get_ISRequiredFeatures)(THIS_ IISRequiredFeatures FAR* FAR* ppISRequiredFeatures) PURE;
    STDMETHOD(IsMergeModuleInFeature)(THIS_ IMergeModule FAR* pMergeModule, VARIANT_BOOL FAR* vbIsMergeModuleInFeature) PURE;
    STDMETHOD(GetFirstISDotNetComponentInFeature)(THIS_ BSTR bstrISDotNetSolution, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* pFolders) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* pRegistryEntries) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* vbHasChild) PURE;
    STDMETHOD(DirectModeDoMerge)(THIS_ IMergeModule FAR* pMergeModule) PURE;

    /* IFeatureNeptune methods */
    STDMETHOD(InsertMergeModules)(THIS_ SAFEARRAY FAR* FAR* psaMsms, ICallbackModuleAdd FAR* pCallback) PURE;
    STDMETHOD(InsertMergeModulesNoCallback)(THIS_ SAFEARRAY FAR* FAR* psaMsms) PURE;
    STDMETHOD(get_Visible)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Visible)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_StatusText)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_StatusText)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Need)(THIS_ EnumFeatureNeed FAR* eVal) PURE;
    STDMETHOD(put_Need)(THIS_ EnumFeatureNeed eVal) PURE;
    STDMETHOD(get_IncludeInBuild)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeInBuild)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Encryption)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Encryption)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_CDRomFolder)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_CDRomFolder)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_IsProObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_ProObjectMoniker)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(InsertFileSet)(THIS_ IFileSetNeptune FAR* pVal) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* pFileSets) PURE;
    STDMETHOD(get_StringList)(THIS_ BSTR FAR* pbstrStringList) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ VARIANT_BOOL vbCreateIfNotFound, IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(AddProObject)(THIS_ BSTR bstrMoniker, IProObjectCallbackNeptune FAR* pCallback, VARIANT_BOOL bAddPropsManually, IBusinessObject FAR* FAR* pBusObj) PURE;
    STDMETHOD(get_CanModifyObject)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(ModifyObject)(THIS_ IProObjectCallbackNeptune FAR* pCallback) PURE;
    STDMETHOD(get_ProObjectProperties)(THIS_ IProObjectPropertiesNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RequiredFeaturesStringList)(THIS_ BSTR FAR* pbstrRequiredFeatures) PURE;
    STDMETHOD(get_FeaturePath)(THIS_ BSTR FAR* pbstrPath) PURE;

    /* IFeaturePluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(CleanFeatureRequirements)(THIS_ VARIANT_BOOL FAR* pvbCleaned) PURE;

    /* IFeatureIxtapa methods */
    STDMETHOD(InsertDimReference)(THIS_ IDimReferenceIxtapa FAR* pObject) PURE;
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;

    /* IFeatureIndore methods */
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;

    /* IFeatureNeo methods */
    STDMETHOD(InsertDim)(THIS_ IDimRef FAR* pObject) PURE;
    STDMETHOD(get_Dims)(THIS_ IDimRefs FAR* FAR* ppDims) PURE;
    STDMETHOD(IsDimInFeature)(THIS_ IDimRef FAR* pDim, VARIANT_BOOL FAR* vbIsMergeModuleInFeature) PURE;
    STDMETHOD(UpdateFeatureForeignKeys)(THIS_ int nFieldId, BSTR bstrOldValue, BSTR bstrNewValue) PURE;

    /* IFeatureOpus methods */
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;

    /* IFeatureQi methods */
    STDMETHOD(get_RemoveFiles)(THIS_ IRemoveFiles FAR* FAR* ppVal) PURE;
#endif

    /* IFeatureSecret methods */
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_SearchReplaceSets)(THIS_ ISearchReplaceSets FAR* FAR* pSearchReplaceSets) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_IFeatures,0x80FDFACDL,0x6476,0x43C8,0x9D,0xDC,0x99,0x05,0x2E,0x18,0x6C,0x52);

/* Definition of interface: IFeatures */
#undef INTERFACE
#define INTERFACE IFeatures

DECLARE_INTERFACE_(IFeatures, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFeatures methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IFeature FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IISFeatureExtended,0x3099553DL,0xF59B,0x4FB1,0x94,0xB4,0x81,0x99,0x9D,0xFD,0x77,0xB2);

/* Definition of interface: IISFeatureExtended */
#undef INTERFACE
#define INTERFACE IISFeatureExtended

DECLARE_INTERFACE_(IISFeatureExtended, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISFeatureExtended methods */
    STDMETHOD(get_Uninstalling)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Uninstalling)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Installing)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Installing)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Uninstalled)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Uninstalled)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Installed)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Installed)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FTPLocation)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_FTPLocation)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_HTTPLocation)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_HTTPLocation)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Miscellaneous)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Miscellaneous)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_IISFeatureExtendeds,0x4A87A43AL,0xDE99,0x429B,0xB2,0xC2,0x67,0x97,0x87,0xB0,0x1B,0x29);

/* Definition of interface: IISFeatureExtendeds */
#undef INTERFACE
#define INTERFACE IISFeatureExtendeds

DECLARE_INTERFACE_(IISFeatureExtendeds, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISFeatureExtendeds methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IISFeatureExtended FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IISRequiredFeature,0x2AD4895FL,0x74AC,0x47FB,0x87,0x36,0x05,0xB9,0x18,0x6D,0x42,0xC9);

/* Definition of interface: IISRequiredFeature */
#undef INTERFACE
#define INTERFACE IISRequiredFeature

DECLARE_INTERFACE_(IISRequiredFeature, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISRequiredFeature methods */
    STDMETHOD(get_RequiredFeature)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_RequiredFeature)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_IISRequiredFeatures,0xCAFFF1C1L,0x2ABE,0x4676,0xA7,0x10,0x5A,0x8C,0x2B,0x6A,0xD6,0x47);

/* Definition of interface: IISRequiredFeatures */
#undef INTERFACE
#define INTERFACE IISRequiredFeatures

DECLARE_INTERFACE_(IISRequiredFeatures, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISRequiredFeatures methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IISRequiredFeature FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumDirectoryType {
    edytCustom = 0,
    edytPreDefined = 1,
    edytShortcutFolder = 65537,
    edytShortcutRoot = 1114113,
    edytShortcutTaskBar = 2162689,
    edytShortcutSendTo = 3211265,
    edytShortcutStartMenu = 4259841,
    edytShortcutProgramsMenu = 5308417,
    edytShortcutStartup = 6356993,
    edytShortcutDesktop = 7405569,
    edytShortcutUserDefined = 8454145
} EnumDirectoryType;

typedef enum EnumPropDirectory {
    epdyDirectory = 10,
    epdyParent = 11,
    epdyDefaultDir = 12,
    epdyType = 13
} EnumPropDirectory;

typedef enum EnumDirectoryChild {
    edcDirectory = 0
} EnumDirectoryChild;

typedef enum EnumDirectoryRelationship {
    edrOtherIsEqual,
    edrOtherIsEqualButDifferentSource,
    edrOtherIsChild,
    edrOtherIsParent,
    edrOtherIsDescendant,
    edrOtherIsAncestor
} EnumDirectoryRelationship;

typedef enum EnumDirectoryTreeType {
    edttTarget,
    edttSource,
    edttDirectTable,
    edttPro
} EnumDirectoryTreeType;

interface IFileSetDirectoriesNeptune;

DEFINE_GUID(IID_IFileSetDirectoryNeptune,0x8B5A3859L,0x5304,0x4F82,0xB1,0x89,0x0D,0x5E,0x34,0x8C,0x24,0xED);

/* Definition of interface: IFileSetDirectoryNeptune */
#undef INTERFACE
#define INTERFACE IFileSetDirectoryNeptune

DECLARE_INTERFACE_(IFileSetDirectoryNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileSetDirectoryNeptune methods */
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* sDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR sDirectory) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_SubDirectories)(THIS_ EnumDirectoryTreeType eTreeType, IFileSetDirectoriesNeptune FAR* FAR* ppDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppFileSets) PURE;
    STDMETHOD(get_DisplayPath)(THIS_ BSTR FAR* pbstrDisplayPath) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDirectoryChild edcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Refresh)(THIS_ EnumDirectoryTreeType eTreeType) PURE;
    STDMETHOD(get_Type)(THIS_ EnumDirectoryType FAR* pType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumDirectoryType pType) PURE;
    STDMETHOD(get_ParentDirectory)(THIS_ IFileSetDirectoryNeptune FAR* FAR* ppDirectory) PURE;
    STDMETHOD(Move)(THIS_ IFileSetDirectoryNeptune FAR* pOldParent, IFileSetDirectoryNeptune FAR* pNewParent) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_DisplayPathNoDirId)(THIS_ BSTR FAR* pbstrDisplayPath) PURE;
    STDMETHOD(get_TargetDirLong)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_DefaultDir)(THIS_ BSTR FAR* sDefaultDir) PURE;
    STDMETHOD(put_DefaultDir)(THIS_ BSTR sDefaultDir) PURE;
    STDMETHOD(HasLockPermissions)(THIS_ BSTR strDirID, VARIANT_BOOL FAR* bHasLockPermissions) PURE;
};

DEFINE_GUID(IID_IFileSetDirectoriesNeptune,0x26C6E005L,0x1E77,0x4167,0x8B,0xC9,0x97,0xB1,0x20,0xA8,0xCD,0xC2);

/* Definition of interface: IFileSetDirectoriesNeptune */
#undef INTERFACE
#define INTERFACE IFileSetDirectoriesNeptune

DECLARE_INTERFACE_(IFileSetDirectoriesNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFileSetDirectoriesNeptune methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IFileSetDirectoryNeptune FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IDirectory,0x5BB71D2DL,0xCD0A,0x485B,0xA7,0xB8,0x42,0x8E,0x4A,0x82,0x52,0x2C);

/* Definition of interface: IDirectory */
#undef INTERFACE
#define INTERFACE IDirectory

DECLARE_INTERFACE_(IDirectory, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDirectory methods */
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* sDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR sDirectory) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* sParent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR sParent) PURE;
    STDMETHOD(get_DefaultDir)(THIS_ BSTR FAR* sDefaultDir) PURE;
    STDMETHOD(put_DefaultDir)(THIS_ BSTR sDefaultDir) PURE;
    STDMETHOD(get_TargetDirLong)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_TargetDirShort)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_SourceDirLong)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_SourceDirShort)(THIS_ BSTR FAR* directory) PURE;
};

interface IDirectories;

DEFINE_GUID(IID_IDirectory2,0xB485B235L,0xFA16,0x45A9,0x82,0x95,0x4C,0x96,0xD1,0xC9,0xB0,0xF0);

/* Definition of interface: IDirectory2 */
#undef INTERFACE
#define INTERFACE IDirectory2

DECLARE_INTERFACE_(IDirectory2, IDirectory)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDirectory methods */
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* sDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR sDirectory) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* sParent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR sParent) PURE;
    STDMETHOD(get_DefaultDir)(THIS_ BSTR FAR* sDefaultDir) PURE;
    STDMETHOD(put_DefaultDir)(THIS_ BSTR sDefaultDir) PURE;
    STDMETHOD(get_TargetDirLong)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_TargetDirShort)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_SourceDirLong)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_SourceDirShort)(THIS_ BSTR FAR* directory) PURE;
#endif

    /* IDirectory2 methods */
    STDMETHOD(get_FullSourcePathShort)(THIS_ BSTR FAR* pbstrPath) PURE;
    STDMETHOD(get_FullSourcePathLong)(THIS_ BSTR FAR* pbstrPath) PURE;
    STDMETHOD(get_Type)(THIS_ EnumDirectoryType FAR* pType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumDirectoryType pType) PURE;
    STDMETHOD(get_DisplayPath)(THIS_ BSTR FAR* pbstrDisplayPath) PURE;
    STDMETHOD(get_SubDirectories)(THIS_ EnumDirectoryTreeType eTreeType, IDirectories FAR* FAR* ppDirectories) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDirectoryChild edcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ParentDirectory)(THIS_ IDirectory2 FAR* FAR* ppParent) PURE;
    STDMETHOD(IsRelatedTo)(THIS_ IDirectory2 FAR* pOtherDirectory, EnumDirectoryRelationship pRelationshipType, VARIANT_BOOL FAR* vbIsRelated) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* ppComponents) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(Move)(THIS_ IDirectory2 FAR* pOldParent, IDirectory2 FAR* pNewParent) PURE;
    STDMETHOD(Refresh)(THIS_ EnumDirectoryTreeType eTreeType) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_DisplayPathNoDirId)(THIS_ BSTR FAR* pbstrDisplayPath) PURE;
    STDMETHOD(put_Target2)(THIS_ BSTR directory) PURE;
    STDMETHOD(put_Source2)(THIS_ BSTR directory) PURE;
    STDMETHOD(put_RealName)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_RealName)(THIS_ BSTR FAR* directory) PURE;
};

DEFINE_GUID(IID_IDirectoryJustice,0xEEC31244L,0x95D2,0x4B7F,0xBE,0xE8,0x58,0x3F,0xE4,0x15,0x55,0x53);

/* Definition of interface: IDirectoryJustice */
#undef INTERFACE
#define INTERFACE IDirectoryJustice

DECLARE_INTERFACE_(IDirectoryJustice, IDirectory2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDirectory methods */
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* sDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR sDirectory) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* sParent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR sParent) PURE;
    STDMETHOD(get_DefaultDir)(THIS_ BSTR FAR* sDefaultDir) PURE;
    STDMETHOD(put_DefaultDir)(THIS_ BSTR sDefaultDir) PURE;
    STDMETHOD(get_TargetDirLong)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_TargetDirShort)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_SourceDirLong)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_SourceDirShort)(THIS_ BSTR FAR* directory) PURE;

    /* IDirectory2 methods */
    STDMETHOD(get_FullSourcePathShort)(THIS_ BSTR FAR* pbstrPath) PURE;
    STDMETHOD(get_FullSourcePathLong)(THIS_ BSTR FAR* pbstrPath) PURE;
    STDMETHOD(get_Type)(THIS_ EnumDirectoryType FAR* pType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumDirectoryType pType) PURE;
    STDMETHOD(get_DisplayPath)(THIS_ BSTR FAR* pbstrDisplayPath) PURE;
    STDMETHOD(get_SubDirectories)(THIS_ EnumDirectoryTreeType eTreeType, IDirectories FAR* FAR* ppDirectories) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDirectoryChild edcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ParentDirectory)(THIS_ IDirectory2 FAR* FAR* ppParent) PURE;
    STDMETHOD(IsRelatedTo)(THIS_ IDirectory2 FAR* pOtherDirectory, EnumDirectoryRelationship pRelationshipType, VARIANT_BOOL FAR* vbIsRelated) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* ppComponents) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(Move)(THIS_ IDirectory2 FAR* pOldParent, IDirectory2 FAR* pNewParent) PURE;
    STDMETHOD(Refresh)(THIS_ EnumDirectoryTreeType eTreeType) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_DisplayPathNoDirId)(THIS_ BSTR FAR* pbstrDisplayPath) PURE;
    STDMETHOD(put_Target2)(THIS_ BSTR directory) PURE;
    STDMETHOD(put_Source2)(THIS_ BSTR directory) PURE;
    STDMETHOD(put_RealName)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_RealName)(THIS_ BSTR FAR* directory) PURE;
#endif

    /* IDirectoryJustice methods */
    STDMETHOD(ConvertToShortcutFolder)(THIS_ IComponent FAR* pComponent, IFolder2 FAR* FAR* pFolder) PURE;
};

DEFINE_GUID(IID_IDirectoryOpus,0x95AA7CD6L,0xAAE0,0x4926,0x9A,0x1A,0x9E,0xD5,0xBE,0x92,0xDD,0xA6);

/* Definition of interface: IDirectoryOpus */
#undef INTERFACE
#define INTERFACE IDirectoryOpus

DECLARE_INTERFACE_(IDirectoryOpus, IDirectoryJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDirectory methods */
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* sDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR sDirectory) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* sParent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR sParent) PURE;
    STDMETHOD(get_DefaultDir)(THIS_ BSTR FAR* sDefaultDir) PURE;
    STDMETHOD(put_DefaultDir)(THIS_ BSTR sDefaultDir) PURE;
    STDMETHOD(get_TargetDirLong)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_TargetDirShort)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_SourceDirLong)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_SourceDirShort)(THIS_ BSTR FAR* directory) PURE;

    /* IDirectory2 methods */
    STDMETHOD(get_FullSourcePathShort)(THIS_ BSTR FAR* pbstrPath) PURE;
    STDMETHOD(get_FullSourcePathLong)(THIS_ BSTR FAR* pbstrPath) PURE;
    STDMETHOD(get_Type)(THIS_ EnumDirectoryType FAR* pType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumDirectoryType pType) PURE;
    STDMETHOD(get_DisplayPath)(THIS_ BSTR FAR* pbstrDisplayPath) PURE;
    STDMETHOD(get_SubDirectories)(THIS_ EnumDirectoryTreeType eTreeType, IDirectories FAR* FAR* ppDirectories) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDirectoryChild edcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ParentDirectory)(THIS_ IDirectory2 FAR* FAR* ppParent) PURE;
    STDMETHOD(IsRelatedTo)(THIS_ IDirectory2 FAR* pOtherDirectory, EnumDirectoryRelationship pRelationshipType, VARIANT_BOOL FAR* vbIsRelated) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* ppComponents) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(Move)(THIS_ IDirectory2 FAR* pOldParent, IDirectory2 FAR* pNewParent) PURE;
    STDMETHOD(Refresh)(THIS_ EnumDirectoryTreeType eTreeType) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_DisplayPathNoDirId)(THIS_ BSTR FAR* pbstrDisplayPath) PURE;
    STDMETHOD(put_Target2)(THIS_ BSTR directory) PURE;
    STDMETHOD(put_Source2)(THIS_ BSTR directory) PURE;
    STDMETHOD(put_RealName)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_RealName)(THIS_ BSTR FAR* directory) PURE;

    /* IDirectoryJustice methods */
    STDMETHOD(ConvertToShortcutFolder)(THIS_ IComponent FAR* pComponent, IFolder2 FAR* FAR* pFolder) PURE;
#endif

    /* IDirectoryOpus methods */
    STDMETHOD(get_NetworkShareEnabled)(THIS_ VARIANT_BOOL FAR* vbVal) PURE;
};

DEFINE_GUID(IID_IDirectoryQi,0xE24A7EE1L,0xE8E4,0x41DD,0x98,0xD4,0x00,0xED,0x3B,0x16,0xA5,0xC5);

/* Definition of interface: IDirectoryQi */
#undef INTERFACE
#define INTERFACE IDirectoryQi

DECLARE_INTERFACE_(IDirectoryQi, IDirectoryOpus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDirectory methods */
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* sDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR sDirectory) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* sParent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR sParent) PURE;
    STDMETHOD(get_DefaultDir)(THIS_ BSTR FAR* sDefaultDir) PURE;
    STDMETHOD(put_DefaultDir)(THIS_ BSTR sDefaultDir) PURE;
    STDMETHOD(get_TargetDirLong)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_TargetDirShort)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_SourceDirLong)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_SourceDirShort)(THIS_ BSTR FAR* directory) PURE;

    /* IDirectory2 methods */
    STDMETHOD(get_FullSourcePathShort)(THIS_ BSTR FAR* pbstrPath) PURE;
    STDMETHOD(get_FullSourcePathLong)(THIS_ BSTR FAR* pbstrPath) PURE;
    STDMETHOD(get_Type)(THIS_ EnumDirectoryType FAR* pType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumDirectoryType pType) PURE;
    STDMETHOD(get_DisplayPath)(THIS_ BSTR FAR* pbstrDisplayPath) PURE;
    STDMETHOD(get_SubDirectories)(THIS_ EnumDirectoryTreeType eTreeType, IDirectories FAR* FAR* ppDirectories) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDirectoryChild edcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ParentDirectory)(THIS_ IDirectory2 FAR* FAR* ppParent) PURE;
    STDMETHOD(IsRelatedTo)(THIS_ IDirectory2 FAR* pOtherDirectory, EnumDirectoryRelationship pRelationshipType, VARIANT_BOOL FAR* vbIsRelated) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* ppComponents) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* directory) PURE;
    STDMETHOD(get_IsInFeature)(THIS_ IFeature FAR* pFeature, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(Move)(THIS_ IDirectory2 FAR* pOldParent, IDirectory2 FAR* pNewParent) PURE;
    STDMETHOD(Refresh)(THIS_ EnumDirectoryTreeType eTreeType) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_DisplayPathNoDirId)(THIS_ BSTR FAR* pbstrDisplayPath) PURE;
    STDMETHOD(put_Target2)(THIS_ BSTR directory) PURE;
    STDMETHOD(put_Source2)(THIS_ BSTR directory) PURE;
    STDMETHOD(put_RealName)(THIS_ BSTR directory) PURE;
    STDMETHOD(get_RealName)(THIS_ BSTR FAR* directory) PURE;

    /* IDirectoryJustice methods */
    STDMETHOD(ConvertToShortcutFolder)(THIS_ IComponent FAR* pComponent, IFolder2 FAR* FAR* pFolder) PURE;

    /* IDirectoryOpus methods */
    STDMETHOD(get_NetworkShareEnabled)(THIS_ VARIANT_BOOL FAR* vbVal) PURE;
#endif

    /* IDirectoryQi methods */
    STDMETHOD(get_RemoveFiles)(THIS_ IFeature FAR* pFeature, IRemoveFiles FAR* FAR* ppRemoveFiles) PURE;
};

DEFINE_GUID(IID_IDirectories,0xAAAA61FEL,0xC5FE,0x4C20,0x8A,0x6F,0x19,0xDE,0x31,0x9F,0x5B,0xBE);

/* Definition of interface: IDirectories */
#undef INTERFACE
#define INTERFACE IDirectories

DECLARE_INTERFACE_(IDirectories, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDirectories methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IDirectory FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

DEFINE_GUID(IID_ILightDirectoryEntry,0x9C464DA4L,0x95CA,0x4704,0xA7,0x76,0xFA,0xE6,0x33,0x9F,0x7C,0x53);

/* Definition of interface: ILightDirectoryEntry */
#undef INTERFACE
#define INTERFACE ILightDirectoryEntry

DECLARE_INTERFACE_(ILightDirectoryEntry, ILightEntry)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILightEntry methods */
    STDMETHOD(get_ExcludeFromEnumerator)(THIS_ VARIANT_BOOL FAR* pvbVal) PURE;
#endif

    /* ILightDirectoryEntry methods */
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* sDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR sDirectory) PURE;
    STDMETHOD(get_DirectoryEx)(THIS_ BSTR FAR* sDirectoryEx) PURE;
    STDMETHOD(put_DirectoryEx)(THIS_ BSTR sDirectoryEx) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* sParent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR sParent) PURE;
    STDMETHOD(get_ParentEx)(THIS_ BSTR FAR* sParentEx) PURE;
    STDMETHOD(put_ParentEx)(THIS_ BSTR sParentEx) PURE;
    STDMETHOD(get_DefaultDir)(THIS_ BSTR FAR* sDefaultDir) PURE;
    STDMETHOD(put_DefaultDir)(THIS_ BSTR sDefaultDir) PURE;
    STDMETHOD(get_ISDescription)(THIS_ BSTR FAR* sISDescription) PURE;
    STDMETHOD(put_ISDescription)(THIS_ BSTR sISDescription) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lISAttributes) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long lISAttributes) PURE;
    STDMETHOD(get_ISFolderName)(THIS_ BSTR FAR* ISFolderName) PURE;
    STDMETHOD(put_ISFolderName)(THIS_ BSTR ISFolderName) PURE;
    STDMETHOD(get_Type)(THIS_ EnumDirectoryType FAR* pType) PURE;
    STDMETHOD(get_DisplayPath)(THIS_ BSTR FAR* pbstrDisplayPath) PURE;
    STDMETHOD(get_DisplayPathNoDirId)(THIS_ BSTR FAR* pbstrDisplayPath) PURE;
    STDMETHOD(get_FullSourcePathShort)(THIS_ BSTR FAR* pbstrPath) PURE;
    STDMETHOD(get_FullSourcePathLong)(THIS_ BSTR FAR* pbstrPath) PURE;
    STDMETHOD(get_ParentDirectory)(THIS_ ILightDirectoryEntry FAR* FAR* ppLightEntry) PURE;
    STDMETHOD(put_TreeType)(THIS_ EnumDirectoryTreeType eTreeType) PURE;
    STDMETHOD(get_TreeType)(THIS_ EnumDirectoryTreeType FAR* eTreeType) PURE;
    STDMETHOD(Save)(THIS) PURE;
};

DEFINE_GUID(IID_ILightDirectory,0x588B26EBL,0xD459,0x4A7F,0xBE,0x96,0xFD,0xD6,0xA1,0xB1,0x60,0xB5);

/* Definition of interface: ILightDirectory */
#undef INTERFACE
#define INTERFACE ILightDirectory

DECLARE_INTERFACE_(ILightDirectory, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightDirectory methods */
    STDMETHOD(OpenSession)(THIS) PURE;
    STDMETHOD(CloseSession)(THIS) PURE;
    STDMETHOD(NewEntry)(THIS_ ILightDirectoryEntry FAR* FAR* pLightEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightDirectoryEntry FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(get_ItemEx)(THIS_ VARIANT Item, ILightDirectoryEntry FAR* FAR* Return) PURE;
};

typedef enum EnumValidationType {
    evtReturnBlock = 1,
    evtFunctionBlock = 2,
    evtParameter = 3
} EnumValidationType;

typedef enum EnumPropCustomAction {
    epcaName = 0,
    epcaType = 10,
    epcaSource = 11,
    epcaTarget = 12,
    epcaComment = 13
} EnumPropCustomAction;

typedef enum EnumCustomActionTypes {
    epcatExeBinary = 2,
    epcatExePathDirectory = 34,
    epcatExeInstalled = 18,
    epcatExePathProperty = 50,
    epcatISScript = 65536,
    epcatNestedMsiBinary = 7,
    epcatNestedMsiSourceFile = 23,
    epcatNestedMsiAdvertised = 39,
    epcatMsiDllBinary = 1,
    epcatMsiDllInstalled = 17,
    epcatStdDllBinary = 131072,
    epcatStdDllInstalled = 131088,
    epcatStdDllInSearchPath = 131104,
    epcatClrDllBinary = 262144,
    epcatClrDllInstalled = 262160,
    epcatClrDllProperty = 262192,
    epcatSetProperty = 51,
    epcatSetDirectory = 35,
    epcatJsBinary = 5,
    epcatJsScriptInTarget = 37,
    epcatJsProperty = 53,
    epcatJsInstalled = 21,
    epcatVbsBinary = 6,
    epcatVbsScriptInTarget = 38,
    epcatVbsProperty = 54,
    epcatVbsInstalled = 22,
    epcatISAction = -1,
    epcatDllInstalled = 17,
    epcatExeExistOnDestination = 34,
    epcatErrorMessage = 19,
    epcatKillProcess = 524288,
    epcatKillProcessById = 1048576,
    epcatPowerShellBinary = 2097152,
    epcatPowerShellInstalled = 2097168,
    epcatWiseScript = 4194304
} EnumCustomActionTypes;

typedef enum EnumCustomActionScheduling {
    epcasAlwaysExecute = 0,
    epcasFirstSequence = 256,
    epcasOncePerProcess = 512,
    epcasClientRepeat = 768
} EnumCustomActionScheduling;

typedef enum EnumCustomActionInScript {
    epcaiImmediateExecution = 0,
    epcaiDeferedExecution = 1024,
    epcaiRollbackExecution = 1280,
    epcaiCommitExecution = 1536,
    epcaiNoImpersonateExecution = 3072,
    epcaiNoImpersonateRollback = 3328,
    epcaiNoImpersonateCommitExecution = 3584,
    epcaiTSAware = 16384,
    epcaiTSAwareDeferred = 17408,
    epcaiTSAwareRollback = 17664,
    epcaiTSAwareCommit = 17920,
    epcaiInScriptMask = 20224
} EnumCustomActionInScript;

typedef enum EnumCustomActionReturnProcessing {
    epcarSynchFails = 0,
    epcarSynchContinue = 64,
    epcarAsynchWait = 128,
    epcarAsynchNowait = 192
} EnumCustomActionReturnProcessing;

typedef enum EnumCustomActionSourceTypes {
    epcatDll = 1,
    epcatTypeExe = 2,
    epcatTextData = 3,
    epcatJScript = 5,
    epcatVBScript = 6,
    epcatInstall = 7,
    epcatInstallScript = 65536,
    epcatStandardDLL = 131072,
    epcatClrWrap = 262144,
    epcatPowerShellWrap = 2097152
} EnumCustomActionSourceTypes;

typedef enum EnumCustomActionSourceLocations {
    epcatlBinaryData = 0,
    epcatlSourceFile = 16,
    epcatlDirectory = 32,
    epcatlProperty = 48
} EnumCustomActionSourceLocations;

typedef enum EnumCustomActionProperty {
    epcapClrType,
    epcapClrAssembly,
    epcapClrClass,
    epcapClrMethod,
    epcapClrReturn,
    epcapClrParameters,
    epcapClrDependencies,
    epcapPowerShellType,
    epcapPowerShellScript,
    epcapPowerShell64Bit,
    epcapKillProcessPIDs
} EnumCustomActionProperty;

interface ICustomActionEvents;

DEFINE_GUID(IID_ICustomAction,0x4531C59FL,0x8AC0,0x4748,0xA9,0xFF,0x7E,0xE7,0x3F,0xA4,0x8D,0xFF);

/* Definition of interface: ICustomAction */
#undef INTERFACE
#define INTERFACE ICustomAction

DECLARE_INTERFACE_(ICustomAction, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICustomAction methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* ActionType) PURE;
    STDMETHOD(put_Type)(THIS_ long ActionType) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* Source) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR Source) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;
};

DEFINE_GUID(IID_ICustomAction2,0x84EB0B81L,0x339D,0x4DD4,0xA3,0x24,0x05,0x3D,0xFC,0xAB,0x7D,0x30);

/* Definition of interface: ICustomAction2 */
#undef INTERFACE
#define INTERFACE ICustomAction2

DECLARE_INTERFACE_(ICustomAction2, ICustomAction)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICustomAction methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* ActionType) PURE;
    STDMETHOD(put_Type)(THIS_ long ActionType) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* Source) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR Source) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;
#endif

    /* ICustomAction2 methods */
    STDMETHOD(get_SourceType)(THIS_ EnumCustomActionSourceTypes FAR* eLocation) PURE;
    STDMETHOD(put_SourceType)(THIS_ EnumCustomActionSourceTypes eLocation) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ EnumCustomActionSourceLocations FAR* eLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ EnumCustomActionSourceLocations eLocation) PURE;
    STDMETHOD(get_ReturnProcessingNoWait)(THIS_ VARIANT_BOOL FAR* bNoWait) PURE;
    STDMETHOD(put_ReturnProcessingNoWait)(THIS_ VARIANT_BOOL bNoWait) PURE;
    STDMETHOD(get_ReturnProcessingIgnoreReturn)(THIS_ VARIANT_BOOL FAR* bWait) PURE;
    STDMETHOD(put_ReturnProcessingIgnoreReturn)(THIS_ VARIANT_BOOL bWait) PURE;
    STDMETHOD(get_InScriptExecution)(THIS_ EnumCustomActionInScript FAR* eInScript) PURE;
    STDMETHOD(put_InScriptExecution)(THIS_ EnumCustomActionInScript eInScript) PURE;
    STDMETHOD(get_ExecutionScheduling)(THIS_ EnumCustomActionScheduling FAR* eExeScheduling) PURE;
    STDMETHOD(put_ExecutionScheduling)(THIS_ EnumCustomActionScheduling eExeScheduling) PURE;
    STDMETHOD(CreateOtherRelevateEntries)(THIS) PURE;
    STDMETHOD(get_CaType)(THIS_ long FAR* lCaType) PURE;
    STDMETHOD(put_CaType)(THIS_ long lCaType) PURE;
    STDMETHOD(get_ReturnProcessing)(THIS_ long FAR* lRP) PURE;
    STDMETHOD(put_ReturnProcessing)(THIS_ long lRP) PURE;
    STDMETHOD(Advise)(THIS_ ICustomActionEvents FAR* pCustomActionEvents) PURE;
    STDMETHOD(Unadvise)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ ICustomAction2 FAR* FAR* ppCustomActionClone) PURE;
};

DEFINE_GUID(IID_ICustomActionProteus,0x35269922L,0x4873,0x4045,0x92,0x04,0xA3,0x08,0x01,0xC0,0x35,0xBE);

/* Definition of interface: ICustomActionProteus */
#undef INTERFACE
#define INTERFACE ICustomActionProteus

DECLARE_INTERFACE_(ICustomActionProteus, ICustomAction2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICustomAction methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* ActionType) PURE;
    STDMETHOD(put_Type)(THIS_ long ActionType) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* Source) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR Source) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;

    /* ICustomAction2 methods */
    STDMETHOD(get_SourceType)(THIS_ EnumCustomActionSourceTypes FAR* eLocation) PURE;
    STDMETHOD(put_SourceType)(THIS_ EnumCustomActionSourceTypes eLocation) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ EnumCustomActionSourceLocations FAR* eLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ EnumCustomActionSourceLocations eLocation) PURE;
    STDMETHOD(get_ReturnProcessingNoWait)(THIS_ VARIANT_BOOL FAR* bNoWait) PURE;
    STDMETHOD(put_ReturnProcessingNoWait)(THIS_ VARIANT_BOOL bNoWait) PURE;
    STDMETHOD(get_ReturnProcessingIgnoreReturn)(THIS_ VARIANT_BOOL FAR* bWait) PURE;
    STDMETHOD(put_ReturnProcessingIgnoreReturn)(THIS_ VARIANT_BOOL bWait) PURE;
    STDMETHOD(get_InScriptExecution)(THIS_ EnumCustomActionInScript FAR* eInScript) PURE;
    STDMETHOD(put_InScriptExecution)(THIS_ EnumCustomActionInScript eInScript) PURE;
    STDMETHOD(get_ExecutionScheduling)(THIS_ EnumCustomActionScheduling FAR* eExeScheduling) PURE;
    STDMETHOD(put_ExecutionScheduling)(THIS_ EnumCustomActionScheduling eExeScheduling) PURE;
    STDMETHOD(CreateOtherRelevateEntries)(THIS) PURE;
    STDMETHOD(get_CaType)(THIS_ long FAR* lCaType) PURE;
    STDMETHOD(put_CaType)(THIS_ long lCaType) PURE;
    STDMETHOD(get_ReturnProcessing)(THIS_ long FAR* lRP) PURE;
    STDMETHOD(put_ReturnProcessing)(THIS_ long lRP) PURE;
    STDMETHOD(Advise)(THIS_ ICustomActionEvents FAR* pCustomActionEvents) PURE;
    STDMETHOD(Unadvise)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ ICustomAction2 FAR* FAR* ppCustomActionClone) PURE;
#endif

    /* ICustomActionProteus methods */
    STDMETHOD(get_Script)(THIS_ BSTR FAR* Script) PURE;
    STDMETHOD(put_Script)(THIS_ BSTR Script) PURE;
};

DEFINE_GUID(IID_ICustomActionIndore,0x2A359550L,0x8B48,0x44BB,0xAB,0xEF,0xE6,0x22,0x49,0x1A,0x5D,0x8F);

/* Definition of interface: ICustomActionIndore */
#undef INTERFACE
#define INTERFACE ICustomActionIndore

DECLARE_INTERFACE_(ICustomActionIndore, ICustomActionProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICustomAction methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* ActionType) PURE;
    STDMETHOD(put_Type)(THIS_ long ActionType) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* Source) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR Source) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;

    /* ICustomAction2 methods */
    STDMETHOD(get_SourceType)(THIS_ EnumCustomActionSourceTypes FAR* eLocation) PURE;
    STDMETHOD(put_SourceType)(THIS_ EnumCustomActionSourceTypes eLocation) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ EnumCustomActionSourceLocations FAR* eLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ EnumCustomActionSourceLocations eLocation) PURE;
    STDMETHOD(get_ReturnProcessingNoWait)(THIS_ VARIANT_BOOL FAR* bNoWait) PURE;
    STDMETHOD(put_ReturnProcessingNoWait)(THIS_ VARIANT_BOOL bNoWait) PURE;
    STDMETHOD(get_ReturnProcessingIgnoreReturn)(THIS_ VARIANT_BOOL FAR* bWait) PURE;
    STDMETHOD(put_ReturnProcessingIgnoreReturn)(THIS_ VARIANT_BOOL bWait) PURE;
    STDMETHOD(get_InScriptExecution)(THIS_ EnumCustomActionInScript FAR* eInScript) PURE;
    STDMETHOD(put_InScriptExecution)(THIS_ EnumCustomActionInScript eInScript) PURE;
    STDMETHOD(get_ExecutionScheduling)(THIS_ EnumCustomActionScheduling FAR* eExeScheduling) PURE;
    STDMETHOD(put_ExecutionScheduling)(THIS_ EnumCustomActionScheduling eExeScheduling) PURE;
    STDMETHOD(CreateOtherRelevateEntries)(THIS) PURE;
    STDMETHOD(get_CaType)(THIS_ long FAR* lCaType) PURE;
    STDMETHOD(put_CaType)(THIS_ long lCaType) PURE;
    STDMETHOD(get_ReturnProcessing)(THIS_ long FAR* lRP) PURE;
    STDMETHOD(put_ReturnProcessing)(THIS_ long lRP) PURE;
    STDMETHOD(Advise)(THIS_ ICustomActionEvents FAR* pCustomActionEvents) PURE;
    STDMETHOD(Unadvise)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ ICustomAction2 FAR* FAR* ppCustomActionClone) PURE;

    /* ICustomActionProteus methods */
    STDMETHOD(get_Script)(THIS_ BSTR FAR* Script) PURE;
    STDMETHOD(put_Script)(THIS_ BSTR Script) PURE;
#endif

    /* ICustomActionIndore methods */
    STDMETHOD(get_ISCAReferenceFilePath)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ISCAReferenceFilePath)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_ICustomActionJustice,0x5F2D4CADL,0x2067,0x4E27,0x83,0x9D,0x94,0x69,0xD1,0x08,0xE6,0x73);

/* Definition of interface: ICustomActionJustice */
#undef INTERFACE
#define INTERFACE ICustomActionJustice

DECLARE_INTERFACE_(ICustomActionJustice, ICustomActionIndore)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICustomAction methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* ActionType) PURE;
    STDMETHOD(put_Type)(THIS_ long ActionType) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* Source) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR Source) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;

    /* ICustomAction2 methods */
    STDMETHOD(get_SourceType)(THIS_ EnumCustomActionSourceTypes FAR* eLocation) PURE;
    STDMETHOD(put_SourceType)(THIS_ EnumCustomActionSourceTypes eLocation) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ EnumCustomActionSourceLocations FAR* eLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ EnumCustomActionSourceLocations eLocation) PURE;
    STDMETHOD(get_ReturnProcessingNoWait)(THIS_ VARIANT_BOOL FAR* bNoWait) PURE;
    STDMETHOD(put_ReturnProcessingNoWait)(THIS_ VARIANT_BOOL bNoWait) PURE;
    STDMETHOD(get_ReturnProcessingIgnoreReturn)(THIS_ VARIANT_BOOL FAR* bWait) PURE;
    STDMETHOD(put_ReturnProcessingIgnoreReturn)(THIS_ VARIANT_BOOL bWait) PURE;
    STDMETHOD(get_InScriptExecution)(THIS_ EnumCustomActionInScript FAR* eInScript) PURE;
    STDMETHOD(put_InScriptExecution)(THIS_ EnumCustomActionInScript eInScript) PURE;
    STDMETHOD(get_ExecutionScheduling)(THIS_ EnumCustomActionScheduling FAR* eExeScheduling) PURE;
    STDMETHOD(put_ExecutionScheduling)(THIS_ EnumCustomActionScheduling eExeScheduling) PURE;
    STDMETHOD(CreateOtherRelevateEntries)(THIS) PURE;
    STDMETHOD(get_CaType)(THIS_ long FAR* lCaType) PURE;
    STDMETHOD(put_CaType)(THIS_ long lCaType) PURE;
    STDMETHOD(get_ReturnProcessing)(THIS_ long FAR* lRP) PURE;
    STDMETHOD(put_ReturnProcessing)(THIS_ long lRP) PURE;
    STDMETHOD(Advise)(THIS_ ICustomActionEvents FAR* pCustomActionEvents) PURE;
    STDMETHOD(Unadvise)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ ICustomAction2 FAR* FAR* ppCustomActionClone) PURE;

    /* ICustomActionProteus methods */
    STDMETHOD(get_Script)(THIS_ BSTR FAR* Script) PURE;
    STDMETHOD(put_Script)(THIS_ BSTR Script) PURE;

    /* ICustomActionIndore methods */
    STDMETHOD(get_ISCAReferenceFilePath)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ISCAReferenceFilePath)(THIS_ BSTR bstrVal) PURE;
#endif

    /* ICustomActionJustice methods */
    STDMETHOD(get_CAProperty)(THIS_ EnumCustomActionProperty ecaProperty, VARIANT FAR* Value) PURE;
    STDMETHOD(put_CAProperty)(THIS_ EnumCustomActionProperty ecaProperty, VARIANT Value) PURE;
    STDMETHOD(get_PatchUninstall)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchUninstall)(THIS_ VARIANT_BOOL bVal) PURE;
};

DEFINE_GUID(IID_ICustomActionRipley,0x1C11C89BL,0xFDF2,0x4639,0x8E,0x4E,0xA5,0x9F,0x19,0x45,0xF4,0x7D);

/* Definition of interface: ICustomActionRipley */
#undef INTERFACE
#define INTERFACE ICustomActionRipley

DECLARE_INTERFACE_(ICustomActionRipley, ICustomActionJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICustomAction methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* ActionType) PURE;
    STDMETHOD(put_Type)(THIS_ long ActionType) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* Source) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR Source) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* Comment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR Comment) PURE;

    /* ICustomAction2 methods */
    STDMETHOD(get_SourceType)(THIS_ EnumCustomActionSourceTypes FAR* eLocation) PURE;
    STDMETHOD(put_SourceType)(THIS_ EnumCustomActionSourceTypes eLocation) PURE;
    STDMETHOD(get_SourceLocation)(THIS_ EnumCustomActionSourceLocations FAR* eLocation) PURE;
    STDMETHOD(put_SourceLocation)(THIS_ EnumCustomActionSourceLocations eLocation) PURE;
    STDMETHOD(get_ReturnProcessingNoWait)(THIS_ VARIANT_BOOL FAR* bNoWait) PURE;
    STDMETHOD(put_ReturnProcessingNoWait)(THIS_ VARIANT_BOOL bNoWait) PURE;
    STDMETHOD(get_ReturnProcessingIgnoreReturn)(THIS_ VARIANT_BOOL FAR* bWait) PURE;
    STDMETHOD(put_ReturnProcessingIgnoreReturn)(THIS_ VARIANT_BOOL bWait) PURE;
    STDMETHOD(get_InScriptExecution)(THIS_ EnumCustomActionInScript FAR* eInScript) PURE;
    STDMETHOD(put_InScriptExecution)(THIS_ EnumCustomActionInScript eInScript) PURE;
    STDMETHOD(get_ExecutionScheduling)(THIS_ EnumCustomActionScheduling FAR* eExeScheduling) PURE;
    STDMETHOD(put_ExecutionScheduling)(THIS_ EnumCustomActionScheduling eExeScheduling) PURE;
    STDMETHOD(CreateOtherRelevateEntries)(THIS) PURE;
    STDMETHOD(get_CaType)(THIS_ long FAR* lCaType) PURE;
    STDMETHOD(put_CaType)(THIS_ long lCaType) PURE;
    STDMETHOD(get_ReturnProcessing)(THIS_ long FAR* lRP) PURE;
    STDMETHOD(put_ReturnProcessing)(THIS_ long lRP) PURE;
    STDMETHOD(Advise)(THIS_ ICustomActionEvents FAR* pCustomActionEvents) PURE;
    STDMETHOD(Unadvise)(THIS) PURE;
    STDMETHOD(Clone)(THIS_ ICustomAction2 FAR* FAR* ppCustomActionClone) PURE;

    /* ICustomActionProteus methods */
    STDMETHOD(get_Script)(THIS_ BSTR FAR* Script) PURE;
    STDMETHOD(put_Script)(THIS_ BSTR Script) PURE;

    /* ICustomActionIndore methods */
    STDMETHOD(get_ISCAReferenceFilePath)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ISCAReferenceFilePath)(THIS_ BSTR bstrVal) PURE;

    /* ICustomActionJustice methods */
    STDMETHOD(get_CAProperty)(THIS_ EnumCustomActionProperty ecaProperty, VARIANT FAR* Value) PURE;
    STDMETHOD(put_CAProperty)(THIS_ EnumCustomActionProperty ecaProperty, VARIANT Value) PURE;
    STDMETHOD(get_PatchUninstall)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchUninstall)(THIS_ VARIANT_BOOL bVal) PURE;
#endif

    /* ICustomActionRipley methods */
    STDMETHOD(get_CanDeleteSourceRecord)(THIS_ VARIANT_BOOL FAR* vbValue) PURE;
};

DEFINE_GUID(IID_ICustomActions,0x906A901EL,0x284B,0x4999,0x96,0x19,0x6B,0xCC,0x5F,0x9F,0xBC,0xD9);

/* Definition of interface: ICustomActions */
#undef INTERFACE
#define INTERFACE ICustomActions

DECLARE_INTERFACE_(ICustomActions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICustomActions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ICustomAction FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(IsBlockValid)(THIS_ BSTR sValString, EnumValidationType evtType, long FAR* lResult) PURE;
};

DEFINE_GUID(IID_IISInstallScriptAction,0x8905CCDFL,0x8B57,0x4226,0xA9,0xE6,0x00,0x3F,0x12,0x34,0x98,0x17);

/* Definition of interface: IISInstallScriptAction */
#undef INTERFACE
#define INTERFACE IISInstallScriptAction

DECLARE_INTERFACE_(IISInstallScriptAction, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISInstallScriptAction methods */
    STDMETHOD(get_EntryPoint)(THIS_ BSTR FAR* EntryPoint) PURE;
    STDMETHOD(put_EntryPoint)(THIS_ BSTR EntryPoint) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* Source) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR Source) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ long Type) PURE;
};

DEFINE_GUID(IID_IISDLLWrapper,0xCE2A9E06L,0x4E78,0x46B6,0xBD,0x8B,0x18,0x57,0xCE,0xD0,0x29,0xDD);

/* Definition of interface: IISDLLWrapper */
#undef INTERFACE
#define INTERFACE IISDLLWrapper

DECLARE_INTERFACE_(IISDLLWrapper, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISDLLWrapper methods */
    STDMETHOD(get_EntryPoint)(THIS_ BSTR FAR* EntryPoint) PURE;
    STDMETHOD(put_EntryPoint)(THIS_ BSTR EntryPoint) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* Source) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR Source) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Target) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ long Type) PURE;
};

DEFINE_GUID(IID_IISDLLWrappers,0xB0ABF882L,0xD3C5,0x410C,0xBD,0x08,0x80,0x46,0x39,0x73,0x73,0xD8);

/* Definition of interface: IISDLLWrappers */
#undef INTERFACE
#define INTERFACE IISDLLWrappers

DECLARE_INTERFACE_(IISDLLWrappers, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISDLLWrappers methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IISDLLWrapper FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IISInstallScriptActions,0x1F670D5AL,0x19F6,0x498E,0x81,0x4E,0x3B,0x9E,0x82,0xDB,0xA5,0xE4);

/* Definition of interface: IISInstallScriptActions */
#undef INTERFACE
#define INTERFACE IISInstallScriptActions

DECLARE_INTERFACE_(IISInstallScriptActions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISInstallScriptActions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IISInstallScriptAction FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IISPowerShellWrapper,0xF92BE187L,0xADAA,0x41CF,0xAF,0x62,0x6F,0x4C,0x75,0x26,0x61,0x81);

/* Definition of interface: IISPowerShellWrapper */
#undef INTERFACE
#define INTERFACE IISPowerShellWrapper

DECLARE_INTERFACE_(IISPowerShellWrapper, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISPowerShellWrapper methods */
    STDMETHOD(get_Action)(THIS_ BSTR FAR* Action) PURE;
    STDMETHOD(put_Action)(THIS_ BSTR Action) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IISPowerShellWrappers,0xA524FFC7L,0xE57F,0x45B4,0x86,0xB7,0xDB,0x3A,0x4C,0x0F,0xE2,0x8F);

/* Definition of interface: IISPowerShellWrappers */
#undef INTERFACE
#define INTERFACE IISPowerShellWrappers

DECLARE_INTERFACE_(IISPowerShellWrappers, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISPowerShellWrappers methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IISPowerShellWrapper FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IISWSEWrap,0xA6570791L,0x2C9A,0x455C,0xA4,0x14,0x43,0x70,0x6E,0x80,0x9A,0x63);

/* Definition of interface: IISWSEWrap */
#undef INTERFACE
#define INTERFACE IISWSEWrap

DECLARE_INTERFACE_(IISWSEWrap, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISWSEWrap methods */
    STDMETHOD(get_Action)(THIS_ BSTR FAR* Action) PURE;
    STDMETHOD(put_Action)(THIS_ BSTR Action) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IISWSEWraps,0xF244D1BBL,0x48AD,0x4552,0xA6,0x4B,0xF8,0x6F,0x5C,0xB4,0x92,0x40);

/* Definition of interface: IISWSEWraps */
#undef INTERFACE
#define INTERFACE IISWSEWraps

DECLARE_INTERFACE_(IISWSEWraps, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISWSEWraps methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IISWSEWrap FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumSequenceProperty {
    espSequence = 0,
    espCondition = 10,
    espComment = 11
} EnumSequenceProperty;

typedef enum EnumActionType {
    eatAction = 1,
    eatCustomAction = 2,
    eatDialog = 3,
    eatMMCustomAction = 4,
    eatMMDialog = 5,
    eatInvalidAction = 6,
    eatDIMCustomAction = 7,
    eatDIMDialog = 8
} EnumActionType;

typedef enum EnumSequenceTableType {
    esttInstallUISequence = 1,
    esttInstallExecuteSequence = 2,
    esttAdminUISequence = 3,
    esttAdminExecuteSequence = 4,
    esttAdvtUISequence = 5,
    esttAdvtExecuteSequence = 6
} EnumSequenceTableType;

DEFINE_GUID(IID_ISequence,0xF79B5EC7L,0x5CC7,0x4390,0xB3,0x12,0x8A,0xBA,0xBF,0x92,0xB4,0xB7);

/* Definition of interface: ISequence */
#undef INTERFACE
#define INTERFACE ISequence

DECLARE_INTERFACE_(ISequence, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISequence methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* sComment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR sComment) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* sCondition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR sCondition) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* lSequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long lSequence) PURE;
    STDMETHOD(get_Type)(THIS_ EnumActionType FAR* eActionType) PURE;
    STDMETHOD(Remove)(THIS) PURE;
};

DEFINE_GUID(IID_ISequence2,0xB29FA8FCL,0x9C2C,0x464B,0xB1,0x05,0x20,0x9C,0x77,0xF4,0xD2,0x75);

/* Definition of interface: ISequence2 */
#undef INTERFACE
#define INTERFACE ISequence2

DECLARE_INTERFACE_(ISequence2, ISequence)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISequence methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* sComment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR sComment) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* sCondition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR sCondition) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* lSequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long lSequence) PURE;
    STDMETHOD(get_Type)(THIS_ EnumActionType FAR* eActionType) PURE;
    STDMETHOD(Remove)(THIS) PURE;
#endif

    /* ISequence2 methods */
    STDMETHOD(put_Type)(THIS_ EnumActionType eActionType) PURE;
};

DEFINE_GUID(IID_ISequenceJustice,0x68DFEBF0L,0x1275,0x47DE,0xB6,0x74,0xF1,0x6B,0x78,0x80,0xEC,0xA7);

/* Definition of interface: ISequenceJustice */
#undef INTERFACE
#define INTERFACE ISequenceJustice

DECLARE_INTERFACE_(ISequenceJustice, ISequence2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISequence methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* sComment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR sComment) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* sCondition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR sCondition) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* lSequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long lSequence) PURE;
    STDMETHOD(get_Type)(THIS_ EnumActionType FAR* eActionType) PURE;
    STDMETHOD(Remove)(THIS) PURE;

    /* ISequence2 methods */
    STDMETHOD(put_Type)(THIS_ EnumActionType eActionType) PURE;
#endif

    /* ISequenceJustice methods */
    STDMETHOD(get_HasChild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_IDialog)(THIS_ IDialog FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_ISequences,0x7A80DB7CL,0xE834,0x42F0,0xBF,0xD2,0x46,0x80,0x4D,0xBC,0xEE,0x5D);

/* Definition of interface: ISequences */
#undef INTERFACE
#define INTERFACE ISequences

DECLARE_INTERFACE_(ISequences, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISequences methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ISequence FAR* FAR* pSequence) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

DEFINE_GUID(IID_ISequenceEvent,0xA34E9627L,0x46DA,0x484C,0xB9,0xB3,0xE3,0x04,0xE6,0x6A,0x05,0xE0);

/* Definition of interface: ISequenceEvent */
#undef INTERFACE
#define INTERFACE ISequenceEvent

DECLARE_INTERFACE_(ISequenceEvent, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISequenceEvent methods */
    STDMETHOD(OnChange)(THIS_ IBusinessObject FAR* pCurrent) PURE;
};

DEFINE_GUID(IID_ISequenceHeader,0xD26E8DA2L,0x097E,0x4EA6,0xB4,0xC9,0xB6,0xD4,0x6A,0xF5,0x24,0x70);

/* Definition of interface: ISequenceHeader */
#undef INTERFACE
#define INTERFACE ISequenceHeader

DECLARE_INTERFACE_(ISequenceHeader, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISequenceHeader methods */
    STDMETHOD(get_InstallUISequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_InstallExecuteSequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_AdvtUISequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_AdvtExecuteSequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_AdminUISequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_AdminExecuteSequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(Insert)(THIS_ EnumSequenceTableType eSequenceType, IBusinessObject FAR* pChild, BSTR sCondition, BSTR sComment, IBusinessObject FAR* pPrevSibling, IBusinessObject FAR* pNextSibling, IBusinessObject FAR* FAR* pSequence) PURE;
    STDMETHOD(Move)(THIS_ EnumSequenceTableType eSequenceType, IBusinessObject FAR* pChild, IBusinessObject FAR* pPrevSibling, IBusinessObject FAR* pNextSibling) PURE;
    STDMETHOD(Advise)(THIS_ ISequenceEvent FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
};

DEFINE_GUID(IID_ISequenceHeader2,0x37EB2A9DL,0xD779,0x4561,0xAD,0x0B,0xB5,0xAD,0x27,0xE4,0xF4,0xF6);

/* Definition of interface: ISequenceHeader2 */
#undef INTERFACE
#define INTERFACE ISequenceHeader2

DECLARE_INTERFACE_(ISequenceHeader2, ISequenceHeader)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISequenceHeader methods */
    STDMETHOD(get_InstallUISequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_InstallExecuteSequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_AdvtUISequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_AdvtExecuteSequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_AdminUISequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_AdminExecuteSequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(Insert)(THIS_ EnumSequenceTableType eSequenceType, IBusinessObject FAR* pChild, BSTR sCondition, BSTR sComment, IBusinessObject FAR* pPrevSibling, IBusinessObject FAR* pNextSibling, IBusinessObject FAR* FAR* pSequence) PURE;
    STDMETHOD(Move)(THIS_ EnumSequenceTableType eSequenceType, IBusinessObject FAR* pChild, IBusinessObject FAR* pPrevSibling, IBusinessObject FAR* pNextSibling) PURE;
    STDMETHOD(Advise)(THIS_ ISequenceEvent FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
#endif

    /* ISequenceHeader2 methods */
    STDMETHOD(AddChild)(THIS_ EnumSequenceTableType eSequenceType, BSTR sName, BSTR sComment, BSTR sCondition, long lSequence, IBusinessObject FAR* FAR* pSequence) PURE;
};

DEFINE_GUID(IID_ISequenceHeaderJustice,0x0FCF204CL,0xAB4B,0x4D56,0x8B,0xE7,0xAA,0xB4,0xB3,0xB6,0x3D,0x5D);

/* Definition of interface: ISequenceHeaderJustice */
#undef INTERFACE
#define INTERFACE ISequenceHeaderJustice

DECLARE_INTERFACE_(ISequenceHeaderJustice, ISequenceHeader2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISequenceHeader methods */
    STDMETHOD(get_InstallUISequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_InstallExecuteSequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_AdvtUISequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_AdvtExecuteSequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_AdminUISequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(get_AdminExecuteSequences)(THIS_ ISequences FAR* FAR* pSequences) PURE;
    STDMETHOD(Insert)(THIS_ EnumSequenceTableType eSequenceType, IBusinessObject FAR* pChild, BSTR sCondition, BSTR sComment, IBusinessObject FAR* pPrevSibling, IBusinessObject FAR* pNextSibling, IBusinessObject FAR* FAR* pSequence) PURE;
    STDMETHOD(Move)(THIS_ EnumSequenceTableType eSequenceType, IBusinessObject FAR* pChild, IBusinessObject FAR* pPrevSibling, IBusinessObject FAR* pNextSibling) PURE;
    STDMETHOD(Advise)(THIS_ ISequenceEvent FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;

    /* ISequenceHeader2 methods */
    STDMETHOD(AddChild)(THIS_ EnumSequenceTableType eSequenceType, BSTR sName, BSTR sComment, BSTR sCondition, long lSequence, IBusinessObject FAR* FAR* pSequence) PURE;
#endif

    /* ISequenceHeaderJustice methods */
    STDMETHOD(get_Sequences)(THIS_ EnumSequenceTableType eSequenceType, ISequences FAR* FAR* pSequences) PURE;
};

DEFINE_GUID(IID_IPathRecommendation,0xCB522942L,0x1411,0x489F,0xA0,0xAC,0x53,0x20,0xE0,0x99,0xDE,0xEB);

/* Definition of interface: IPathRecommendation */
#undef INTERFACE
#define INTERFACE IPathRecommendation

DECLARE_INTERFACE_(IPathRecommendation, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPathRecommendation methods */
    STDMETHOD(get_PathInFile)(THIS_ BSTR FAR* PathInFile) PURE;
    STDMETHOD(get_PathConverted)(THIS_ BSTR FAR* PathConverted) PURE;
    STDMETHOD(put_PathConverted)(THIS_ BSTR PathConverted) PURE;
    STDMETHOD(get_PathVariableName)(THIS_ BSTR FAR* PathVariableName) PURE;
    STDMETHOD(put_PathVariableName)(THIS_ BSTR PathVariableName) PURE;
    STDMETHOD(get_bIncludeFlag)(THIS_ VARIANT_BOOL FAR* bIncludeFlag) PURE;
    STDMETHOD(put_bIncludeFlag)(THIS_ VARIANT_BOOL bIncludeFlag) PURE;
};

DEFINE_GUID(IID_IPathRecommendations,0x9038321EL,0x4A0C,0x4ACB,0x95,0x8C,0x3C,0x1B,0x6D,0x7A,0xC3,0x72);

/* Definition of interface: IPathRecommendations */
#undef INTERFACE
#define INTERFACE IPathRecommendations

DECLARE_INTERFACE_(IPathRecommendations, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPathRecommendations methods */
    STDMETHOD(Add)(THIS_ BSTR bstrPathvarName, BSTR bstrPath, IPathRecommendation FAR* FAR* Return) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IPathRecommendation FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IPathConvertEvent,0x3DB92FACL,0x2AA9,0x4A99,0xBB,0x5A,0x61,0xF8,0x71,0x44,0x50,0xCE);

/* Definition of interface: IPathConvertEvent */
#undef INTERFACE
#define INTERFACE IPathConvertEvent

DECLARE_INTERFACE_(IPathConvertEvent, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPathConvertEvent methods */
    STDMETHOD(Progress)(THIS_ long lPercentageDone, VARIANT_BOOL FAR* bCancel) PURE;
};

typedef enum EnumOSConstants {
    etosUnknown = 0,
    etosWindows95 = 1,
    etosWindows98 = 2,
    etosWindowsNT351 = 4,
    etosWindowsNT4 = 8,
    etosWindows2K = 16,
    etosWindowsME = 32,
    etosWindows98SE = 64,
    etosWindowsXP = 128,
    etosWindowsNETSERVER = 256,
    etosWindowsVista = 512,
    etosWindowsLonghorn = 1024,
    etosWindows7 = 2048,
    etosWindows2008R2 = 4096,
    etosWindows8 = 8192,
    etosWindows8Server = 16384,
    etosWindows81 = 32768,
    etosWindows81Server = 65536,
    etosAny = -1
} EnumOSConstants;

typedef enum EnumTargetMinimumProcessor {
    etpAll = 0,
    etp486 = 4,
    etpPentium = 5
} EnumTargetMinimumProcessor;

typedef enum EnumTargetMinimumRAM {
    etramNone = 0,
    etram8 = 8,
    etram16 = 16,
    etram32 = 32,
    etram64 = 64,
    etram128 = 128,
    etram256 = 256,
    etram512 = 512,
    etram1024 = 1024,
    etram1536 = 1536,
    etram2048 = 2048
} EnumTargetMinimumRAM;

typedef enum EnumTargetMinimumResolution {
    etresAny = 0,
    etres640 = 1,
    etres800 = 2,
    etres1024 = 3,
    etres1280 = 4
} EnumTargetMinimumResolution;

typedef enum EnumTargetMinimumColor {
    etcAny = 0,
    etc256 = 8,
    etc65k = 16,
    etc24bit = 24,
    etc32bit = 32
} EnumTargetMinimumColor;

DEFINE_GUID(IID_ITargetReqs,0x80491CD6L,0x6318,0x4CB2,0xB1,0x43,0xB8,0x22,0x45,0x7A,0x3B,0x40);

/* Definition of interface: ITargetReqs */
#undef INTERFACE
#define INTERFACE ITargetReqs

DECLARE_INTERFACE_(ITargetReqs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ITargetReqs methods */
    STDMETHOD(put_OSVersion)(THIS_ long lOSVersion) PURE;
    STDMETHOD(get_OSVersion)(THIS_ long FAR* lOSVersion) PURE;
    STDMETHOD(put_Processor)(THIS_ EnumTargetMinimumProcessor etpProcessor) PURE;
    STDMETHOD(get_Processor)(THIS_ EnumTargetMinimumProcessor FAR* etpProcessor) PURE;
    STDMETHOD(put_RAM)(THIS_ EnumTargetMinimumRAM etramRAM) PURE;
    STDMETHOD(get_RAM)(THIS_ EnumTargetMinimumRAM FAR* etramRAM) PURE;
    STDMETHOD(put_Resolution)(THIS_ EnumTargetMinimumResolution etresResolution) PURE;
    STDMETHOD(get_Resolution)(THIS_ EnumTargetMinimumResolution FAR* etresResolution) PURE;
    STDMETHOD(put_Color)(THIS_ EnumTargetMinimumColor etcColor) PURE;
    STDMETHOD(get_Color)(THIS_ EnumTargetMinimumColor FAR* etcColor) PURE;
};

typedef enum EnumManifestItemAction {
    miaNoOp = 0,
    miaWrite = 1,
    miaWriteNew = 2,
    miaRemove = 4,
    miaFileKey = 8,
    miaIconKey = 16,
    miaConfigFile = 32
} EnumManifestItemAction;

typedef enum EnumUpdateSequence {
    eusBeforeStartup = 0,
    eusBackgroundThread = 1
} EnumUpdateSequence;

typedef enum EnumPeriodicUpdateUnits {
    puuHours = 0,
    puuDays = 1,
    puuWeeks = 2
} EnumPeriodicUpdateUnits;

typedef enum EnumSecuritySettingGroup {
    essgVisualStudio,
    essgInternet,
    essgLocalnet,
    essgFullTrust,
    essgCustom
} EnumSecuritySettingGroup;

DEFINE_GUID(IID_IManifestItemNeptunePDC,0xB31E2E51L,0x7EFD,0x47E6,0x9E,0xE9,0x71,0xAC,0x96,0x50,0xF1,0xC4);

/* Definition of interface: IManifestItemNeptunePDC */
#undef INTERFACE
#define INTERFACE IManifestItemNeptunePDC

DECLARE_INTERFACE_(IManifestItemNeptunePDC, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IManifestItemNeptunePDC methods */
    STDMETHOD(get_ManifestKey)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ManifestKey)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Element)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_Element)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Attribute)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_Attribute)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Data)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_Data)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Action)(THIS_ EnumManifestItemAction FAR* lVal) PURE;
    STDMETHOD(put_Action)(THIS_ EnumManifestItemAction lVal) PURE;
};

DEFINE_GUID(IID_IManifestItemsNeptunePDC,0xB31E2E52L,0x7EFD,0x47E6,0x9E,0xE9,0x71,0xAC,0x96,0x50,0xF1,0xC4);

/* Definition of interface: IManifestItemsNeptunePDC */
#undef INTERFACE
#define INTERFACE IManifestItemsNeptunePDC

DECLARE_INTERFACE_(IManifestItemsNeptunePDC, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IManifestItemsNeptunePDC methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IManifestItemNeptunePDC FAR* FAR* pAction) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IApplicationManifestNeptunePDC,0xB31E2E53L,0x7EFD,0x47E6,0x9E,0xE9,0x71,0xAC,0x96,0x50,0xF1,0xC4);

/* Definition of interface: IApplicationManifestNeptunePDC */
#undef INTERFACE
#define INTERFACE IApplicationManifestNeptunePDC

DECLARE_INTERFACE_(IApplicationManifestNeptunePDC, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IApplicationManifestNeptunePDC methods */
    STDMETHOD(get_ManifestItems)(THIS_ IManifestItemsNeptunePDC FAR* FAR* ppManifestItems) PURE;
    STDMETHOD(AddManifestItem)(THIS_ BSTR bstrElement, BSTR bstrAttribute, IManifestItemNeptunePDC FAR* FAR* ppManifestItem) PURE;
    STDMETHOD(get_ApplicationVersion)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ApplicationVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ConfigFile)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ConfigFile)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ShellIcon)(THIS_ BSTR FAR* pbstrVal, long FAR* lIndex) PURE;
    STDMETHOD(put_ShellIcon)(THIS_ BSTR bstrVal, long lIndex) PURE;
    STDMETHOD(CreateOSDependency)(THIS_ EnumOSConstants osConstant) PURE;
    STDMETHOD(RemoveOSDependency)(THIS_ EnumOSConstants osConstant) PURE;
    STDMETHOD(ExistsOSDependency)(THIS_ EnumOSConstants osConstant, VARIANT_BOOL FAR* vbExists) PURE;
};

DEFINE_GUID(IID_IApplicationManifestIxtapa,0xE16C37BEL,0x8EA4,0x473A,0x90,0xAD,0x9D,0x4E,0x57,0x25,0xA6,0x8B);

/* Definition of interface: IApplicationManifestIxtapa */
#undef INTERFACE
#define INTERFACE IApplicationManifestIxtapa

DECLARE_INTERFACE_(IApplicationManifestIxtapa, IApplicationManifestNeptunePDC)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IApplicationManifestNeptunePDC methods */
    STDMETHOD(get_ManifestItems)(THIS_ IManifestItemsNeptunePDC FAR* FAR* ppManifestItems) PURE;
    STDMETHOD(AddManifestItem)(THIS_ BSTR bstrElement, BSTR bstrAttribute, IManifestItemNeptunePDC FAR* FAR* ppManifestItem) PURE;
    STDMETHOD(get_ApplicationVersion)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ApplicationVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ConfigFile)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ConfigFile)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ShellIcon)(THIS_ BSTR FAR* pbstrVal, long FAR* lIndex) PURE;
    STDMETHOD(put_ShellIcon)(THIS_ BSTR bstrVal, long lIndex) PURE;
    STDMETHOD(CreateOSDependency)(THIS_ EnumOSConstants osConstant) PURE;
    STDMETHOD(RemoveOSDependency)(THIS_ EnumOSConstants osConstant) PURE;
    STDMETHOD(ExistsOSDependency)(THIS_ EnumOSConstants osConstant, VARIANT_BOOL FAR* vbExists) PURE;
#endif

    /* IApplicationManifestIxtapa methods */
    STDMETHOD(SecuritySettingIsEnabled)(THIS_ BSTR bstrSetting, VARIANT_BOOL FAR* vbEnabled) PURE;
    STDMETHOD(EnableSecuritySetting)(THIS_ BSTR bstrSetting) PURE;
    STDMETHOD(DisableSecuritySetting)(THIS_ BSTR bstrSetting) PURE;
    STDMETHOD(get_SecuritySet)(THIS_ EnumSecuritySettingGroup FAR* pessgSet) PURE;
    STDMETHOD(put_SecuritySet)(THIS_ EnumSecuritySettingGroup essgSet) PURE;
};

DEFINE_GUID(IID_IDeploymentManifestNeptunePDC,0xB31E2E54L,0x7EFD,0x47E6,0x9E,0xE9,0x71,0xAC,0x96,0x50,0xF1,0xC4);

/* Definition of interface: IDeploymentManifestNeptunePDC */
#undef INTERFACE
#define INTERFACE IDeploymentManifestNeptunePDC

DECLARE_INTERFACE_(IDeploymentManifestNeptunePDC, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDeploymentManifestNeptunePDC methods */
    STDMETHOD(get_ManifestItems)(THIS_ IManifestItemsNeptunePDC FAR* FAR* ppManifestItems) PURE;
    STDMETHOD(AddManifestItem)(THIS_ BSTR bstrElement, BSTR bstrAttribute, IManifestItemNeptunePDC FAR* FAR* ppManifestItem) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ApplicationName)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ApplicationName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ShellVisible)(THIS_ VARIANT_BOOL FAR* vbVisible) PURE;
    STDMETHOD(put_ShellVisible)(THIS_ VARIANT_BOOL vbVisible) PURE;
    STDMETHOD(get_SupportURL)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_SupportURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_UpdateURL)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_UpdateURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_UpdateRequired)(THIS_ VARIANT_BOOL FAR* vbRequired) PURE;
    STDMETHOD(put_UpdateRequired)(THIS_ VARIANT_BOOL vbRequired) PURE;
    STDMETHOD(get_CheckForUpdates)(THIS_ VARIANT_BOOL FAR* vbCheck) PURE;
    STDMETHOD(put_CheckForUpdates)(THIS_ VARIANT_BOOL vbCheck) PURE;
    STDMETHOD(get_UpdateSequenceing)(THIS_ EnumUpdateSequence FAR* peus) PURE;
    STDMETHOD(put_UpdateSequenceing)(THIS_ EnumUpdateSequence eus) PURE;
    STDMETHOD(get_UpdateSchedulingUnits)(THIS_ EnumPeriodicUpdateUnits FAR* ppuu) PURE;
    STDMETHOD(put_UpdateSchedulingUnits)(THIS_ EnumPeriodicUpdateUnits puu) PURE;
    STDMETHOD(get_UpdateSchedulingInterval)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_UpdateSchedulingInterval)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_IDeploymentManifestIxtapa,0xCAC1EE3BL,0x197F,0x4688,0x8B,0xBA,0x2A,0xF1,0x92,0x0B,0x30,0x9D);

/* Definition of interface: IDeploymentManifestIxtapa */
#undef INTERFACE
#define INTERFACE IDeploymentManifestIxtapa

DECLARE_INTERFACE_(IDeploymentManifestIxtapa, IDeploymentManifestNeptunePDC)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDeploymentManifestNeptunePDC methods */
    STDMETHOD(get_ManifestItems)(THIS_ IManifestItemsNeptunePDC FAR* FAR* ppManifestItems) PURE;
    STDMETHOD(AddManifestItem)(THIS_ BSTR bstrElement, BSTR bstrAttribute, IManifestItemNeptunePDC FAR* FAR* ppManifestItem) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ApplicationName)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ApplicationName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ShellVisible)(THIS_ VARIANT_BOOL FAR* vbVisible) PURE;
    STDMETHOD(put_ShellVisible)(THIS_ VARIANT_BOOL vbVisible) PURE;
    STDMETHOD(get_SupportURL)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_SupportURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_UpdateURL)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_UpdateURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_UpdateRequired)(THIS_ VARIANT_BOOL FAR* vbRequired) PURE;
    STDMETHOD(put_UpdateRequired)(THIS_ VARIANT_BOOL vbRequired) PURE;
    STDMETHOD(get_CheckForUpdates)(THIS_ VARIANT_BOOL FAR* vbCheck) PURE;
    STDMETHOD(put_CheckForUpdates)(THIS_ VARIANT_BOOL vbCheck) PURE;
    STDMETHOD(get_UpdateSequenceing)(THIS_ EnumUpdateSequence FAR* peus) PURE;
    STDMETHOD(put_UpdateSequenceing)(THIS_ EnumUpdateSequence eus) PURE;
    STDMETHOD(get_UpdateSchedulingUnits)(THIS_ EnumPeriodicUpdateUnits FAR* ppuu) PURE;
    STDMETHOD(put_UpdateSchedulingUnits)(THIS_ EnumPeriodicUpdateUnits puu) PURE;
    STDMETHOD(get_UpdateSchedulingInterval)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_UpdateSchedulingInterval)(THIS_ BSTR bstrVal) PURE;
#endif

    /* IDeploymentManifestIxtapa methods */
    STDMETHOD(get_CertificateThumbprint)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_CertificateThumbprint)(THIS_ BSTR pbstrVal) PURE;
};

interface IRelease;

interface IReleases;

typedef enum EnumProductChild {
    epFeature = 1,
    epLanguages = 2,
    epSequences = 3
} EnumProductChild;

typedef enum EnumPropProduct {
    eppName = 0,
    eppSubject = 10,
    eppDefaultDestination = 11,
    eppVersion = 12,
    eppHelpPhone = 13,
    eppHelpURL = 14,
    eppType = 15,
    eppDevTool = 16,
    eppDisplayTree = 17,
    eppCurrentMedia = 18,
    eppSISAuthor = 19,
    eppGuid = 20,
    eppAboutURL = 21,
    eppUpdateURL = 22,
    eppTemplateSummary = 25,
    eppDatabaseDir = 26,
    eppPageCount = 27,
    eppAppType = 28,
    eppLanguage = 29,
    eppSISCodePage = 30,
    eppSecurity = 31,
    eppTemplateSummaryDirect = 32
} EnumPropProduct;

DEFINE_GUID(IID_IProduct,0x54907E9EL,0xE506,0x4E80,0xAA,0x9C,0x03,0x29,0x80,0x3C,0x06,0xC1);

/* Definition of interface: IProduct */
#undef INTERFACE
#define INTERFACE IProduct

DECLARE_INTERFACE_(IProduct, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProduct methods */
    STDMETHOD(AddChild)(THIS_ EnumProductChild ipcProduct, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Features)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_ProductName)(THIS_ BSTR FAR* ProductName) PURE;
    STDMETHOD(put_ProductName)(THIS_ BSTR ProductName) PURE;
    STDMETHOD(get_DefaultDestination)(THIS_ BSTR FAR* DefaultDestination) PURE;
    STDMETHOD(put_DefaultDestination)(THIS_ BSTR DefaultDestination) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_HelpPhone)(THIS_ BSTR FAR* HelpPhone) PURE;
    STDMETHOD(put_HelpPhone)(THIS_ BSTR HelpPhone) PURE;
    STDMETHOD(get_HelpURL)(THIS_ BSTR FAR* HelpURL) PURE;
    STDMETHOD(put_HelpURL)(THIS_ BSTR HelpURL) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ long Type) PURE;
    STDMETHOD(get_DevTool)(THIS_ BSTR FAR* DevTool) PURE;
    STDMETHOD(put_DevTool)(THIS_ BSTR DevTool) PURE;
    STDMETHOD(get_DisplayTree)(THIS_ BSTR FAR* DisplayTree) PURE;
    STDMETHOD(put_DisplayTree)(THIS_ BSTR DisplayTree) PURE;
    STDMETHOD(get_CurrentMedia)(THIS_ IRelease FAR* FAR* CurrentMedia) PURE;
    STDMETHOD(put_CurrentMedia)(THIS_ IRelease FAR* CurrentMedia) PURE;
    STDMETHOD(get_SISAuthor)(THIS_ BSTR FAR* sAuthor) PURE;
    STDMETHOD(put_SISAuthor)(THIS_ BSTR sAuthor) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_AboutURL)(THIS_ BSTR FAR* AboutURL) PURE;
    STDMETHOD(put_AboutURL)(THIS_ BSTR AboutURL) PURE;
    STDMETHOD(get_UpdateURL)(THIS_ BSTR FAR* UpdateURL) PURE;
    STDMETHOD(put_UpdateURL)(THIS_ BSTR UpdateURL) PURE;
    STDMETHOD(get_SequenceHeader)(THIS_ ISequenceHeader FAR* FAR* pSequenceHeader) PURE;
    STDMETHOD(get_Subject)(THIS_ BSTR FAR* Subject) PURE;
    STDMETHOD(put_Subject)(THIS_ BSTR Subject) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(get_TargetReqs)(THIS_ ITargetReqs FAR* FAR* pTargetReqs) PURE;
    STDMETHOD(get_DATABASEDIR)(THIS_ BSTR FAR* pbstrDATABASEDIR) PURE;
    STDMETHOD(put_DATABASEDIR)(THIS_ BSTR bstrDATABASEDIR) PURE;
};

DEFINE_GUID(IID_IProduct2,0x013185A5L,0xB7A9,0x4E71,0x92,0x85,0x77,0x69,0x24,0x0E,0x18,0x83);

/* Definition of interface: IProduct2 */
#undef INTERFACE
#define INTERFACE IProduct2

DECLARE_INTERFACE_(IProduct2, IProduct)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProduct methods */
    STDMETHOD(AddChild)(THIS_ EnumProductChild ipcProduct, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Features)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_ProductName)(THIS_ BSTR FAR* ProductName) PURE;
    STDMETHOD(put_ProductName)(THIS_ BSTR ProductName) PURE;
    STDMETHOD(get_DefaultDestination)(THIS_ BSTR FAR* DefaultDestination) PURE;
    STDMETHOD(put_DefaultDestination)(THIS_ BSTR DefaultDestination) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_HelpPhone)(THIS_ BSTR FAR* HelpPhone) PURE;
    STDMETHOD(put_HelpPhone)(THIS_ BSTR HelpPhone) PURE;
    STDMETHOD(get_HelpURL)(THIS_ BSTR FAR* HelpURL) PURE;
    STDMETHOD(put_HelpURL)(THIS_ BSTR HelpURL) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ long Type) PURE;
    STDMETHOD(get_DevTool)(THIS_ BSTR FAR* DevTool) PURE;
    STDMETHOD(put_DevTool)(THIS_ BSTR DevTool) PURE;
    STDMETHOD(get_DisplayTree)(THIS_ BSTR FAR* DisplayTree) PURE;
    STDMETHOD(put_DisplayTree)(THIS_ BSTR DisplayTree) PURE;
    STDMETHOD(get_CurrentMedia)(THIS_ IRelease FAR* FAR* CurrentMedia) PURE;
    STDMETHOD(put_CurrentMedia)(THIS_ IRelease FAR* CurrentMedia) PURE;
    STDMETHOD(get_SISAuthor)(THIS_ BSTR FAR* sAuthor) PURE;
    STDMETHOD(put_SISAuthor)(THIS_ BSTR sAuthor) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_AboutURL)(THIS_ BSTR FAR* AboutURL) PURE;
    STDMETHOD(put_AboutURL)(THIS_ BSTR AboutURL) PURE;
    STDMETHOD(get_UpdateURL)(THIS_ BSTR FAR* UpdateURL) PURE;
    STDMETHOD(put_UpdateURL)(THIS_ BSTR UpdateURL) PURE;
    STDMETHOD(get_SequenceHeader)(THIS_ ISequenceHeader FAR* FAR* pSequenceHeader) PURE;
    STDMETHOD(get_Subject)(THIS_ BSTR FAR* Subject) PURE;
    STDMETHOD(put_Subject)(THIS_ BSTR Subject) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(get_TargetReqs)(THIS_ ITargetReqs FAR* FAR* pTargetReqs) PURE;
    STDMETHOD(get_DATABASEDIR)(THIS_ BSTR FAR* pbstrDATABASEDIR) PURE;
    STDMETHOD(put_DATABASEDIR)(THIS_ BSTR bstrDATABASEDIR) PURE;
#endif

    /* IProduct2 methods */
    STDMETHOD(get_AllFeatures)(THIS_ IFeatures FAR* FAR* pValue) PURE;
    STDMETHOD(SetAsInstallDir)(THIS_ IDirectory2 FAR* pCopyMe) PURE;
    STDMETHOD(get_ProductLanguage)(THIS_ BSTR FAR* ProductName) PURE;
    STDMETHOD(put_ProductLanguage)(THIS_ BSTR ProductLanguage) PURE;
    STDMETHOD(get_TemplateSummary)(THIS_ BSTR FAR* pbstrTemplateSummary) PURE;
    STDMETHOD(put_TemplateSummary)(THIS_ BSTR bstrTemplateSummary) PURE;
    STDMETHOD(get_PageCount)(THIS_ BSTR FAR* pbstrPageCount) PURE;
    STDMETHOD(put_PageCount)(THIS_ BSTR bstrPageCount) PURE;
    STDMETHOD(get_SISCodepage)(THIS_ BSTR FAR* bstrSISCodepage) PURE;
    STDMETHOD(put_SISCodepage)(THIS_ BSTR bstrSISCodepage) PURE;
    STDMETHOD(SetSISCreatingApp)(THIS) PURE;
    STDMETHOD(get_CurrentMediaKey)(THIS_ BSTR FAR* bstrKey) PURE;
    STDMETHOD(put_CurrentMediaKey)(THIS_ BSTR bstrKey) PURE;
    STDMETHOD(get_FeatureFromComponent)(THIS_ BSTR bstrComponentKey, IFeature FAR* FAR* ppFeature) PURE;
    STDMETHOD(get_ProductCode)(THIS_ BSTR FAR* bstrProductCode) PURE;
    STDMETHOD(put_ProductCode)(THIS_ BSTR bstrProductCode) PURE;
    STDMETHOD(get_UpdateServiceProductVersion)(THIS_ BSTR FAR* bstrUpdateServiceProductVersion) PURE;
    STDMETHOD(put_CurrentPatchConfiguration)(THIS_ BSTR bstrPatchConfiguration) PURE;
    STDMETHOD(get_CurrentPatchConfiguration)(THIS_ BSTR FAR* bstrPatchConfiguration) PURE;
};

DEFINE_GUID(IID_IProductIbiza,0xDCB6CB42L,0x53D9,0x4A91,0xB9,0x76,0x43,0x48,0xDC,0x8F,0xDA,0xDB);

/* Definition of interface: IProductIbiza */
#undef INTERFACE
#define INTERFACE IProductIbiza

DECLARE_INTERFACE_(IProductIbiza, IProduct2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProduct methods */
    STDMETHOD(AddChild)(THIS_ EnumProductChild ipcProduct, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Features)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_ProductName)(THIS_ BSTR FAR* ProductName) PURE;
    STDMETHOD(put_ProductName)(THIS_ BSTR ProductName) PURE;
    STDMETHOD(get_DefaultDestination)(THIS_ BSTR FAR* DefaultDestination) PURE;
    STDMETHOD(put_DefaultDestination)(THIS_ BSTR DefaultDestination) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_HelpPhone)(THIS_ BSTR FAR* HelpPhone) PURE;
    STDMETHOD(put_HelpPhone)(THIS_ BSTR HelpPhone) PURE;
    STDMETHOD(get_HelpURL)(THIS_ BSTR FAR* HelpURL) PURE;
    STDMETHOD(put_HelpURL)(THIS_ BSTR HelpURL) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ long Type) PURE;
    STDMETHOD(get_DevTool)(THIS_ BSTR FAR* DevTool) PURE;
    STDMETHOD(put_DevTool)(THIS_ BSTR DevTool) PURE;
    STDMETHOD(get_DisplayTree)(THIS_ BSTR FAR* DisplayTree) PURE;
    STDMETHOD(put_DisplayTree)(THIS_ BSTR DisplayTree) PURE;
    STDMETHOD(get_CurrentMedia)(THIS_ IRelease FAR* FAR* CurrentMedia) PURE;
    STDMETHOD(put_CurrentMedia)(THIS_ IRelease FAR* CurrentMedia) PURE;
    STDMETHOD(get_SISAuthor)(THIS_ BSTR FAR* sAuthor) PURE;
    STDMETHOD(put_SISAuthor)(THIS_ BSTR sAuthor) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_AboutURL)(THIS_ BSTR FAR* AboutURL) PURE;
    STDMETHOD(put_AboutURL)(THIS_ BSTR AboutURL) PURE;
    STDMETHOD(get_UpdateURL)(THIS_ BSTR FAR* UpdateURL) PURE;
    STDMETHOD(put_UpdateURL)(THIS_ BSTR UpdateURL) PURE;
    STDMETHOD(get_SequenceHeader)(THIS_ ISequenceHeader FAR* FAR* pSequenceHeader) PURE;
    STDMETHOD(get_Subject)(THIS_ BSTR FAR* Subject) PURE;
    STDMETHOD(put_Subject)(THIS_ BSTR Subject) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(get_TargetReqs)(THIS_ ITargetReqs FAR* FAR* pTargetReqs) PURE;
    STDMETHOD(get_DATABASEDIR)(THIS_ BSTR FAR* pbstrDATABASEDIR) PURE;
    STDMETHOD(put_DATABASEDIR)(THIS_ BSTR bstrDATABASEDIR) PURE;

    /* IProduct2 methods */
    STDMETHOD(get_AllFeatures)(THIS_ IFeatures FAR* FAR* pValue) PURE;
    STDMETHOD(SetAsInstallDir)(THIS_ IDirectory2 FAR* pCopyMe) PURE;
    STDMETHOD(get_ProductLanguage)(THIS_ BSTR FAR* ProductName) PURE;
    STDMETHOD(put_ProductLanguage)(THIS_ BSTR ProductLanguage) PURE;
    STDMETHOD(get_TemplateSummary)(THIS_ BSTR FAR* pbstrTemplateSummary) PURE;
    STDMETHOD(put_TemplateSummary)(THIS_ BSTR bstrTemplateSummary) PURE;
    STDMETHOD(get_PageCount)(THIS_ BSTR FAR* pbstrPageCount) PURE;
    STDMETHOD(put_PageCount)(THIS_ BSTR bstrPageCount) PURE;
    STDMETHOD(get_SISCodepage)(THIS_ BSTR FAR* bstrSISCodepage) PURE;
    STDMETHOD(put_SISCodepage)(THIS_ BSTR bstrSISCodepage) PURE;
    STDMETHOD(SetSISCreatingApp)(THIS) PURE;
    STDMETHOD(get_CurrentMediaKey)(THIS_ BSTR FAR* bstrKey) PURE;
    STDMETHOD(put_CurrentMediaKey)(THIS_ BSTR bstrKey) PURE;
    STDMETHOD(get_FeatureFromComponent)(THIS_ BSTR bstrComponentKey, IFeature FAR* FAR* ppFeature) PURE;
    STDMETHOD(get_ProductCode)(THIS_ BSTR FAR* bstrProductCode) PURE;
    STDMETHOD(put_ProductCode)(THIS_ BSTR bstrProductCode) PURE;
    STDMETHOD(get_UpdateServiceProductVersion)(THIS_ BSTR FAR* bstrUpdateServiceProductVersion) PURE;
    STDMETHOD(put_CurrentPatchConfiguration)(THIS_ BSTR bstrPatchConfiguration) PURE;
    STDMETHOD(get_CurrentPatchConfiguration)(THIS_ BSTR FAR* bstrPatchConfiguration) PURE;
#endif

    /* IProductIbiza methods */
    STDMETHOD(put_CurrentMediaKeyEx)(THIS_ BSTR bstrKey) PURE;
};

DEFINE_GUID(IID_IProductRipley,0x247841E2L,0x306C,0x4537,0xA4,0x9B,0xCE,0x8F,0x9A,0xA8,0xB2,0x4A);

/* Definition of interface: IProductRipley */
#undef INTERFACE
#define INTERFACE IProductRipley

DECLARE_INTERFACE_(IProductRipley, IProductIbiza)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProduct methods */
    STDMETHOD(AddChild)(THIS_ EnumProductChild ipcProduct, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Features)(THIS_ IFeatures FAR* FAR* pFeatures) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_ProductName)(THIS_ BSTR FAR* ProductName) PURE;
    STDMETHOD(put_ProductName)(THIS_ BSTR ProductName) PURE;
    STDMETHOD(get_DefaultDestination)(THIS_ BSTR FAR* DefaultDestination) PURE;
    STDMETHOD(put_DefaultDestination)(THIS_ BSTR DefaultDestination) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_HelpPhone)(THIS_ BSTR FAR* HelpPhone) PURE;
    STDMETHOD(put_HelpPhone)(THIS_ BSTR HelpPhone) PURE;
    STDMETHOD(get_HelpURL)(THIS_ BSTR FAR* HelpURL) PURE;
    STDMETHOD(put_HelpURL)(THIS_ BSTR HelpURL) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ long Type) PURE;
    STDMETHOD(get_DevTool)(THIS_ BSTR FAR* DevTool) PURE;
    STDMETHOD(put_DevTool)(THIS_ BSTR DevTool) PURE;
    STDMETHOD(get_DisplayTree)(THIS_ BSTR FAR* DisplayTree) PURE;
    STDMETHOD(put_DisplayTree)(THIS_ BSTR DisplayTree) PURE;
    STDMETHOD(get_CurrentMedia)(THIS_ IRelease FAR* FAR* CurrentMedia) PURE;
    STDMETHOD(put_CurrentMedia)(THIS_ IRelease FAR* CurrentMedia) PURE;
    STDMETHOD(get_SISAuthor)(THIS_ BSTR FAR* sAuthor) PURE;
    STDMETHOD(put_SISAuthor)(THIS_ BSTR sAuthor) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* Guid) PURE;
    STDMETHOD(put_Guid)(THIS_ BSTR Guid) PURE;
    STDMETHOD(get_AboutURL)(THIS_ BSTR FAR* AboutURL) PURE;
    STDMETHOD(put_AboutURL)(THIS_ BSTR AboutURL) PURE;
    STDMETHOD(get_UpdateURL)(THIS_ BSTR FAR* UpdateURL) PURE;
    STDMETHOD(put_UpdateURL)(THIS_ BSTR UpdateURL) PURE;
    STDMETHOD(get_SequenceHeader)(THIS_ ISequenceHeader FAR* FAR* pSequenceHeader) PURE;
    STDMETHOD(get_Subject)(THIS_ BSTR FAR* Subject) PURE;
    STDMETHOD(put_Subject)(THIS_ BSTR Subject) PURE;
    STDMETHOD(Insert)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(get_TargetReqs)(THIS_ ITargetReqs FAR* FAR* pTargetReqs) PURE;
    STDMETHOD(get_DATABASEDIR)(THIS_ BSTR FAR* pbstrDATABASEDIR) PURE;
    STDMETHOD(put_DATABASEDIR)(THIS_ BSTR bstrDATABASEDIR) PURE;

    /* IProduct2 methods */
    STDMETHOD(get_AllFeatures)(THIS_ IFeatures FAR* FAR* pValue) PURE;
    STDMETHOD(SetAsInstallDir)(THIS_ IDirectory2 FAR* pCopyMe) PURE;
    STDMETHOD(get_ProductLanguage)(THIS_ BSTR FAR* ProductName) PURE;
    STDMETHOD(put_ProductLanguage)(THIS_ BSTR ProductLanguage) PURE;
    STDMETHOD(get_TemplateSummary)(THIS_ BSTR FAR* pbstrTemplateSummary) PURE;
    STDMETHOD(put_TemplateSummary)(THIS_ BSTR bstrTemplateSummary) PURE;
    STDMETHOD(get_PageCount)(THIS_ BSTR FAR* pbstrPageCount) PURE;
    STDMETHOD(put_PageCount)(THIS_ BSTR bstrPageCount) PURE;
    STDMETHOD(get_SISCodepage)(THIS_ BSTR FAR* bstrSISCodepage) PURE;
    STDMETHOD(put_SISCodepage)(THIS_ BSTR bstrSISCodepage) PURE;
    STDMETHOD(SetSISCreatingApp)(THIS) PURE;
    STDMETHOD(get_CurrentMediaKey)(THIS_ BSTR FAR* bstrKey) PURE;
    STDMETHOD(put_CurrentMediaKey)(THIS_ BSTR bstrKey) PURE;
    STDMETHOD(get_FeatureFromComponent)(THIS_ BSTR bstrComponentKey, IFeature FAR* FAR* ppFeature) PURE;
    STDMETHOD(get_ProductCode)(THIS_ BSTR FAR* bstrProductCode) PURE;
    STDMETHOD(put_ProductCode)(THIS_ BSTR bstrProductCode) PURE;
    STDMETHOD(get_UpdateServiceProductVersion)(THIS_ BSTR FAR* bstrUpdateServiceProductVersion) PURE;
    STDMETHOD(put_CurrentPatchConfiguration)(THIS_ BSTR bstrPatchConfiguration) PURE;
    STDMETHOD(get_CurrentPatchConfiguration)(THIS_ BSTR FAR* bstrPatchConfiguration) PURE;

    /* IProductIbiza methods */
    STDMETHOD(put_CurrentMediaKeyEx)(THIS_ BSTR bstrKey) PURE;
#endif

    /* IProductRipley methods */
    STDMETHOD(get_UpgradeCode)(THIS_ BSTR FAR* bstrUpgradeCode) PURE;
    STDMETHOD(put_UpgradeCode)(THIS_ BSTR bstrUpgradeCode) PURE;
};

DEFINE_GUID(IID_IProducts,0x434FFF60L,0x0530,0x491B,0x9A,0x7B,0xA6,0x2F,0x77,0x64,0xCB,0xF2);

/* Definition of interface: IProducts */
#undef INTERFACE
#define INTERFACE IProducts

DECLARE_INTERFACE_(IProducts, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProducts methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IProduct FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropBinary {
    epbName = 10,
    epbValue = 11
} EnumPropBinary;

DEFINE_GUID(IID_IBinary,0xA50057F6L,0x8F91,0x4A6D,0xA7,0xAD,0xCF,0xD8,0x42,0x2D,0x47,0x88);

/* Definition of interface: IBinary */
#undef INTERFACE
#define INTERFACE IBinary

DECLARE_INTERFACE_(IBinary, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IBinary methods */
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
};

DEFINE_GUID(IID_IBinaries,0xE603CE6EL,0x84D9,0x4A90,0xAA,0x5E,0x76,0xB8,0x9F,0xE5,0xB6,0x47);

/* Definition of interface: IBinaries */
#undef INTERFACE
#define INTERFACE IBinaries

DECLARE_INTERFACE_(IBinaries, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IBinaries methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IBinary FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

typedef enum EnumPropIcon {
    epiName = 10,
    epiData = 11
} EnumPropIcon;

DEFINE_GUID(IID_IIcon,0x81A24503L,0xF85E,0x4666,0xBB,0xB4,0xC1,0x87,0x83,0x5C,0xA5,0x29);

/* Definition of interface: IIcon */
#undef INTERFACE
#define INTERFACE IIcon

DECLARE_INTERFACE_(IIcon, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIcon methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Data)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Data)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IIcon2,0x27295EC5L,0x9BBD,0x49CC,0x8E,0xC0,0xB7,0x9B,0xEA,0x3B,0x58,0xD3);

/* Definition of interface: IIcon2 */
#undef INTERFACE
#define INTERFACE IIcon2

DECLARE_INTERFACE_(IIcon2, IIcon)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IIcon methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Data)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Data)(THIS_ BSTR Value) PURE;
#endif

    /* IIcon2 methods */
    STDMETHOD(get_BuildSourcePath)(THIS_ BSTR FAR* sBuildSourcePath) PURE;
    STDMETHOD(put_BuildSourcePath)(THIS_ BSTR sBuildSourcePath) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* lIconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long lIconIndex) PURE;
    STDMETHOD(DirectModeUpdateIcon)(THIS_ BSTR sFullPath, long lIconIndex) PURE;
    STDMETHOD(DirectModeExtractIconToTempFile)(THIS_ BSTR FAR* bstrFullExtractedFilePath) PURE;
};

DEFINE_GUID(IID_IIcons,0x904F3D2AL,0x2F7F,0x4A31,0x94,0xE7,0x7E,0x8D,0xC9,0xB9,0xA1,0x6C);

/* Definition of interface: IIcons */
#undef INTERFACE
#define INTERFACE IIcons

DECLARE_INTERFACE_(IIcons, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIcons methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IIcon FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

typedef enum EnumReleaseType {
    ertSinglePack = 1,
    ertUncompressed = 2,
    ertCombination = 4
} EnumReleaseType;

typedef enum EnumBuildType {
    ebtFull = 1,
    ebtRefresh = 2,
    ebtQuick = 4,
    ebtProObjRef = 8,
    ebtProObjEmbed = 16
} EnumBuildType;

typedef enum EnumMediaType {
    emtCDROM = 0,
    emtNetwork = 1,
    emtCustom = 2,
    emtDVD = 3,
    emtWeb = 4,
    emt144MB = 5,
    emtProObject = 6
} EnumMediaType;

typedef enum EnumDiskSizeUnit {
    emduMB = 0,
    emduGB = 1,
    emduKB = 2
} EnumDiskSizeUnit;

typedef enum EnumMediaOS {
    emosNone = 0,
    emosWin9x = 1,
    emosWinNT = 2,
    emos9xNT = 3
} EnumMediaOS;

typedef enum EnumLabelChild {
    elblcRelease = 0,
    elblcProperty = 1,
    elblcInstance = 2
} EnumLabelChild;

typedef enum EnumInstanceChild {
    einstcProperty = 1
} EnumInstanceChild;

typedef enum EnumGeneratePackageCode {
    egpcTrue = 1,
    egpcFalse = 0
} EnumGeneratePackageCode;

typedef enum EnumMSISourceType {
    emsistDirLongFile = 0,
    emsistDirShortFile = 1,
    emsistCABLongFile = 2,
    emsistCABShortFile = 3
} EnumMSISourceType;

typedef enum EnumDiskSpanning {
    edsAutomatic = 0,
    edsEnforceSize = 1,
    edsNoEnforce = 2
} EnumDiskSpanning;

typedef enum EnumISSetupPreReqLoc {
    eprSourceMedia = 0,
    eprSetupExe = 1,
    eprWeb = 2,
    eprIndividual = 3
} EnumISSetupPreReqLoc;

typedef enum EnumRequiredExecutionLevel {
    erelAsInvoker = 0,
    erelAsHighestAvail = 1,
    erelAsAdmin = 2,
    erelPatchUsePrevious = 3
} EnumRequiredExecutionLevel;

typedef enum EnumElevatedAdvertisement {
    eeaNoAdvertise = 0,
    eeaAdvertise = 1,
    eeaAdvertiseSilent = 2
} EnumElevatedAdvertisement;

typedef enum EnumPlatformValidationType {
    epvtLoose = 0,
    epvtStrict = 1,
    epvtNone = 2
} EnumPlatformValidationType;

DEFINE_GUID(IID_IRelease,0xAEE5BD67L,0xC66C,0x4C09,0x8E,0x39,0x80,0xF2,0x31,0x57,0xC5,0xA8);

/* Definition of interface: IRelease */
#undef INTERFACE
#define INTERFACE IRelease

DECLARE_INTERFACE_(IRelease, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
};

DEFINE_GUID(IID_IReleases,0xF91D23B8L,0xEAD0,0x46A7,0x8B,0x03,0x30,0xD6,0x84,0xA3,0x2D,0x88);

/* Definition of interface: IReleases */
#undef INTERFACE
#define INTERFACE IReleases

DECLARE_INTERFACE_(IReleases, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IReleases methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IRelease FAR* FAR* pMedia) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

interface ILogicalDisks;

interface IBuildLabel;

typedef enum EnumReleaseChild {
    ercLogicalDisk = 0,
    ercPreviousProMedia = 1,
    ercReservedSpace = 2
} EnumReleaseChild;

typedef enum EnumWebType {
    ewtOneExe = 0,
    ewtDownloader = 1,
    ewtIFTW = 2
} EnumWebType;

typedef enum EnumEngineLocation {
    eelSourceMedia = 0,
    eelSetupExe = 1,
    eelWeb = 2,
    eelDotNetNone = 3
} EnumEngineLocation;

typedef enum EnumDotNetVersion {
    env10 = 0,
    env11 = 1,
    env20 = 2
} EnumDotNetVersion;

typedef enum EnumOneClickTargetBrowser {
    eocitbIE = 0,
    eocitbNetscape = 1,
    eocitbBoth = 2
} EnumOneClickTargetBrowser;

typedef enum EnumMsiEngineVersion {
    eev12 = 0,
    eev20 = 1,
    eev11 = 2,
    eev30 = 3,
    eev20And30 = 4,
    eev31 = 5
} EnumMsiEngineVersion;

typedef enum EnumSignMedia {
    esfSetupExe = 1,
    esfMsi,
    esfBoth,
    esfNone,
    esfProHdr
} EnumSignMedia;

typedef enum EnumObjDiffOptions {
    eodoIncludeIfChanged = 0,
    eodoAll = 1,
    eodoExcludeAll = 2
} EnumObjDiffOptions;

DEFINE_GUID(IID_IRelease2,0x66B8E81FL,0x8E57,0x4123,0xA2,0x4B,0xD4,0x95,0x5F,0x9C,0x88,0xF9);

/* Definition of interface: IRelease2 */
#undef INTERFACE
#define INTERFACE IRelease2

DECLARE_INTERFACE_(IRelease2, IRelease)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
#endif

    /* IRelease2 methods */
    STDMETHOD(get_PackageName)(THIS_ BSTR FAR* PackageName) PURE;
    STDMETHOD(put_PackageName)(THIS_ BSTR PackageName) PURE;
    STDMETHOD(get_SupportedLanguagesUI)(THIS_ BSTR FAR* SupportedLanguagesUI) PURE;
    STDMETHOD(put_SupportedLanguagesUI)(THIS_ BSTR SupportedLanguagesUI) PURE;
    STDMETHOD(get_MsiSourceType)(THIS_ EnumMSISourceType FAR* MsiSourceType) PURE;
    STDMETHOD(put_MsiSourceType)(THIS_ EnumMSISourceType MsiSourceType) PURE;
    STDMETHOD(get_Platforms)(THIS_ BSTR FAR* Platforms) PURE;
    STDMETHOD(put_Platforms)(THIS_ BSTR Platforms) PURE;
    STDMETHOD(get_SupportedLanguagesData)(THIS_ BSTR FAR* SupportedLanguagesData) PURE;
    STDMETHOD(put_SupportedLanguagesData)(THIS_ BSTR SupportedLanguagesData) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_LanguageFiltering)(THIS_ VARIANT_BOOL FAR* LanguageFiltering) PURE;
    STDMETHOD(put_LanguageFiltering)(THIS_ VARIANT_BOOL LanguageFiltering) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_DiskSpanning)(THIS_ EnumDiskSpanning FAR* DiskSpanning) PURE;
    STDMETHOD(put_DiskSpanning)(THIS_ EnumDiskSpanning DiskSpanning) PURE;
    STDMETHOD(get_SynchMsi)(THIS_ BSTR FAR* SynchMsi) PURE;
    STDMETHOD(put_SynchMsi)(THIS_ BSTR SynchMsi) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_VersionCopyright)(THIS_ BSTR FAR* VersionCopyright) PURE;
    STDMETHOD(put_VersionCopyright)(THIS_ BSTR VersionCopyright) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_CreateReport)(THIS_ VARIANT_BOOL FAR* CreateReport) PURE;
    STDMETHOD(put_CreateReport)(THIS_ VARIANT_BOOL CreateReport) PURE;
    STDMETHOD(get_CreateLogFile)(THIS_ VARIANT_BOOL FAR* CreateLogFile) PURE;
    STDMETHOD(put_CreateLogFile)(THIS_ VARIANT_BOOL CreateLogFile) PURE;
    STDMETHOD(get_EnableLanguageDialog)(THIS_ VARIANT_BOOL FAR* EnableLanguageDialog) PURE;
    STDMETHOD(put_EnableLanguageDialog)(THIS_ VARIANT_BOOL EnableLanguageDialog) PURE;
    STDMETHOD(get_CopyMM)(THIS_ VARIANT_BOOL FAR* CopyMM) PURE;
    STDMETHOD(put_CopyMM)(THIS_ VARIANT_BOOL CopyMM) PURE;
    STDMETHOD(get_UseTestPathVariables)(THIS_ VARIANT_BOOL FAR* UseTestPathVariables) PURE;
    STDMETHOD(put_UseTestPathVariables)(THIS_ VARIANT_BOOL UseTestPathVariables) PURE;
    STDMETHOD(get_CreateAutorun)(THIS_ VARIANT_BOOL FAR* CreateAutorun) PURE;
    STDMETHOD(put_CreateAutorun)(THIS_ VARIANT_BOOL CreateAutorun) PURE;
    STDMETHOD(get_CreatePDF)(THIS_ VARIANT_BOOL FAR* CreatePDF) PURE;
    STDMETHOD(put_CreatePDF)(THIS_ VARIANT_BOOL CreatePDF) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* PasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL PasswordProtect) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* UseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL UseMyVersionInfo) PURE;
    STDMETHOD(get_SuppressWin2K)(THIS_ VARIANT_BOOL FAR* SuppressWin2K) PURE;
    STDMETHOD(put_SuppressWin2K)(THIS_ VARIANT_BOOL SuppressWin2K) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_LogicalDisks)(THIS_ ILogicalDisks FAR* FAR* pLogicalDisks) PURE;
    STDMETHOD(get_BuildLabel)(THIS_ IBuildLabel FAR* FAR* pBuildLabel) PURE;
    STDMETHOD(IsMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe, VARIANT_BOOL FAR* pvbIsMatch) PURE;
    STDMETHOD(MakeMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe) PURE;
    STDMETHOD(AddChild)(THIS_ EnumReleaseChild ercChild, long nDiskId, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(IsLanguageRequired)(THIS_ BSTR bstrLangID, VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(get_FeatureDiskID)(THIS_ BSTR bstrFeatureID, short FAR* nDiskId) PURE;
    STDMETHOD(get_FeatureCompressed)(THIS_ BSTR bstrFeatureID, VARIANT_BOOL FAR* vbCompressed) PURE;
    STDMETHOD(get_WebType)(THIS_ EnumWebType FAR* eWebType) PURE;
    STDMETHOD(put_WebType)(THIS_ EnumWebType eWebType) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* bstrWebURL) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrWebURL) PURE;
    STDMETHOD(get_WrapMsiIntoCab)(THIS_ VARIANT_BOOL FAR* bWrapMsiIntoCab) PURE;
    STDMETHOD(put_WrapMsiIntoCab)(THIS_ VARIANT_BOOL bWrapMsiIntoCab) PURE;
    STDMETHOD(get_WebCabSize)(THIS_ long FAR* WebCabSize) PURE;
    STDMETHOD(put_WebCabSize)(THIS_ long WebCabSize) PURE;
    STDMETHOD(get_GenerateOneClick)(THIS_ VARIANT_BOOL FAR* bGenerateOneClick) PURE;
    STDMETHOD(put_GenerateOneClick)(THIS_ VARIANT_BOOL bGenerateOneClick) PURE;
    STDMETHOD(get_OneClickHtmlName)(THIS_ BSTR FAR* bstrOneClickHtmlName) PURE;
    STDMETHOD(put_OneClickHtmlName)(THIS_ BSTR bstrOneClickHtmlName) PURE;
    STDMETHOD(get_OneClickCabName)(THIS_ BSTR FAR* bstrOneClickCabName) PURE;
    STDMETHOD(put_OneClickCabName)(THIS_ BSTR bstrOneClickCabName) PURE;
    STDMETHOD(get_CacheWebPkgLocally)(THIS_ VARIANT_BOOL FAR* bCacheWebPkgLocally) PURE;
    STDMETHOD(put_CacheWebPkgLocally)(THIS_ VARIANT_BOOL bCacheWebPkgLocally) PURE;
    STDMETHOD(get_WebLocalCachePath)(THIS_ BSTR FAR* bstrWebLocalCachePath) PURE;
    STDMETHOD(put_WebLocalCachePath)(THIS_ BSTR bstrWebLocalCachePath) PURE;
    STDMETHOD(get_EngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_EngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_DelayEngineReboot)(THIS_ VARIANT_BOOL FAR* bDelayEngineReboot) PURE;
    STDMETHOD(put_DelayEngineReboot)(THIS_ VARIANT_BOOL bDelayEngineReboot) PURE;
    STDMETHOD(get_Win9xMsiUrl)(THIS_ BSTR FAR* bstrWin9xMsiUrl) PURE;
    STDMETHOD(put_Win9xMsiUrl)(THIS_ BSTR bstrWin9xMsiUrl) PURE;
    STDMETHOD(get_WinNTMsiUrl)(THIS_ BSTR FAR* bstrWinNTMsiUrl) PURE;
    STDMETHOD(put_WinNTMsiUrl)(THIS_ BSTR bstrWinNTMsiUrl) PURE;
    STDMETHOD(get_ISEngineURL)(THIS_ BSTR FAR* bstrISEngineURL) PURE;
    STDMETHOD(put_ISEngineURL)(THIS_ BSTR bstrISEngineURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_ISEngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_ISEngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* bstrRootSetupFolder) PURE;
    STDMETHOD(get_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser FAR* eOCITargetBrowser) PURE;
    STDMETHOD(put_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser eOCITargetBrowser) PURE;
    STDMETHOD(get_DigitalCertificateIdNS)(THIS_ BSTR FAR* DigitalCertificateIdNS) PURE;
    STDMETHOD(put_DigitalCertificateIdNS)(THIS_ BSTR DigitalCertificateIdNS) PURE;
    STDMETHOD(get_DigitalCertificateDBaseNS)(THIS_ BSTR FAR* DigitalCertificateDBaseNS) PURE;
    STDMETHOD(put_DigitalCertificateDBaseNS)(THIS_ BSTR DigitalCertificateDBaseNS) PURE;
    STDMETHOD(get_DigitalCertificatePasswordNS)(THIS_ BSTR FAR* DigitalCertificatePasswordNS) PURE;
    STDMETHOD(put_DigitalCertificatePasswordNS)(THIS_ BSTR DigitalCertificatePasswordNS) PURE;
    STDMETHOD(get_CDBrowser)(THIS_ BSTR FAR* CDBrowser) PURE;
    STDMETHOD(put_CDBrowser)(THIS_ BSTR CDBrowser) PURE;
    STDMETHOD(get_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL FAR* bCabPerFeature) PURE;
    STDMETHOD(put_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL bCabPerFeature) PURE;
    STDMETHOD(get_DotNetBuildConfiguration)(THIS_ BSTR FAR* sDotNetBuildConfiguration) PURE;
    STDMETHOD(put_DotNetBuildConfiguration)(THIS_ BSTR sDotNetBuildConfiguration) PURE;
    STDMETHOD(get_DotNetRedistURL)(THIS_ BSTR FAR* bstrDotNetRedistURL) PURE;
    STDMETHOD(put_DotNetRedistURL)(THIS_ BSTR bstrDotNetRedistURL) PURE;
    STDMETHOD(get_DotNetRedistLocation)(THIS_ EnumEngineLocation FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetRedistLocation)(THIS_ EnumEngineLocation eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetUI)(THIS_ VARIANT_BOOL FAR* pvbUseDotNetUI) PURE;
    STDMETHOD(put_DotNetUI)(THIS_ VARIANT_BOOL vbUseDotNetUI) PURE;
    STDMETHOD(get_GenerateFileHashValues)(THIS_ VARIANT_BOOL FAR* pvbGenerateFileHashValues) PURE;
    STDMETHOD(put_GenerateFileHashValues)(THIS_ VARIANT_BOOL vbGenerateFileHashValues) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eMsiEngineVersion) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eMsiEngineVersion) PURE;
    STDMETHOD(get_MsiCommandLine)(THIS_ BSTR FAR* bstrMsiCommandLine) PURE;
    STDMETHOD(put_MsiCommandLine)(THIS_ BSTR bstrMsiCommandLine) PURE;
    STDMETHOD(get_SuppressARP)(THIS_ VARIANT_BOOL FAR* pvbSuppressARP) PURE;
    STDMETHOD(put_SuppressARP)(THIS_ VARIANT_BOOL vbSuppressARP) PURE;
    STDMETHOD(get_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL FAR* pvbShowDotNetSetupExeSelection) PURE;
    STDMETHOD(put_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL ShowDotNetSetupExeSelection) PURE;
    STDMETHOD(get_SmallInit)(THIS_ VARIANT_BOOL FAR* pvbSmallInit) PURE;
    STDMETHOD(put_SmallInit)(THIS_ VARIANT_BOOL SmallInit) PURE;
    STDMETHOD(get_ShallowFolder)(THIS_ VARIANT_BOOL FAR* pvbShallowFolder) PURE;
    STDMETHOD(put_ShallowFolder)(THIS_ VARIANT_BOOL ShallowFolder) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_DontEncrypt)(THIS_ VARIANT_BOOL FAR* pbstrDontEncrypt) PURE;
    STDMETHOD(put_DontEncrypt)(THIS_ VARIANT_BOOL bstrDontEncrypt) PURE;
    STDMETHOD(get_DotNetVersion)(THIS_ EnumDotNetVersion FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetVersion)(THIS_ EnumDotNetVersion eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetBaseLanguage)(THIS_ BSTR FAR* DotNetBaseLanguage) PURE;
    STDMETHOD(put_DotNetBaseLanguage)(THIS_ BSTR DotNetBaseLanguage) PURE;
    STDMETHOD(get_DotNetLangaugePacks)(THIS_ BSTR FAR* DotNetLangaugePacks) PURE;
    STDMETHOD(put_DotNetLangaugePacks)(THIS_ BSTR DotNetLangaugePacks) PURE;
    STDMETHOD(get_DotNetFxCmdLine)(THIS_ BSTR FAR* DotNetFxCmdLine) PURE;
    STDMETHOD(put_DotNetFxCmdLine)(THIS_ BSTR DotNetFxCmdLine) PURE;
    STDMETHOD(get_DotNetLangPackCmdLine)(THIS_ BSTR FAR* DotNetLangPackCmdLine) PURE;
    STDMETHOD(put_DotNetLangPackCmdLine)(THIS_ BSTR DotNetLangPackCmdLine) PURE;
    STDMETHOD(get_SignMedia)(THIS_ EnumSignMedia FAR* pSignMedia) PURE;
    STDMETHOD(put_SignMedia)(THIS_ EnumSignMedia SignMedia) PURE;
    STDMETHOD(get_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbDotNetOptionalIfSilent) PURE;
    STDMETHOD(put_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL bDotNetOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpCmdLine)(THIS_ BSTR FAR* pbstrJSharpCmdLine) PURE;
    STDMETHOD(put_JSharpCmdLine)(THIS_ BSTR bstrJSharpCmdLine) PURE;
    STDMETHOD(get_JSharpOptionDlg)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionDlg) PURE;
    STDMETHOD(put_JSharpOptionDlg)(THIS_ VARIANT_BOOL bJSharpOptionDlg) PURE;
    STDMETHOD(get_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionalIfSilent) PURE;
    STDMETHOD(put_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL bJSharpOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpRedistLocation)(THIS_ EnumEngineLocation FAR* eJSharpRedistLocation) PURE;
    STDMETHOD(put_JSharpRedistLocation)(THIS_ EnumEngineLocation eJSharpRedistLocation) PURE;
};

DEFINE_GUID(IID_IReleaseNeptune,0x66B8E820L,0x8E57,0x4123,0xA2,0x4B,0xD4,0x95,0x5F,0x9C,0x88,0xF9);

/* Definition of interface: IReleaseNeptune */
#undef INTERFACE
#define INTERFACE IReleaseNeptune

DECLARE_INTERFACE_(IReleaseNeptune, IRelease2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IRelease2 methods */
    STDMETHOD(get_PackageName)(THIS_ BSTR FAR* PackageName) PURE;
    STDMETHOD(put_PackageName)(THIS_ BSTR PackageName) PURE;
    STDMETHOD(get_SupportedLanguagesUI)(THIS_ BSTR FAR* SupportedLanguagesUI) PURE;
    STDMETHOD(put_SupportedLanguagesUI)(THIS_ BSTR SupportedLanguagesUI) PURE;
    STDMETHOD(get_MsiSourceType)(THIS_ EnumMSISourceType FAR* MsiSourceType) PURE;
    STDMETHOD(put_MsiSourceType)(THIS_ EnumMSISourceType MsiSourceType) PURE;
    STDMETHOD(get_Platforms)(THIS_ BSTR FAR* Platforms) PURE;
    STDMETHOD(put_Platforms)(THIS_ BSTR Platforms) PURE;
    STDMETHOD(get_SupportedLanguagesData)(THIS_ BSTR FAR* SupportedLanguagesData) PURE;
    STDMETHOD(put_SupportedLanguagesData)(THIS_ BSTR SupportedLanguagesData) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_LanguageFiltering)(THIS_ VARIANT_BOOL FAR* LanguageFiltering) PURE;
    STDMETHOD(put_LanguageFiltering)(THIS_ VARIANT_BOOL LanguageFiltering) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_DiskSpanning)(THIS_ EnumDiskSpanning FAR* DiskSpanning) PURE;
    STDMETHOD(put_DiskSpanning)(THIS_ EnumDiskSpanning DiskSpanning) PURE;
    STDMETHOD(get_SynchMsi)(THIS_ BSTR FAR* SynchMsi) PURE;
    STDMETHOD(put_SynchMsi)(THIS_ BSTR SynchMsi) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_VersionCopyright)(THIS_ BSTR FAR* VersionCopyright) PURE;
    STDMETHOD(put_VersionCopyright)(THIS_ BSTR VersionCopyright) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_CreateReport)(THIS_ VARIANT_BOOL FAR* CreateReport) PURE;
    STDMETHOD(put_CreateReport)(THIS_ VARIANT_BOOL CreateReport) PURE;
    STDMETHOD(get_CreateLogFile)(THIS_ VARIANT_BOOL FAR* CreateLogFile) PURE;
    STDMETHOD(put_CreateLogFile)(THIS_ VARIANT_BOOL CreateLogFile) PURE;
    STDMETHOD(get_EnableLanguageDialog)(THIS_ VARIANT_BOOL FAR* EnableLanguageDialog) PURE;
    STDMETHOD(put_EnableLanguageDialog)(THIS_ VARIANT_BOOL EnableLanguageDialog) PURE;
    STDMETHOD(get_CopyMM)(THIS_ VARIANT_BOOL FAR* CopyMM) PURE;
    STDMETHOD(put_CopyMM)(THIS_ VARIANT_BOOL CopyMM) PURE;
    STDMETHOD(get_UseTestPathVariables)(THIS_ VARIANT_BOOL FAR* UseTestPathVariables) PURE;
    STDMETHOD(put_UseTestPathVariables)(THIS_ VARIANT_BOOL UseTestPathVariables) PURE;
    STDMETHOD(get_CreateAutorun)(THIS_ VARIANT_BOOL FAR* CreateAutorun) PURE;
    STDMETHOD(put_CreateAutorun)(THIS_ VARIANT_BOOL CreateAutorun) PURE;
    STDMETHOD(get_CreatePDF)(THIS_ VARIANT_BOOL FAR* CreatePDF) PURE;
    STDMETHOD(put_CreatePDF)(THIS_ VARIANT_BOOL CreatePDF) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* PasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL PasswordProtect) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* UseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL UseMyVersionInfo) PURE;
    STDMETHOD(get_SuppressWin2K)(THIS_ VARIANT_BOOL FAR* SuppressWin2K) PURE;
    STDMETHOD(put_SuppressWin2K)(THIS_ VARIANT_BOOL SuppressWin2K) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_LogicalDisks)(THIS_ ILogicalDisks FAR* FAR* pLogicalDisks) PURE;
    STDMETHOD(get_BuildLabel)(THIS_ IBuildLabel FAR* FAR* pBuildLabel) PURE;
    STDMETHOD(IsMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe, VARIANT_BOOL FAR* pvbIsMatch) PURE;
    STDMETHOD(MakeMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe) PURE;
    STDMETHOD(AddChild)(THIS_ EnumReleaseChild ercChild, long nDiskId, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(IsLanguageRequired)(THIS_ BSTR bstrLangID, VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(get_FeatureDiskID)(THIS_ BSTR bstrFeatureID, short FAR* nDiskId) PURE;
    STDMETHOD(get_FeatureCompressed)(THIS_ BSTR bstrFeatureID, VARIANT_BOOL FAR* vbCompressed) PURE;
    STDMETHOD(get_WebType)(THIS_ EnumWebType FAR* eWebType) PURE;
    STDMETHOD(put_WebType)(THIS_ EnumWebType eWebType) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* bstrWebURL) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrWebURL) PURE;
    STDMETHOD(get_WrapMsiIntoCab)(THIS_ VARIANT_BOOL FAR* bWrapMsiIntoCab) PURE;
    STDMETHOD(put_WrapMsiIntoCab)(THIS_ VARIANT_BOOL bWrapMsiIntoCab) PURE;
    STDMETHOD(get_WebCabSize)(THIS_ long FAR* WebCabSize) PURE;
    STDMETHOD(put_WebCabSize)(THIS_ long WebCabSize) PURE;
    STDMETHOD(get_GenerateOneClick)(THIS_ VARIANT_BOOL FAR* bGenerateOneClick) PURE;
    STDMETHOD(put_GenerateOneClick)(THIS_ VARIANT_BOOL bGenerateOneClick) PURE;
    STDMETHOD(get_OneClickHtmlName)(THIS_ BSTR FAR* bstrOneClickHtmlName) PURE;
    STDMETHOD(put_OneClickHtmlName)(THIS_ BSTR bstrOneClickHtmlName) PURE;
    STDMETHOD(get_OneClickCabName)(THIS_ BSTR FAR* bstrOneClickCabName) PURE;
    STDMETHOD(put_OneClickCabName)(THIS_ BSTR bstrOneClickCabName) PURE;
    STDMETHOD(get_CacheWebPkgLocally)(THIS_ VARIANT_BOOL FAR* bCacheWebPkgLocally) PURE;
    STDMETHOD(put_CacheWebPkgLocally)(THIS_ VARIANT_BOOL bCacheWebPkgLocally) PURE;
    STDMETHOD(get_WebLocalCachePath)(THIS_ BSTR FAR* bstrWebLocalCachePath) PURE;
    STDMETHOD(put_WebLocalCachePath)(THIS_ BSTR bstrWebLocalCachePath) PURE;
    STDMETHOD(get_EngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_EngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_DelayEngineReboot)(THIS_ VARIANT_BOOL FAR* bDelayEngineReboot) PURE;
    STDMETHOD(put_DelayEngineReboot)(THIS_ VARIANT_BOOL bDelayEngineReboot) PURE;
    STDMETHOD(get_Win9xMsiUrl)(THIS_ BSTR FAR* bstrWin9xMsiUrl) PURE;
    STDMETHOD(put_Win9xMsiUrl)(THIS_ BSTR bstrWin9xMsiUrl) PURE;
    STDMETHOD(get_WinNTMsiUrl)(THIS_ BSTR FAR* bstrWinNTMsiUrl) PURE;
    STDMETHOD(put_WinNTMsiUrl)(THIS_ BSTR bstrWinNTMsiUrl) PURE;
    STDMETHOD(get_ISEngineURL)(THIS_ BSTR FAR* bstrISEngineURL) PURE;
    STDMETHOD(put_ISEngineURL)(THIS_ BSTR bstrISEngineURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_ISEngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_ISEngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* bstrRootSetupFolder) PURE;
    STDMETHOD(get_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser FAR* eOCITargetBrowser) PURE;
    STDMETHOD(put_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser eOCITargetBrowser) PURE;
    STDMETHOD(get_DigitalCertificateIdNS)(THIS_ BSTR FAR* DigitalCertificateIdNS) PURE;
    STDMETHOD(put_DigitalCertificateIdNS)(THIS_ BSTR DigitalCertificateIdNS) PURE;
    STDMETHOD(get_DigitalCertificateDBaseNS)(THIS_ BSTR FAR* DigitalCertificateDBaseNS) PURE;
    STDMETHOD(put_DigitalCertificateDBaseNS)(THIS_ BSTR DigitalCertificateDBaseNS) PURE;
    STDMETHOD(get_DigitalCertificatePasswordNS)(THIS_ BSTR FAR* DigitalCertificatePasswordNS) PURE;
    STDMETHOD(put_DigitalCertificatePasswordNS)(THIS_ BSTR DigitalCertificatePasswordNS) PURE;
    STDMETHOD(get_CDBrowser)(THIS_ BSTR FAR* CDBrowser) PURE;
    STDMETHOD(put_CDBrowser)(THIS_ BSTR CDBrowser) PURE;
    STDMETHOD(get_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL FAR* bCabPerFeature) PURE;
    STDMETHOD(put_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL bCabPerFeature) PURE;
    STDMETHOD(get_DotNetBuildConfiguration)(THIS_ BSTR FAR* sDotNetBuildConfiguration) PURE;
    STDMETHOD(put_DotNetBuildConfiguration)(THIS_ BSTR sDotNetBuildConfiguration) PURE;
    STDMETHOD(get_DotNetRedistURL)(THIS_ BSTR FAR* bstrDotNetRedistURL) PURE;
    STDMETHOD(put_DotNetRedistURL)(THIS_ BSTR bstrDotNetRedistURL) PURE;
    STDMETHOD(get_DotNetRedistLocation)(THIS_ EnumEngineLocation FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetRedistLocation)(THIS_ EnumEngineLocation eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetUI)(THIS_ VARIANT_BOOL FAR* pvbUseDotNetUI) PURE;
    STDMETHOD(put_DotNetUI)(THIS_ VARIANT_BOOL vbUseDotNetUI) PURE;
    STDMETHOD(get_GenerateFileHashValues)(THIS_ VARIANT_BOOL FAR* pvbGenerateFileHashValues) PURE;
    STDMETHOD(put_GenerateFileHashValues)(THIS_ VARIANT_BOOL vbGenerateFileHashValues) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eMsiEngineVersion) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eMsiEngineVersion) PURE;
    STDMETHOD(get_MsiCommandLine)(THIS_ BSTR FAR* bstrMsiCommandLine) PURE;
    STDMETHOD(put_MsiCommandLine)(THIS_ BSTR bstrMsiCommandLine) PURE;
    STDMETHOD(get_SuppressARP)(THIS_ VARIANT_BOOL FAR* pvbSuppressARP) PURE;
    STDMETHOD(put_SuppressARP)(THIS_ VARIANT_BOOL vbSuppressARP) PURE;
    STDMETHOD(get_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL FAR* pvbShowDotNetSetupExeSelection) PURE;
    STDMETHOD(put_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL ShowDotNetSetupExeSelection) PURE;
    STDMETHOD(get_SmallInit)(THIS_ VARIANT_BOOL FAR* pvbSmallInit) PURE;
    STDMETHOD(put_SmallInit)(THIS_ VARIANT_BOOL SmallInit) PURE;
    STDMETHOD(get_ShallowFolder)(THIS_ VARIANT_BOOL FAR* pvbShallowFolder) PURE;
    STDMETHOD(put_ShallowFolder)(THIS_ VARIANT_BOOL ShallowFolder) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_DontEncrypt)(THIS_ VARIANT_BOOL FAR* pbstrDontEncrypt) PURE;
    STDMETHOD(put_DontEncrypt)(THIS_ VARIANT_BOOL bstrDontEncrypt) PURE;
    STDMETHOD(get_DotNetVersion)(THIS_ EnumDotNetVersion FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetVersion)(THIS_ EnumDotNetVersion eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetBaseLanguage)(THIS_ BSTR FAR* DotNetBaseLanguage) PURE;
    STDMETHOD(put_DotNetBaseLanguage)(THIS_ BSTR DotNetBaseLanguage) PURE;
    STDMETHOD(get_DotNetLangaugePacks)(THIS_ BSTR FAR* DotNetLangaugePacks) PURE;
    STDMETHOD(put_DotNetLangaugePacks)(THIS_ BSTR DotNetLangaugePacks) PURE;
    STDMETHOD(get_DotNetFxCmdLine)(THIS_ BSTR FAR* DotNetFxCmdLine) PURE;
    STDMETHOD(put_DotNetFxCmdLine)(THIS_ BSTR DotNetFxCmdLine) PURE;
    STDMETHOD(get_DotNetLangPackCmdLine)(THIS_ BSTR FAR* DotNetLangPackCmdLine) PURE;
    STDMETHOD(put_DotNetLangPackCmdLine)(THIS_ BSTR DotNetLangPackCmdLine) PURE;
    STDMETHOD(get_SignMedia)(THIS_ EnumSignMedia FAR* pSignMedia) PURE;
    STDMETHOD(put_SignMedia)(THIS_ EnumSignMedia SignMedia) PURE;
    STDMETHOD(get_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbDotNetOptionalIfSilent) PURE;
    STDMETHOD(put_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL bDotNetOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpCmdLine)(THIS_ BSTR FAR* pbstrJSharpCmdLine) PURE;
    STDMETHOD(put_JSharpCmdLine)(THIS_ BSTR bstrJSharpCmdLine) PURE;
    STDMETHOD(get_JSharpOptionDlg)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionDlg) PURE;
    STDMETHOD(put_JSharpOptionDlg)(THIS_ VARIANT_BOOL bJSharpOptionDlg) PURE;
    STDMETHOD(get_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionalIfSilent) PURE;
    STDMETHOD(put_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL bJSharpOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpRedistLocation)(THIS_ EnumEngineLocation FAR* eJSharpRedistLocation) PURE;
    STDMETHOD(put_JSharpRedistLocation)(THIS_ EnumEngineLocation eJSharpRedistLocation) PURE;
#endif

    /* IReleaseNeptune methods */
    STDMETHOD(get_DistributeAfterBuild)(THIS_ VARIANT_BOOL FAR* vbDistribute) PURE;
    STDMETHOD(put_DistributeAfterBuild)(THIS_ VARIANT_BOOL vbDistribute) PURE;
    STDMETHOD(get_IsCompactBuild)(THIS_ VARIANT_BOOL FAR* vbCompactBuild) PURE;
};

DEFINE_GUID(IID_IReleaseProteus,0x0FBBF787L,0x27D3,0x4CA8,0x8B,0x50,0x95,0x1F,0xFF,0x95,0x40,0x86);

/* Definition of interface: IReleaseProteus */
#undef INTERFACE
#define INTERFACE IReleaseProteus

DECLARE_INTERFACE_(IReleaseProteus, IReleaseNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IRelease2 methods */
    STDMETHOD(get_PackageName)(THIS_ BSTR FAR* PackageName) PURE;
    STDMETHOD(put_PackageName)(THIS_ BSTR PackageName) PURE;
    STDMETHOD(get_SupportedLanguagesUI)(THIS_ BSTR FAR* SupportedLanguagesUI) PURE;
    STDMETHOD(put_SupportedLanguagesUI)(THIS_ BSTR SupportedLanguagesUI) PURE;
    STDMETHOD(get_MsiSourceType)(THIS_ EnumMSISourceType FAR* MsiSourceType) PURE;
    STDMETHOD(put_MsiSourceType)(THIS_ EnumMSISourceType MsiSourceType) PURE;
    STDMETHOD(get_Platforms)(THIS_ BSTR FAR* Platforms) PURE;
    STDMETHOD(put_Platforms)(THIS_ BSTR Platforms) PURE;
    STDMETHOD(get_SupportedLanguagesData)(THIS_ BSTR FAR* SupportedLanguagesData) PURE;
    STDMETHOD(put_SupportedLanguagesData)(THIS_ BSTR SupportedLanguagesData) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_LanguageFiltering)(THIS_ VARIANT_BOOL FAR* LanguageFiltering) PURE;
    STDMETHOD(put_LanguageFiltering)(THIS_ VARIANT_BOOL LanguageFiltering) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_DiskSpanning)(THIS_ EnumDiskSpanning FAR* DiskSpanning) PURE;
    STDMETHOD(put_DiskSpanning)(THIS_ EnumDiskSpanning DiskSpanning) PURE;
    STDMETHOD(get_SynchMsi)(THIS_ BSTR FAR* SynchMsi) PURE;
    STDMETHOD(put_SynchMsi)(THIS_ BSTR SynchMsi) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_VersionCopyright)(THIS_ BSTR FAR* VersionCopyright) PURE;
    STDMETHOD(put_VersionCopyright)(THIS_ BSTR VersionCopyright) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_CreateReport)(THIS_ VARIANT_BOOL FAR* CreateReport) PURE;
    STDMETHOD(put_CreateReport)(THIS_ VARIANT_BOOL CreateReport) PURE;
    STDMETHOD(get_CreateLogFile)(THIS_ VARIANT_BOOL FAR* CreateLogFile) PURE;
    STDMETHOD(put_CreateLogFile)(THIS_ VARIANT_BOOL CreateLogFile) PURE;
    STDMETHOD(get_EnableLanguageDialog)(THIS_ VARIANT_BOOL FAR* EnableLanguageDialog) PURE;
    STDMETHOD(put_EnableLanguageDialog)(THIS_ VARIANT_BOOL EnableLanguageDialog) PURE;
    STDMETHOD(get_CopyMM)(THIS_ VARIANT_BOOL FAR* CopyMM) PURE;
    STDMETHOD(put_CopyMM)(THIS_ VARIANT_BOOL CopyMM) PURE;
    STDMETHOD(get_UseTestPathVariables)(THIS_ VARIANT_BOOL FAR* UseTestPathVariables) PURE;
    STDMETHOD(put_UseTestPathVariables)(THIS_ VARIANT_BOOL UseTestPathVariables) PURE;
    STDMETHOD(get_CreateAutorun)(THIS_ VARIANT_BOOL FAR* CreateAutorun) PURE;
    STDMETHOD(put_CreateAutorun)(THIS_ VARIANT_BOOL CreateAutorun) PURE;
    STDMETHOD(get_CreatePDF)(THIS_ VARIANT_BOOL FAR* CreatePDF) PURE;
    STDMETHOD(put_CreatePDF)(THIS_ VARIANT_BOOL CreatePDF) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* PasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL PasswordProtect) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* UseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL UseMyVersionInfo) PURE;
    STDMETHOD(get_SuppressWin2K)(THIS_ VARIANT_BOOL FAR* SuppressWin2K) PURE;
    STDMETHOD(put_SuppressWin2K)(THIS_ VARIANT_BOOL SuppressWin2K) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_LogicalDisks)(THIS_ ILogicalDisks FAR* FAR* pLogicalDisks) PURE;
    STDMETHOD(get_BuildLabel)(THIS_ IBuildLabel FAR* FAR* pBuildLabel) PURE;
    STDMETHOD(IsMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe, VARIANT_BOOL FAR* pvbIsMatch) PURE;
    STDMETHOD(MakeMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe) PURE;
    STDMETHOD(AddChild)(THIS_ EnumReleaseChild ercChild, long nDiskId, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(IsLanguageRequired)(THIS_ BSTR bstrLangID, VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(get_FeatureDiskID)(THIS_ BSTR bstrFeatureID, short FAR* nDiskId) PURE;
    STDMETHOD(get_FeatureCompressed)(THIS_ BSTR bstrFeatureID, VARIANT_BOOL FAR* vbCompressed) PURE;
    STDMETHOD(get_WebType)(THIS_ EnumWebType FAR* eWebType) PURE;
    STDMETHOD(put_WebType)(THIS_ EnumWebType eWebType) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* bstrWebURL) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrWebURL) PURE;
    STDMETHOD(get_WrapMsiIntoCab)(THIS_ VARIANT_BOOL FAR* bWrapMsiIntoCab) PURE;
    STDMETHOD(put_WrapMsiIntoCab)(THIS_ VARIANT_BOOL bWrapMsiIntoCab) PURE;
    STDMETHOD(get_WebCabSize)(THIS_ long FAR* WebCabSize) PURE;
    STDMETHOD(put_WebCabSize)(THIS_ long WebCabSize) PURE;
    STDMETHOD(get_GenerateOneClick)(THIS_ VARIANT_BOOL FAR* bGenerateOneClick) PURE;
    STDMETHOD(put_GenerateOneClick)(THIS_ VARIANT_BOOL bGenerateOneClick) PURE;
    STDMETHOD(get_OneClickHtmlName)(THIS_ BSTR FAR* bstrOneClickHtmlName) PURE;
    STDMETHOD(put_OneClickHtmlName)(THIS_ BSTR bstrOneClickHtmlName) PURE;
    STDMETHOD(get_OneClickCabName)(THIS_ BSTR FAR* bstrOneClickCabName) PURE;
    STDMETHOD(put_OneClickCabName)(THIS_ BSTR bstrOneClickCabName) PURE;
    STDMETHOD(get_CacheWebPkgLocally)(THIS_ VARIANT_BOOL FAR* bCacheWebPkgLocally) PURE;
    STDMETHOD(put_CacheWebPkgLocally)(THIS_ VARIANT_BOOL bCacheWebPkgLocally) PURE;
    STDMETHOD(get_WebLocalCachePath)(THIS_ BSTR FAR* bstrWebLocalCachePath) PURE;
    STDMETHOD(put_WebLocalCachePath)(THIS_ BSTR bstrWebLocalCachePath) PURE;
    STDMETHOD(get_EngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_EngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_DelayEngineReboot)(THIS_ VARIANT_BOOL FAR* bDelayEngineReboot) PURE;
    STDMETHOD(put_DelayEngineReboot)(THIS_ VARIANT_BOOL bDelayEngineReboot) PURE;
    STDMETHOD(get_Win9xMsiUrl)(THIS_ BSTR FAR* bstrWin9xMsiUrl) PURE;
    STDMETHOD(put_Win9xMsiUrl)(THIS_ BSTR bstrWin9xMsiUrl) PURE;
    STDMETHOD(get_WinNTMsiUrl)(THIS_ BSTR FAR* bstrWinNTMsiUrl) PURE;
    STDMETHOD(put_WinNTMsiUrl)(THIS_ BSTR bstrWinNTMsiUrl) PURE;
    STDMETHOD(get_ISEngineURL)(THIS_ BSTR FAR* bstrISEngineURL) PURE;
    STDMETHOD(put_ISEngineURL)(THIS_ BSTR bstrISEngineURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_ISEngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_ISEngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* bstrRootSetupFolder) PURE;
    STDMETHOD(get_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser FAR* eOCITargetBrowser) PURE;
    STDMETHOD(put_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser eOCITargetBrowser) PURE;
    STDMETHOD(get_DigitalCertificateIdNS)(THIS_ BSTR FAR* DigitalCertificateIdNS) PURE;
    STDMETHOD(put_DigitalCertificateIdNS)(THIS_ BSTR DigitalCertificateIdNS) PURE;
    STDMETHOD(get_DigitalCertificateDBaseNS)(THIS_ BSTR FAR* DigitalCertificateDBaseNS) PURE;
    STDMETHOD(put_DigitalCertificateDBaseNS)(THIS_ BSTR DigitalCertificateDBaseNS) PURE;
    STDMETHOD(get_DigitalCertificatePasswordNS)(THIS_ BSTR FAR* DigitalCertificatePasswordNS) PURE;
    STDMETHOD(put_DigitalCertificatePasswordNS)(THIS_ BSTR DigitalCertificatePasswordNS) PURE;
    STDMETHOD(get_CDBrowser)(THIS_ BSTR FAR* CDBrowser) PURE;
    STDMETHOD(put_CDBrowser)(THIS_ BSTR CDBrowser) PURE;
    STDMETHOD(get_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL FAR* bCabPerFeature) PURE;
    STDMETHOD(put_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL bCabPerFeature) PURE;
    STDMETHOD(get_DotNetBuildConfiguration)(THIS_ BSTR FAR* sDotNetBuildConfiguration) PURE;
    STDMETHOD(put_DotNetBuildConfiguration)(THIS_ BSTR sDotNetBuildConfiguration) PURE;
    STDMETHOD(get_DotNetRedistURL)(THIS_ BSTR FAR* bstrDotNetRedistURL) PURE;
    STDMETHOD(put_DotNetRedistURL)(THIS_ BSTR bstrDotNetRedistURL) PURE;
    STDMETHOD(get_DotNetRedistLocation)(THIS_ EnumEngineLocation FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetRedistLocation)(THIS_ EnumEngineLocation eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetUI)(THIS_ VARIANT_BOOL FAR* pvbUseDotNetUI) PURE;
    STDMETHOD(put_DotNetUI)(THIS_ VARIANT_BOOL vbUseDotNetUI) PURE;
    STDMETHOD(get_GenerateFileHashValues)(THIS_ VARIANT_BOOL FAR* pvbGenerateFileHashValues) PURE;
    STDMETHOD(put_GenerateFileHashValues)(THIS_ VARIANT_BOOL vbGenerateFileHashValues) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eMsiEngineVersion) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eMsiEngineVersion) PURE;
    STDMETHOD(get_MsiCommandLine)(THIS_ BSTR FAR* bstrMsiCommandLine) PURE;
    STDMETHOD(put_MsiCommandLine)(THIS_ BSTR bstrMsiCommandLine) PURE;
    STDMETHOD(get_SuppressARP)(THIS_ VARIANT_BOOL FAR* pvbSuppressARP) PURE;
    STDMETHOD(put_SuppressARP)(THIS_ VARIANT_BOOL vbSuppressARP) PURE;
    STDMETHOD(get_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL FAR* pvbShowDotNetSetupExeSelection) PURE;
    STDMETHOD(put_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL ShowDotNetSetupExeSelection) PURE;
    STDMETHOD(get_SmallInit)(THIS_ VARIANT_BOOL FAR* pvbSmallInit) PURE;
    STDMETHOD(put_SmallInit)(THIS_ VARIANT_BOOL SmallInit) PURE;
    STDMETHOD(get_ShallowFolder)(THIS_ VARIANT_BOOL FAR* pvbShallowFolder) PURE;
    STDMETHOD(put_ShallowFolder)(THIS_ VARIANT_BOOL ShallowFolder) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_DontEncrypt)(THIS_ VARIANT_BOOL FAR* pbstrDontEncrypt) PURE;
    STDMETHOD(put_DontEncrypt)(THIS_ VARIANT_BOOL bstrDontEncrypt) PURE;
    STDMETHOD(get_DotNetVersion)(THIS_ EnumDotNetVersion FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetVersion)(THIS_ EnumDotNetVersion eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetBaseLanguage)(THIS_ BSTR FAR* DotNetBaseLanguage) PURE;
    STDMETHOD(put_DotNetBaseLanguage)(THIS_ BSTR DotNetBaseLanguage) PURE;
    STDMETHOD(get_DotNetLangaugePacks)(THIS_ BSTR FAR* DotNetLangaugePacks) PURE;
    STDMETHOD(put_DotNetLangaugePacks)(THIS_ BSTR DotNetLangaugePacks) PURE;
    STDMETHOD(get_DotNetFxCmdLine)(THIS_ BSTR FAR* DotNetFxCmdLine) PURE;
    STDMETHOD(put_DotNetFxCmdLine)(THIS_ BSTR DotNetFxCmdLine) PURE;
    STDMETHOD(get_DotNetLangPackCmdLine)(THIS_ BSTR FAR* DotNetLangPackCmdLine) PURE;
    STDMETHOD(put_DotNetLangPackCmdLine)(THIS_ BSTR DotNetLangPackCmdLine) PURE;
    STDMETHOD(get_SignMedia)(THIS_ EnumSignMedia FAR* pSignMedia) PURE;
    STDMETHOD(put_SignMedia)(THIS_ EnumSignMedia SignMedia) PURE;
    STDMETHOD(get_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbDotNetOptionalIfSilent) PURE;
    STDMETHOD(put_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL bDotNetOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpCmdLine)(THIS_ BSTR FAR* pbstrJSharpCmdLine) PURE;
    STDMETHOD(put_JSharpCmdLine)(THIS_ BSTR bstrJSharpCmdLine) PURE;
    STDMETHOD(get_JSharpOptionDlg)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionDlg) PURE;
    STDMETHOD(put_JSharpOptionDlg)(THIS_ VARIANT_BOOL bJSharpOptionDlg) PURE;
    STDMETHOD(get_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionalIfSilent) PURE;
    STDMETHOD(put_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL bJSharpOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpRedistLocation)(THIS_ EnumEngineLocation FAR* eJSharpRedistLocation) PURE;
    STDMETHOD(put_JSharpRedistLocation)(THIS_ EnumEngineLocation eJSharpRedistLocation) PURE;

    /* IReleaseNeptune methods */
    STDMETHOD(get_DistributeAfterBuild)(THIS_ VARIANT_BOOL FAR* vbDistribute) PURE;
    STDMETHOD(put_DistributeAfterBuild)(THIS_ VARIANT_BOOL vbDistribute) PURE;
    STDMETHOD(get_IsCompactBuild)(THIS_ VARIANT_BOOL FAR* vbCompactBuild) PURE;
#endif

    /* IReleaseProteus methods */
    STDMETHOD(get_WinMsi30Url)(THIS_ BSTR FAR* bstrWinMsi30Url) PURE;
    STDMETHOD(put_WinMsi30Url)(THIS_ BSTR bstrWinMsi30Url) PURE;
    STDMETHOD(get_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc FAR* nLoc) PURE;
    STDMETHOD(put_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc nLoc) PURE;
    STDMETHOD(get_LogRuntimeResults)(THIS_ VARIANT_BOOL FAR* vbLog) PURE;
    STDMETHOD(put_LogRuntimeResults)(THIS_ VARIANT_BOOL vbLog) PURE;
    STDMETHOD(get_BindToCLR)(THIS_ VARIANT_BOOL FAR* vbLog) PURE;
    STDMETHOD(put_BindToCLR)(THIS_ VARIANT_BOOL vbLog) PURE;
    STDMETHOD(get_CertPassword)(THIS_ BSTR FAR* bstrPassword) PURE;
    STDMETHOD(put_CertPassword)(THIS_ BSTR bstrPassword) PURE;
};

typedef enum EnumPublishLocation {
    eplNone = 1,
    eplMMCatalog,
    eplRepository
} EnumPublishLocation;

DEFINE_GUID(IID_IReleasePublishInfoPluto,0x9EB2751DL,0xE867,0x4255,0x9A,0x80,0x88,0x56,0x09,0x5A,0x9E,0x64);

/* Definition of interface: IReleasePublishInfoPluto */
#undef INTERFACE
#define INTERFACE IReleasePublishInfoPluto

DECLARE_INTERFACE_(IReleasePublishInfoPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IReleasePublishInfoPluto methods */
    STDMETHOD(get_MMPublishLocation)(THIS_ EnumPublishLocation FAR* ePublishLocation) PURE;
    STDMETHOD(put_MMPublishLocation)(THIS_ EnumPublishLocation ePublishLocation) PURE;
    STDMETHOD(get_RepoKey)(THIS_ BSTR FAR* pbstrPublishRepo) PURE;
    STDMETHOD(put_RepoKey)(THIS_ BSTR bstrPublishRepo) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pbstrDisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_Publisher)(THIS_ BSTR FAR* pbstrPublisher) PURE;
    STDMETHOD(put_Publisher)(THIS_ BSTR bstrPublisher) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pbstrDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrDescription) PURE;
};

DEFINE_GUID(IID_IReleasePluto,0xA9055992L,0xD230,0x48C9,0x81,0xFB,0x4A,0xD4,0x08,0xFF,0x14,0x5B);

/* Definition of interface: IReleasePluto */
#undef INTERFACE
#define INTERFACE IReleasePluto

DECLARE_INTERFACE_(IReleasePluto, IReleaseProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IRelease2 methods */
    STDMETHOD(get_PackageName)(THIS_ BSTR FAR* PackageName) PURE;
    STDMETHOD(put_PackageName)(THIS_ BSTR PackageName) PURE;
    STDMETHOD(get_SupportedLanguagesUI)(THIS_ BSTR FAR* SupportedLanguagesUI) PURE;
    STDMETHOD(put_SupportedLanguagesUI)(THIS_ BSTR SupportedLanguagesUI) PURE;
    STDMETHOD(get_MsiSourceType)(THIS_ EnumMSISourceType FAR* MsiSourceType) PURE;
    STDMETHOD(put_MsiSourceType)(THIS_ EnumMSISourceType MsiSourceType) PURE;
    STDMETHOD(get_Platforms)(THIS_ BSTR FAR* Platforms) PURE;
    STDMETHOD(put_Platforms)(THIS_ BSTR Platforms) PURE;
    STDMETHOD(get_SupportedLanguagesData)(THIS_ BSTR FAR* SupportedLanguagesData) PURE;
    STDMETHOD(put_SupportedLanguagesData)(THIS_ BSTR SupportedLanguagesData) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_LanguageFiltering)(THIS_ VARIANT_BOOL FAR* LanguageFiltering) PURE;
    STDMETHOD(put_LanguageFiltering)(THIS_ VARIANT_BOOL LanguageFiltering) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_DiskSpanning)(THIS_ EnumDiskSpanning FAR* DiskSpanning) PURE;
    STDMETHOD(put_DiskSpanning)(THIS_ EnumDiskSpanning DiskSpanning) PURE;
    STDMETHOD(get_SynchMsi)(THIS_ BSTR FAR* SynchMsi) PURE;
    STDMETHOD(put_SynchMsi)(THIS_ BSTR SynchMsi) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_VersionCopyright)(THIS_ BSTR FAR* VersionCopyright) PURE;
    STDMETHOD(put_VersionCopyright)(THIS_ BSTR VersionCopyright) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_CreateReport)(THIS_ VARIANT_BOOL FAR* CreateReport) PURE;
    STDMETHOD(put_CreateReport)(THIS_ VARIANT_BOOL CreateReport) PURE;
    STDMETHOD(get_CreateLogFile)(THIS_ VARIANT_BOOL FAR* CreateLogFile) PURE;
    STDMETHOD(put_CreateLogFile)(THIS_ VARIANT_BOOL CreateLogFile) PURE;
    STDMETHOD(get_EnableLanguageDialog)(THIS_ VARIANT_BOOL FAR* EnableLanguageDialog) PURE;
    STDMETHOD(put_EnableLanguageDialog)(THIS_ VARIANT_BOOL EnableLanguageDialog) PURE;
    STDMETHOD(get_CopyMM)(THIS_ VARIANT_BOOL FAR* CopyMM) PURE;
    STDMETHOD(put_CopyMM)(THIS_ VARIANT_BOOL CopyMM) PURE;
    STDMETHOD(get_UseTestPathVariables)(THIS_ VARIANT_BOOL FAR* UseTestPathVariables) PURE;
    STDMETHOD(put_UseTestPathVariables)(THIS_ VARIANT_BOOL UseTestPathVariables) PURE;
    STDMETHOD(get_CreateAutorun)(THIS_ VARIANT_BOOL FAR* CreateAutorun) PURE;
    STDMETHOD(put_CreateAutorun)(THIS_ VARIANT_BOOL CreateAutorun) PURE;
    STDMETHOD(get_CreatePDF)(THIS_ VARIANT_BOOL FAR* CreatePDF) PURE;
    STDMETHOD(put_CreatePDF)(THIS_ VARIANT_BOOL CreatePDF) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* PasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL PasswordProtect) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* UseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL UseMyVersionInfo) PURE;
    STDMETHOD(get_SuppressWin2K)(THIS_ VARIANT_BOOL FAR* SuppressWin2K) PURE;
    STDMETHOD(put_SuppressWin2K)(THIS_ VARIANT_BOOL SuppressWin2K) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_LogicalDisks)(THIS_ ILogicalDisks FAR* FAR* pLogicalDisks) PURE;
    STDMETHOD(get_BuildLabel)(THIS_ IBuildLabel FAR* FAR* pBuildLabel) PURE;
    STDMETHOD(IsMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe, VARIANT_BOOL FAR* pvbIsMatch) PURE;
    STDMETHOD(MakeMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe) PURE;
    STDMETHOD(AddChild)(THIS_ EnumReleaseChild ercChild, long nDiskId, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(IsLanguageRequired)(THIS_ BSTR bstrLangID, VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(get_FeatureDiskID)(THIS_ BSTR bstrFeatureID, short FAR* nDiskId) PURE;
    STDMETHOD(get_FeatureCompressed)(THIS_ BSTR bstrFeatureID, VARIANT_BOOL FAR* vbCompressed) PURE;
    STDMETHOD(get_WebType)(THIS_ EnumWebType FAR* eWebType) PURE;
    STDMETHOD(put_WebType)(THIS_ EnumWebType eWebType) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* bstrWebURL) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrWebURL) PURE;
    STDMETHOD(get_WrapMsiIntoCab)(THIS_ VARIANT_BOOL FAR* bWrapMsiIntoCab) PURE;
    STDMETHOD(put_WrapMsiIntoCab)(THIS_ VARIANT_BOOL bWrapMsiIntoCab) PURE;
    STDMETHOD(get_WebCabSize)(THIS_ long FAR* WebCabSize) PURE;
    STDMETHOD(put_WebCabSize)(THIS_ long WebCabSize) PURE;
    STDMETHOD(get_GenerateOneClick)(THIS_ VARIANT_BOOL FAR* bGenerateOneClick) PURE;
    STDMETHOD(put_GenerateOneClick)(THIS_ VARIANT_BOOL bGenerateOneClick) PURE;
    STDMETHOD(get_OneClickHtmlName)(THIS_ BSTR FAR* bstrOneClickHtmlName) PURE;
    STDMETHOD(put_OneClickHtmlName)(THIS_ BSTR bstrOneClickHtmlName) PURE;
    STDMETHOD(get_OneClickCabName)(THIS_ BSTR FAR* bstrOneClickCabName) PURE;
    STDMETHOD(put_OneClickCabName)(THIS_ BSTR bstrOneClickCabName) PURE;
    STDMETHOD(get_CacheWebPkgLocally)(THIS_ VARIANT_BOOL FAR* bCacheWebPkgLocally) PURE;
    STDMETHOD(put_CacheWebPkgLocally)(THIS_ VARIANT_BOOL bCacheWebPkgLocally) PURE;
    STDMETHOD(get_WebLocalCachePath)(THIS_ BSTR FAR* bstrWebLocalCachePath) PURE;
    STDMETHOD(put_WebLocalCachePath)(THIS_ BSTR bstrWebLocalCachePath) PURE;
    STDMETHOD(get_EngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_EngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_DelayEngineReboot)(THIS_ VARIANT_BOOL FAR* bDelayEngineReboot) PURE;
    STDMETHOD(put_DelayEngineReboot)(THIS_ VARIANT_BOOL bDelayEngineReboot) PURE;
    STDMETHOD(get_Win9xMsiUrl)(THIS_ BSTR FAR* bstrWin9xMsiUrl) PURE;
    STDMETHOD(put_Win9xMsiUrl)(THIS_ BSTR bstrWin9xMsiUrl) PURE;
    STDMETHOD(get_WinNTMsiUrl)(THIS_ BSTR FAR* bstrWinNTMsiUrl) PURE;
    STDMETHOD(put_WinNTMsiUrl)(THIS_ BSTR bstrWinNTMsiUrl) PURE;
    STDMETHOD(get_ISEngineURL)(THIS_ BSTR FAR* bstrISEngineURL) PURE;
    STDMETHOD(put_ISEngineURL)(THIS_ BSTR bstrISEngineURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_ISEngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_ISEngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* bstrRootSetupFolder) PURE;
    STDMETHOD(get_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser FAR* eOCITargetBrowser) PURE;
    STDMETHOD(put_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser eOCITargetBrowser) PURE;
    STDMETHOD(get_DigitalCertificateIdNS)(THIS_ BSTR FAR* DigitalCertificateIdNS) PURE;
    STDMETHOD(put_DigitalCertificateIdNS)(THIS_ BSTR DigitalCertificateIdNS) PURE;
    STDMETHOD(get_DigitalCertificateDBaseNS)(THIS_ BSTR FAR* DigitalCertificateDBaseNS) PURE;
    STDMETHOD(put_DigitalCertificateDBaseNS)(THIS_ BSTR DigitalCertificateDBaseNS) PURE;
    STDMETHOD(get_DigitalCertificatePasswordNS)(THIS_ BSTR FAR* DigitalCertificatePasswordNS) PURE;
    STDMETHOD(put_DigitalCertificatePasswordNS)(THIS_ BSTR DigitalCertificatePasswordNS) PURE;
    STDMETHOD(get_CDBrowser)(THIS_ BSTR FAR* CDBrowser) PURE;
    STDMETHOD(put_CDBrowser)(THIS_ BSTR CDBrowser) PURE;
    STDMETHOD(get_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL FAR* bCabPerFeature) PURE;
    STDMETHOD(put_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL bCabPerFeature) PURE;
    STDMETHOD(get_DotNetBuildConfiguration)(THIS_ BSTR FAR* sDotNetBuildConfiguration) PURE;
    STDMETHOD(put_DotNetBuildConfiguration)(THIS_ BSTR sDotNetBuildConfiguration) PURE;
    STDMETHOD(get_DotNetRedistURL)(THIS_ BSTR FAR* bstrDotNetRedistURL) PURE;
    STDMETHOD(put_DotNetRedistURL)(THIS_ BSTR bstrDotNetRedistURL) PURE;
    STDMETHOD(get_DotNetRedistLocation)(THIS_ EnumEngineLocation FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetRedistLocation)(THIS_ EnumEngineLocation eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetUI)(THIS_ VARIANT_BOOL FAR* pvbUseDotNetUI) PURE;
    STDMETHOD(put_DotNetUI)(THIS_ VARIANT_BOOL vbUseDotNetUI) PURE;
    STDMETHOD(get_GenerateFileHashValues)(THIS_ VARIANT_BOOL FAR* pvbGenerateFileHashValues) PURE;
    STDMETHOD(put_GenerateFileHashValues)(THIS_ VARIANT_BOOL vbGenerateFileHashValues) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eMsiEngineVersion) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eMsiEngineVersion) PURE;
    STDMETHOD(get_MsiCommandLine)(THIS_ BSTR FAR* bstrMsiCommandLine) PURE;
    STDMETHOD(put_MsiCommandLine)(THIS_ BSTR bstrMsiCommandLine) PURE;
    STDMETHOD(get_SuppressARP)(THIS_ VARIANT_BOOL FAR* pvbSuppressARP) PURE;
    STDMETHOD(put_SuppressARP)(THIS_ VARIANT_BOOL vbSuppressARP) PURE;
    STDMETHOD(get_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL FAR* pvbShowDotNetSetupExeSelection) PURE;
    STDMETHOD(put_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL ShowDotNetSetupExeSelection) PURE;
    STDMETHOD(get_SmallInit)(THIS_ VARIANT_BOOL FAR* pvbSmallInit) PURE;
    STDMETHOD(put_SmallInit)(THIS_ VARIANT_BOOL SmallInit) PURE;
    STDMETHOD(get_ShallowFolder)(THIS_ VARIANT_BOOL FAR* pvbShallowFolder) PURE;
    STDMETHOD(put_ShallowFolder)(THIS_ VARIANT_BOOL ShallowFolder) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_DontEncrypt)(THIS_ VARIANT_BOOL FAR* pbstrDontEncrypt) PURE;
    STDMETHOD(put_DontEncrypt)(THIS_ VARIANT_BOOL bstrDontEncrypt) PURE;
    STDMETHOD(get_DotNetVersion)(THIS_ EnumDotNetVersion FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetVersion)(THIS_ EnumDotNetVersion eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetBaseLanguage)(THIS_ BSTR FAR* DotNetBaseLanguage) PURE;
    STDMETHOD(put_DotNetBaseLanguage)(THIS_ BSTR DotNetBaseLanguage) PURE;
    STDMETHOD(get_DotNetLangaugePacks)(THIS_ BSTR FAR* DotNetLangaugePacks) PURE;
    STDMETHOD(put_DotNetLangaugePacks)(THIS_ BSTR DotNetLangaugePacks) PURE;
    STDMETHOD(get_DotNetFxCmdLine)(THIS_ BSTR FAR* DotNetFxCmdLine) PURE;
    STDMETHOD(put_DotNetFxCmdLine)(THIS_ BSTR DotNetFxCmdLine) PURE;
    STDMETHOD(get_DotNetLangPackCmdLine)(THIS_ BSTR FAR* DotNetLangPackCmdLine) PURE;
    STDMETHOD(put_DotNetLangPackCmdLine)(THIS_ BSTR DotNetLangPackCmdLine) PURE;
    STDMETHOD(get_SignMedia)(THIS_ EnumSignMedia FAR* pSignMedia) PURE;
    STDMETHOD(put_SignMedia)(THIS_ EnumSignMedia SignMedia) PURE;
    STDMETHOD(get_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbDotNetOptionalIfSilent) PURE;
    STDMETHOD(put_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL bDotNetOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpCmdLine)(THIS_ BSTR FAR* pbstrJSharpCmdLine) PURE;
    STDMETHOD(put_JSharpCmdLine)(THIS_ BSTR bstrJSharpCmdLine) PURE;
    STDMETHOD(get_JSharpOptionDlg)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionDlg) PURE;
    STDMETHOD(put_JSharpOptionDlg)(THIS_ VARIANT_BOOL bJSharpOptionDlg) PURE;
    STDMETHOD(get_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionalIfSilent) PURE;
    STDMETHOD(put_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL bJSharpOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpRedistLocation)(THIS_ EnumEngineLocation FAR* eJSharpRedistLocation) PURE;
    STDMETHOD(put_JSharpRedistLocation)(THIS_ EnumEngineLocation eJSharpRedistLocation) PURE;

    /* IReleaseNeptune methods */
    STDMETHOD(get_DistributeAfterBuild)(THIS_ VARIANT_BOOL FAR* vbDistribute) PURE;
    STDMETHOD(put_DistributeAfterBuild)(THIS_ VARIANT_BOOL vbDistribute) PURE;
    STDMETHOD(get_IsCompactBuild)(THIS_ VARIANT_BOOL FAR* vbCompactBuild) PURE;

    /* IReleaseProteus methods */
    STDMETHOD(get_WinMsi30Url)(THIS_ BSTR FAR* bstrWinMsi30Url) PURE;
    STDMETHOD(put_WinMsi30Url)(THIS_ BSTR bstrWinMsi30Url) PURE;
    STDMETHOD(get_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc FAR* nLoc) PURE;
    STDMETHOD(put_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc nLoc) PURE;
    STDMETHOD(get_LogRuntimeResults)(THIS_ VARIANT_BOOL FAR* vbLog) PURE;
    STDMETHOD(put_LogRuntimeResults)(THIS_ VARIANT_BOOL vbLog) PURE;
    STDMETHOD(get_BindToCLR)(THIS_ VARIANT_BOOL FAR* vbLog) PURE;
    STDMETHOD(put_BindToCLR)(THIS_ VARIANT_BOOL vbLog) PURE;
    STDMETHOD(get_CertPassword)(THIS_ BSTR FAR* bstrPassword) PURE;
    STDMETHOD(put_CertPassword)(THIS_ BSTR bstrPassword) PURE;
#endif

    /* IReleasePluto methods */
    STDMETHOD(get_IsDRMDisabled)(THIS_ VARIANT_BOOL FAR* pIsDRMDisabled) PURE;
    STDMETHOD(put_IsDRMDisabled)(THIS_ VARIANT_BOOL IsDRMDisabled) PURE;
    STDMETHOD(get_PublishInfo)(THIS_ IReleasePublishInfoPluto FAR* FAR* ppPublishInfo) PURE;
};

interface IReleaseASRepositoryPropertiesIbizaAtlantis;

DEFINE_GUID(IID_IReleaseIbizaAtlantis,0xB45B2285L,0x99FD,0x4AC6,0xBE,0x42,0xE9,0xC4,0xE6,0x0F,0xE2,0xE5);

/* Definition of interface: IReleaseIbizaAtlantis */
#undef INTERFACE
#define INTERFACE IReleaseIbizaAtlantis

DECLARE_INTERFACE_(IReleaseIbizaAtlantis, IReleasePluto)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IRelease2 methods */
    STDMETHOD(get_PackageName)(THIS_ BSTR FAR* PackageName) PURE;
    STDMETHOD(put_PackageName)(THIS_ BSTR PackageName) PURE;
    STDMETHOD(get_SupportedLanguagesUI)(THIS_ BSTR FAR* SupportedLanguagesUI) PURE;
    STDMETHOD(put_SupportedLanguagesUI)(THIS_ BSTR SupportedLanguagesUI) PURE;
    STDMETHOD(get_MsiSourceType)(THIS_ EnumMSISourceType FAR* MsiSourceType) PURE;
    STDMETHOD(put_MsiSourceType)(THIS_ EnumMSISourceType MsiSourceType) PURE;
    STDMETHOD(get_Platforms)(THIS_ BSTR FAR* Platforms) PURE;
    STDMETHOD(put_Platforms)(THIS_ BSTR Platforms) PURE;
    STDMETHOD(get_SupportedLanguagesData)(THIS_ BSTR FAR* SupportedLanguagesData) PURE;
    STDMETHOD(put_SupportedLanguagesData)(THIS_ BSTR SupportedLanguagesData) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_LanguageFiltering)(THIS_ VARIANT_BOOL FAR* LanguageFiltering) PURE;
    STDMETHOD(put_LanguageFiltering)(THIS_ VARIANT_BOOL LanguageFiltering) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_DiskSpanning)(THIS_ EnumDiskSpanning FAR* DiskSpanning) PURE;
    STDMETHOD(put_DiskSpanning)(THIS_ EnumDiskSpanning DiskSpanning) PURE;
    STDMETHOD(get_SynchMsi)(THIS_ BSTR FAR* SynchMsi) PURE;
    STDMETHOD(put_SynchMsi)(THIS_ BSTR SynchMsi) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_VersionCopyright)(THIS_ BSTR FAR* VersionCopyright) PURE;
    STDMETHOD(put_VersionCopyright)(THIS_ BSTR VersionCopyright) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_CreateReport)(THIS_ VARIANT_BOOL FAR* CreateReport) PURE;
    STDMETHOD(put_CreateReport)(THIS_ VARIANT_BOOL CreateReport) PURE;
    STDMETHOD(get_CreateLogFile)(THIS_ VARIANT_BOOL FAR* CreateLogFile) PURE;
    STDMETHOD(put_CreateLogFile)(THIS_ VARIANT_BOOL CreateLogFile) PURE;
    STDMETHOD(get_EnableLanguageDialog)(THIS_ VARIANT_BOOL FAR* EnableLanguageDialog) PURE;
    STDMETHOD(put_EnableLanguageDialog)(THIS_ VARIANT_BOOL EnableLanguageDialog) PURE;
    STDMETHOD(get_CopyMM)(THIS_ VARIANT_BOOL FAR* CopyMM) PURE;
    STDMETHOD(put_CopyMM)(THIS_ VARIANT_BOOL CopyMM) PURE;
    STDMETHOD(get_UseTestPathVariables)(THIS_ VARIANT_BOOL FAR* UseTestPathVariables) PURE;
    STDMETHOD(put_UseTestPathVariables)(THIS_ VARIANT_BOOL UseTestPathVariables) PURE;
    STDMETHOD(get_CreateAutorun)(THIS_ VARIANT_BOOL FAR* CreateAutorun) PURE;
    STDMETHOD(put_CreateAutorun)(THIS_ VARIANT_BOOL CreateAutorun) PURE;
    STDMETHOD(get_CreatePDF)(THIS_ VARIANT_BOOL FAR* CreatePDF) PURE;
    STDMETHOD(put_CreatePDF)(THIS_ VARIANT_BOOL CreatePDF) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* PasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL PasswordProtect) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* UseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL UseMyVersionInfo) PURE;
    STDMETHOD(get_SuppressWin2K)(THIS_ VARIANT_BOOL FAR* SuppressWin2K) PURE;
    STDMETHOD(put_SuppressWin2K)(THIS_ VARIANT_BOOL SuppressWin2K) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_LogicalDisks)(THIS_ ILogicalDisks FAR* FAR* pLogicalDisks) PURE;
    STDMETHOD(get_BuildLabel)(THIS_ IBuildLabel FAR* FAR* pBuildLabel) PURE;
    STDMETHOD(IsMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe, VARIANT_BOOL FAR* pvbIsMatch) PURE;
    STDMETHOD(MakeMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe) PURE;
    STDMETHOD(AddChild)(THIS_ EnumReleaseChild ercChild, long nDiskId, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(IsLanguageRequired)(THIS_ BSTR bstrLangID, VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(get_FeatureDiskID)(THIS_ BSTR bstrFeatureID, short FAR* nDiskId) PURE;
    STDMETHOD(get_FeatureCompressed)(THIS_ BSTR bstrFeatureID, VARIANT_BOOL FAR* vbCompressed) PURE;
    STDMETHOD(get_WebType)(THIS_ EnumWebType FAR* eWebType) PURE;
    STDMETHOD(put_WebType)(THIS_ EnumWebType eWebType) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* bstrWebURL) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrWebURL) PURE;
    STDMETHOD(get_WrapMsiIntoCab)(THIS_ VARIANT_BOOL FAR* bWrapMsiIntoCab) PURE;
    STDMETHOD(put_WrapMsiIntoCab)(THIS_ VARIANT_BOOL bWrapMsiIntoCab) PURE;
    STDMETHOD(get_WebCabSize)(THIS_ long FAR* WebCabSize) PURE;
    STDMETHOD(put_WebCabSize)(THIS_ long WebCabSize) PURE;
    STDMETHOD(get_GenerateOneClick)(THIS_ VARIANT_BOOL FAR* bGenerateOneClick) PURE;
    STDMETHOD(put_GenerateOneClick)(THIS_ VARIANT_BOOL bGenerateOneClick) PURE;
    STDMETHOD(get_OneClickHtmlName)(THIS_ BSTR FAR* bstrOneClickHtmlName) PURE;
    STDMETHOD(put_OneClickHtmlName)(THIS_ BSTR bstrOneClickHtmlName) PURE;
    STDMETHOD(get_OneClickCabName)(THIS_ BSTR FAR* bstrOneClickCabName) PURE;
    STDMETHOD(put_OneClickCabName)(THIS_ BSTR bstrOneClickCabName) PURE;
    STDMETHOD(get_CacheWebPkgLocally)(THIS_ VARIANT_BOOL FAR* bCacheWebPkgLocally) PURE;
    STDMETHOD(put_CacheWebPkgLocally)(THIS_ VARIANT_BOOL bCacheWebPkgLocally) PURE;
    STDMETHOD(get_WebLocalCachePath)(THIS_ BSTR FAR* bstrWebLocalCachePath) PURE;
    STDMETHOD(put_WebLocalCachePath)(THIS_ BSTR bstrWebLocalCachePath) PURE;
    STDMETHOD(get_EngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_EngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_DelayEngineReboot)(THIS_ VARIANT_BOOL FAR* bDelayEngineReboot) PURE;
    STDMETHOD(put_DelayEngineReboot)(THIS_ VARIANT_BOOL bDelayEngineReboot) PURE;
    STDMETHOD(get_Win9xMsiUrl)(THIS_ BSTR FAR* bstrWin9xMsiUrl) PURE;
    STDMETHOD(put_Win9xMsiUrl)(THIS_ BSTR bstrWin9xMsiUrl) PURE;
    STDMETHOD(get_WinNTMsiUrl)(THIS_ BSTR FAR* bstrWinNTMsiUrl) PURE;
    STDMETHOD(put_WinNTMsiUrl)(THIS_ BSTR bstrWinNTMsiUrl) PURE;
    STDMETHOD(get_ISEngineURL)(THIS_ BSTR FAR* bstrISEngineURL) PURE;
    STDMETHOD(put_ISEngineURL)(THIS_ BSTR bstrISEngineURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_ISEngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_ISEngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* bstrRootSetupFolder) PURE;
    STDMETHOD(get_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser FAR* eOCITargetBrowser) PURE;
    STDMETHOD(put_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser eOCITargetBrowser) PURE;
    STDMETHOD(get_DigitalCertificateIdNS)(THIS_ BSTR FAR* DigitalCertificateIdNS) PURE;
    STDMETHOD(put_DigitalCertificateIdNS)(THIS_ BSTR DigitalCertificateIdNS) PURE;
    STDMETHOD(get_DigitalCertificateDBaseNS)(THIS_ BSTR FAR* DigitalCertificateDBaseNS) PURE;
    STDMETHOD(put_DigitalCertificateDBaseNS)(THIS_ BSTR DigitalCertificateDBaseNS) PURE;
    STDMETHOD(get_DigitalCertificatePasswordNS)(THIS_ BSTR FAR* DigitalCertificatePasswordNS) PURE;
    STDMETHOD(put_DigitalCertificatePasswordNS)(THIS_ BSTR DigitalCertificatePasswordNS) PURE;
    STDMETHOD(get_CDBrowser)(THIS_ BSTR FAR* CDBrowser) PURE;
    STDMETHOD(put_CDBrowser)(THIS_ BSTR CDBrowser) PURE;
    STDMETHOD(get_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL FAR* bCabPerFeature) PURE;
    STDMETHOD(put_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL bCabPerFeature) PURE;
    STDMETHOD(get_DotNetBuildConfiguration)(THIS_ BSTR FAR* sDotNetBuildConfiguration) PURE;
    STDMETHOD(put_DotNetBuildConfiguration)(THIS_ BSTR sDotNetBuildConfiguration) PURE;
    STDMETHOD(get_DotNetRedistURL)(THIS_ BSTR FAR* bstrDotNetRedistURL) PURE;
    STDMETHOD(put_DotNetRedistURL)(THIS_ BSTR bstrDotNetRedistURL) PURE;
    STDMETHOD(get_DotNetRedistLocation)(THIS_ EnumEngineLocation FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetRedistLocation)(THIS_ EnumEngineLocation eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetUI)(THIS_ VARIANT_BOOL FAR* pvbUseDotNetUI) PURE;
    STDMETHOD(put_DotNetUI)(THIS_ VARIANT_BOOL vbUseDotNetUI) PURE;
    STDMETHOD(get_GenerateFileHashValues)(THIS_ VARIANT_BOOL FAR* pvbGenerateFileHashValues) PURE;
    STDMETHOD(put_GenerateFileHashValues)(THIS_ VARIANT_BOOL vbGenerateFileHashValues) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eMsiEngineVersion) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eMsiEngineVersion) PURE;
    STDMETHOD(get_MsiCommandLine)(THIS_ BSTR FAR* bstrMsiCommandLine) PURE;
    STDMETHOD(put_MsiCommandLine)(THIS_ BSTR bstrMsiCommandLine) PURE;
    STDMETHOD(get_SuppressARP)(THIS_ VARIANT_BOOL FAR* pvbSuppressARP) PURE;
    STDMETHOD(put_SuppressARP)(THIS_ VARIANT_BOOL vbSuppressARP) PURE;
    STDMETHOD(get_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL FAR* pvbShowDotNetSetupExeSelection) PURE;
    STDMETHOD(put_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL ShowDotNetSetupExeSelection) PURE;
    STDMETHOD(get_SmallInit)(THIS_ VARIANT_BOOL FAR* pvbSmallInit) PURE;
    STDMETHOD(put_SmallInit)(THIS_ VARIANT_BOOL SmallInit) PURE;
    STDMETHOD(get_ShallowFolder)(THIS_ VARIANT_BOOL FAR* pvbShallowFolder) PURE;
    STDMETHOD(put_ShallowFolder)(THIS_ VARIANT_BOOL ShallowFolder) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_DontEncrypt)(THIS_ VARIANT_BOOL FAR* pbstrDontEncrypt) PURE;
    STDMETHOD(put_DontEncrypt)(THIS_ VARIANT_BOOL bstrDontEncrypt) PURE;
    STDMETHOD(get_DotNetVersion)(THIS_ EnumDotNetVersion FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetVersion)(THIS_ EnumDotNetVersion eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetBaseLanguage)(THIS_ BSTR FAR* DotNetBaseLanguage) PURE;
    STDMETHOD(put_DotNetBaseLanguage)(THIS_ BSTR DotNetBaseLanguage) PURE;
    STDMETHOD(get_DotNetLangaugePacks)(THIS_ BSTR FAR* DotNetLangaugePacks) PURE;
    STDMETHOD(put_DotNetLangaugePacks)(THIS_ BSTR DotNetLangaugePacks) PURE;
    STDMETHOD(get_DotNetFxCmdLine)(THIS_ BSTR FAR* DotNetFxCmdLine) PURE;
    STDMETHOD(put_DotNetFxCmdLine)(THIS_ BSTR DotNetFxCmdLine) PURE;
    STDMETHOD(get_DotNetLangPackCmdLine)(THIS_ BSTR FAR* DotNetLangPackCmdLine) PURE;
    STDMETHOD(put_DotNetLangPackCmdLine)(THIS_ BSTR DotNetLangPackCmdLine) PURE;
    STDMETHOD(get_SignMedia)(THIS_ EnumSignMedia FAR* pSignMedia) PURE;
    STDMETHOD(put_SignMedia)(THIS_ EnumSignMedia SignMedia) PURE;
    STDMETHOD(get_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbDotNetOptionalIfSilent) PURE;
    STDMETHOD(put_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL bDotNetOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpCmdLine)(THIS_ BSTR FAR* pbstrJSharpCmdLine) PURE;
    STDMETHOD(put_JSharpCmdLine)(THIS_ BSTR bstrJSharpCmdLine) PURE;
    STDMETHOD(get_JSharpOptionDlg)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionDlg) PURE;
    STDMETHOD(put_JSharpOptionDlg)(THIS_ VARIANT_BOOL bJSharpOptionDlg) PURE;
    STDMETHOD(get_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionalIfSilent) PURE;
    STDMETHOD(put_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL bJSharpOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpRedistLocation)(THIS_ EnumEngineLocation FAR* eJSharpRedistLocation) PURE;
    STDMETHOD(put_JSharpRedistLocation)(THIS_ EnumEngineLocation eJSharpRedistLocation) PURE;

    /* IReleaseNeptune methods */
    STDMETHOD(get_DistributeAfterBuild)(THIS_ VARIANT_BOOL FAR* vbDistribute) PURE;
    STDMETHOD(put_DistributeAfterBuild)(THIS_ VARIANT_BOOL vbDistribute) PURE;
    STDMETHOD(get_IsCompactBuild)(THIS_ VARIANT_BOOL FAR* vbCompactBuild) PURE;

    /* IReleaseProteus methods */
    STDMETHOD(get_WinMsi30Url)(THIS_ BSTR FAR* bstrWinMsi30Url) PURE;
    STDMETHOD(put_WinMsi30Url)(THIS_ BSTR bstrWinMsi30Url) PURE;
    STDMETHOD(get_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc FAR* nLoc) PURE;
    STDMETHOD(put_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc nLoc) PURE;
    STDMETHOD(get_LogRuntimeResults)(THIS_ VARIANT_BOOL FAR* vbLog) PURE;
    STDMETHOD(put_LogRuntimeResults)(THIS_ VARIANT_BOOL vbLog) PURE;
    STDMETHOD(get_BindToCLR)(THIS_ VARIANT_BOOL FAR* vbLog) PURE;
    STDMETHOD(put_BindToCLR)(THIS_ VARIANT_BOOL vbLog) PURE;
    STDMETHOD(get_CertPassword)(THIS_ BSTR FAR* bstrPassword) PURE;
    STDMETHOD(put_CertPassword)(THIS_ BSTR bstrPassword) PURE;

    /* IReleasePluto methods */
    STDMETHOD(get_IsDRMDisabled)(THIS_ VARIANT_BOOL FAR* pIsDRMDisabled) PURE;
    STDMETHOD(put_IsDRMDisabled)(THIS_ VARIANT_BOOL IsDRMDisabled) PURE;
    STDMETHOD(get_PublishInfo)(THIS_ IReleasePublishInfoPluto FAR* FAR* ppPublishInfo) PURE;
#endif

    /* IReleaseIbizaAtlantis methods */
    STDMETHOD(get_ASPublishProperty)(THIS_ BSTR bstrName, VARIANT FAR* pvtValue) PURE;
    STDMETHOD(put_ASPublishProperty)(THIS_ BSTR bstrName, VARIANT vtValue) PURE;
    STDMETHOD(get_ASPublishProperties)(THIS_ IReleaseASRepositoryPropertiesIbizaAtlantis FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_IReleaseIxtapa,0x2F1BA5ECL,0xFD64,0x4963,0x96,0x7A,0x63,0x9D,0x1F,0x3C,0xE1,0x85);

/* Definition of interface: IReleaseIxtapa */
#undef INTERFACE
#define INTERFACE IReleaseIxtapa

DECLARE_INTERFACE_(IReleaseIxtapa, IReleaseIbizaAtlantis)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IRelease2 methods */
    STDMETHOD(get_PackageName)(THIS_ BSTR FAR* PackageName) PURE;
    STDMETHOD(put_PackageName)(THIS_ BSTR PackageName) PURE;
    STDMETHOD(get_SupportedLanguagesUI)(THIS_ BSTR FAR* SupportedLanguagesUI) PURE;
    STDMETHOD(put_SupportedLanguagesUI)(THIS_ BSTR SupportedLanguagesUI) PURE;
    STDMETHOD(get_MsiSourceType)(THIS_ EnumMSISourceType FAR* MsiSourceType) PURE;
    STDMETHOD(put_MsiSourceType)(THIS_ EnumMSISourceType MsiSourceType) PURE;
    STDMETHOD(get_Platforms)(THIS_ BSTR FAR* Platforms) PURE;
    STDMETHOD(put_Platforms)(THIS_ BSTR Platforms) PURE;
    STDMETHOD(get_SupportedLanguagesData)(THIS_ BSTR FAR* SupportedLanguagesData) PURE;
    STDMETHOD(put_SupportedLanguagesData)(THIS_ BSTR SupportedLanguagesData) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_LanguageFiltering)(THIS_ VARIANT_BOOL FAR* LanguageFiltering) PURE;
    STDMETHOD(put_LanguageFiltering)(THIS_ VARIANT_BOOL LanguageFiltering) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_DiskSpanning)(THIS_ EnumDiskSpanning FAR* DiskSpanning) PURE;
    STDMETHOD(put_DiskSpanning)(THIS_ EnumDiskSpanning DiskSpanning) PURE;
    STDMETHOD(get_SynchMsi)(THIS_ BSTR FAR* SynchMsi) PURE;
    STDMETHOD(put_SynchMsi)(THIS_ BSTR SynchMsi) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_VersionCopyright)(THIS_ BSTR FAR* VersionCopyright) PURE;
    STDMETHOD(put_VersionCopyright)(THIS_ BSTR VersionCopyright) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_CreateReport)(THIS_ VARIANT_BOOL FAR* CreateReport) PURE;
    STDMETHOD(put_CreateReport)(THIS_ VARIANT_BOOL CreateReport) PURE;
    STDMETHOD(get_CreateLogFile)(THIS_ VARIANT_BOOL FAR* CreateLogFile) PURE;
    STDMETHOD(put_CreateLogFile)(THIS_ VARIANT_BOOL CreateLogFile) PURE;
    STDMETHOD(get_EnableLanguageDialog)(THIS_ VARIANT_BOOL FAR* EnableLanguageDialog) PURE;
    STDMETHOD(put_EnableLanguageDialog)(THIS_ VARIANT_BOOL EnableLanguageDialog) PURE;
    STDMETHOD(get_CopyMM)(THIS_ VARIANT_BOOL FAR* CopyMM) PURE;
    STDMETHOD(put_CopyMM)(THIS_ VARIANT_BOOL CopyMM) PURE;
    STDMETHOD(get_UseTestPathVariables)(THIS_ VARIANT_BOOL FAR* UseTestPathVariables) PURE;
    STDMETHOD(put_UseTestPathVariables)(THIS_ VARIANT_BOOL UseTestPathVariables) PURE;
    STDMETHOD(get_CreateAutorun)(THIS_ VARIANT_BOOL FAR* CreateAutorun) PURE;
    STDMETHOD(put_CreateAutorun)(THIS_ VARIANT_BOOL CreateAutorun) PURE;
    STDMETHOD(get_CreatePDF)(THIS_ VARIANT_BOOL FAR* CreatePDF) PURE;
    STDMETHOD(put_CreatePDF)(THIS_ VARIANT_BOOL CreatePDF) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* PasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL PasswordProtect) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* UseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL UseMyVersionInfo) PURE;
    STDMETHOD(get_SuppressWin2K)(THIS_ VARIANT_BOOL FAR* SuppressWin2K) PURE;
    STDMETHOD(put_SuppressWin2K)(THIS_ VARIANT_BOOL SuppressWin2K) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_LogicalDisks)(THIS_ ILogicalDisks FAR* FAR* pLogicalDisks) PURE;
    STDMETHOD(get_BuildLabel)(THIS_ IBuildLabel FAR* FAR* pBuildLabel) PURE;
    STDMETHOD(IsMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe, VARIANT_BOOL FAR* pvbIsMatch) PURE;
    STDMETHOD(MakeMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe) PURE;
    STDMETHOD(AddChild)(THIS_ EnumReleaseChild ercChild, long nDiskId, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(IsLanguageRequired)(THIS_ BSTR bstrLangID, VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(get_FeatureDiskID)(THIS_ BSTR bstrFeatureID, short FAR* nDiskId) PURE;
    STDMETHOD(get_FeatureCompressed)(THIS_ BSTR bstrFeatureID, VARIANT_BOOL FAR* vbCompressed) PURE;
    STDMETHOD(get_WebType)(THIS_ EnumWebType FAR* eWebType) PURE;
    STDMETHOD(put_WebType)(THIS_ EnumWebType eWebType) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* bstrWebURL) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrWebURL) PURE;
    STDMETHOD(get_WrapMsiIntoCab)(THIS_ VARIANT_BOOL FAR* bWrapMsiIntoCab) PURE;
    STDMETHOD(put_WrapMsiIntoCab)(THIS_ VARIANT_BOOL bWrapMsiIntoCab) PURE;
    STDMETHOD(get_WebCabSize)(THIS_ long FAR* WebCabSize) PURE;
    STDMETHOD(put_WebCabSize)(THIS_ long WebCabSize) PURE;
    STDMETHOD(get_GenerateOneClick)(THIS_ VARIANT_BOOL FAR* bGenerateOneClick) PURE;
    STDMETHOD(put_GenerateOneClick)(THIS_ VARIANT_BOOL bGenerateOneClick) PURE;
    STDMETHOD(get_OneClickHtmlName)(THIS_ BSTR FAR* bstrOneClickHtmlName) PURE;
    STDMETHOD(put_OneClickHtmlName)(THIS_ BSTR bstrOneClickHtmlName) PURE;
    STDMETHOD(get_OneClickCabName)(THIS_ BSTR FAR* bstrOneClickCabName) PURE;
    STDMETHOD(put_OneClickCabName)(THIS_ BSTR bstrOneClickCabName) PURE;
    STDMETHOD(get_CacheWebPkgLocally)(THIS_ VARIANT_BOOL FAR* bCacheWebPkgLocally) PURE;
    STDMETHOD(put_CacheWebPkgLocally)(THIS_ VARIANT_BOOL bCacheWebPkgLocally) PURE;
    STDMETHOD(get_WebLocalCachePath)(THIS_ BSTR FAR* bstrWebLocalCachePath) PURE;
    STDMETHOD(put_WebLocalCachePath)(THIS_ BSTR bstrWebLocalCachePath) PURE;
    STDMETHOD(get_EngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_EngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_DelayEngineReboot)(THIS_ VARIANT_BOOL FAR* bDelayEngineReboot) PURE;
    STDMETHOD(put_DelayEngineReboot)(THIS_ VARIANT_BOOL bDelayEngineReboot) PURE;
    STDMETHOD(get_Win9xMsiUrl)(THIS_ BSTR FAR* bstrWin9xMsiUrl) PURE;
    STDMETHOD(put_Win9xMsiUrl)(THIS_ BSTR bstrWin9xMsiUrl) PURE;
    STDMETHOD(get_WinNTMsiUrl)(THIS_ BSTR FAR* bstrWinNTMsiUrl) PURE;
    STDMETHOD(put_WinNTMsiUrl)(THIS_ BSTR bstrWinNTMsiUrl) PURE;
    STDMETHOD(get_ISEngineURL)(THIS_ BSTR FAR* bstrISEngineURL) PURE;
    STDMETHOD(put_ISEngineURL)(THIS_ BSTR bstrISEngineURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_ISEngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_ISEngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* bstrRootSetupFolder) PURE;
    STDMETHOD(get_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser FAR* eOCITargetBrowser) PURE;
    STDMETHOD(put_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser eOCITargetBrowser) PURE;
    STDMETHOD(get_DigitalCertificateIdNS)(THIS_ BSTR FAR* DigitalCertificateIdNS) PURE;
    STDMETHOD(put_DigitalCertificateIdNS)(THIS_ BSTR DigitalCertificateIdNS) PURE;
    STDMETHOD(get_DigitalCertificateDBaseNS)(THIS_ BSTR FAR* DigitalCertificateDBaseNS) PURE;
    STDMETHOD(put_DigitalCertificateDBaseNS)(THIS_ BSTR DigitalCertificateDBaseNS) PURE;
    STDMETHOD(get_DigitalCertificatePasswordNS)(THIS_ BSTR FAR* DigitalCertificatePasswordNS) PURE;
    STDMETHOD(put_DigitalCertificatePasswordNS)(THIS_ BSTR DigitalCertificatePasswordNS) PURE;
    STDMETHOD(get_CDBrowser)(THIS_ BSTR FAR* CDBrowser) PURE;
    STDMETHOD(put_CDBrowser)(THIS_ BSTR CDBrowser) PURE;
    STDMETHOD(get_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL FAR* bCabPerFeature) PURE;
    STDMETHOD(put_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL bCabPerFeature) PURE;
    STDMETHOD(get_DotNetBuildConfiguration)(THIS_ BSTR FAR* sDotNetBuildConfiguration) PURE;
    STDMETHOD(put_DotNetBuildConfiguration)(THIS_ BSTR sDotNetBuildConfiguration) PURE;
    STDMETHOD(get_DotNetRedistURL)(THIS_ BSTR FAR* bstrDotNetRedistURL) PURE;
    STDMETHOD(put_DotNetRedistURL)(THIS_ BSTR bstrDotNetRedistURL) PURE;
    STDMETHOD(get_DotNetRedistLocation)(THIS_ EnumEngineLocation FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetRedistLocation)(THIS_ EnumEngineLocation eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetUI)(THIS_ VARIANT_BOOL FAR* pvbUseDotNetUI) PURE;
    STDMETHOD(put_DotNetUI)(THIS_ VARIANT_BOOL vbUseDotNetUI) PURE;
    STDMETHOD(get_GenerateFileHashValues)(THIS_ VARIANT_BOOL FAR* pvbGenerateFileHashValues) PURE;
    STDMETHOD(put_GenerateFileHashValues)(THIS_ VARIANT_BOOL vbGenerateFileHashValues) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eMsiEngineVersion) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eMsiEngineVersion) PURE;
    STDMETHOD(get_MsiCommandLine)(THIS_ BSTR FAR* bstrMsiCommandLine) PURE;
    STDMETHOD(put_MsiCommandLine)(THIS_ BSTR bstrMsiCommandLine) PURE;
    STDMETHOD(get_SuppressARP)(THIS_ VARIANT_BOOL FAR* pvbSuppressARP) PURE;
    STDMETHOD(put_SuppressARP)(THIS_ VARIANT_BOOL vbSuppressARP) PURE;
    STDMETHOD(get_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL FAR* pvbShowDotNetSetupExeSelection) PURE;
    STDMETHOD(put_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL ShowDotNetSetupExeSelection) PURE;
    STDMETHOD(get_SmallInit)(THIS_ VARIANT_BOOL FAR* pvbSmallInit) PURE;
    STDMETHOD(put_SmallInit)(THIS_ VARIANT_BOOL SmallInit) PURE;
    STDMETHOD(get_ShallowFolder)(THIS_ VARIANT_BOOL FAR* pvbShallowFolder) PURE;
    STDMETHOD(put_ShallowFolder)(THIS_ VARIANT_BOOL ShallowFolder) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_DontEncrypt)(THIS_ VARIANT_BOOL FAR* pbstrDontEncrypt) PURE;
    STDMETHOD(put_DontEncrypt)(THIS_ VARIANT_BOOL bstrDontEncrypt) PURE;
    STDMETHOD(get_DotNetVersion)(THIS_ EnumDotNetVersion FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetVersion)(THIS_ EnumDotNetVersion eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetBaseLanguage)(THIS_ BSTR FAR* DotNetBaseLanguage) PURE;
    STDMETHOD(put_DotNetBaseLanguage)(THIS_ BSTR DotNetBaseLanguage) PURE;
    STDMETHOD(get_DotNetLangaugePacks)(THIS_ BSTR FAR* DotNetLangaugePacks) PURE;
    STDMETHOD(put_DotNetLangaugePacks)(THIS_ BSTR DotNetLangaugePacks) PURE;
    STDMETHOD(get_DotNetFxCmdLine)(THIS_ BSTR FAR* DotNetFxCmdLine) PURE;
    STDMETHOD(put_DotNetFxCmdLine)(THIS_ BSTR DotNetFxCmdLine) PURE;
    STDMETHOD(get_DotNetLangPackCmdLine)(THIS_ BSTR FAR* DotNetLangPackCmdLine) PURE;
    STDMETHOD(put_DotNetLangPackCmdLine)(THIS_ BSTR DotNetLangPackCmdLine) PURE;
    STDMETHOD(get_SignMedia)(THIS_ EnumSignMedia FAR* pSignMedia) PURE;
    STDMETHOD(put_SignMedia)(THIS_ EnumSignMedia SignMedia) PURE;
    STDMETHOD(get_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbDotNetOptionalIfSilent) PURE;
    STDMETHOD(put_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL bDotNetOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpCmdLine)(THIS_ BSTR FAR* pbstrJSharpCmdLine) PURE;
    STDMETHOD(put_JSharpCmdLine)(THIS_ BSTR bstrJSharpCmdLine) PURE;
    STDMETHOD(get_JSharpOptionDlg)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionDlg) PURE;
    STDMETHOD(put_JSharpOptionDlg)(THIS_ VARIANT_BOOL bJSharpOptionDlg) PURE;
    STDMETHOD(get_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionalIfSilent) PURE;
    STDMETHOD(put_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL bJSharpOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpRedistLocation)(THIS_ EnumEngineLocation FAR* eJSharpRedistLocation) PURE;
    STDMETHOD(put_JSharpRedistLocation)(THIS_ EnumEngineLocation eJSharpRedistLocation) PURE;

    /* IReleaseNeptune methods */
    STDMETHOD(get_DistributeAfterBuild)(THIS_ VARIANT_BOOL FAR* vbDistribute) PURE;
    STDMETHOD(put_DistributeAfterBuild)(THIS_ VARIANT_BOOL vbDistribute) PURE;
    STDMETHOD(get_IsCompactBuild)(THIS_ VARIANT_BOOL FAR* vbCompactBuild) PURE;

    /* IReleaseProteus methods */
    STDMETHOD(get_WinMsi30Url)(THIS_ BSTR FAR* bstrWinMsi30Url) PURE;
    STDMETHOD(put_WinMsi30Url)(THIS_ BSTR bstrWinMsi30Url) PURE;
    STDMETHOD(get_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc FAR* nLoc) PURE;
    STDMETHOD(put_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc nLoc) PURE;
    STDMETHOD(get_LogRuntimeResults)(THIS_ VARIANT_BOOL FAR* vbLog) PURE;
    STDMETHOD(put_LogRuntimeResults)(THIS_ VARIANT_BOOL vbLog) PURE;
    STDMETHOD(get_BindToCLR)(THIS_ VARIANT_BOOL FAR* vbLog) PURE;
    STDMETHOD(put_BindToCLR)(THIS_ VARIANT_BOOL vbLog) PURE;
    STDMETHOD(get_CertPassword)(THIS_ BSTR FAR* bstrPassword) PURE;
    STDMETHOD(put_CertPassword)(THIS_ BSTR bstrPassword) PURE;

    /* IReleasePluto methods */
    STDMETHOD(get_IsDRMDisabled)(THIS_ VARIANT_BOOL FAR* pIsDRMDisabled) PURE;
    STDMETHOD(put_IsDRMDisabled)(THIS_ VARIANT_BOOL IsDRMDisabled) PURE;
    STDMETHOD(get_PublishInfo)(THIS_ IReleasePublishInfoPluto FAR* FAR* ppPublishInfo) PURE;

    /* IReleaseIbizaAtlantis methods */
    STDMETHOD(get_ASPublishProperty)(THIS_ BSTR bstrName, VARIANT FAR* pvtValue) PURE;
    STDMETHOD(put_ASPublishProperty)(THIS_ BSTR bstrName, VARIANT vtValue) PURE;
    STDMETHOD(get_ASPublishProperties)(THIS_ IReleaseASRepositoryPropertiesIbizaAtlantis FAR* FAR* ppVal) PURE;
#endif

    /* IReleaseIxtapa methods */
    STDMETHOD(get_DotNetDelayReboot)(THIS_ VARIANT_BOOL FAR* pvbRebootDelayed) PURE;
    STDMETHOD(put_DotNetDelayReboot)(THIS_ VARIANT_BOOL vbDelayReboot) PURE;
    STDMETHOD(get_ValidateDIMs)(THIS_ VARIANT_BOOL FAR* pvbValidateDIMs) PURE;
    STDMETHOD(put_ValidateDIMs)(THIS_ VARIANT_BOOL vbValidateDIMs) PURE;
};

DEFINE_GUID(IID_IReleaseIndore,0xD29A5DC8L,0x6DCF,0x42C5,0x87,0xB9,0x20,0x84,0x38,0xF6,0xEE,0xA3);

/* Definition of interface: IReleaseIndore */
#undef INTERFACE
#define INTERFACE IReleaseIndore

DECLARE_INTERFACE_(IReleaseIndore, IReleaseIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IRelease2 methods */
    STDMETHOD(get_PackageName)(THIS_ BSTR FAR* PackageName) PURE;
    STDMETHOD(put_PackageName)(THIS_ BSTR PackageName) PURE;
    STDMETHOD(get_SupportedLanguagesUI)(THIS_ BSTR FAR* SupportedLanguagesUI) PURE;
    STDMETHOD(put_SupportedLanguagesUI)(THIS_ BSTR SupportedLanguagesUI) PURE;
    STDMETHOD(get_MsiSourceType)(THIS_ EnumMSISourceType FAR* MsiSourceType) PURE;
    STDMETHOD(put_MsiSourceType)(THIS_ EnumMSISourceType MsiSourceType) PURE;
    STDMETHOD(get_Platforms)(THIS_ BSTR FAR* Platforms) PURE;
    STDMETHOD(put_Platforms)(THIS_ BSTR Platforms) PURE;
    STDMETHOD(get_SupportedLanguagesData)(THIS_ BSTR FAR* SupportedLanguagesData) PURE;
    STDMETHOD(put_SupportedLanguagesData)(THIS_ BSTR SupportedLanguagesData) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_LanguageFiltering)(THIS_ VARIANT_BOOL FAR* LanguageFiltering) PURE;
    STDMETHOD(put_LanguageFiltering)(THIS_ VARIANT_BOOL LanguageFiltering) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_DiskSpanning)(THIS_ EnumDiskSpanning FAR* DiskSpanning) PURE;
    STDMETHOD(put_DiskSpanning)(THIS_ EnumDiskSpanning DiskSpanning) PURE;
    STDMETHOD(get_SynchMsi)(THIS_ BSTR FAR* SynchMsi) PURE;
    STDMETHOD(put_SynchMsi)(THIS_ BSTR SynchMsi) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_VersionCopyright)(THIS_ BSTR FAR* VersionCopyright) PURE;
    STDMETHOD(put_VersionCopyright)(THIS_ BSTR VersionCopyright) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_CreateReport)(THIS_ VARIANT_BOOL FAR* CreateReport) PURE;
    STDMETHOD(put_CreateReport)(THIS_ VARIANT_BOOL CreateReport) PURE;
    STDMETHOD(get_CreateLogFile)(THIS_ VARIANT_BOOL FAR* CreateLogFile) PURE;
    STDMETHOD(put_CreateLogFile)(THIS_ VARIANT_BOOL CreateLogFile) PURE;
    STDMETHOD(get_EnableLanguageDialog)(THIS_ VARIANT_BOOL FAR* EnableLanguageDialog) PURE;
    STDMETHOD(put_EnableLanguageDialog)(THIS_ VARIANT_BOOL EnableLanguageDialog) PURE;
    STDMETHOD(get_CopyMM)(THIS_ VARIANT_BOOL FAR* CopyMM) PURE;
    STDMETHOD(put_CopyMM)(THIS_ VARIANT_BOOL CopyMM) PURE;
    STDMETHOD(get_UseTestPathVariables)(THIS_ VARIANT_BOOL FAR* UseTestPathVariables) PURE;
    STDMETHOD(put_UseTestPathVariables)(THIS_ VARIANT_BOOL UseTestPathVariables) PURE;
    STDMETHOD(get_CreateAutorun)(THIS_ VARIANT_BOOL FAR* CreateAutorun) PURE;
    STDMETHOD(put_CreateAutorun)(THIS_ VARIANT_BOOL CreateAutorun) PURE;
    STDMETHOD(get_CreatePDF)(THIS_ VARIANT_BOOL FAR* CreatePDF) PURE;
    STDMETHOD(put_CreatePDF)(THIS_ VARIANT_BOOL CreatePDF) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* PasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL PasswordProtect) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* UseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL UseMyVersionInfo) PURE;
    STDMETHOD(get_SuppressWin2K)(THIS_ VARIANT_BOOL FAR* SuppressWin2K) PURE;
    STDMETHOD(put_SuppressWin2K)(THIS_ VARIANT_BOOL SuppressWin2K) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_LogicalDisks)(THIS_ ILogicalDisks FAR* FAR* pLogicalDisks) PURE;
    STDMETHOD(get_BuildLabel)(THIS_ IBuildLabel FAR* FAR* pBuildLabel) PURE;
    STDMETHOD(IsMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe, VARIANT_BOOL FAR* pvbIsMatch) PURE;
    STDMETHOD(MakeMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe) PURE;
    STDMETHOD(AddChild)(THIS_ EnumReleaseChild ercChild, long nDiskId, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(IsLanguageRequired)(THIS_ BSTR bstrLangID, VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(get_FeatureDiskID)(THIS_ BSTR bstrFeatureID, short FAR* nDiskId) PURE;
    STDMETHOD(get_FeatureCompressed)(THIS_ BSTR bstrFeatureID, VARIANT_BOOL FAR* vbCompressed) PURE;
    STDMETHOD(get_WebType)(THIS_ EnumWebType FAR* eWebType) PURE;
    STDMETHOD(put_WebType)(THIS_ EnumWebType eWebType) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* bstrWebURL) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrWebURL) PURE;
    STDMETHOD(get_WrapMsiIntoCab)(THIS_ VARIANT_BOOL FAR* bWrapMsiIntoCab) PURE;
    STDMETHOD(put_WrapMsiIntoCab)(THIS_ VARIANT_BOOL bWrapMsiIntoCab) PURE;
    STDMETHOD(get_WebCabSize)(THIS_ long FAR* WebCabSize) PURE;
    STDMETHOD(put_WebCabSize)(THIS_ long WebCabSize) PURE;
    STDMETHOD(get_GenerateOneClick)(THIS_ VARIANT_BOOL FAR* bGenerateOneClick) PURE;
    STDMETHOD(put_GenerateOneClick)(THIS_ VARIANT_BOOL bGenerateOneClick) PURE;
    STDMETHOD(get_OneClickHtmlName)(THIS_ BSTR FAR* bstrOneClickHtmlName) PURE;
    STDMETHOD(put_OneClickHtmlName)(THIS_ BSTR bstrOneClickHtmlName) PURE;
    STDMETHOD(get_OneClickCabName)(THIS_ BSTR FAR* bstrOneClickCabName) PURE;
    STDMETHOD(put_OneClickCabName)(THIS_ BSTR bstrOneClickCabName) PURE;
    STDMETHOD(get_CacheWebPkgLocally)(THIS_ VARIANT_BOOL FAR* bCacheWebPkgLocally) PURE;
    STDMETHOD(put_CacheWebPkgLocally)(THIS_ VARIANT_BOOL bCacheWebPkgLocally) PURE;
    STDMETHOD(get_WebLocalCachePath)(THIS_ BSTR FAR* bstrWebLocalCachePath) PURE;
    STDMETHOD(put_WebLocalCachePath)(THIS_ BSTR bstrWebLocalCachePath) PURE;
    STDMETHOD(get_EngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_EngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_DelayEngineReboot)(THIS_ VARIANT_BOOL FAR* bDelayEngineReboot) PURE;
    STDMETHOD(put_DelayEngineReboot)(THIS_ VARIANT_BOOL bDelayEngineReboot) PURE;
    STDMETHOD(get_Win9xMsiUrl)(THIS_ BSTR FAR* bstrWin9xMsiUrl) PURE;
    STDMETHOD(put_Win9xMsiUrl)(THIS_ BSTR bstrWin9xMsiUrl) PURE;
    STDMETHOD(get_WinNTMsiUrl)(THIS_ BSTR FAR* bstrWinNTMsiUrl) PURE;
    STDMETHOD(put_WinNTMsiUrl)(THIS_ BSTR bstrWinNTMsiUrl) PURE;
    STDMETHOD(get_ISEngineURL)(THIS_ BSTR FAR* bstrISEngineURL) PURE;
    STDMETHOD(put_ISEngineURL)(THIS_ BSTR bstrISEngineURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_ISEngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_ISEngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* bstrRootSetupFolder) PURE;
    STDMETHOD(get_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser FAR* eOCITargetBrowser) PURE;
    STDMETHOD(put_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser eOCITargetBrowser) PURE;
    STDMETHOD(get_DigitalCertificateIdNS)(THIS_ BSTR FAR* DigitalCertificateIdNS) PURE;
    STDMETHOD(put_DigitalCertificateIdNS)(THIS_ BSTR DigitalCertificateIdNS) PURE;
    STDMETHOD(get_DigitalCertificateDBaseNS)(THIS_ BSTR FAR* DigitalCertificateDBaseNS) PURE;
    STDMETHOD(put_DigitalCertificateDBaseNS)(THIS_ BSTR DigitalCertificateDBaseNS) PURE;
    STDMETHOD(get_DigitalCertificatePasswordNS)(THIS_ BSTR FAR* DigitalCertificatePasswordNS) PURE;
    STDMETHOD(put_DigitalCertificatePasswordNS)(THIS_ BSTR DigitalCertificatePasswordNS) PURE;
    STDMETHOD(get_CDBrowser)(THIS_ BSTR FAR* CDBrowser) PURE;
    STDMETHOD(put_CDBrowser)(THIS_ BSTR CDBrowser) PURE;
    STDMETHOD(get_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL FAR* bCabPerFeature) PURE;
    STDMETHOD(put_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL bCabPerFeature) PURE;
    STDMETHOD(get_DotNetBuildConfiguration)(THIS_ BSTR FAR* sDotNetBuildConfiguration) PURE;
    STDMETHOD(put_DotNetBuildConfiguration)(THIS_ BSTR sDotNetBuildConfiguration) PURE;
    STDMETHOD(get_DotNetRedistURL)(THIS_ BSTR FAR* bstrDotNetRedistURL) PURE;
    STDMETHOD(put_DotNetRedistURL)(THIS_ BSTR bstrDotNetRedistURL) PURE;
    STDMETHOD(get_DotNetRedistLocation)(THIS_ EnumEngineLocation FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetRedistLocation)(THIS_ EnumEngineLocation eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetUI)(THIS_ VARIANT_BOOL FAR* pvbUseDotNetUI) PURE;
    STDMETHOD(put_DotNetUI)(THIS_ VARIANT_BOOL vbUseDotNetUI) PURE;
    STDMETHOD(get_GenerateFileHashValues)(THIS_ VARIANT_BOOL FAR* pvbGenerateFileHashValues) PURE;
    STDMETHOD(put_GenerateFileHashValues)(THIS_ VARIANT_BOOL vbGenerateFileHashValues) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eMsiEngineVersion) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eMsiEngineVersion) PURE;
    STDMETHOD(get_MsiCommandLine)(THIS_ BSTR FAR* bstrMsiCommandLine) PURE;
    STDMETHOD(put_MsiCommandLine)(THIS_ BSTR bstrMsiCommandLine) PURE;
    STDMETHOD(get_SuppressARP)(THIS_ VARIANT_BOOL FAR* pvbSuppressARP) PURE;
    STDMETHOD(put_SuppressARP)(THIS_ VARIANT_BOOL vbSuppressARP) PURE;
    STDMETHOD(get_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL FAR* pvbShowDotNetSetupExeSelection) PURE;
    STDMETHOD(put_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL ShowDotNetSetupExeSelection) PURE;
    STDMETHOD(get_SmallInit)(THIS_ VARIANT_BOOL FAR* pvbSmallInit) PURE;
    STDMETHOD(put_SmallInit)(THIS_ VARIANT_BOOL SmallInit) PURE;
    STDMETHOD(get_ShallowFolder)(THIS_ VARIANT_BOOL FAR* pvbShallowFolder) PURE;
    STDMETHOD(put_ShallowFolder)(THIS_ VARIANT_BOOL ShallowFolder) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_DontEncrypt)(THIS_ VARIANT_BOOL FAR* pbstrDontEncrypt) PURE;
    STDMETHOD(put_DontEncrypt)(THIS_ VARIANT_BOOL bstrDontEncrypt) PURE;
    STDMETHOD(get_DotNetVersion)(THIS_ EnumDotNetVersion FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetVersion)(THIS_ EnumDotNetVersion eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetBaseLanguage)(THIS_ BSTR FAR* DotNetBaseLanguage) PURE;
    STDMETHOD(put_DotNetBaseLanguage)(THIS_ BSTR DotNetBaseLanguage) PURE;
    STDMETHOD(get_DotNetLangaugePacks)(THIS_ BSTR FAR* DotNetLangaugePacks) PURE;
    STDMETHOD(put_DotNetLangaugePacks)(THIS_ BSTR DotNetLangaugePacks) PURE;
    STDMETHOD(get_DotNetFxCmdLine)(THIS_ BSTR FAR* DotNetFxCmdLine) PURE;
    STDMETHOD(put_DotNetFxCmdLine)(THIS_ BSTR DotNetFxCmdLine) PURE;
    STDMETHOD(get_DotNetLangPackCmdLine)(THIS_ BSTR FAR* DotNetLangPackCmdLine) PURE;
    STDMETHOD(put_DotNetLangPackCmdLine)(THIS_ BSTR DotNetLangPackCmdLine) PURE;
    STDMETHOD(get_SignMedia)(THIS_ EnumSignMedia FAR* pSignMedia) PURE;
    STDMETHOD(put_SignMedia)(THIS_ EnumSignMedia SignMedia) PURE;
    STDMETHOD(get_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbDotNetOptionalIfSilent) PURE;
    STDMETHOD(put_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL bDotNetOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpCmdLine)(THIS_ BSTR FAR* pbstrJSharpCmdLine) PURE;
    STDMETHOD(put_JSharpCmdLine)(THIS_ BSTR bstrJSharpCmdLine) PURE;
    STDMETHOD(get_JSharpOptionDlg)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionDlg) PURE;
    STDMETHOD(put_JSharpOptionDlg)(THIS_ VARIANT_BOOL bJSharpOptionDlg) PURE;
    STDMETHOD(get_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionalIfSilent) PURE;
    STDMETHOD(put_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL bJSharpOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpRedistLocation)(THIS_ EnumEngineLocation FAR* eJSharpRedistLocation) PURE;
    STDMETHOD(put_JSharpRedistLocation)(THIS_ EnumEngineLocation eJSharpRedistLocation) PURE;

    /* IReleaseNeptune methods */
    STDMETHOD(get_DistributeAfterBuild)(THIS_ VARIANT_BOOL FAR* vbDistribute) PURE;
    STDMETHOD(put_DistributeAfterBuild)(THIS_ VARIANT_BOOL vbDistribute) PURE;
    STDMETHOD(get_IsCompactBuild)(THIS_ VARIANT_BOOL FAR* vbCompactBuild) PURE;

    /* IReleaseProteus methods */
    STDMETHOD(get_WinMsi30Url)(THIS_ BSTR FAR* bstrWinMsi30Url) PURE;
    STDMETHOD(put_WinMsi30Url)(THIS_ BSTR bstrWinMsi30Url) PURE;
    STDMETHOD(get_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc FAR* nLoc) PURE;
    STDMETHOD(put_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc nLoc) PURE;
    STDMETHOD(get_LogRuntimeResults)(THIS_ VARIANT_BOOL FAR* vbLog) PURE;
    STDMETHOD(put_LogRuntimeResults)(THIS_ VARIANT_BOOL vbLog) PURE;
    STDMETHOD(get_BindToCLR)(THIS_ VARIANT_BOOL FAR* vbLog) PURE;
    STDMETHOD(put_BindToCLR)(THIS_ VARIANT_BOOL vbLog) PURE;
    STDMETHOD(get_CertPassword)(THIS_ BSTR FAR* bstrPassword) PURE;
    STDMETHOD(put_CertPassword)(THIS_ BSTR bstrPassword) PURE;

    /* IReleasePluto methods */
    STDMETHOD(get_IsDRMDisabled)(THIS_ VARIANT_BOOL FAR* pIsDRMDisabled) PURE;
    STDMETHOD(put_IsDRMDisabled)(THIS_ VARIANT_BOOL IsDRMDisabled) PURE;
    STDMETHOD(get_PublishInfo)(THIS_ IReleasePublishInfoPluto FAR* FAR* ppPublishInfo) PURE;

    /* IReleaseIbizaAtlantis methods */
    STDMETHOD(get_ASPublishProperty)(THIS_ BSTR bstrName, VARIANT FAR* pvtValue) PURE;
    STDMETHOD(put_ASPublishProperty)(THIS_ BSTR bstrName, VARIANT vtValue) PURE;
    STDMETHOD(get_ASPublishProperties)(THIS_ IReleaseASRepositoryPropertiesIbizaAtlantis FAR* FAR* ppVal) PURE;

    /* IReleaseIxtapa methods */
    STDMETHOD(get_DotNetDelayReboot)(THIS_ VARIANT_BOOL FAR* pvbRebootDelayed) PURE;
    STDMETHOD(put_DotNetDelayReboot)(THIS_ VARIANT_BOOL vbDelayReboot) PURE;
    STDMETHOD(get_ValidateDIMs)(THIS_ VARIANT_BOOL FAR* pvbValidateDIMs) PURE;
    STDMETHOD(put_ValidateDIMs)(THIS_ VARIANT_BOOL vbValidateDIMs) PURE;
#endif

    /* IReleaseIndore methods */
    STDMETHOD(get_LauncherPrivileges)(THIS_ EnumRequiredExecutionLevel FAR* erelLevel) PURE;
    STDMETHOD(put_LauncherPrivileges)(THIS_ EnumRequiredExecutionLevel erelLevel) PURE;
};

typedef enum EnumReleaseProperty {
    erpCertificateSignFiles,
    erpCertificateSignFilesInclude,
    erpCertificateSignFilesExclude,
    erpCertificateSignSignedFiles,
    erpKeepUnusedDirectories,
    erpMinimumInitTime,
    erpCertificateSignInPlace,
    erpSetupLauncherType,
    erpDatabaseCodePage,
    erpCabCompressionType,
    erpSetupIcon,
    erpSetupExeDescr,
    erpSetupExeExpireDate,
    erpSetupExeExpireMessage,
    erpBuildEventPreBuild,
    erpBuildEventPreComp,
    erpBuildEventPostBuild,
    erpPathVarOverrides,
    erpVMSettingsConfigName,
    erpVMSettingsMachineName,
    erpVMSettingsMachineUserName,
    erpVMSettingsMachinePassword,
    erpVMSettingsMachineCopyPath,
    erpVMSettingsStagePostBuild,
    erpVMSnapShot,
    erpSignatureDescription
} EnumReleaseProperty;

DEFINE_GUID(IID_IReleaseIronwood,0x99066988L,0x893F,0x47F4,0xA4,0x2F,0xF2,0x1A,0xC9,0x7A,0xE0,0x26);

/* Definition of interface: IReleaseIronwood */
#undef INTERFACE
#define INTERFACE IReleaseIronwood

DECLARE_INTERFACE_(IReleaseIronwood, IReleaseIndore)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IRelease2 methods */
    STDMETHOD(get_PackageName)(THIS_ BSTR FAR* PackageName) PURE;
    STDMETHOD(put_PackageName)(THIS_ BSTR PackageName) PURE;
    STDMETHOD(get_SupportedLanguagesUI)(THIS_ BSTR FAR* SupportedLanguagesUI) PURE;
    STDMETHOD(put_SupportedLanguagesUI)(THIS_ BSTR SupportedLanguagesUI) PURE;
    STDMETHOD(get_MsiSourceType)(THIS_ EnumMSISourceType FAR* MsiSourceType) PURE;
    STDMETHOD(put_MsiSourceType)(THIS_ EnumMSISourceType MsiSourceType) PURE;
    STDMETHOD(get_Platforms)(THIS_ BSTR FAR* Platforms) PURE;
    STDMETHOD(put_Platforms)(THIS_ BSTR Platforms) PURE;
    STDMETHOD(get_SupportedLanguagesData)(THIS_ BSTR FAR* SupportedLanguagesData) PURE;
    STDMETHOD(put_SupportedLanguagesData)(THIS_ BSTR SupportedLanguagesData) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_LanguageFiltering)(THIS_ VARIANT_BOOL FAR* LanguageFiltering) PURE;
    STDMETHOD(put_LanguageFiltering)(THIS_ VARIANT_BOOL LanguageFiltering) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_DiskSpanning)(THIS_ EnumDiskSpanning FAR* DiskSpanning) PURE;
    STDMETHOD(put_DiskSpanning)(THIS_ EnumDiskSpanning DiskSpanning) PURE;
    STDMETHOD(get_SynchMsi)(THIS_ BSTR FAR* SynchMsi) PURE;
    STDMETHOD(put_SynchMsi)(THIS_ BSTR SynchMsi) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_VersionCopyright)(THIS_ BSTR FAR* VersionCopyright) PURE;
    STDMETHOD(put_VersionCopyright)(THIS_ BSTR VersionCopyright) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_CreateReport)(THIS_ VARIANT_BOOL FAR* CreateReport) PURE;
    STDMETHOD(put_CreateReport)(THIS_ VARIANT_BOOL CreateReport) PURE;
    STDMETHOD(get_CreateLogFile)(THIS_ VARIANT_BOOL FAR* CreateLogFile) PURE;
    STDMETHOD(put_CreateLogFile)(THIS_ VARIANT_BOOL CreateLogFile) PURE;
    STDMETHOD(get_EnableLanguageDialog)(THIS_ VARIANT_BOOL FAR* EnableLanguageDialog) PURE;
    STDMETHOD(put_EnableLanguageDialog)(THIS_ VARIANT_BOOL EnableLanguageDialog) PURE;
    STDMETHOD(get_CopyMM)(THIS_ VARIANT_BOOL FAR* CopyMM) PURE;
    STDMETHOD(put_CopyMM)(THIS_ VARIANT_BOOL CopyMM) PURE;
    STDMETHOD(get_UseTestPathVariables)(THIS_ VARIANT_BOOL FAR* UseTestPathVariables) PURE;
    STDMETHOD(put_UseTestPathVariables)(THIS_ VARIANT_BOOL UseTestPathVariables) PURE;
    STDMETHOD(get_CreateAutorun)(THIS_ VARIANT_BOOL FAR* CreateAutorun) PURE;
    STDMETHOD(put_CreateAutorun)(THIS_ VARIANT_BOOL CreateAutorun) PURE;
    STDMETHOD(get_CreatePDF)(THIS_ VARIANT_BOOL FAR* CreatePDF) PURE;
    STDMETHOD(put_CreatePDF)(THIS_ VARIANT_BOOL CreatePDF) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* PasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL PasswordProtect) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* UseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL UseMyVersionInfo) PURE;
    STDMETHOD(get_SuppressWin2K)(THIS_ VARIANT_BOOL FAR* SuppressWin2K) PURE;
    STDMETHOD(put_SuppressWin2K)(THIS_ VARIANT_BOOL SuppressWin2K) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_LogicalDisks)(THIS_ ILogicalDisks FAR* FAR* pLogicalDisks) PURE;
    STDMETHOD(get_BuildLabel)(THIS_ IBuildLabel FAR* FAR* pBuildLabel) PURE;
    STDMETHOD(IsMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe, VARIANT_BOOL FAR* pvbIsMatch) PURE;
    STDMETHOD(MakeMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe) PURE;
    STDMETHOD(AddChild)(THIS_ EnumReleaseChild ercChild, long nDiskId, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(IsLanguageRequired)(THIS_ BSTR bstrLangID, VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(get_FeatureDiskID)(THIS_ BSTR bstrFeatureID, short FAR* nDiskId) PURE;
    STDMETHOD(get_FeatureCompressed)(THIS_ BSTR bstrFeatureID, VARIANT_BOOL FAR* vbCompressed) PURE;
    STDMETHOD(get_WebType)(THIS_ EnumWebType FAR* eWebType) PURE;
    STDMETHOD(put_WebType)(THIS_ EnumWebType eWebType) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* bstrWebURL) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrWebURL) PURE;
    STDMETHOD(get_WrapMsiIntoCab)(THIS_ VARIANT_BOOL FAR* bWrapMsiIntoCab) PURE;
    STDMETHOD(put_WrapMsiIntoCab)(THIS_ VARIANT_BOOL bWrapMsiIntoCab) PURE;
    STDMETHOD(get_WebCabSize)(THIS_ long FAR* WebCabSize) PURE;
    STDMETHOD(put_WebCabSize)(THIS_ long WebCabSize) PURE;
    STDMETHOD(get_GenerateOneClick)(THIS_ VARIANT_BOOL FAR* bGenerateOneClick) PURE;
    STDMETHOD(put_GenerateOneClick)(THIS_ VARIANT_BOOL bGenerateOneClick) PURE;
    STDMETHOD(get_OneClickHtmlName)(THIS_ BSTR FAR* bstrOneClickHtmlName) PURE;
    STDMETHOD(put_OneClickHtmlName)(THIS_ BSTR bstrOneClickHtmlName) PURE;
    STDMETHOD(get_OneClickCabName)(THIS_ BSTR FAR* bstrOneClickCabName) PURE;
    STDMETHOD(put_OneClickCabName)(THIS_ BSTR bstrOneClickCabName) PURE;
    STDMETHOD(get_CacheWebPkgLocally)(THIS_ VARIANT_BOOL FAR* bCacheWebPkgLocally) PURE;
    STDMETHOD(put_CacheWebPkgLocally)(THIS_ VARIANT_BOOL bCacheWebPkgLocally) PURE;
    STDMETHOD(get_WebLocalCachePath)(THIS_ BSTR FAR* bstrWebLocalCachePath) PURE;
    STDMETHOD(put_WebLocalCachePath)(THIS_ BSTR bstrWebLocalCachePath) PURE;
    STDMETHOD(get_EngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_EngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_DelayEngineReboot)(THIS_ VARIANT_BOOL FAR* bDelayEngineReboot) PURE;
    STDMETHOD(put_DelayEngineReboot)(THIS_ VARIANT_BOOL bDelayEngineReboot) PURE;
    STDMETHOD(get_Win9xMsiUrl)(THIS_ BSTR FAR* bstrWin9xMsiUrl) PURE;
    STDMETHOD(put_Win9xMsiUrl)(THIS_ BSTR bstrWin9xMsiUrl) PURE;
    STDMETHOD(get_WinNTMsiUrl)(THIS_ BSTR FAR* bstrWinNTMsiUrl) PURE;
    STDMETHOD(put_WinNTMsiUrl)(THIS_ BSTR bstrWinNTMsiUrl) PURE;
    STDMETHOD(get_ISEngineURL)(THIS_ BSTR FAR* bstrISEngineURL) PURE;
    STDMETHOD(put_ISEngineURL)(THIS_ BSTR bstrISEngineURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_ISEngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_ISEngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* bstrRootSetupFolder) PURE;
    STDMETHOD(get_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser FAR* eOCITargetBrowser) PURE;
    STDMETHOD(put_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser eOCITargetBrowser) PURE;
    STDMETHOD(get_DigitalCertificateIdNS)(THIS_ BSTR FAR* DigitalCertificateIdNS) PURE;
    STDMETHOD(put_DigitalCertificateIdNS)(THIS_ BSTR DigitalCertificateIdNS) PURE;
    STDMETHOD(get_DigitalCertificateDBaseNS)(THIS_ BSTR FAR* DigitalCertificateDBaseNS) PURE;
    STDMETHOD(put_DigitalCertificateDBaseNS)(THIS_ BSTR DigitalCertificateDBaseNS) PURE;
    STDMETHOD(get_DigitalCertificatePasswordNS)(THIS_ BSTR FAR* DigitalCertificatePasswordNS) PURE;
    STDMETHOD(put_DigitalCertificatePasswordNS)(THIS_ BSTR DigitalCertificatePasswordNS) PURE;
    STDMETHOD(get_CDBrowser)(THIS_ BSTR FAR* CDBrowser) PURE;
    STDMETHOD(put_CDBrowser)(THIS_ BSTR CDBrowser) PURE;
    STDMETHOD(get_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL FAR* bCabPerFeature) PURE;
    STDMETHOD(put_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL bCabPerFeature) PURE;
    STDMETHOD(get_DotNetBuildConfiguration)(THIS_ BSTR FAR* sDotNetBuildConfiguration) PURE;
    STDMETHOD(put_DotNetBuildConfiguration)(THIS_ BSTR sDotNetBuildConfiguration) PURE;
    STDMETHOD(get_DotNetRedistURL)(THIS_ BSTR FAR* bstrDotNetRedistURL) PURE;
    STDMETHOD(put_DotNetRedistURL)(THIS_ BSTR bstrDotNetRedistURL) PURE;
    STDMETHOD(get_DotNetRedistLocation)(THIS_ EnumEngineLocation FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetRedistLocation)(THIS_ EnumEngineLocation eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetUI)(THIS_ VARIANT_BOOL FAR* pvbUseDotNetUI) PURE;
    STDMETHOD(put_DotNetUI)(THIS_ VARIANT_BOOL vbUseDotNetUI) PURE;
    STDMETHOD(get_GenerateFileHashValues)(THIS_ VARIANT_BOOL FAR* pvbGenerateFileHashValues) PURE;
    STDMETHOD(put_GenerateFileHashValues)(THIS_ VARIANT_BOOL vbGenerateFileHashValues) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eMsiEngineVersion) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eMsiEngineVersion) PURE;
    STDMETHOD(get_MsiCommandLine)(THIS_ BSTR FAR* bstrMsiCommandLine) PURE;
    STDMETHOD(put_MsiCommandLine)(THIS_ BSTR bstrMsiCommandLine) PURE;
    STDMETHOD(get_SuppressARP)(THIS_ VARIANT_BOOL FAR* pvbSuppressARP) PURE;
    STDMETHOD(put_SuppressARP)(THIS_ VARIANT_BOOL vbSuppressARP) PURE;
    STDMETHOD(get_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL FAR* pvbShowDotNetSetupExeSelection) PURE;
    STDMETHOD(put_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL ShowDotNetSetupExeSelection) PURE;
    STDMETHOD(get_SmallInit)(THIS_ VARIANT_BOOL FAR* pvbSmallInit) PURE;
    STDMETHOD(put_SmallInit)(THIS_ VARIANT_BOOL SmallInit) PURE;
    STDMETHOD(get_ShallowFolder)(THIS_ VARIANT_BOOL FAR* pvbShallowFolder) PURE;
    STDMETHOD(put_ShallowFolder)(THIS_ VARIANT_BOOL ShallowFolder) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_DontEncrypt)(THIS_ VARIANT_BOOL FAR* pbstrDontEncrypt) PURE;
    STDMETHOD(put_DontEncrypt)(THIS_ VARIANT_BOOL bstrDontEncrypt) PURE;
    STDMETHOD(get_DotNetVersion)(THIS_ EnumDotNetVersion FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetVersion)(THIS_ EnumDotNetVersion eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetBaseLanguage)(THIS_ BSTR FAR* DotNetBaseLanguage) PURE;
    STDMETHOD(put_DotNetBaseLanguage)(THIS_ BSTR DotNetBaseLanguage) PURE;
    STDMETHOD(get_DotNetLangaugePacks)(THIS_ BSTR FAR* DotNetLangaugePacks) PURE;
    STDMETHOD(put_DotNetLangaugePacks)(THIS_ BSTR DotNetLangaugePacks) PURE;
    STDMETHOD(get_DotNetFxCmdLine)(THIS_ BSTR FAR* DotNetFxCmdLine) PURE;
    STDMETHOD(put_DotNetFxCmdLine)(THIS_ BSTR DotNetFxCmdLine) PURE;
    STDMETHOD(get_DotNetLangPackCmdLine)(THIS_ BSTR FAR* DotNetLangPackCmdLine) PURE;
    STDMETHOD(put_DotNetLangPackCmdLine)(THIS_ BSTR DotNetLangPackCmdLine) PURE;
    STDMETHOD(get_SignMedia)(THIS_ EnumSignMedia FAR* pSignMedia) PURE;
    STDMETHOD(put_SignMedia)(THIS_ EnumSignMedia SignMedia) PURE;
    STDMETHOD(get_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbDotNetOptionalIfSilent) PURE;
    STDMETHOD(put_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL bDotNetOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpCmdLine)(THIS_ BSTR FAR* pbstrJSharpCmdLine) PURE;
    STDMETHOD(put_JSharpCmdLine)(THIS_ BSTR bstrJSharpCmdLine) PURE;
    STDMETHOD(get_JSharpOptionDlg)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionDlg) PURE;
    STDMETHOD(put_JSharpOptionDlg)(THIS_ VARIANT_BOOL bJSharpOptionDlg) PURE;
    STDMETHOD(get_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionalIfSilent) PURE;
    STDMETHOD(put_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL bJSharpOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpRedistLocation)(THIS_ EnumEngineLocation FAR* eJSharpRedistLocation) PURE;
    STDMETHOD(put_JSharpRedistLocation)(THIS_ EnumEngineLocation eJSharpRedistLocation) PURE;

    /* IReleaseNeptune methods */
    STDMETHOD(get_DistributeAfterBuild)(THIS_ VARIANT_BOOL FAR* vbDistribute) PURE;
    STDMETHOD(put_DistributeAfterBuild)(THIS_ VARIANT_BOOL vbDistribute) PURE;
    STDMETHOD(get_IsCompactBuild)(THIS_ VARIANT_BOOL FAR* vbCompactBuild) PURE;

    /* IReleaseProteus methods */
    STDMETHOD(get_WinMsi30Url)(THIS_ BSTR FAR* bstrWinMsi30Url) PURE;
    STDMETHOD(put_WinMsi30Url)(THIS_ BSTR bstrWinMsi30Url) PURE;
    STDMETHOD(get_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc FAR* nLoc) PURE;
    STDMETHOD(put_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc nLoc) PURE;
    STDMETHOD(get_LogRuntimeResults)(THIS_ VARIANT_BOOL FAR* vbLog) PURE;
    STDMETHOD(put_LogRuntimeResults)(THIS_ VARIANT_BOOL vbLog) PURE;
    STDMETHOD(get_BindToCLR)(THIS_ VARIANT_BOOL FAR* vbLog) PURE;
    STDMETHOD(put_BindToCLR)(THIS_ VARIANT_BOOL vbLog) PURE;
    STDMETHOD(get_CertPassword)(THIS_ BSTR FAR* bstrPassword) PURE;
    STDMETHOD(put_CertPassword)(THIS_ BSTR bstrPassword) PURE;

    /* IReleasePluto methods */
    STDMETHOD(get_IsDRMDisabled)(THIS_ VARIANT_BOOL FAR* pIsDRMDisabled) PURE;
    STDMETHOD(put_IsDRMDisabled)(THIS_ VARIANT_BOOL IsDRMDisabled) PURE;
    STDMETHOD(get_PublishInfo)(THIS_ IReleasePublishInfoPluto FAR* FAR* ppPublishInfo) PURE;

    /* IReleaseIbizaAtlantis methods */
    STDMETHOD(get_ASPublishProperty)(THIS_ BSTR bstrName, VARIANT FAR* pvtValue) PURE;
    STDMETHOD(put_ASPublishProperty)(THIS_ BSTR bstrName, VARIANT vtValue) PURE;
    STDMETHOD(get_ASPublishProperties)(THIS_ IReleaseASRepositoryPropertiesIbizaAtlantis FAR* FAR* ppVal) PURE;

    /* IReleaseIxtapa methods */
    STDMETHOD(get_DotNetDelayReboot)(THIS_ VARIANT_BOOL FAR* pvbRebootDelayed) PURE;
    STDMETHOD(put_DotNetDelayReboot)(THIS_ VARIANT_BOOL vbDelayReboot) PURE;
    STDMETHOD(get_ValidateDIMs)(THIS_ VARIANT_BOOL FAR* pvbValidateDIMs) PURE;
    STDMETHOD(put_ValidateDIMs)(THIS_ VARIANT_BOOL vbValidateDIMs) PURE;

    /* IReleaseIndore methods */
    STDMETHOD(get_LauncherPrivileges)(THIS_ EnumRequiredExecutionLevel FAR* erelLevel) PURE;
    STDMETHOD(put_LauncherPrivileges)(THIS_ EnumRequiredExecutionLevel erelLevel) PURE;
#endif

    /* IReleaseIronwood methods */
    STDMETHOD(get_ReleaseProperty)(THIS_ EnumReleaseProperty erpProperty, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ReleaseProperty)(THIS_ EnumReleaseProperty erpProperty, BSTR bstrVal) PURE;
    STDMETHOD(get_ElevatedAdvertise)(THIS_ EnumElevatedAdvertisement FAR* eeaAdvertise) PURE;
    STDMETHOD(put_ElevatedAdvertise)(THIS_ EnumElevatedAdvertisement eeaAdvertise) PURE;
};

DEFINE_GUID(IID_IPreviousProMediaNeptune,0xC93CBCCDL,0x58CC,0x4FB1,0xA0,0x66,0x79,0x38,0xD6,0x16,0xA3,0x60);

/* Definition of interface: IPreviousProMediaNeptune */
#undef INTERFACE
#define INTERFACE IPreviousProMediaNeptune

DECLARE_INTERFACE_(IPreviousProMediaNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPreviousProMediaNeptune methods */
    STDMETHOD(get_MediaFile)(THIS_ BSTR FAR* MediaFile) PURE;
    STDMETHOD(put_MediaFile)(THIS_ BSTR MediaFile) PURE;
    STDMETHOD(get_UseHeaderVersion)(THIS_ VARIANT_BOOL FAR* UseHeaderVersion) PURE;
    STDMETHOD(put_UseHeaderVersion)(THIS_ VARIANT_BOOL UseHeaderVersion) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
};

DEFINE_GUID(IID_IPreviousProMediasNeptune,0x9FA596D2L,0x1717,0x4AB4,0x83,0x67,0x31,0x5A,0xA7,0xC7,0x64,0x86);

/* Definition of interface: IPreviousProMediasNeptune */
#undef INTERFACE
#define INTERFACE IPreviousProMediasNeptune

DECLARE_INTERFACE_(IPreviousProMediasNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPreviousProMediasNeptune methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IPreviousProMediaNeptune FAR* FAR* pMedia) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IReleaseReservedSpaceNeptune,0xBC2FFB5AL,0xE733,0x4E95,0xA3,0xA3,0xC5,0x4A,0x59,0xC9,0xCA,0x50);

/* Definition of interface: IReleaseReservedSpaceNeptune */
#undef INTERFACE
#define INTERFACE IReleaseReservedSpaceNeptune

DECLARE_INTERFACE_(IReleaseReservedSpaceNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IReleaseReservedSpaceNeptune methods */
    STDMETHOD(get_Disk)(THIS_ long FAR* Disk) PURE;
    STDMETHOD(put_Disk)(THIS_ long Disk) PURE;
    STDMETHOD(get_Size)(THIS_ long FAR* Size) PURE;
    STDMETHOD(put_Size)(THIS_ long Size) PURE;
};

DEFINE_GUID(IID_IReleaseReservedSpacesNeptune,0xDC677749L,0xA6A7,0x4B27,0x9B,0x8A,0x66,0x7C,0x75,0x1B,0xC1,0xE9);

/* Definition of interface: IReleaseReservedSpacesNeptune */
#undef INTERFACE
#define INTERFACE IReleaseReservedSpacesNeptune

DECLARE_INTERFACE_(IReleaseReservedSpacesNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IReleaseReservedSpacesNeptune methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IReleaseReservedSpaceNeptune FAR* FAR* pReservedSpace) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

interface IISDisk1File;

DEFINE_GUID(IID_IReleaseProNeptune,0x723E269AL,0xCF47,0x4856,0xAE,0x07,0x59,0x67,0x27,0x14,0x4D,0x14);

/* Definition of interface: IReleaseProNeptune */
#undef INTERFACE
#define INTERFACE IReleaseProNeptune

DECLARE_INTERFACE_(IReleaseProNeptune, IReleaseNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IRelease2 methods */
    STDMETHOD(get_PackageName)(THIS_ BSTR FAR* PackageName) PURE;
    STDMETHOD(put_PackageName)(THIS_ BSTR PackageName) PURE;
    STDMETHOD(get_SupportedLanguagesUI)(THIS_ BSTR FAR* SupportedLanguagesUI) PURE;
    STDMETHOD(put_SupportedLanguagesUI)(THIS_ BSTR SupportedLanguagesUI) PURE;
    STDMETHOD(get_MsiSourceType)(THIS_ EnumMSISourceType FAR* MsiSourceType) PURE;
    STDMETHOD(put_MsiSourceType)(THIS_ EnumMSISourceType MsiSourceType) PURE;
    STDMETHOD(get_Platforms)(THIS_ BSTR FAR* Platforms) PURE;
    STDMETHOD(put_Platforms)(THIS_ BSTR Platforms) PURE;
    STDMETHOD(get_SupportedLanguagesData)(THIS_ BSTR FAR* SupportedLanguagesData) PURE;
    STDMETHOD(put_SupportedLanguagesData)(THIS_ BSTR SupportedLanguagesData) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_LanguageFiltering)(THIS_ VARIANT_BOOL FAR* LanguageFiltering) PURE;
    STDMETHOD(put_LanguageFiltering)(THIS_ VARIANT_BOOL LanguageFiltering) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_DiskSpanning)(THIS_ EnumDiskSpanning FAR* DiskSpanning) PURE;
    STDMETHOD(put_DiskSpanning)(THIS_ EnumDiskSpanning DiskSpanning) PURE;
    STDMETHOD(get_SynchMsi)(THIS_ BSTR FAR* SynchMsi) PURE;
    STDMETHOD(put_SynchMsi)(THIS_ BSTR SynchMsi) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_VersionCopyright)(THIS_ BSTR FAR* VersionCopyright) PURE;
    STDMETHOD(put_VersionCopyright)(THIS_ BSTR VersionCopyright) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_CreateReport)(THIS_ VARIANT_BOOL FAR* CreateReport) PURE;
    STDMETHOD(put_CreateReport)(THIS_ VARIANT_BOOL CreateReport) PURE;
    STDMETHOD(get_CreateLogFile)(THIS_ VARIANT_BOOL FAR* CreateLogFile) PURE;
    STDMETHOD(put_CreateLogFile)(THIS_ VARIANT_BOOL CreateLogFile) PURE;
    STDMETHOD(get_EnableLanguageDialog)(THIS_ VARIANT_BOOL FAR* EnableLanguageDialog) PURE;
    STDMETHOD(put_EnableLanguageDialog)(THIS_ VARIANT_BOOL EnableLanguageDialog) PURE;
    STDMETHOD(get_CopyMM)(THIS_ VARIANT_BOOL FAR* CopyMM) PURE;
    STDMETHOD(put_CopyMM)(THIS_ VARIANT_BOOL CopyMM) PURE;
    STDMETHOD(get_UseTestPathVariables)(THIS_ VARIANT_BOOL FAR* UseTestPathVariables) PURE;
    STDMETHOD(put_UseTestPathVariables)(THIS_ VARIANT_BOOL UseTestPathVariables) PURE;
    STDMETHOD(get_CreateAutorun)(THIS_ VARIANT_BOOL FAR* CreateAutorun) PURE;
    STDMETHOD(put_CreateAutorun)(THIS_ VARIANT_BOOL CreateAutorun) PURE;
    STDMETHOD(get_CreatePDF)(THIS_ VARIANT_BOOL FAR* CreatePDF) PURE;
    STDMETHOD(put_CreatePDF)(THIS_ VARIANT_BOOL CreatePDF) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* PasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL PasswordProtect) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* UseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL UseMyVersionInfo) PURE;
    STDMETHOD(get_SuppressWin2K)(THIS_ VARIANT_BOOL FAR* SuppressWin2K) PURE;
    STDMETHOD(put_SuppressWin2K)(THIS_ VARIANT_BOOL SuppressWin2K) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_LogicalDisks)(THIS_ ILogicalDisks FAR* FAR* pLogicalDisks) PURE;
    STDMETHOD(get_BuildLabel)(THIS_ IBuildLabel FAR* FAR* pBuildLabel) PURE;
    STDMETHOD(IsMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe, VARIANT_BOOL FAR* pvbIsMatch) PURE;
    STDMETHOD(MakeMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe) PURE;
    STDMETHOD(AddChild)(THIS_ EnumReleaseChild ercChild, long nDiskId, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(IsLanguageRequired)(THIS_ BSTR bstrLangID, VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(get_FeatureDiskID)(THIS_ BSTR bstrFeatureID, short FAR* nDiskId) PURE;
    STDMETHOD(get_FeatureCompressed)(THIS_ BSTR bstrFeatureID, VARIANT_BOOL FAR* vbCompressed) PURE;
    STDMETHOD(get_WebType)(THIS_ EnumWebType FAR* eWebType) PURE;
    STDMETHOD(put_WebType)(THIS_ EnumWebType eWebType) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* bstrWebURL) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrWebURL) PURE;
    STDMETHOD(get_WrapMsiIntoCab)(THIS_ VARIANT_BOOL FAR* bWrapMsiIntoCab) PURE;
    STDMETHOD(put_WrapMsiIntoCab)(THIS_ VARIANT_BOOL bWrapMsiIntoCab) PURE;
    STDMETHOD(get_WebCabSize)(THIS_ long FAR* WebCabSize) PURE;
    STDMETHOD(put_WebCabSize)(THIS_ long WebCabSize) PURE;
    STDMETHOD(get_GenerateOneClick)(THIS_ VARIANT_BOOL FAR* bGenerateOneClick) PURE;
    STDMETHOD(put_GenerateOneClick)(THIS_ VARIANT_BOOL bGenerateOneClick) PURE;
    STDMETHOD(get_OneClickHtmlName)(THIS_ BSTR FAR* bstrOneClickHtmlName) PURE;
    STDMETHOD(put_OneClickHtmlName)(THIS_ BSTR bstrOneClickHtmlName) PURE;
    STDMETHOD(get_OneClickCabName)(THIS_ BSTR FAR* bstrOneClickCabName) PURE;
    STDMETHOD(put_OneClickCabName)(THIS_ BSTR bstrOneClickCabName) PURE;
    STDMETHOD(get_CacheWebPkgLocally)(THIS_ VARIANT_BOOL FAR* bCacheWebPkgLocally) PURE;
    STDMETHOD(put_CacheWebPkgLocally)(THIS_ VARIANT_BOOL bCacheWebPkgLocally) PURE;
    STDMETHOD(get_WebLocalCachePath)(THIS_ BSTR FAR* bstrWebLocalCachePath) PURE;
    STDMETHOD(put_WebLocalCachePath)(THIS_ BSTR bstrWebLocalCachePath) PURE;
    STDMETHOD(get_EngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_EngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_DelayEngineReboot)(THIS_ VARIANT_BOOL FAR* bDelayEngineReboot) PURE;
    STDMETHOD(put_DelayEngineReboot)(THIS_ VARIANT_BOOL bDelayEngineReboot) PURE;
    STDMETHOD(get_Win9xMsiUrl)(THIS_ BSTR FAR* bstrWin9xMsiUrl) PURE;
    STDMETHOD(put_Win9xMsiUrl)(THIS_ BSTR bstrWin9xMsiUrl) PURE;
    STDMETHOD(get_WinNTMsiUrl)(THIS_ BSTR FAR* bstrWinNTMsiUrl) PURE;
    STDMETHOD(put_WinNTMsiUrl)(THIS_ BSTR bstrWinNTMsiUrl) PURE;
    STDMETHOD(get_ISEngineURL)(THIS_ BSTR FAR* bstrISEngineURL) PURE;
    STDMETHOD(put_ISEngineURL)(THIS_ BSTR bstrISEngineURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_ISEngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_ISEngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* bstrRootSetupFolder) PURE;
    STDMETHOD(get_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser FAR* eOCITargetBrowser) PURE;
    STDMETHOD(put_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser eOCITargetBrowser) PURE;
    STDMETHOD(get_DigitalCertificateIdNS)(THIS_ BSTR FAR* DigitalCertificateIdNS) PURE;
    STDMETHOD(put_DigitalCertificateIdNS)(THIS_ BSTR DigitalCertificateIdNS) PURE;
    STDMETHOD(get_DigitalCertificateDBaseNS)(THIS_ BSTR FAR* DigitalCertificateDBaseNS) PURE;
    STDMETHOD(put_DigitalCertificateDBaseNS)(THIS_ BSTR DigitalCertificateDBaseNS) PURE;
    STDMETHOD(get_DigitalCertificatePasswordNS)(THIS_ BSTR FAR* DigitalCertificatePasswordNS) PURE;
    STDMETHOD(put_DigitalCertificatePasswordNS)(THIS_ BSTR DigitalCertificatePasswordNS) PURE;
    STDMETHOD(get_CDBrowser)(THIS_ BSTR FAR* CDBrowser) PURE;
    STDMETHOD(put_CDBrowser)(THIS_ BSTR CDBrowser) PURE;
    STDMETHOD(get_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL FAR* bCabPerFeature) PURE;
    STDMETHOD(put_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL bCabPerFeature) PURE;
    STDMETHOD(get_DotNetBuildConfiguration)(THIS_ BSTR FAR* sDotNetBuildConfiguration) PURE;
    STDMETHOD(put_DotNetBuildConfiguration)(THIS_ BSTR sDotNetBuildConfiguration) PURE;
    STDMETHOD(get_DotNetRedistURL)(THIS_ BSTR FAR* bstrDotNetRedistURL) PURE;
    STDMETHOD(put_DotNetRedistURL)(THIS_ BSTR bstrDotNetRedistURL) PURE;
    STDMETHOD(get_DotNetRedistLocation)(THIS_ EnumEngineLocation FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetRedistLocation)(THIS_ EnumEngineLocation eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetUI)(THIS_ VARIANT_BOOL FAR* pvbUseDotNetUI) PURE;
    STDMETHOD(put_DotNetUI)(THIS_ VARIANT_BOOL vbUseDotNetUI) PURE;
    STDMETHOD(get_GenerateFileHashValues)(THIS_ VARIANT_BOOL FAR* pvbGenerateFileHashValues) PURE;
    STDMETHOD(put_GenerateFileHashValues)(THIS_ VARIANT_BOOL vbGenerateFileHashValues) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eMsiEngineVersion) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eMsiEngineVersion) PURE;
    STDMETHOD(get_MsiCommandLine)(THIS_ BSTR FAR* bstrMsiCommandLine) PURE;
    STDMETHOD(put_MsiCommandLine)(THIS_ BSTR bstrMsiCommandLine) PURE;
    STDMETHOD(get_SuppressARP)(THIS_ VARIANT_BOOL FAR* pvbSuppressARP) PURE;
    STDMETHOD(put_SuppressARP)(THIS_ VARIANT_BOOL vbSuppressARP) PURE;
    STDMETHOD(get_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL FAR* pvbShowDotNetSetupExeSelection) PURE;
    STDMETHOD(put_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL ShowDotNetSetupExeSelection) PURE;
    STDMETHOD(get_SmallInit)(THIS_ VARIANT_BOOL FAR* pvbSmallInit) PURE;
    STDMETHOD(put_SmallInit)(THIS_ VARIANT_BOOL SmallInit) PURE;
    STDMETHOD(get_ShallowFolder)(THIS_ VARIANT_BOOL FAR* pvbShallowFolder) PURE;
    STDMETHOD(put_ShallowFolder)(THIS_ VARIANT_BOOL ShallowFolder) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_DontEncrypt)(THIS_ VARIANT_BOOL FAR* pbstrDontEncrypt) PURE;
    STDMETHOD(put_DontEncrypt)(THIS_ VARIANT_BOOL bstrDontEncrypt) PURE;
    STDMETHOD(get_DotNetVersion)(THIS_ EnumDotNetVersion FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetVersion)(THIS_ EnumDotNetVersion eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetBaseLanguage)(THIS_ BSTR FAR* DotNetBaseLanguage) PURE;
    STDMETHOD(put_DotNetBaseLanguage)(THIS_ BSTR DotNetBaseLanguage) PURE;
    STDMETHOD(get_DotNetLangaugePacks)(THIS_ BSTR FAR* DotNetLangaugePacks) PURE;
    STDMETHOD(put_DotNetLangaugePacks)(THIS_ BSTR DotNetLangaugePacks) PURE;
    STDMETHOD(get_DotNetFxCmdLine)(THIS_ BSTR FAR* DotNetFxCmdLine) PURE;
    STDMETHOD(put_DotNetFxCmdLine)(THIS_ BSTR DotNetFxCmdLine) PURE;
    STDMETHOD(get_DotNetLangPackCmdLine)(THIS_ BSTR FAR* DotNetLangPackCmdLine) PURE;
    STDMETHOD(put_DotNetLangPackCmdLine)(THIS_ BSTR DotNetLangPackCmdLine) PURE;
    STDMETHOD(get_SignMedia)(THIS_ EnumSignMedia FAR* pSignMedia) PURE;
    STDMETHOD(put_SignMedia)(THIS_ EnumSignMedia SignMedia) PURE;
    STDMETHOD(get_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbDotNetOptionalIfSilent) PURE;
    STDMETHOD(put_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL bDotNetOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpCmdLine)(THIS_ BSTR FAR* pbstrJSharpCmdLine) PURE;
    STDMETHOD(put_JSharpCmdLine)(THIS_ BSTR bstrJSharpCmdLine) PURE;
    STDMETHOD(get_JSharpOptionDlg)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionDlg) PURE;
    STDMETHOD(put_JSharpOptionDlg)(THIS_ VARIANT_BOOL bJSharpOptionDlg) PURE;
    STDMETHOD(get_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionalIfSilent) PURE;
    STDMETHOD(put_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL bJSharpOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpRedistLocation)(THIS_ EnumEngineLocation FAR* eJSharpRedistLocation) PURE;
    STDMETHOD(put_JSharpRedistLocation)(THIS_ EnumEngineLocation eJSharpRedistLocation) PURE;

    /* IReleaseNeptune methods */
    STDMETHOD(get_DistributeAfterBuild)(THIS_ VARIANT_BOOL FAR* vbDistribute) PURE;
    STDMETHOD(put_DistributeAfterBuild)(THIS_ VARIANT_BOOL vbDistribute) PURE;
    STDMETHOD(get_IsCompactBuild)(THIS_ VARIANT_BOOL FAR* vbCompactBuild) PURE;
#endif

    /* IReleaseProNeptune methods */
    STDMETHOD(get_ShowPasswordDlg)(THIS_ VARIANT_BOOL FAR* ShowPasswordDlg) PURE;
    STDMETHOD(put_ShowPasswordDlg)(THIS_ VARIANT_BOOL ShowPasswordDlg) PURE;
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* GUID) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR GUID) PURE;
    STDMETHOD(get_SingleEXEFileName)(THIS_ BSTR FAR* SingleEXEFileName) PURE;
    STDMETHOD(put_SingleEXEFileName)(THIS_ BSTR SingleEXEFileName) PURE;
    STDMETHOD(get_SingleEXEIconName)(THIS_ BSTR FAR* SingleEXEIconName) PURE;
    STDMETHOD(put_SingleEXEIconName)(THIS_ BSTR SingleEXEIconName) PURE;
    STDMETHOD(get_SetupCmdLine)(THIS_ BSTR FAR* SetupCmdLine) PURE;
    STDMETHOD(put_SetupCmdLine)(THIS_ BSTR SetupCmdLine) PURE;
    STDMETHOD(get_CompressScript)(THIS_ VARIANT_BOOL FAR* CompressScript) PURE;
    STDMETHOD(put_CompressScript)(THIS_ VARIANT_BOOL CompressScript) PURE;
    STDMETHOD(get_PreProcessorDefines)(THIS_ BSTR FAR* PreProcessorDefines) PURE;
    STDMETHOD(put_PreProcessorDefines)(THIS_ BSTR PreProcessorDefines) PURE;
    STDMETHOD(get_SetupDlgAppName)(THIS_ BSTR FAR* SetupDlgAppName) PURE;
    STDMETHOD(put_SetupDlgAppName)(THIS_ BSTR SetupDlgAppName) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* OSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long OSFilter) PURE;
    STDMETHOD(get_WebNetscapeSupport)(THIS_ VARIANT_BOOL FAR* WebNetscapeSupport) PURE;
    STDMETHOD(put_WebNetscapeSupport)(THIS_ VARIANT_BOOL WebNetscapeSupport) PURE;
    STDMETHOD(get_WebSaveOptionsDlg)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsDlg) PURE;
    STDMETHOD(put_WebSaveOptionsDlg)(THIS_ VARIANT_BOOL WebSaveOptionsDlg) PURE;
    STDMETHOD(get_WebSecurityDlg)(THIS_ VARIANT_BOOL FAR* WebSecurityDlg) PURE;
    STDMETHOD(put_WebSecurityDlg)(THIS_ VARIANT_BOOL WebSecurityDlg) PURE;
    STDMETHOD(get_WebCreateDefaultPage)(THIS_ VARIANT_BOOL FAR* WebCreateDefaultPage) PURE;
    STDMETHOD(put_WebCreateDefaultPage)(THIS_ VARIANT_BOOL WebCreateDefaultPage) PURE;
    STDMETHOD(get_WebPageUrl)(THIS_ BSTR FAR* WebPageUrl) PURE;
    STDMETHOD(put_WebPageUrl)(THIS_ BSTR WebPageUrl) PURE;
    STDMETHOD(get_WebSaveOptionsRunOnly)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsRunOnly) PURE;
    STDMETHOD(put_WebSaveOptionsRunOnly)(THIS_ VARIANT_BOOL WebSaveOptionsRunOnly) PURE;
    STDMETHOD(get_WebSaveOptionsSaveAndRun)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsSaveAndRun) PURE;
    STDMETHOD(put_WebSaveOptionsSaveAndRun)(THIS_ VARIANT_BOOL WebSaveOptionsSaveAndRun) PURE;
    STDMETHOD(get_WebSaveOptionsSaveOnly)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsSaveOnly) PURE;
    STDMETHOD(put_WebSaveOptionsSaveOnly)(THIS_ VARIANT_BOOL WebSaveOptionsSaveOnly) PURE;
    STDMETHOD(get_WebSaveOptionsCreateShortcut)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsCreateShortcut) PURE;
    STDMETHOD(put_WebSaveOptionsCreateShortcut)(THIS_ VARIANT_BOOL WebSaveOptionsCreateShortcut) PURE;
    STDMETHOD(get_UseProjectSkin)(THIS_ VARIANT_BOOL FAR* UseProjectSkin) PURE;
    STDMETHOD(put_UseProjectSkin)(THIS_ VARIANT_BOOL UseProjectSkin) PURE;
    STDMETHOD(get_SkinName)(THIS_ BSTR FAR* SkinName) PURE;
    STDMETHOD(put_SkinName)(THIS_ BSTR SkinName) PURE;
    STDMETHOD(get_FTPFolder)(THIS_ BSTR FAR* FTPFolder) PURE;
    STDMETHOD(put_FTPFolder)(THIS_ BSTR FTPFolder) PURE;
    STDMETHOD(get_FTPUserName)(THIS_ BSTR FAR* FTPUserName) PURE;
    STDMETHOD(put_FTPUserName)(THIS_ BSTR FTPUserName) PURE;
    STDMETHOD(get_FTPPassword)(THIS_ BSTR FAR* FTPPassword) PURE;
    STDMETHOD(put_FTPPassword)(THIS_ BSTR FTPPassword) PURE;
    STDMETHOD(get_CopyToFolder)(THIS_ BSTR FAR* CopyToFolder) PURE;
    STDMETHOD(put_CopyToFolder)(THIS_ BSTR CopyToFolder) PURE;
    STDMETHOD(get_BatchFileName)(THIS_ BSTR FAR* BatchFileName) PURE;
    STDMETHOD(put_BatchFileName)(THIS_ BSTR BatchFileName) PURE;
    STDMETHOD(get_EnableDifference)(THIS_ VARIANT_BOOL FAR* EnableDifference) PURE;
    STDMETHOD(put_EnableDifference)(THIS_ VARIANT_BOOL EnableDifference) PURE;
    STDMETHOD(get_SupportedVersions)(THIS_ BSTR FAR* SupportedVersions) PURE;
    STDMETHOD(put_SupportedVersions)(THIS_ BSTR SupportedVersions) PURE;
    STDMETHOD(get_UseIncludeInBuildFlags)(THIS_ VARIANT_BOOL FAR* UseIncludeInBuildFlags) PURE;
    STDMETHOD(put_UseIncludeInBuildFlags)(THIS_ VARIANT_BOOL UseIncludeInBuildFlags) PURE;
    STDMETHOD(get_PreviousProMedias)(THIS_ IPreviousProMediasNeptune FAR* FAR* ppPreviousProMedias) PURE;
    STDMETHOD(get_ObjDiffOptions)(THIS_ EnumObjDiffOptions FAR* ObjDiffOptions) PURE;
    STDMETHOD(put_ObjDiffOptions)(THIS_ EnumObjDiffOptions ObjDiffOptions) PURE;
    STDMETHOD(get_CheckMD5)(THIS_ VARIANT_BOOL FAR* CheckMD5) PURE;
    STDMETHOD(put_CheckMD5)(THIS_ VARIANT_BOOL CheckMD5) PURE;
    STDMETHOD(get_OtherDisk)(THIS_ IISDisk1File FAR* pOtherDiskFile, long FAR* OtherDisk) PURE;
    STDMETHOD(put_OtherDisk)(THIS_ IISDisk1File FAR* pOtherDiskFile, long OtherDisk) PURE;
    STDMETHOD(get_ReservedSpaces)(THIS_ IReleaseReservedSpacesNeptune FAR* FAR* ppReservedSpaces) PURE;
    STDMETHOD(get_FeaturesInBuild)(THIS_ IMultiSelectNeptune FAR* FAR* ppFeaturesInBuild) PURE;
    STDMETHOD(get_FeaturesUncompressed)(THIS_ IMultiSelectNeptune FAR* FAR* ppFeaturesUncompressed) PURE;
    STDMETHOD(get_DisplayBuildLocation)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_InitDlgProductName)(THIS_ BSTR FAR* InitDlgProductName) PURE;
    STDMETHOD(put_InitDlgProductName)(THIS_ BSTR InitDlgProductName) PURE;
    STDMETHOD(RegisterObject)(THIS_ BSTR FAR* bstrWizardFile, long FAR* lResult) PURE;
};

typedef enum EnumWebPageType {
    ewptNone = 1,
    ewptOCI = 2,
    ewptSaveRun = 4
} EnumWebPageType;

typedef enum EnumMSILocType {
    emltSetupExe = 1,
    emltWeb = 2
} EnumMSILocType;

DEFINE_GUID(IID_IReleaseProProteus,0x9F820388L,0xDBF8,0x48FC,0x8C,0x59,0xEE,0x2F,0x6F,0x3D,0x64,0xBC);

/* Definition of interface: IReleaseProProteus */
#undef INTERFACE
#define INTERFACE IReleaseProProteus

DECLARE_INTERFACE_(IReleaseProProteus, IReleaseProNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IRelease2 methods */
    STDMETHOD(get_PackageName)(THIS_ BSTR FAR* PackageName) PURE;
    STDMETHOD(put_PackageName)(THIS_ BSTR PackageName) PURE;
    STDMETHOD(get_SupportedLanguagesUI)(THIS_ BSTR FAR* SupportedLanguagesUI) PURE;
    STDMETHOD(put_SupportedLanguagesUI)(THIS_ BSTR SupportedLanguagesUI) PURE;
    STDMETHOD(get_MsiSourceType)(THIS_ EnumMSISourceType FAR* MsiSourceType) PURE;
    STDMETHOD(put_MsiSourceType)(THIS_ EnumMSISourceType MsiSourceType) PURE;
    STDMETHOD(get_Platforms)(THIS_ BSTR FAR* Platforms) PURE;
    STDMETHOD(put_Platforms)(THIS_ BSTR Platforms) PURE;
    STDMETHOD(get_SupportedLanguagesData)(THIS_ BSTR FAR* SupportedLanguagesData) PURE;
    STDMETHOD(put_SupportedLanguagesData)(THIS_ BSTR SupportedLanguagesData) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_LanguageFiltering)(THIS_ VARIANT_BOOL FAR* LanguageFiltering) PURE;
    STDMETHOD(put_LanguageFiltering)(THIS_ VARIANT_BOOL LanguageFiltering) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_DiskSpanning)(THIS_ EnumDiskSpanning FAR* DiskSpanning) PURE;
    STDMETHOD(put_DiskSpanning)(THIS_ EnumDiskSpanning DiskSpanning) PURE;
    STDMETHOD(get_SynchMsi)(THIS_ BSTR FAR* SynchMsi) PURE;
    STDMETHOD(put_SynchMsi)(THIS_ BSTR SynchMsi) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_VersionCopyright)(THIS_ BSTR FAR* VersionCopyright) PURE;
    STDMETHOD(put_VersionCopyright)(THIS_ BSTR VersionCopyright) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_CreateReport)(THIS_ VARIANT_BOOL FAR* CreateReport) PURE;
    STDMETHOD(put_CreateReport)(THIS_ VARIANT_BOOL CreateReport) PURE;
    STDMETHOD(get_CreateLogFile)(THIS_ VARIANT_BOOL FAR* CreateLogFile) PURE;
    STDMETHOD(put_CreateLogFile)(THIS_ VARIANT_BOOL CreateLogFile) PURE;
    STDMETHOD(get_EnableLanguageDialog)(THIS_ VARIANT_BOOL FAR* EnableLanguageDialog) PURE;
    STDMETHOD(put_EnableLanguageDialog)(THIS_ VARIANT_BOOL EnableLanguageDialog) PURE;
    STDMETHOD(get_CopyMM)(THIS_ VARIANT_BOOL FAR* CopyMM) PURE;
    STDMETHOD(put_CopyMM)(THIS_ VARIANT_BOOL CopyMM) PURE;
    STDMETHOD(get_UseTestPathVariables)(THIS_ VARIANT_BOOL FAR* UseTestPathVariables) PURE;
    STDMETHOD(put_UseTestPathVariables)(THIS_ VARIANT_BOOL UseTestPathVariables) PURE;
    STDMETHOD(get_CreateAutorun)(THIS_ VARIANT_BOOL FAR* CreateAutorun) PURE;
    STDMETHOD(put_CreateAutorun)(THIS_ VARIANT_BOOL CreateAutorun) PURE;
    STDMETHOD(get_CreatePDF)(THIS_ VARIANT_BOOL FAR* CreatePDF) PURE;
    STDMETHOD(put_CreatePDF)(THIS_ VARIANT_BOOL CreatePDF) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* PasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL PasswordProtect) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* UseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL UseMyVersionInfo) PURE;
    STDMETHOD(get_SuppressWin2K)(THIS_ VARIANT_BOOL FAR* SuppressWin2K) PURE;
    STDMETHOD(put_SuppressWin2K)(THIS_ VARIANT_BOOL SuppressWin2K) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_LogicalDisks)(THIS_ ILogicalDisks FAR* FAR* pLogicalDisks) PURE;
    STDMETHOD(get_BuildLabel)(THIS_ IBuildLabel FAR* FAR* pBuildLabel) PURE;
    STDMETHOD(IsMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe, VARIANT_BOOL FAR* pvbIsMatch) PURE;
    STDMETHOD(MakeMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe) PURE;
    STDMETHOD(AddChild)(THIS_ EnumReleaseChild ercChild, long nDiskId, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(IsLanguageRequired)(THIS_ BSTR bstrLangID, VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(get_FeatureDiskID)(THIS_ BSTR bstrFeatureID, short FAR* nDiskId) PURE;
    STDMETHOD(get_FeatureCompressed)(THIS_ BSTR bstrFeatureID, VARIANT_BOOL FAR* vbCompressed) PURE;
    STDMETHOD(get_WebType)(THIS_ EnumWebType FAR* eWebType) PURE;
    STDMETHOD(put_WebType)(THIS_ EnumWebType eWebType) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* bstrWebURL) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrWebURL) PURE;
    STDMETHOD(get_WrapMsiIntoCab)(THIS_ VARIANT_BOOL FAR* bWrapMsiIntoCab) PURE;
    STDMETHOD(put_WrapMsiIntoCab)(THIS_ VARIANT_BOOL bWrapMsiIntoCab) PURE;
    STDMETHOD(get_WebCabSize)(THIS_ long FAR* WebCabSize) PURE;
    STDMETHOD(put_WebCabSize)(THIS_ long WebCabSize) PURE;
    STDMETHOD(get_GenerateOneClick)(THIS_ VARIANT_BOOL FAR* bGenerateOneClick) PURE;
    STDMETHOD(put_GenerateOneClick)(THIS_ VARIANT_BOOL bGenerateOneClick) PURE;
    STDMETHOD(get_OneClickHtmlName)(THIS_ BSTR FAR* bstrOneClickHtmlName) PURE;
    STDMETHOD(put_OneClickHtmlName)(THIS_ BSTR bstrOneClickHtmlName) PURE;
    STDMETHOD(get_OneClickCabName)(THIS_ BSTR FAR* bstrOneClickCabName) PURE;
    STDMETHOD(put_OneClickCabName)(THIS_ BSTR bstrOneClickCabName) PURE;
    STDMETHOD(get_CacheWebPkgLocally)(THIS_ VARIANT_BOOL FAR* bCacheWebPkgLocally) PURE;
    STDMETHOD(put_CacheWebPkgLocally)(THIS_ VARIANT_BOOL bCacheWebPkgLocally) PURE;
    STDMETHOD(get_WebLocalCachePath)(THIS_ BSTR FAR* bstrWebLocalCachePath) PURE;
    STDMETHOD(put_WebLocalCachePath)(THIS_ BSTR bstrWebLocalCachePath) PURE;
    STDMETHOD(get_EngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_EngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_DelayEngineReboot)(THIS_ VARIANT_BOOL FAR* bDelayEngineReboot) PURE;
    STDMETHOD(put_DelayEngineReboot)(THIS_ VARIANT_BOOL bDelayEngineReboot) PURE;
    STDMETHOD(get_Win9xMsiUrl)(THIS_ BSTR FAR* bstrWin9xMsiUrl) PURE;
    STDMETHOD(put_Win9xMsiUrl)(THIS_ BSTR bstrWin9xMsiUrl) PURE;
    STDMETHOD(get_WinNTMsiUrl)(THIS_ BSTR FAR* bstrWinNTMsiUrl) PURE;
    STDMETHOD(put_WinNTMsiUrl)(THIS_ BSTR bstrWinNTMsiUrl) PURE;
    STDMETHOD(get_ISEngineURL)(THIS_ BSTR FAR* bstrISEngineURL) PURE;
    STDMETHOD(put_ISEngineURL)(THIS_ BSTR bstrISEngineURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_ISEngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_ISEngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* bstrRootSetupFolder) PURE;
    STDMETHOD(get_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser FAR* eOCITargetBrowser) PURE;
    STDMETHOD(put_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser eOCITargetBrowser) PURE;
    STDMETHOD(get_DigitalCertificateIdNS)(THIS_ BSTR FAR* DigitalCertificateIdNS) PURE;
    STDMETHOD(put_DigitalCertificateIdNS)(THIS_ BSTR DigitalCertificateIdNS) PURE;
    STDMETHOD(get_DigitalCertificateDBaseNS)(THIS_ BSTR FAR* DigitalCertificateDBaseNS) PURE;
    STDMETHOD(put_DigitalCertificateDBaseNS)(THIS_ BSTR DigitalCertificateDBaseNS) PURE;
    STDMETHOD(get_DigitalCertificatePasswordNS)(THIS_ BSTR FAR* DigitalCertificatePasswordNS) PURE;
    STDMETHOD(put_DigitalCertificatePasswordNS)(THIS_ BSTR DigitalCertificatePasswordNS) PURE;
    STDMETHOD(get_CDBrowser)(THIS_ BSTR FAR* CDBrowser) PURE;
    STDMETHOD(put_CDBrowser)(THIS_ BSTR CDBrowser) PURE;
    STDMETHOD(get_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL FAR* bCabPerFeature) PURE;
    STDMETHOD(put_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL bCabPerFeature) PURE;
    STDMETHOD(get_DotNetBuildConfiguration)(THIS_ BSTR FAR* sDotNetBuildConfiguration) PURE;
    STDMETHOD(put_DotNetBuildConfiguration)(THIS_ BSTR sDotNetBuildConfiguration) PURE;
    STDMETHOD(get_DotNetRedistURL)(THIS_ BSTR FAR* bstrDotNetRedistURL) PURE;
    STDMETHOD(put_DotNetRedistURL)(THIS_ BSTR bstrDotNetRedistURL) PURE;
    STDMETHOD(get_DotNetRedistLocation)(THIS_ EnumEngineLocation FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetRedistLocation)(THIS_ EnumEngineLocation eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetUI)(THIS_ VARIANT_BOOL FAR* pvbUseDotNetUI) PURE;
    STDMETHOD(put_DotNetUI)(THIS_ VARIANT_BOOL vbUseDotNetUI) PURE;
    STDMETHOD(get_GenerateFileHashValues)(THIS_ VARIANT_BOOL FAR* pvbGenerateFileHashValues) PURE;
    STDMETHOD(put_GenerateFileHashValues)(THIS_ VARIANT_BOOL vbGenerateFileHashValues) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eMsiEngineVersion) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eMsiEngineVersion) PURE;
    STDMETHOD(get_MsiCommandLine)(THIS_ BSTR FAR* bstrMsiCommandLine) PURE;
    STDMETHOD(put_MsiCommandLine)(THIS_ BSTR bstrMsiCommandLine) PURE;
    STDMETHOD(get_SuppressARP)(THIS_ VARIANT_BOOL FAR* pvbSuppressARP) PURE;
    STDMETHOD(put_SuppressARP)(THIS_ VARIANT_BOOL vbSuppressARP) PURE;
    STDMETHOD(get_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL FAR* pvbShowDotNetSetupExeSelection) PURE;
    STDMETHOD(put_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL ShowDotNetSetupExeSelection) PURE;
    STDMETHOD(get_SmallInit)(THIS_ VARIANT_BOOL FAR* pvbSmallInit) PURE;
    STDMETHOD(put_SmallInit)(THIS_ VARIANT_BOOL SmallInit) PURE;
    STDMETHOD(get_ShallowFolder)(THIS_ VARIANT_BOOL FAR* pvbShallowFolder) PURE;
    STDMETHOD(put_ShallowFolder)(THIS_ VARIANT_BOOL ShallowFolder) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_DontEncrypt)(THIS_ VARIANT_BOOL FAR* pbstrDontEncrypt) PURE;
    STDMETHOD(put_DontEncrypt)(THIS_ VARIANT_BOOL bstrDontEncrypt) PURE;
    STDMETHOD(get_DotNetVersion)(THIS_ EnumDotNetVersion FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetVersion)(THIS_ EnumDotNetVersion eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetBaseLanguage)(THIS_ BSTR FAR* DotNetBaseLanguage) PURE;
    STDMETHOD(put_DotNetBaseLanguage)(THIS_ BSTR DotNetBaseLanguage) PURE;
    STDMETHOD(get_DotNetLangaugePacks)(THIS_ BSTR FAR* DotNetLangaugePacks) PURE;
    STDMETHOD(put_DotNetLangaugePacks)(THIS_ BSTR DotNetLangaugePacks) PURE;
    STDMETHOD(get_DotNetFxCmdLine)(THIS_ BSTR FAR* DotNetFxCmdLine) PURE;
    STDMETHOD(put_DotNetFxCmdLine)(THIS_ BSTR DotNetFxCmdLine) PURE;
    STDMETHOD(get_DotNetLangPackCmdLine)(THIS_ BSTR FAR* DotNetLangPackCmdLine) PURE;
    STDMETHOD(put_DotNetLangPackCmdLine)(THIS_ BSTR DotNetLangPackCmdLine) PURE;
    STDMETHOD(get_SignMedia)(THIS_ EnumSignMedia FAR* pSignMedia) PURE;
    STDMETHOD(put_SignMedia)(THIS_ EnumSignMedia SignMedia) PURE;
    STDMETHOD(get_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbDotNetOptionalIfSilent) PURE;
    STDMETHOD(put_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL bDotNetOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpCmdLine)(THIS_ BSTR FAR* pbstrJSharpCmdLine) PURE;
    STDMETHOD(put_JSharpCmdLine)(THIS_ BSTR bstrJSharpCmdLine) PURE;
    STDMETHOD(get_JSharpOptionDlg)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionDlg) PURE;
    STDMETHOD(put_JSharpOptionDlg)(THIS_ VARIANT_BOOL bJSharpOptionDlg) PURE;
    STDMETHOD(get_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionalIfSilent) PURE;
    STDMETHOD(put_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL bJSharpOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpRedistLocation)(THIS_ EnumEngineLocation FAR* eJSharpRedistLocation) PURE;
    STDMETHOD(put_JSharpRedistLocation)(THIS_ EnumEngineLocation eJSharpRedistLocation) PURE;

    /* IReleaseNeptune methods */
    STDMETHOD(get_DistributeAfterBuild)(THIS_ VARIANT_BOOL FAR* vbDistribute) PURE;
    STDMETHOD(put_DistributeAfterBuild)(THIS_ VARIANT_BOOL vbDistribute) PURE;
    STDMETHOD(get_IsCompactBuild)(THIS_ VARIANT_BOOL FAR* vbCompactBuild) PURE;

    /* IReleaseProNeptune methods */
    STDMETHOD(get_ShowPasswordDlg)(THIS_ VARIANT_BOOL FAR* ShowPasswordDlg) PURE;
    STDMETHOD(put_ShowPasswordDlg)(THIS_ VARIANT_BOOL ShowPasswordDlg) PURE;
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* GUID) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR GUID) PURE;
    STDMETHOD(get_SingleEXEFileName)(THIS_ BSTR FAR* SingleEXEFileName) PURE;
    STDMETHOD(put_SingleEXEFileName)(THIS_ BSTR SingleEXEFileName) PURE;
    STDMETHOD(get_SingleEXEIconName)(THIS_ BSTR FAR* SingleEXEIconName) PURE;
    STDMETHOD(put_SingleEXEIconName)(THIS_ BSTR SingleEXEIconName) PURE;
    STDMETHOD(get_SetupCmdLine)(THIS_ BSTR FAR* SetupCmdLine) PURE;
    STDMETHOD(put_SetupCmdLine)(THIS_ BSTR SetupCmdLine) PURE;
    STDMETHOD(get_CompressScript)(THIS_ VARIANT_BOOL FAR* CompressScript) PURE;
    STDMETHOD(put_CompressScript)(THIS_ VARIANT_BOOL CompressScript) PURE;
    STDMETHOD(get_PreProcessorDefines)(THIS_ BSTR FAR* PreProcessorDefines) PURE;
    STDMETHOD(put_PreProcessorDefines)(THIS_ BSTR PreProcessorDefines) PURE;
    STDMETHOD(get_SetupDlgAppName)(THIS_ BSTR FAR* SetupDlgAppName) PURE;
    STDMETHOD(put_SetupDlgAppName)(THIS_ BSTR SetupDlgAppName) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* OSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long OSFilter) PURE;
    STDMETHOD(get_WebNetscapeSupport)(THIS_ VARIANT_BOOL FAR* WebNetscapeSupport) PURE;
    STDMETHOD(put_WebNetscapeSupport)(THIS_ VARIANT_BOOL WebNetscapeSupport) PURE;
    STDMETHOD(get_WebSaveOptionsDlg)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsDlg) PURE;
    STDMETHOD(put_WebSaveOptionsDlg)(THIS_ VARIANT_BOOL WebSaveOptionsDlg) PURE;
    STDMETHOD(get_WebSecurityDlg)(THIS_ VARIANT_BOOL FAR* WebSecurityDlg) PURE;
    STDMETHOD(put_WebSecurityDlg)(THIS_ VARIANT_BOOL WebSecurityDlg) PURE;
    STDMETHOD(get_WebCreateDefaultPage)(THIS_ VARIANT_BOOL FAR* WebCreateDefaultPage) PURE;
    STDMETHOD(put_WebCreateDefaultPage)(THIS_ VARIANT_BOOL WebCreateDefaultPage) PURE;
    STDMETHOD(get_WebPageUrl)(THIS_ BSTR FAR* WebPageUrl) PURE;
    STDMETHOD(put_WebPageUrl)(THIS_ BSTR WebPageUrl) PURE;
    STDMETHOD(get_WebSaveOptionsRunOnly)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsRunOnly) PURE;
    STDMETHOD(put_WebSaveOptionsRunOnly)(THIS_ VARIANT_BOOL WebSaveOptionsRunOnly) PURE;
    STDMETHOD(get_WebSaveOptionsSaveAndRun)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsSaveAndRun) PURE;
    STDMETHOD(put_WebSaveOptionsSaveAndRun)(THIS_ VARIANT_BOOL WebSaveOptionsSaveAndRun) PURE;
    STDMETHOD(get_WebSaveOptionsSaveOnly)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsSaveOnly) PURE;
    STDMETHOD(put_WebSaveOptionsSaveOnly)(THIS_ VARIANT_BOOL WebSaveOptionsSaveOnly) PURE;
    STDMETHOD(get_WebSaveOptionsCreateShortcut)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsCreateShortcut) PURE;
    STDMETHOD(put_WebSaveOptionsCreateShortcut)(THIS_ VARIANT_BOOL WebSaveOptionsCreateShortcut) PURE;
    STDMETHOD(get_UseProjectSkin)(THIS_ VARIANT_BOOL FAR* UseProjectSkin) PURE;
    STDMETHOD(put_UseProjectSkin)(THIS_ VARIANT_BOOL UseProjectSkin) PURE;
    STDMETHOD(get_SkinName)(THIS_ BSTR FAR* SkinName) PURE;
    STDMETHOD(put_SkinName)(THIS_ BSTR SkinName) PURE;
    STDMETHOD(get_FTPFolder)(THIS_ BSTR FAR* FTPFolder) PURE;
    STDMETHOD(put_FTPFolder)(THIS_ BSTR FTPFolder) PURE;
    STDMETHOD(get_FTPUserName)(THIS_ BSTR FAR* FTPUserName) PURE;
    STDMETHOD(put_FTPUserName)(THIS_ BSTR FTPUserName) PURE;
    STDMETHOD(get_FTPPassword)(THIS_ BSTR FAR* FTPPassword) PURE;
    STDMETHOD(put_FTPPassword)(THIS_ BSTR FTPPassword) PURE;
    STDMETHOD(get_CopyToFolder)(THIS_ BSTR FAR* CopyToFolder) PURE;
    STDMETHOD(put_CopyToFolder)(THIS_ BSTR CopyToFolder) PURE;
    STDMETHOD(get_BatchFileName)(THIS_ BSTR FAR* BatchFileName) PURE;
    STDMETHOD(put_BatchFileName)(THIS_ BSTR BatchFileName) PURE;
    STDMETHOD(get_EnableDifference)(THIS_ VARIANT_BOOL FAR* EnableDifference) PURE;
    STDMETHOD(put_EnableDifference)(THIS_ VARIANT_BOOL EnableDifference) PURE;
    STDMETHOD(get_SupportedVersions)(THIS_ BSTR FAR* SupportedVersions) PURE;
    STDMETHOD(put_SupportedVersions)(THIS_ BSTR SupportedVersions) PURE;
    STDMETHOD(get_UseIncludeInBuildFlags)(THIS_ VARIANT_BOOL FAR* UseIncludeInBuildFlags) PURE;
    STDMETHOD(put_UseIncludeInBuildFlags)(THIS_ VARIANT_BOOL UseIncludeInBuildFlags) PURE;
    STDMETHOD(get_PreviousProMedias)(THIS_ IPreviousProMediasNeptune FAR* FAR* ppPreviousProMedias) PURE;
    STDMETHOD(get_ObjDiffOptions)(THIS_ EnumObjDiffOptions FAR* ObjDiffOptions) PURE;
    STDMETHOD(put_ObjDiffOptions)(THIS_ EnumObjDiffOptions ObjDiffOptions) PURE;
    STDMETHOD(get_CheckMD5)(THIS_ VARIANT_BOOL FAR* CheckMD5) PURE;
    STDMETHOD(put_CheckMD5)(THIS_ VARIANT_BOOL CheckMD5) PURE;
    STDMETHOD(get_OtherDisk)(THIS_ IISDisk1File FAR* pOtherDiskFile, long FAR* OtherDisk) PURE;
    STDMETHOD(put_OtherDisk)(THIS_ IISDisk1File FAR* pOtherDiskFile, long OtherDisk) PURE;
    STDMETHOD(get_ReservedSpaces)(THIS_ IReleaseReservedSpacesNeptune FAR* FAR* ppReservedSpaces) PURE;
    STDMETHOD(get_FeaturesInBuild)(THIS_ IMultiSelectNeptune FAR* FAR* ppFeaturesInBuild) PURE;
    STDMETHOD(get_FeaturesUncompressed)(THIS_ IMultiSelectNeptune FAR* FAR* ppFeaturesUncompressed) PURE;
    STDMETHOD(get_DisplayBuildLocation)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_InitDlgProductName)(THIS_ BSTR FAR* InitDlgProductName) PURE;
    STDMETHOD(put_InitDlgProductName)(THIS_ BSTR InitDlgProductName) PURE;
    STDMETHOD(RegisterObject)(THIS_ BSTR FAR* bstrWizardFile, long FAR* lResult) PURE;
#endif

    /* IReleaseProProteus methods */
    STDMETHOD(get_CertPassword)(THIS_ BSTR FAR* bstrPassword) PURE;
    STDMETHOD(put_CertPassword)(THIS_ BSTR bstrPassword) PURE;
};

DEFINE_GUID(IID_IReleaseProPluto,0x1574BFB0L,0x8748,0x4D68,0x90,0x50,0xB3,0xAC,0x7E,0x50,0xCE,0xF1);

/* Definition of interface: IReleaseProPluto */
#undef INTERFACE
#define INTERFACE IReleaseProPluto

DECLARE_INTERFACE_(IReleaseProPluto, IReleaseProProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IRelease2 methods */
    STDMETHOD(get_PackageName)(THIS_ BSTR FAR* PackageName) PURE;
    STDMETHOD(put_PackageName)(THIS_ BSTR PackageName) PURE;
    STDMETHOD(get_SupportedLanguagesUI)(THIS_ BSTR FAR* SupportedLanguagesUI) PURE;
    STDMETHOD(put_SupportedLanguagesUI)(THIS_ BSTR SupportedLanguagesUI) PURE;
    STDMETHOD(get_MsiSourceType)(THIS_ EnumMSISourceType FAR* MsiSourceType) PURE;
    STDMETHOD(put_MsiSourceType)(THIS_ EnumMSISourceType MsiSourceType) PURE;
    STDMETHOD(get_Platforms)(THIS_ BSTR FAR* Platforms) PURE;
    STDMETHOD(put_Platforms)(THIS_ BSTR Platforms) PURE;
    STDMETHOD(get_SupportedLanguagesData)(THIS_ BSTR FAR* SupportedLanguagesData) PURE;
    STDMETHOD(put_SupportedLanguagesData)(THIS_ BSTR SupportedLanguagesData) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_LanguageFiltering)(THIS_ VARIANT_BOOL FAR* LanguageFiltering) PURE;
    STDMETHOD(put_LanguageFiltering)(THIS_ VARIANT_BOOL LanguageFiltering) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_DiskSpanning)(THIS_ EnumDiskSpanning FAR* DiskSpanning) PURE;
    STDMETHOD(put_DiskSpanning)(THIS_ EnumDiskSpanning DiskSpanning) PURE;
    STDMETHOD(get_SynchMsi)(THIS_ BSTR FAR* SynchMsi) PURE;
    STDMETHOD(put_SynchMsi)(THIS_ BSTR SynchMsi) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_VersionCopyright)(THIS_ BSTR FAR* VersionCopyright) PURE;
    STDMETHOD(put_VersionCopyright)(THIS_ BSTR VersionCopyright) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_CreateReport)(THIS_ VARIANT_BOOL FAR* CreateReport) PURE;
    STDMETHOD(put_CreateReport)(THIS_ VARIANT_BOOL CreateReport) PURE;
    STDMETHOD(get_CreateLogFile)(THIS_ VARIANT_BOOL FAR* CreateLogFile) PURE;
    STDMETHOD(put_CreateLogFile)(THIS_ VARIANT_BOOL CreateLogFile) PURE;
    STDMETHOD(get_EnableLanguageDialog)(THIS_ VARIANT_BOOL FAR* EnableLanguageDialog) PURE;
    STDMETHOD(put_EnableLanguageDialog)(THIS_ VARIANT_BOOL EnableLanguageDialog) PURE;
    STDMETHOD(get_CopyMM)(THIS_ VARIANT_BOOL FAR* CopyMM) PURE;
    STDMETHOD(put_CopyMM)(THIS_ VARIANT_BOOL CopyMM) PURE;
    STDMETHOD(get_UseTestPathVariables)(THIS_ VARIANT_BOOL FAR* UseTestPathVariables) PURE;
    STDMETHOD(put_UseTestPathVariables)(THIS_ VARIANT_BOOL UseTestPathVariables) PURE;
    STDMETHOD(get_CreateAutorun)(THIS_ VARIANT_BOOL FAR* CreateAutorun) PURE;
    STDMETHOD(put_CreateAutorun)(THIS_ VARIANT_BOOL CreateAutorun) PURE;
    STDMETHOD(get_CreatePDF)(THIS_ VARIANT_BOOL FAR* CreatePDF) PURE;
    STDMETHOD(put_CreatePDF)(THIS_ VARIANT_BOOL CreatePDF) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* PasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL PasswordProtect) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* UseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL UseMyVersionInfo) PURE;
    STDMETHOD(get_SuppressWin2K)(THIS_ VARIANT_BOOL FAR* SuppressWin2K) PURE;
    STDMETHOD(put_SuppressWin2K)(THIS_ VARIANT_BOOL SuppressWin2K) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_LogicalDisks)(THIS_ ILogicalDisks FAR* FAR* pLogicalDisks) PURE;
    STDMETHOD(get_BuildLabel)(THIS_ IBuildLabel FAR* FAR* pBuildLabel) PURE;
    STDMETHOD(IsMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe, VARIANT_BOOL FAR* pvbIsMatch) PURE;
    STDMETHOD(MakeMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe) PURE;
    STDMETHOD(AddChild)(THIS_ EnumReleaseChild ercChild, long nDiskId, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(IsLanguageRequired)(THIS_ BSTR bstrLangID, VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(get_FeatureDiskID)(THIS_ BSTR bstrFeatureID, short FAR* nDiskId) PURE;
    STDMETHOD(get_FeatureCompressed)(THIS_ BSTR bstrFeatureID, VARIANT_BOOL FAR* vbCompressed) PURE;
    STDMETHOD(get_WebType)(THIS_ EnumWebType FAR* eWebType) PURE;
    STDMETHOD(put_WebType)(THIS_ EnumWebType eWebType) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* bstrWebURL) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrWebURL) PURE;
    STDMETHOD(get_WrapMsiIntoCab)(THIS_ VARIANT_BOOL FAR* bWrapMsiIntoCab) PURE;
    STDMETHOD(put_WrapMsiIntoCab)(THIS_ VARIANT_BOOL bWrapMsiIntoCab) PURE;
    STDMETHOD(get_WebCabSize)(THIS_ long FAR* WebCabSize) PURE;
    STDMETHOD(put_WebCabSize)(THIS_ long WebCabSize) PURE;
    STDMETHOD(get_GenerateOneClick)(THIS_ VARIANT_BOOL FAR* bGenerateOneClick) PURE;
    STDMETHOD(put_GenerateOneClick)(THIS_ VARIANT_BOOL bGenerateOneClick) PURE;
    STDMETHOD(get_OneClickHtmlName)(THIS_ BSTR FAR* bstrOneClickHtmlName) PURE;
    STDMETHOD(put_OneClickHtmlName)(THIS_ BSTR bstrOneClickHtmlName) PURE;
    STDMETHOD(get_OneClickCabName)(THIS_ BSTR FAR* bstrOneClickCabName) PURE;
    STDMETHOD(put_OneClickCabName)(THIS_ BSTR bstrOneClickCabName) PURE;
    STDMETHOD(get_CacheWebPkgLocally)(THIS_ VARIANT_BOOL FAR* bCacheWebPkgLocally) PURE;
    STDMETHOD(put_CacheWebPkgLocally)(THIS_ VARIANT_BOOL bCacheWebPkgLocally) PURE;
    STDMETHOD(get_WebLocalCachePath)(THIS_ BSTR FAR* bstrWebLocalCachePath) PURE;
    STDMETHOD(put_WebLocalCachePath)(THIS_ BSTR bstrWebLocalCachePath) PURE;
    STDMETHOD(get_EngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_EngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_DelayEngineReboot)(THIS_ VARIANT_BOOL FAR* bDelayEngineReboot) PURE;
    STDMETHOD(put_DelayEngineReboot)(THIS_ VARIANT_BOOL bDelayEngineReboot) PURE;
    STDMETHOD(get_Win9xMsiUrl)(THIS_ BSTR FAR* bstrWin9xMsiUrl) PURE;
    STDMETHOD(put_Win9xMsiUrl)(THIS_ BSTR bstrWin9xMsiUrl) PURE;
    STDMETHOD(get_WinNTMsiUrl)(THIS_ BSTR FAR* bstrWinNTMsiUrl) PURE;
    STDMETHOD(put_WinNTMsiUrl)(THIS_ BSTR bstrWinNTMsiUrl) PURE;
    STDMETHOD(get_ISEngineURL)(THIS_ BSTR FAR* bstrISEngineURL) PURE;
    STDMETHOD(put_ISEngineURL)(THIS_ BSTR bstrISEngineURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_ISEngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_ISEngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* bstrRootSetupFolder) PURE;
    STDMETHOD(get_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser FAR* eOCITargetBrowser) PURE;
    STDMETHOD(put_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser eOCITargetBrowser) PURE;
    STDMETHOD(get_DigitalCertificateIdNS)(THIS_ BSTR FAR* DigitalCertificateIdNS) PURE;
    STDMETHOD(put_DigitalCertificateIdNS)(THIS_ BSTR DigitalCertificateIdNS) PURE;
    STDMETHOD(get_DigitalCertificateDBaseNS)(THIS_ BSTR FAR* DigitalCertificateDBaseNS) PURE;
    STDMETHOD(put_DigitalCertificateDBaseNS)(THIS_ BSTR DigitalCertificateDBaseNS) PURE;
    STDMETHOD(get_DigitalCertificatePasswordNS)(THIS_ BSTR FAR* DigitalCertificatePasswordNS) PURE;
    STDMETHOD(put_DigitalCertificatePasswordNS)(THIS_ BSTR DigitalCertificatePasswordNS) PURE;
    STDMETHOD(get_CDBrowser)(THIS_ BSTR FAR* CDBrowser) PURE;
    STDMETHOD(put_CDBrowser)(THIS_ BSTR CDBrowser) PURE;
    STDMETHOD(get_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL FAR* bCabPerFeature) PURE;
    STDMETHOD(put_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL bCabPerFeature) PURE;
    STDMETHOD(get_DotNetBuildConfiguration)(THIS_ BSTR FAR* sDotNetBuildConfiguration) PURE;
    STDMETHOD(put_DotNetBuildConfiguration)(THIS_ BSTR sDotNetBuildConfiguration) PURE;
    STDMETHOD(get_DotNetRedistURL)(THIS_ BSTR FAR* bstrDotNetRedistURL) PURE;
    STDMETHOD(put_DotNetRedistURL)(THIS_ BSTR bstrDotNetRedistURL) PURE;
    STDMETHOD(get_DotNetRedistLocation)(THIS_ EnumEngineLocation FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetRedistLocation)(THIS_ EnumEngineLocation eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetUI)(THIS_ VARIANT_BOOL FAR* pvbUseDotNetUI) PURE;
    STDMETHOD(put_DotNetUI)(THIS_ VARIANT_BOOL vbUseDotNetUI) PURE;
    STDMETHOD(get_GenerateFileHashValues)(THIS_ VARIANT_BOOL FAR* pvbGenerateFileHashValues) PURE;
    STDMETHOD(put_GenerateFileHashValues)(THIS_ VARIANT_BOOL vbGenerateFileHashValues) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eMsiEngineVersion) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eMsiEngineVersion) PURE;
    STDMETHOD(get_MsiCommandLine)(THIS_ BSTR FAR* bstrMsiCommandLine) PURE;
    STDMETHOD(put_MsiCommandLine)(THIS_ BSTR bstrMsiCommandLine) PURE;
    STDMETHOD(get_SuppressARP)(THIS_ VARIANT_BOOL FAR* pvbSuppressARP) PURE;
    STDMETHOD(put_SuppressARP)(THIS_ VARIANT_BOOL vbSuppressARP) PURE;
    STDMETHOD(get_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL FAR* pvbShowDotNetSetupExeSelection) PURE;
    STDMETHOD(put_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL ShowDotNetSetupExeSelection) PURE;
    STDMETHOD(get_SmallInit)(THIS_ VARIANT_BOOL FAR* pvbSmallInit) PURE;
    STDMETHOD(put_SmallInit)(THIS_ VARIANT_BOOL SmallInit) PURE;
    STDMETHOD(get_ShallowFolder)(THIS_ VARIANT_BOOL FAR* pvbShallowFolder) PURE;
    STDMETHOD(put_ShallowFolder)(THIS_ VARIANT_BOOL ShallowFolder) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_DontEncrypt)(THIS_ VARIANT_BOOL FAR* pbstrDontEncrypt) PURE;
    STDMETHOD(put_DontEncrypt)(THIS_ VARIANT_BOOL bstrDontEncrypt) PURE;
    STDMETHOD(get_DotNetVersion)(THIS_ EnumDotNetVersion FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetVersion)(THIS_ EnumDotNetVersion eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetBaseLanguage)(THIS_ BSTR FAR* DotNetBaseLanguage) PURE;
    STDMETHOD(put_DotNetBaseLanguage)(THIS_ BSTR DotNetBaseLanguage) PURE;
    STDMETHOD(get_DotNetLangaugePacks)(THIS_ BSTR FAR* DotNetLangaugePacks) PURE;
    STDMETHOD(put_DotNetLangaugePacks)(THIS_ BSTR DotNetLangaugePacks) PURE;
    STDMETHOD(get_DotNetFxCmdLine)(THIS_ BSTR FAR* DotNetFxCmdLine) PURE;
    STDMETHOD(put_DotNetFxCmdLine)(THIS_ BSTR DotNetFxCmdLine) PURE;
    STDMETHOD(get_DotNetLangPackCmdLine)(THIS_ BSTR FAR* DotNetLangPackCmdLine) PURE;
    STDMETHOD(put_DotNetLangPackCmdLine)(THIS_ BSTR DotNetLangPackCmdLine) PURE;
    STDMETHOD(get_SignMedia)(THIS_ EnumSignMedia FAR* pSignMedia) PURE;
    STDMETHOD(put_SignMedia)(THIS_ EnumSignMedia SignMedia) PURE;
    STDMETHOD(get_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbDotNetOptionalIfSilent) PURE;
    STDMETHOD(put_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL bDotNetOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpCmdLine)(THIS_ BSTR FAR* pbstrJSharpCmdLine) PURE;
    STDMETHOD(put_JSharpCmdLine)(THIS_ BSTR bstrJSharpCmdLine) PURE;
    STDMETHOD(get_JSharpOptionDlg)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionDlg) PURE;
    STDMETHOD(put_JSharpOptionDlg)(THIS_ VARIANT_BOOL bJSharpOptionDlg) PURE;
    STDMETHOD(get_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionalIfSilent) PURE;
    STDMETHOD(put_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL bJSharpOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpRedistLocation)(THIS_ EnumEngineLocation FAR* eJSharpRedistLocation) PURE;
    STDMETHOD(put_JSharpRedistLocation)(THIS_ EnumEngineLocation eJSharpRedistLocation) PURE;

    /* IReleaseNeptune methods */
    STDMETHOD(get_DistributeAfterBuild)(THIS_ VARIANT_BOOL FAR* vbDistribute) PURE;
    STDMETHOD(put_DistributeAfterBuild)(THIS_ VARIANT_BOOL vbDistribute) PURE;
    STDMETHOD(get_IsCompactBuild)(THIS_ VARIANT_BOOL FAR* vbCompactBuild) PURE;

    /* IReleaseProNeptune methods */
    STDMETHOD(get_ShowPasswordDlg)(THIS_ VARIANT_BOOL FAR* ShowPasswordDlg) PURE;
    STDMETHOD(put_ShowPasswordDlg)(THIS_ VARIANT_BOOL ShowPasswordDlg) PURE;
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* GUID) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR GUID) PURE;
    STDMETHOD(get_SingleEXEFileName)(THIS_ BSTR FAR* SingleEXEFileName) PURE;
    STDMETHOD(put_SingleEXEFileName)(THIS_ BSTR SingleEXEFileName) PURE;
    STDMETHOD(get_SingleEXEIconName)(THIS_ BSTR FAR* SingleEXEIconName) PURE;
    STDMETHOD(put_SingleEXEIconName)(THIS_ BSTR SingleEXEIconName) PURE;
    STDMETHOD(get_SetupCmdLine)(THIS_ BSTR FAR* SetupCmdLine) PURE;
    STDMETHOD(put_SetupCmdLine)(THIS_ BSTR SetupCmdLine) PURE;
    STDMETHOD(get_CompressScript)(THIS_ VARIANT_BOOL FAR* CompressScript) PURE;
    STDMETHOD(put_CompressScript)(THIS_ VARIANT_BOOL CompressScript) PURE;
    STDMETHOD(get_PreProcessorDefines)(THIS_ BSTR FAR* PreProcessorDefines) PURE;
    STDMETHOD(put_PreProcessorDefines)(THIS_ BSTR PreProcessorDefines) PURE;
    STDMETHOD(get_SetupDlgAppName)(THIS_ BSTR FAR* SetupDlgAppName) PURE;
    STDMETHOD(put_SetupDlgAppName)(THIS_ BSTR SetupDlgAppName) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* OSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long OSFilter) PURE;
    STDMETHOD(get_WebNetscapeSupport)(THIS_ VARIANT_BOOL FAR* WebNetscapeSupport) PURE;
    STDMETHOD(put_WebNetscapeSupport)(THIS_ VARIANT_BOOL WebNetscapeSupport) PURE;
    STDMETHOD(get_WebSaveOptionsDlg)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsDlg) PURE;
    STDMETHOD(put_WebSaveOptionsDlg)(THIS_ VARIANT_BOOL WebSaveOptionsDlg) PURE;
    STDMETHOD(get_WebSecurityDlg)(THIS_ VARIANT_BOOL FAR* WebSecurityDlg) PURE;
    STDMETHOD(put_WebSecurityDlg)(THIS_ VARIANT_BOOL WebSecurityDlg) PURE;
    STDMETHOD(get_WebCreateDefaultPage)(THIS_ VARIANT_BOOL FAR* WebCreateDefaultPage) PURE;
    STDMETHOD(put_WebCreateDefaultPage)(THIS_ VARIANT_BOOL WebCreateDefaultPage) PURE;
    STDMETHOD(get_WebPageUrl)(THIS_ BSTR FAR* WebPageUrl) PURE;
    STDMETHOD(put_WebPageUrl)(THIS_ BSTR WebPageUrl) PURE;
    STDMETHOD(get_WebSaveOptionsRunOnly)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsRunOnly) PURE;
    STDMETHOD(put_WebSaveOptionsRunOnly)(THIS_ VARIANT_BOOL WebSaveOptionsRunOnly) PURE;
    STDMETHOD(get_WebSaveOptionsSaveAndRun)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsSaveAndRun) PURE;
    STDMETHOD(put_WebSaveOptionsSaveAndRun)(THIS_ VARIANT_BOOL WebSaveOptionsSaveAndRun) PURE;
    STDMETHOD(get_WebSaveOptionsSaveOnly)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsSaveOnly) PURE;
    STDMETHOD(put_WebSaveOptionsSaveOnly)(THIS_ VARIANT_BOOL WebSaveOptionsSaveOnly) PURE;
    STDMETHOD(get_WebSaveOptionsCreateShortcut)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsCreateShortcut) PURE;
    STDMETHOD(put_WebSaveOptionsCreateShortcut)(THIS_ VARIANT_BOOL WebSaveOptionsCreateShortcut) PURE;
    STDMETHOD(get_UseProjectSkin)(THIS_ VARIANT_BOOL FAR* UseProjectSkin) PURE;
    STDMETHOD(put_UseProjectSkin)(THIS_ VARIANT_BOOL UseProjectSkin) PURE;
    STDMETHOD(get_SkinName)(THIS_ BSTR FAR* SkinName) PURE;
    STDMETHOD(put_SkinName)(THIS_ BSTR SkinName) PURE;
    STDMETHOD(get_FTPFolder)(THIS_ BSTR FAR* FTPFolder) PURE;
    STDMETHOD(put_FTPFolder)(THIS_ BSTR FTPFolder) PURE;
    STDMETHOD(get_FTPUserName)(THIS_ BSTR FAR* FTPUserName) PURE;
    STDMETHOD(put_FTPUserName)(THIS_ BSTR FTPUserName) PURE;
    STDMETHOD(get_FTPPassword)(THIS_ BSTR FAR* FTPPassword) PURE;
    STDMETHOD(put_FTPPassword)(THIS_ BSTR FTPPassword) PURE;
    STDMETHOD(get_CopyToFolder)(THIS_ BSTR FAR* CopyToFolder) PURE;
    STDMETHOD(put_CopyToFolder)(THIS_ BSTR CopyToFolder) PURE;
    STDMETHOD(get_BatchFileName)(THIS_ BSTR FAR* BatchFileName) PURE;
    STDMETHOD(put_BatchFileName)(THIS_ BSTR BatchFileName) PURE;
    STDMETHOD(get_EnableDifference)(THIS_ VARIANT_BOOL FAR* EnableDifference) PURE;
    STDMETHOD(put_EnableDifference)(THIS_ VARIANT_BOOL EnableDifference) PURE;
    STDMETHOD(get_SupportedVersions)(THIS_ BSTR FAR* SupportedVersions) PURE;
    STDMETHOD(put_SupportedVersions)(THIS_ BSTR SupportedVersions) PURE;
    STDMETHOD(get_UseIncludeInBuildFlags)(THIS_ VARIANT_BOOL FAR* UseIncludeInBuildFlags) PURE;
    STDMETHOD(put_UseIncludeInBuildFlags)(THIS_ VARIANT_BOOL UseIncludeInBuildFlags) PURE;
    STDMETHOD(get_PreviousProMedias)(THIS_ IPreviousProMediasNeptune FAR* FAR* ppPreviousProMedias) PURE;
    STDMETHOD(get_ObjDiffOptions)(THIS_ EnumObjDiffOptions FAR* ObjDiffOptions) PURE;
    STDMETHOD(put_ObjDiffOptions)(THIS_ EnumObjDiffOptions ObjDiffOptions) PURE;
    STDMETHOD(get_CheckMD5)(THIS_ VARIANT_BOOL FAR* CheckMD5) PURE;
    STDMETHOD(put_CheckMD5)(THIS_ VARIANT_BOOL CheckMD5) PURE;
    STDMETHOD(get_OtherDisk)(THIS_ IISDisk1File FAR* pOtherDiskFile, long FAR* OtherDisk) PURE;
    STDMETHOD(put_OtherDisk)(THIS_ IISDisk1File FAR* pOtherDiskFile, long OtherDisk) PURE;
    STDMETHOD(get_ReservedSpaces)(THIS_ IReleaseReservedSpacesNeptune FAR* FAR* ppReservedSpaces) PURE;
    STDMETHOD(get_FeaturesInBuild)(THIS_ IMultiSelectNeptune FAR* FAR* ppFeaturesInBuild) PURE;
    STDMETHOD(get_FeaturesUncompressed)(THIS_ IMultiSelectNeptune FAR* FAR* ppFeaturesUncompressed) PURE;
    STDMETHOD(get_DisplayBuildLocation)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_InitDlgProductName)(THIS_ BSTR FAR* InitDlgProductName) PURE;
    STDMETHOD(put_InitDlgProductName)(THIS_ BSTR InitDlgProductName) PURE;
    STDMETHOD(RegisterObject)(THIS_ BSTR FAR* bstrWizardFile, long FAR* lResult) PURE;

    /* IReleaseProProteus methods */
    STDMETHOD(get_CertPassword)(THIS_ BSTR FAR* bstrPassword) PURE;
    STDMETHOD(put_CertPassword)(THIS_ BSTR bstrPassword) PURE;
#endif

    /* IReleaseProPluto methods */
    STDMETHOD(get_IsDRMDisabled)(THIS_ VARIANT_BOOL FAR* pIsDRMDisabled) PURE;
    STDMETHOD(put_IsDRMDisabled)(THIS_ VARIANT_BOOL IsDRMDisabled) PURE;
    STDMETHOD(get_PublishInfo)(THIS_ IReleasePublishInfoPluto FAR* FAR* ppPublishInfo) PURE;
};

DEFINE_GUID(IID_IReleaseProIronwood,0x1C31458FL,0xFE6D,0x4CAE,0xBA,0xF4,0x85,0xCC,0x6C,0x9D,0x50,0x64);

/* Definition of interface: IReleaseProIronwood */
#undef INTERFACE
#define INTERFACE IReleaseProIronwood

DECLARE_INTERFACE_(IReleaseProIronwood, IReleaseProPluto)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IRelease2 methods */
    STDMETHOD(get_PackageName)(THIS_ BSTR FAR* PackageName) PURE;
    STDMETHOD(put_PackageName)(THIS_ BSTR PackageName) PURE;
    STDMETHOD(get_SupportedLanguagesUI)(THIS_ BSTR FAR* SupportedLanguagesUI) PURE;
    STDMETHOD(put_SupportedLanguagesUI)(THIS_ BSTR SupportedLanguagesUI) PURE;
    STDMETHOD(get_MsiSourceType)(THIS_ EnumMSISourceType FAR* MsiSourceType) PURE;
    STDMETHOD(put_MsiSourceType)(THIS_ EnumMSISourceType MsiSourceType) PURE;
    STDMETHOD(get_Platforms)(THIS_ BSTR FAR* Platforms) PURE;
    STDMETHOD(put_Platforms)(THIS_ BSTR Platforms) PURE;
    STDMETHOD(get_SupportedLanguagesData)(THIS_ BSTR FAR* SupportedLanguagesData) PURE;
    STDMETHOD(put_SupportedLanguagesData)(THIS_ BSTR SupportedLanguagesData) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_LanguageFiltering)(THIS_ VARIANT_BOOL FAR* LanguageFiltering) PURE;
    STDMETHOD(put_LanguageFiltering)(THIS_ VARIANT_BOOL LanguageFiltering) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_DiskSpanning)(THIS_ EnumDiskSpanning FAR* DiskSpanning) PURE;
    STDMETHOD(put_DiskSpanning)(THIS_ EnumDiskSpanning DiskSpanning) PURE;
    STDMETHOD(get_SynchMsi)(THIS_ BSTR FAR* SynchMsi) PURE;
    STDMETHOD(put_SynchMsi)(THIS_ BSTR SynchMsi) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_VersionCopyright)(THIS_ BSTR FAR* VersionCopyright) PURE;
    STDMETHOD(put_VersionCopyright)(THIS_ BSTR VersionCopyright) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_CreateReport)(THIS_ VARIANT_BOOL FAR* CreateReport) PURE;
    STDMETHOD(put_CreateReport)(THIS_ VARIANT_BOOL CreateReport) PURE;
    STDMETHOD(get_CreateLogFile)(THIS_ VARIANT_BOOL FAR* CreateLogFile) PURE;
    STDMETHOD(put_CreateLogFile)(THIS_ VARIANT_BOOL CreateLogFile) PURE;
    STDMETHOD(get_EnableLanguageDialog)(THIS_ VARIANT_BOOL FAR* EnableLanguageDialog) PURE;
    STDMETHOD(put_EnableLanguageDialog)(THIS_ VARIANT_BOOL EnableLanguageDialog) PURE;
    STDMETHOD(get_CopyMM)(THIS_ VARIANT_BOOL FAR* CopyMM) PURE;
    STDMETHOD(put_CopyMM)(THIS_ VARIANT_BOOL CopyMM) PURE;
    STDMETHOD(get_UseTestPathVariables)(THIS_ VARIANT_BOOL FAR* UseTestPathVariables) PURE;
    STDMETHOD(put_UseTestPathVariables)(THIS_ VARIANT_BOOL UseTestPathVariables) PURE;
    STDMETHOD(get_CreateAutorun)(THIS_ VARIANT_BOOL FAR* CreateAutorun) PURE;
    STDMETHOD(put_CreateAutorun)(THIS_ VARIANT_BOOL CreateAutorun) PURE;
    STDMETHOD(get_CreatePDF)(THIS_ VARIANT_BOOL FAR* CreatePDF) PURE;
    STDMETHOD(put_CreatePDF)(THIS_ VARIANT_BOOL CreatePDF) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* PasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL PasswordProtect) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* UseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL UseMyVersionInfo) PURE;
    STDMETHOD(get_SuppressWin2K)(THIS_ VARIANT_BOOL FAR* SuppressWin2K) PURE;
    STDMETHOD(put_SuppressWin2K)(THIS_ VARIANT_BOOL SuppressWin2K) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_LogicalDisks)(THIS_ ILogicalDisks FAR* FAR* pLogicalDisks) PURE;
    STDMETHOD(get_BuildLabel)(THIS_ IBuildLabel FAR* FAR* pBuildLabel) PURE;
    STDMETHOD(IsMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe, VARIANT_BOOL FAR* pvbIsMatch) PURE;
    STDMETHOD(MakeMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe) PURE;
    STDMETHOD(AddChild)(THIS_ EnumReleaseChild ercChild, long nDiskId, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(IsLanguageRequired)(THIS_ BSTR bstrLangID, VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(get_FeatureDiskID)(THIS_ BSTR bstrFeatureID, short FAR* nDiskId) PURE;
    STDMETHOD(get_FeatureCompressed)(THIS_ BSTR bstrFeatureID, VARIANT_BOOL FAR* vbCompressed) PURE;
    STDMETHOD(get_WebType)(THIS_ EnumWebType FAR* eWebType) PURE;
    STDMETHOD(put_WebType)(THIS_ EnumWebType eWebType) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* bstrWebURL) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrWebURL) PURE;
    STDMETHOD(get_WrapMsiIntoCab)(THIS_ VARIANT_BOOL FAR* bWrapMsiIntoCab) PURE;
    STDMETHOD(put_WrapMsiIntoCab)(THIS_ VARIANT_BOOL bWrapMsiIntoCab) PURE;
    STDMETHOD(get_WebCabSize)(THIS_ long FAR* WebCabSize) PURE;
    STDMETHOD(put_WebCabSize)(THIS_ long WebCabSize) PURE;
    STDMETHOD(get_GenerateOneClick)(THIS_ VARIANT_BOOL FAR* bGenerateOneClick) PURE;
    STDMETHOD(put_GenerateOneClick)(THIS_ VARIANT_BOOL bGenerateOneClick) PURE;
    STDMETHOD(get_OneClickHtmlName)(THIS_ BSTR FAR* bstrOneClickHtmlName) PURE;
    STDMETHOD(put_OneClickHtmlName)(THIS_ BSTR bstrOneClickHtmlName) PURE;
    STDMETHOD(get_OneClickCabName)(THIS_ BSTR FAR* bstrOneClickCabName) PURE;
    STDMETHOD(put_OneClickCabName)(THIS_ BSTR bstrOneClickCabName) PURE;
    STDMETHOD(get_CacheWebPkgLocally)(THIS_ VARIANT_BOOL FAR* bCacheWebPkgLocally) PURE;
    STDMETHOD(put_CacheWebPkgLocally)(THIS_ VARIANT_BOOL bCacheWebPkgLocally) PURE;
    STDMETHOD(get_WebLocalCachePath)(THIS_ BSTR FAR* bstrWebLocalCachePath) PURE;
    STDMETHOD(put_WebLocalCachePath)(THIS_ BSTR bstrWebLocalCachePath) PURE;
    STDMETHOD(get_EngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_EngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_DelayEngineReboot)(THIS_ VARIANT_BOOL FAR* bDelayEngineReboot) PURE;
    STDMETHOD(put_DelayEngineReboot)(THIS_ VARIANT_BOOL bDelayEngineReboot) PURE;
    STDMETHOD(get_Win9xMsiUrl)(THIS_ BSTR FAR* bstrWin9xMsiUrl) PURE;
    STDMETHOD(put_Win9xMsiUrl)(THIS_ BSTR bstrWin9xMsiUrl) PURE;
    STDMETHOD(get_WinNTMsiUrl)(THIS_ BSTR FAR* bstrWinNTMsiUrl) PURE;
    STDMETHOD(put_WinNTMsiUrl)(THIS_ BSTR bstrWinNTMsiUrl) PURE;
    STDMETHOD(get_ISEngineURL)(THIS_ BSTR FAR* bstrISEngineURL) PURE;
    STDMETHOD(put_ISEngineURL)(THIS_ BSTR bstrISEngineURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_ISEngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_ISEngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* bstrRootSetupFolder) PURE;
    STDMETHOD(get_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser FAR* eOCITargetBrowser) PURE;
    STDMETHOD(put_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser eOCITargetBrowser) PURE;
    STDMETHOD(get_DigitalCertificateIdNS)(THIS_ BSTR FAR* DigitalCertificateIdNS) PURE;
    STDMETHOD(put_DigitalCertificateIdNS)(THIS_ BSTR DigitalCertificateIdNS) PURE;
    STDMETHOD(get_DigitalCertificateDBaseNS)(THIS_ BSTR FAR* DigitalCertificateDBaseNS) PURE;
    STDMETHOD(put_DigitalCertificateDBaseNS)(THIS_ BSTR DigitalCertificateDBaseNS) PURE;
    STDMETHOD(get_DigitalCertificatePasswordNS)(THIS_ BSTR FAR* DigitalCertificatePasswordNS) PURE;
    STDMETHOD(put_DigitalCertificatePasswordNS)(THIS_ BSTR DigitalCertificatePasswordNS) PURE;
    STDMETHOD(get_CDBrowser)(THIS_ BSTR FAR* CDBrowser) PURE;
    STDMETHOD(put_CDBrowser)(THIS_ BSTR CDBrowser) PURE;
    STDMETHOD(get_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL FAR* bCabPerFeature) PURE;
    STDMETHOD(put_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL bCabPerFeature) PURE;
    STDMETHOD(get_DotNetBuildConfiguration)(THIS_ BSTR FAR* sDotNetBuildConfiguration) PURE;
    STDMETHOD(put_DotNetBuildConfiguration)(THIS_ BSTR sDotNetBuildConfiguration) PURE;
    STDMETHOD(get_DotNetRedistURL)(THIS_ BSTR FAR* bstrDotNetRedistURL) PURE;
    STDMETHOD(put_DotNetRedistURL)(THIS_ BSTR bstrDotNetRedistURL) PURE;
    STDMETHOD(get_DotNetRedistLocation)(THIS_ EnumEngineLocation FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetRedistLocation)(THIS_ EnumEngineLocation eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetUI)(THIS_ VARIANT_BOOL FAR* pvbUseDotNetUI) PURE;
    STDMETHOD(put_DotNetUI)(THIS_ VARIANT_BOOL vbUseDotNetUI) PURE;
    STDMETHOD(get_GenerateFileHashValues)(THIS_ VARIANT_BOOL FAR* pvbGenerateFileHashValues) PURE;
    STDMETHOD(put_GenerateFileHashValues)(THIS_ VARIANT_BOOL vbGenerateFileHashValues) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eMsiEngineVersion) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eMsiEngineVersion) PURE;
    STDMETHOD(get_MsiCommandLine)(THIS_ BSTR FAR* bstrMsiCommandLine) PURE;
    STDMETHOD(put_MsiCommandLine)(THIS_ BSTR bstrMsiCommandLine) PURE;
    STDMETHOD(get_SuppressARP)(THIS_ VARIANT_BOOL FAR* pvbSuppressARP) PURE;
    STDMETHOD(put_SuppressARP)(THIS_ VARIANT_BOOL vbSuppressARP) PURE;
    STDMETHOD(get_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL FAR* pvbShowDotNetSetupExeSelection) PURE;
    STDMETHOD(put_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL ShowDotNetSetupExeSelection) PURE;
    STDMETHOD(get_SmallInit)(THIS_ VARIANT_BOOL FAR* pvbSmallInit) PURE;
    STDMETHOD(put_SmallInit)(THIS_ VARIANT_BOOL SmallInit) PURE;
    STDMETHOD(get_ShallowFolder)(THIS_ VARIANT_BOOL FAR* pvbShallowFolder) PURE;
    STDMETHOD(put_ShallowFolder)(THIS_ VARIANT_BOOL ShallowFolder) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_DontEncrypt)(THIS_ VARIANT_BOOL FAR* pbstrDontEncrypt) PURE;
    STDMETHOD(put_DontEncrypt)(THIS_ VARIANT_BOOL bstrDontEncrypt) PURE;
    STDMETHOD(get_DotNetVersion)(THIS_ EnumDotNetVersion FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetVersion)(THIS_ EnumDotNetVersion eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetBaseLanguage)(THIS_ BSTR FAR* DotNetBaseLanguage) PURE;
    STDMETHOD(put_DotNetBaseLanguage)(THIS_ BSTR DotNetBaseLanguage) PURE;
    STDMETHOD(get_DotNetLangaugePacks)(THIS_ BSTR FAR* DotNetLangaugePacks) PURE;
    STDMETHOD(put_DotNetLangaugePacks)(THIS_ BSTR DotNetLangaugePacks) PURE;
    STDMETHOD(get_DotNetFxCmdLine)(THIS_ BSTR FAR* DotNetFxCmdLine) PURE;
    STDMETHOD(put_DotNetFxCmdLine)(THIS_ BSTR DotNetFxCmdLine) PURE;
    STDMETHOD(get_DotNetLangPackCmdLine)(THIS_ BSTR FAR* DotNetLangPackCmdLine) PURE;
    STDMETHOD(put_DotNetLangPackCmdLine)(THIS_ BSTR DotNetLangPackCmdLine) PURE;
    STDMETHOD(get_SignMedia)(THIS_ EnumSignMedia FAR* pSignMedia) PURE;
    STDMETHOD(put_SignMedia)(THIS_ EnumSignMedia SignMedia) PURE;
    STDMETHOD(get_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbDotNetOptionalIfSilent) PURE;
    STDMETHOD(put_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL bDotNetOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpCmdLine)(THIS_ BSTR FAR* pbstrJSharpCmdLine) PURE;
    STDMETHOD(put_JSharpCmdLine)(THIS_ BSTR bstrJSharpCmdLine) PURE;
    STDMETHOD(get_JSharpOptionDlg)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionDlg) PURE;
    STDMETHOD(put_JSharpOptionDlg)(THIS_ VARIANT_BOOL bJSharpOptionDlg) PURE;
    STDMETHOD(get_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionalIfSilent) PURE;
    STDMETHOD(put_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL bJSharpOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpRedistLocation)(THIS_ EnumEngineLocation FAR* eJSharpRedistLocation) PURE;
    STDMETHOD(put_JSharpRedistLocation)(THIS_ EnumEngineLocation eJSharpRedistLocation) PURE;

    /* IReleaseNeptune methods */
    STDMETHOD(get_DistributeAfterBuild)(THIS_ VARIANT_BOOL FAR* vbDistribute) PURE;
    STDMETHOD(put_DistributeAfterBuild)(THIS_ VARIANT_BOOL vbDistribute) PURE;
    STDMETHOD(get_IsCompactBuild)(THIS_ VARIANT_BOOL FAR* vbCompactBuild) PURE;

    /* IReleaseProNeptune methods */
    STDMETHOD(get_ShowPasswordDlg)(THIS_ VARIANT_BOOL FAR* ShowPasswordDlg) PURE;
    STDMETHOD(put_ShowPasswordDlg)(THIS_ VARIANT_BOOL ShowPasswordDlg) PURE;
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* GUID) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR GUID) PURE;
    STDMETHOD(get_SingleEXEFileName)(THIS_ BSTR FAR* SingleEXEFileName) PURE;
    STDMETHOD(put_SingleEXEFileName)(THIS_ BSTR SingleEXEFileName) PURE;
    STDMETHOD(get_SingleEXEIconName)(THIS_ BSTR FAR* SingleEXEIconName) PURE;
    STDMETHOD(put_SingleEXEIconName)(THIS_ BSTR SingleEXEIconName) PURE;
    STDMETHOD(get_SetupCmdLine)(THIS_ BSTR FAR* SetupCmdLine) PURE;
    STDMETHOD(put_SetupCmdLine)(THIS_ BSTR SetupCmdLine) PURE;
    STDMETHOD(get_CompressScript)(THIS_ VARIANT_BOOL FAR* CompressScript) PURE;
    STDMETHOD(put_CompressScript)(THIS_ VARIANT_BOOL CompressScript) PURE;
    STDMETHOD(get_PreProcessorDefines)(THIS_ BSTR FAR* PreProcessorDefines) PURE;
    STDMETHOD(put_PreProcessorDefines)(THIS_ BSTR PreProcessorDefines) PURE;
    STDMETHOD(get_SetupDlgAppName)(THIS_ BSTR FAR* SetupDlgAppName) PURE;
    STDMETHOD(put_SetupDlgAppName)(THIS_ BSTR SetupDlgAppName) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* OSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long OSFilter) PURE;
    STDMETHOD(get_WebNetscapeSupport)(THIS_ VARIANT_BOOL FAR* WebNetscapeSupport) PURE;
    STDMETHOD(put_WebNetscapeSupport)(THIS_ VARIANT_BOOL WebNetscapeSupport) PURE;
    STDMETHOD(get_WebSaveOptionsDlg)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsDlg) PURE;
    STDMETHOD(put_WebSaveOptionsDlg)(THIS_ VARIANT_BOOL WebSaveOptionsDlg) PURE;
    STDMETHOD(get_WebSecurityDlg)(THIS_ VARIANT_BOOL FAR* WebSecurityDlg) PURE;
    STDMETHOD(put_WebSecurityDlg)(THIS_ VARIANT_BOOL WebSecurityDlg) PURE;
    STDMETHOD(get_WebCreateDefaultPage)(THIS_ VARIANT_BOOL FAR* WebCreateDefaultPage) PURE;
    STDMETHOD(put_WebCreateDefaultPage)(THIS_ VARIANT_BOOL WebCreateDefaultPage) PURE;
    STDMETHOD(get_WebPageUrl)(THIS_ BSTR FAR* WebPageUrl) PURE;
    STDMETHOD(put_WebPageUrl)(THIS_ BSTR WebPageUrl) PURE;
    STDMETHOD(get_WebSaveOptionsRunOnly)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsRunOnly) PURE;
    STDMETHOD(put_WebSaveOptionsRunOnly)(THIS_ VARIANT_BOOL WebSaveOptionsRunOnly) PURE;
    STDMETHOD(get_WebSaveOptionsSaveAndRun)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsSaveAndRun) PURE;
    STDMETHOD(put_WebSaveOptionsSaveAndRun)(THIS_ VARIANT_BOOL WebSaveOptionsSaveAndRun) PURE;
    STDMETHOD(get_WebSaveOptionsSaveOnly)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsSaveOnly) PURE;
    STDMETHOD(put_WebSaveOptionsSaveOnly)(THIS_ VARIANT_BOOL WebSaveOptionsSaveOnly) PURE;
    STDMETHOD(get_WebSaveOptionsCreateShortcut)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsCreateShortcut) PURE;
    STDMETHOD(put_WebSaveOptionsCreateShortcut)(THIS_ VARIANT_BOOL WebSaveOptionsCreateShortcut) PURE;
    STDMETHOD(get_UseProjectSkin)(THIS_ VARIANT_BOOL FAR* UseProjectSkin) PURE;
    STDMETHOD(put_UseProjectSkin)(THIS_ VARIANT_BOOL UseProjectSkin) PURE;
    STDMETHOD(get_SkinName)(THIS_ BSTR FAR* SkinName) PURE;
    STDMETHOD(put_SkinName)(THIS_ BSTR SkinName) PURE;
    STDMETHOD(get_FTPFolder)(THIS_ BSTR FAR* FTPFolder) PURE;
    STDMETHOD(put_FTPFolder)(THIS_ BSTR FTPFolder) PURE;
    STDMETHOD(get_FTPUserName)(THIS_ BSTR FAR* FTPUserName) PURE;
    STDMETHOD(put_FTPUserName)(THIS_ BSTR FTPUserName) PURE;
    STDMETHOD(get_FTPPassword)(THIS_ BSTR FAR* FTPPassword) PURE;
    STDMETHOD(put_FTPPassword)(THIS_ BSTR FTPPassword) PURE;
    STDMETHOD(get_CopyToFolder)(THIS_ BSTR FAR* CopyToFolder) PURE;
    STDMETHOD(put_CopyToFolder)(THIS_ BSTR CopyToFolder) PURE;
    STDMETHOD(get_BatchFileName)(THIS_ BSTR FAR* BatchFileName) PURE;
    STDMETHOD(put_BatchFileName)(THIS_ BSTR BatchFileName) PURE;
    STDMETHOD(get_EnableDifference)(THIS_ VARIANT_BOOL FAR* EnableDifference) PURE;
    STDMETHOD(put_EnableDifference)(THIS_ VARIANT_BOOL EnableDifference) PURE;
    STDMETHOD(get_SupportedVersions)(THIS_ BSTR FAR* SupportedVersions) PURE;
    STDMETHOD(put_SupportedVersions)(THIS_ BSTR SupportedVersions) PURE;
    STDMETHOD(get_UseIncludeInBuildFlags)(THIS_ VARIANT_BOOL FAR* UseIncludeInBuildFlags) PURE;
    STDMETHOD(put_UseIncludeInBuildFlags)(THIS_ VARIANT_BOOL UseIncludeInBuildFlags) PURE;
    STDMETHOD(get_PreviousProMedias)(THIS_ IPreviousProMediasNeptune FAR* FAR* ppPreviousProMedias) PURE;
    STDMETHOD(get_ObjDiffOptions)(THIS_ EnumObjDiffOptions FAR* ObjDiffOptions) PURE;
    STDMETHOD(put_ObjDiffOptions)(THIS_ EnumObjDiffOptions ObjDiffOptions) PURE;
    STDMETHOD(get_CheckMD5)(THIS_ VARIANT_BOOL FAR* CheckMD5) PURE;
    STDMETHOD(put_CheckMD5)(THIS_ VARIANT_BOOL CheckMD5) PURE;
    STDMETHOD(get_OtherDisk)(THIS_ IISDisk1File FAR* pOtherDiskFile, long FAR* OtherDisk) PURE;
    STDMETHOD(put_OtherDisk)(THIS_ IISDisk1File FAR* pOtherDiskFile, long OtherDisk) PURE;
    STDMETHOD(get_ReservedSpaces)(THIS_ IReleaseReservedSpacesNeptune FAR* FAR* ppReservedSpaces) PURE;
    STDMETHOD(get_FeaturesInBuild)(THIS_ IMultiSelectNeptune FAR* FAR* ppFeaturesInBuild) PURE;
    STDMETHOD(get_FeaturesUncompressed)(THIS_ IMultiSelectNeptune FAR* FAR* ppFeaturesUncompressed) PURE;
    STDMETHOD(get_DisplayBuildLocation)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_InitDlgProductName)(THIS_ BSTR FAR* InitDlgProductName) PURE;
    STDMETHOD(put_InitDlgProductName)(THIS_ BSTR InitDlgProductName) PURE;
    STDMETHOD(RegisterObject)(THIS_ BSTR FAR* bstrWizardFile, long FAR* lResult) PURE;

    /* IReleaseProProteus methods */
    STDMETHOD(get_CertPassword)(THIS_ BSTR FAR* bstrPassword) PURE;
    STDMETHOD(put_CertPassword)(THIS_ BSTR bstrPassword) PURE;

    /* IReleaseProPluto methods */
    STDMETHOD(get_IsDRMDisabled)(THIS_ VARIANT_BOOL FAR* pIsDRMDisabled) PURE;
    STDMETHOD(put_IsDRMDisabled)(THIS_ VARIANT_BOOL IsDRMDisabled) PURE;
    STDMETHOD(get_PublishInfo)(THIS_ IReleasePublishInfoPluto FAR* FAR* ppPublishInfo) PURE;
#endif

    /* IReleaseProIronwood methods */
    STDMETHOD(get_ReleaseProperty)(THIS_ EnumReleaseProperty erpProperty, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ReleaseProperty)(THIS_ EnumReleaseProperty erpProperty, BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_IReleaseProLoyalty,0xC1D72A4EL,0x6D8B,0x469B,0xAA,0xB5,0xBD,0xC9,0x99,0x55,0xE1,0x2F);

/* Definition of interface: IReleaseProLoyalty */
#undef INTERFACE
#define INTERFACE IReleaseProLoyalty

DECLARE_INTERFACE_(IReleaseProLoyalty, IReleaseProIronwood)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_BuildType)(THIS_ EnumBuildType FAR* BuildType) PURE;
    STDMETHOD(put_BuildType)(THIS_ EnumBuildType BuildType) PURE;
    STDMETHOD(get_ReleaseType)(THIS_ EnumReleaseType FAR* ReleaseType) PURE;
    STDMETHOD(put_ReleaseType)(THIS_ EnumReleaseType ReleaseType) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_MediaType)(THIS_ EnumMediaType FAR* MediaType) PURE;
    STDMETHOD(put_MediaType)(THIS_ EnumMediaType MediaType) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_DiskSize)(THIS_ double FAR* DiskSize) PURE;
    STDMETHOD(put_DiskSize)(THIS_ double DiskSize) PURE;
    STDMETHOD(get_DiskSizeUnit)(THIS_ EnumDiskSizeUnit FAR* DiskSizeUnit) PURE;
    STDMETHOD(put_DiskSizeUnit)(THIS_ EnumDiskSizeUnit DiskSizeUnit) PURE;
    STDMETHOD(get_ClusterSize)(THIS_ long FAR* ClusterSize) PURE;
    STDMETHOD(put_ClusterSize)(THIS_ long ClusterSize) PURE;
    STDMETHOD(get_OS)(THIS_ EnumMediaOS FAR* OS) PURE;
    STDMETHOD(put_OS)(THIS_ EnumMediaOS OS) PURE;
    STDMETHOD(get_CreateSetupExe)(THIS_ VARIANT_BOOL FAR* CreateSetupExe) PURE;
    STDMETHOD(put_CreateSetupExe)(THIS_ VARIANT_BOOL CreateSetupExe) PURE;
    STDMETHOD(get_DistributeLoc)(THIS_ BSTR FAR* DistributeLoc) PURE;
    STDMETHOD(put_DistributeLoc)(THIS_ BSTR DistributeLoc) PURE;
    STDMETHOD(get_DistributeToURLLoc)(THIS_ BSTR FAR* DistributeToURLLoc) PURE;
    STDMETHOD(put_DistributeToURLLoc)(THIS_ BSTR DistributeToURLLoc) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;

    /* IRelease2 methods */
    STDMETHOD(get_PackageName)(THIS_ BSTR FAR* PackageName) PURE;
    STDMETHOD(put_PackageName)(THIS_ BSTR PackageName) PURE;
    STDMETHOD(get_SupportedLanguagesUI)(THIS_ BSTR FAR* SupportedLanguagesUI) PURE;
    STDMETHOD(put_SupportedLanguagesUI)(THIS_ BSTR SupportedLanguagesUI) PURE;
    STDMETHOD(get_MsiSourceType)(THIS_ EnumMSISourceType FAR* MsiSourceType) PURE;
    STDMETHOD(put_MsiSourceType)(THIS_ EnumMSISourceType MsiSourceType) PURE;
    STDMETHOD(get_Platforms)(THIS_ BSTR FAR* Platforms) PURE;
    STDMETHOD(put_Platforms)(THIS_ BSTR Platforms) PURE;
    STDMETHOD(get_SupportedLanguagesData)(THIS_ BSTR FAR* SupportedLanguagesData) PURE;
    STDMETHOD(put_SupportedLanguagesData)(THIS_ BSTR SupportedLanguagesData) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_LanguageFiltering)(THIS_ VARIANT_BOOL FAR* LanguageFiltering) PURE;
    STDMETHOD(put_LanguageFiltering)(THIS_ VARIANT_BOOL LanguageFiltering) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* ReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR ReleaseFlags) PURE;
    STDMETHOD(get_DiskSpanning)(THIS_ EnumDiskSpanning FAR* DiskSpanning) PURE;
    STDMETHOD(put_DiskSpanning)(THIS_ EnumDiskSpanning DiskSpanning) PURE;
    STDMETHOD(get_SynchMsi)(THIS_ BSTR FAR* SynchMsi) PURE;
    STDMETHOD(put_SynchMsi)(THIS_ BSTR SynchMsi) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_VersionCopyright)(THIS_ BSTR FAR* VersionCopyright) PURE;
    STDMETHOD(put_VersionCopyright)(THIS_ BSTR VersionCopyright) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_CreateReport)(THIS_ VARIANT_BOOL FAR* CreateReport) PURE;
    STDMETHOD(put_CreateReport)(THIS_ VARIANT_BOOL CreateReport) PURE;
    STDMETHOD(get_CreateLogFile)(THIS_ VARIANT_BOOL FAR* CreateLogFile) PURE;
    STDMETHOD(put_CreateLogFile)(THIS_ VARIANT_BOOL CreateLogFile) PURE;
    STDMETHOD(get_EnableLanguageDialog)(THIS_ VARIANT_BOOL FAR* EnableLanguageDialog) PURE;
    STDMETHOD(put_EnableLanguageDialog)(THIS_ VARIANT_BOOL EnableLanguageDialog) PURE;
    STDMETHOD(get_CopyMM)(THIS_ VARIANT_BOOL FAR* CopyMM) PURE;
    STDMETHOD(put_CopyMM)(THIS_ VARIANT_BOOL CopyMM) PURE;
    STDMETHOD(get_UseTestPathVariables)(THIS_ VARIANT_BOOL FAR* UseTestPathVariables) PURE;
    STDMETHOD(put_UseTestPathVariables)(THIS_ VARIANT_BOOL UseTestPathVariables) PURE;
    STDMETHOD(get_CreateAutorun)(THIS_ VARIANT_BOOL FAR* CreateAutorun) PURE;
    STDMETHOD(put_CreateAutorun)(THIS_ VARIANT_BOOL CreateAutorun) PURE;
    STDMETHOD(get_CreatePDF)(THIS_ VARIANT_BOOL FAR* CreatePDF) PURE;
    STDMETHOD(put_CreatePDF)(THIS_ VARIANT_BOOL CreatePDF) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* PasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL PasswordProtect) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* UseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL UseMyVersionInfo) PURE;
    STDMETHOD(get_SuppressWin2K)(THIS_ VARIANT_BOOL FAR* SuppressWin2K) PURE;
    STDMETHOD(put_SuppressWin2K)(THIS_ VARIANT_BOOL SuppressWin2K) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_LogicalDisks)(THIS_ ILogicalDisks FAR* FAR* pLogicalDisks) PURE;
    STDMETHOD(get_BuildLabel)(THIS_ IBuildLabel FAR* FAR* pBuildLabel) PURE;
    STDMETHOD(IsMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe, VARIANT_BOOL FAR* pvbIsMatch) PURE;
    STDMETHOD(MakeMatch)(THIS_ BSTR sReleaseFolder, VARIANT_BOOL vbDefaultReleaseFlags, BSTR sReleaseFlags, BSTR sCompressed, BSTR sSetupExe) PURE;
    STDMETHOD(AddChild)(THIS_ EnumReleaseChild ercChild, long nDiskId, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(IsLanguageRequired)(THIS_ BSTR bstrLangID, VARIANT_BOOL FAR* bRequired) PURE;
    STDMETHOD(get_FeatureDiskID)(THIS_ BSTR bstrFeatureID, short FAR* nDiskId) PURE;
    STDMETHOD(get_FeatureCompressed)(THIS_ BSTR bstrFeatureID, VARIANT_BOOL FAR* vbCompressed) PURE;
    STDMETHOD(get_WebType)(THIS_ EnumWebType FAR* eWebType) PURE;
    STDMETHOD(put_WebType)(THIS_ EnumWebType eWebType) PURE;
    STDMETHOD(get_WebURL)(THIS_ BSTR FAR* bstrWebURL) PURE;
    STDMETHOD(put_WebURL)(THIS_ BSTR bstrWebURL) PURE;
    STDMETHOD(get_WrapMsiIntoCab)(THIS_ VARIANT_BOOL FAR* bWrapMsiIntoCab) PURE;
    STDMETHOD(put_WrapMsiIntoCab)(THIS_ VARIANT_BOOL bWrapMsiIntoCab) PURE;
    STDMETHOD(get_WebCabSize)(THIS_ long FAR* WebCabSize) PURE;
    STDMETHOD(put_WebCabSize)(THIS_ long WebCabSize) PURE;
    STDMETHOD(get_GenerateOneClick)(THIS_ VARIANT_BOOL FAR* bGenerateOneClick) PURE;
    STDMETHOD(put_GenerateOneClick)(THIS_ VARIANT_BOOL bGenerateOneClick) PURE;
    STDMETHOD(get_OneClickHtmlName)(THIS_ BSTR FAR* bstrOneClickHtmlName) PURE;
    STDMETHOD(put_OneClickHtmlName)(THIS_ BSTR bstrOneClickHtmlName) PURE;
    STDMETHOD(get_OneClickCabName)(THIS_ BSTR FAR* bstrOneClickCabName) PURE;
    STDMETHOD(put_OneClickCabName)(THIS_ BSTR bstrOneClickCabName) PURE;
    STDMETHOD(get_CacheWebPkgLocally)(THIS_ VARIANT_BOOL FAR* bCacheWebPkgLocally) PURE;
    STDMETHOD(put_CacheWebPkgLocally)(THIS_ VARIANT_BOOL bCacheWebPkgLocally) PURE;
    STDMETHOD(get_WebLocalCachePath)(THIS_ BSTR FAR* bstrWebLocalCachePath) PURE;
    STDMETHOD(put_WebLocalCachePath)(THIS_ BSTR bstrWebLocalCachePath) PURE;
    STDMETHOD(get_EngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_EngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_DelayEngineReboot)(THIS_ VARIANT_BOOL FAR* bDelayEngineReboot) PURE;
    STDMETHOD(put_DelayEngineReboot)(THIS_ VARIANT_BOOL bDelayEngineReboot) PURE;
    STDMETHOD(get_Win9xMsiUrl)(THIS_ BSTR FAR* bstrWin9xMsiUrl) PURE;
    STDMETHOD(put_Win9xMsiUrl)(THIS_ BSTR bstrWin9xMsiUrl) PURE;
    STDMETHOD(get_WinNTMsiUrl)(THIS_ BSTR FAR* bstrWinNTMsiUrl) PURE;
    STDMETHOD(put_WinNTMsiUrl)(THIS_ BSTR bstrWinNTMsiUrl) PURE;
    STDMETHOD(get_ISEngineURL)(THIS_ BSTR FAR* bstrISEngineURL) PURE;
    STDMETHOD(put_ISEngineURL)(THIS_ BSTR bstrISEngineURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_ISEngineLocation)(THIS_ EnumEngineLocation FAR* eEngineLocation) PURE;
    STDMETHOD(put_ISEngineLocation)(THIS_ EnumEngineLocation eEngineLocation) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* bstrRootSetupFolder) PURE;
    STDMETHOD(get_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser FAR* eOCITargetBrowser) PURE;
    STDMETHOD(put_OneClickTargetBrowser)(THIS_ EnumOneClickTargetBrowser eOCITargetBrowser) PURE;
    STDMETHOD(get_DigitalCertificateIdNS)(THIS_ BSTR FAR* DigitalCertificateIdNS) PURE;
    STDMETHOD(put_DigitalCertificateIdNS)(THIS_ BSTR DigitalCertificateIdNS) PURE;
    STDMETHOD(get_DigitalCertificateDBaseNS)(THIS_ BSTR FAR* DigitalCertificateDBaseNS) PURE;
    STDMETHOD(put_DigitalCertificateDBaseNS)(THIS_ BSTR DigitalCertificateDBaseNS) PURE;
    STDMETHOD(get_DigitalCertificatePasswordNS)(THIS_ BSTR FAR* DigitalCertificatePasswordNS) PURE;
    STDMETHOD(put_DigitalCertificatePasswordNS)(THIS_ BSTR DigitalCertificatePasswordNS) PURE;
    STDMETHOD(get_CDBrowser)(THIS_ BSTR FAR* CDBrowser) PURE;
    STDMETHOD(put_CDBrowser)(THIS_ BSTR CDBrowser) PURE;
    STDMETHOD(get_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL FAR* bCabPerFeature) PURE;
    STDMETHOD(put_CustomCompress_CabPerFeature)(THIS_ VARIANT_BOOL bCabPerFeature) PURE;
    STDMETHOD(get_DotNetBuildConfiguration)(THIS_ BSTR FAR* sDotNetBuildConfiguration) PURE;
    STDMETHOD(put_DotNetBuildConfiguration)(THIS_ BSTR sDotNetBuildConfiguration) PURE;
    STDMETHOD(get_DotNetRedistURL)(THIS_ BSTR FAR* bstrDotNetRedistURL) PURE;
    STDMETHOD(put_DotNetRedistURL)(THIS_ BSTR bstrDotNetRedistURL) PURE;
    STDMETHOD(get_DotNetRedistLocation)(THIS_ EnumEngineLocation FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetRedistLocation)(THIS_ EnumEngineLocation eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetUI)(THIS_ VARIANT_BOOL FAR* pvbUseDotNetUI) PURE;
    STDMETHOD(put_DotNetUI)(THIS_ VARIANT_BOOL vbUseDotNetUI) PURE;
    STDMETHOD(get_GenerateFileHashValues)(THIS_ VARIANT_BOOL FAR* pvbGenerateFileHashValues) PURE;
    STDMETHOD(put_GenerateFileHashValues)(THIS_ VARIANT_BOOL vbGenerateFileHashValues) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eMsiEngineVersion) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eMsiEngineVersion) PURE;
    STDMETHOD(get_MsiCommandLine)(THIS_ BSTR FAR* bstrMsiCommandLine) PURE;
    STDMETHOD(put_MsiCommandLine)(THIS_ BSTR bstrMsiCommandLine) PURE;
    STDMETHOD(get_SuppressARP)(THIS_ VARIANT_BOOL FAR* pvbSuppressARP) PURE;
    STDMETHOD(put_SuppressARP)(THIS_ VARIANT_BOOL vbSuppressARP) PURE;
    STDMETHOD(get_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL FAR* pvbShowDotNetSetupExeSelection) PURE;
    STDMETHOD(put_ShowDotNetSetupExeSelection)(THIS_ VARIANT_BOOL ShowDotNetSetupExeSelection) PURE;
    STDMETHOD(get_SmallInit)(THIS_ VARIANT_BOOL FAR* pvbSmallInit) PURE;
    STDMETHOD(put_SmallInit)(THIS_ VARIANT_BOOL SmallInit) PURE;
    STDMETHOD(get_ShallowFolder)(THIS_ VARIANT_BOOL FAR* pvbShallowFolder) PURE;
    STDMETHOD(put_ShallowFolder)(THIS_ VARIANT_BOOL ShallowFolder) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_DontEncrypt)(THIS_ VARIANT_BOOL FAR* pbstrDontEncrypt) PURE;
    STDMETHOD(put_DontEncrypt)(THIS_ VARIANT_BOOL bstrDontEncrypt) PURE;
    STDMETHOD(get_DotNetVersion)(THIS_ EnumDotNetVersion FAR* eDotNetRedistLocation) PURE;
    STDMETHOD(put_DotNetVersion)(THIS_ EnumDotNetVersion eDotNetRedistLocation) PURE;
    STDMETHOD(get_DotNetBaseLanguage)(THIS_ BSTR FAR* DotNetBaseLanguage) PURE;
    STDMETHOD(put_DotNetBaseLanguage)(THIS_ BSTR DotNetBaseLanguage) PURE;
    STDMETHOD(get_DotNetLangaugePacks)(THIS_ BSTR FAR* DotNetLangaugePacks) PURE;
    STDMETHOD(put_DotNetLangaugePacks)(THIS_ BSTR DotNetLangaugePacks) PURE;
    STDMETHOD(get_DotNetFxCmdLine)(THIS_ BSTR FAR* DotNetFxCmdLine) PURE;
    STDMETHOD(put_DotNetFxCmdLine)(THIS_ BSTR DotNetFxCmdLine) PURE;
    STDMETHOD(get_DotNetLangPackCmdLine)(THIS_ BSTR FAR* DotNetLangPackCmdLine) PURE;
    STDMETHOD(put_DotNetLangPackCmdLine)(THIS_ BSTR DotNetLangPackCmdLine) PURE;
    STDMETHOD(get_SignMedia)(THIS_ EnumSignMedia FAR* pSignMedia) PURE;
    STDMETHOD(put_SignMedia)(THIS_ EnumSignMedia SignMedia) PURE;
    STDMETHOD(get_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbDotNetOptionalIfSilent) PURE;
    STDMETHOD(put_DotNetOptionalIfSilent)(THIS_ VARIANT_BOOL bDotNetOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpCmdLine)(THIS_ BSTR FAR* pbstrJSharpCmdLine) PURE;
    STDMETHOD(put_JSharpCmdLine)(THIS_ BSTR bstrJSharpCmdLine) PURE;
    STDMETHOD(get_JSharpOptionDlg)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionDlg) PURE;
    STDMETHOD(put_JSharpOptionDlg)(THIS_ VARIANT_BOOL bJSharpOptionDlg) PURE;
    STDMETHOD(get_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL FAR* pbJSharpOptionalIfSilent) PURE;
    STDMETHOD(put_JSharpOptionalIfSilent)(THIS_ VARIANT_BOOL bJSharpOptionalIfSilent) PURE;
    STDMETHOD(get_JSharpRedistLocation)(THIS_ EnumEngineLocation FAR* eJSharpRedistLocation) PURE;
    STDMETHOD(put_JSharpRedistLocation)(THIS_ EnumEngineLocation eJSharpRedistLocation) PURE;

    /* IReleaseNeptune methods */
    STDMETHOD(get_DistributeAfterBuild)(THIS_ VARIANT_BOOL FAR* vbDistribute) PURE;
    STDMETHOD(put_DistributeAfterBuild)(THIS_ VARIANT_BOOL vbDistribute) PURE;
    STDMETHOD(get_IsCompactBuild)(THIS_ VARIANT_BOOL FAR* vbCompactBuild) PURE;

    /* IReleaseProNeptune methods */
    STDMETHOD(get_ShowPasswordDlg)(THIS_ VARIANT_BOOL FAR* ShowPasswordDlg) PURE;
    STDMETHOD(put_ShowPasswordDlg)(THIS_ VARIANT_BOOL ShowPasswordDlg) PURE;
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* GUID) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR GUID) PURE;
    STDMETHOD(get_SingleEXEFileName)(THIS_ BSTR FAR* SingleEXEFileName) PURE;
    STDMETHOD(put_SingleEXEFileName)(THIS_ BSTR SingleEXEFileName) PURE;
    STDMETHOD(get_SingleEXEIconName)(THIS_ BSTR FAR* SingleEXEIconName) PURE;
    STDMETHOD(put_SingleEXEIconName)(THIS_ BSTR SingleEXEIconName) PURE;
    STDMETHOD(get_SetupCmdLine)(THIS_ BSTR FAR* SetupCmdLine) PURE;
    STDMETHOD(put_SetupCmdLine)(THIS_ BSTR SetupCmdLine) PURE;
    STDMETHOD(get_CompressScript)(THIS_ VARIANT_BOOL FAR* CompressScript) PURE;
    STDMETHOD(put_CompressScript)(THIS_ VARIANT_BOOL CompressScript) PURE;
    STDMETHOD(get_PreProcessorDefines)(THIS_ BSTR FAR* PreProcessorDefines) PURE;
    STDMETHOD(put_PreProcessorDefines)(THIS_ BSTR PreProcessorDefines) PURE;
    STDMETHOD(get_SetupDlgAppName)(THIS_ BSTR FAR* SetupDlgAppName) PURE;
    STDMETHOD(put_SetupDlgAppName)(THIS_ BSTR SetupDlgAppName) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* OSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long OSFilter) PURE;
    STDMETHOD(get_WebNetscapeSupport)(THIS_ VARIANT_BOOL FAR* WebNetscapeSupport) PURE;
    STDMETHOD(put_WebNetscapeSupport)(THIS_ VARIANT_BOOL WebNetscapeSupport) PURE;
    STDMETHOD(get_WebSaveOptionsDlg)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsDlg) PURE;
    STDMETHOD(put_WebSaveOptionsDlg)(THIS_ VARIANT_BOOL WebSaveOptionsDlg) PURE;
    STDMETHOD(get_WebSecurityDlg)(THIS_ VARIANT_BOOL FAR* WebSecurityDlg) PURE;
    STDMETHOD(put_WebSecurityDlg)(THIS_ VARIANT_BOOL WebSecurityDlg) PURE;
    STDMETHOD(get_WebCreateDefaultPage)(THIS_ VARIANT_BOOL FAR* WebCreateDefaultPage) PURE;
    STDMETHOD(put_WebCreateDefaultPage)(THIS_ VARIANT_BOOL WebCreateDefaultPage) PURE;
    STDMETHOD(get_WebPageUrl)(THIS_ BSTR FAR* WebPageUrl) PURE;
    STDMETHOD(put_WebPageUrl)(THIS_ BSTR WebPageUrl) PURE;
    STDMETHOD(get_WebSaveOptionsRunOnly)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsRunOnly) PURE;
    STDMETHOD(put_WebSaveOptionsRunOnly)(THIS_ VARIANT_BOOL WebSaveOptionsRunOnly) PURE;
    STDMETHOD(get_WebSaveOptionsSaveAndRun)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsSaveAndRun) PURE;
    STDMETHOD(put_WebSaveOptionsSaveAndRun)(THIS_ VARIANT_BOOL WebSaveOptionsSaveAndRun) PURE;
    STDMETHOD(get_WebSaveOptionsSaveOnly)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsSaveOnly) PURE;
    STDMETHOD(put_WebSaveOptionsSaveOnly)(THIS_ VARIANT_BOOL WebSaveOptionsSaveOnly) PURE;
    STDMETHOD(get_WebSaveOptionsCreateShortcut)(THIS_ VARIANT_BOOL FAR* WebSaveOptionsCreateShortcut) PURE;
    STDMETHOD(put_WebSaveOptionsCreateShortcut)(THIS_ VARIANT_BOOL WebSaveOptionsCreateShortcut) PURE;
    STDMETHOD(get_UseProjectSkin)(THIS_ VARIANT_BOOL FAR* UseProjectSkin) PURE;
    STDMETHOD(put_UseProjectSkin)(THIS_ VARIANT_BOOL UseProjectSkin) PURE;
    STDMETHOD(get_SkinName)(THIS_ BSTR FAR* SkinName) PURE;
    STDMETHOD(put_SkinName)(THIS_ BSTR SkinName) PURE;
    STDMETHOD(get_FTPFolder)(THIS_ BSTR FAR* FTPFolder) PURE;
    STDMETHOD(put_FTPFolder)(THIS_ BSTR FTPFolder) PURE;
    STDMETHOD(get_FTPUserName)(THIS_ BSTR FAR* FTPUserName) PURE;
    STDMETHOD(put_FTPUserName)(THIS_ BSTR FTPUserName) PURE;
    STDMETHOD(get_FTPPassword)(THIS_ BSTR FAR* FTPPassword) PURE;
    STDMETHOD(put_FTPPassword)(THIS_ BSTR FTPPassword) PURE;
    STDMETHOD(get_CopyToFolder)(THIS_ BSTR FAR* CopyToFolder) PURE;
    STDMETHOD(put_CopyToFolder)(THIS_ BSTR CopyToFolder) PURE;
    STDMETHOD(get_BatchFileName)(THIS_ BSTR FAR* BatchFileName) PURE;
    STDMETHOD(put_BatchFileName)(THIS_ BSTR BatchFileName) PURE;
    STDMETHOD(get_EnableDifference)(THIS_ VARIANT_BOOL FAR* EnableDifference) PURE;
    STDMETHOD(put_EnableDifference)(THIS_ VARIANT_BOOL EnableDifference) PURE;
    STDMETHOD(get_SupportedVersions)(THIS_ BSTR FAR* SupportedVersions) PURE;
    STDMETHOD(put_SupportedVersions)(THIS_ BSTR SupportedVersions) PURE;
    STDMETHOD(get_UseIncludeInBuildFlags)(THIS_ VARIANT_BOOL FAR* UseIncludeInBuildFlags) PURE;
    STDMETHOD(put_UseIncludeInBuildFlags)(THIS_ VARIANT_BOOL UseIncludeInBuildFlags) PURE;
    STDMETHOD(get_PreviousProMedias)(THIS_ IPreviousProMediasNeptune FAR* FAR* ppPreviousProMedias) PURE;
    STDMETHOD(get_ObjDiffOptions)(THIS_ EnumObjDiffOptions FAR* ObjDiffOptions) PURE;
    STDMETHOD(put_ObjDiffOptions)(THIS_ EnumObjDiffOptions ObjDiffOptions) PURE;
    STDMETHOD(get_CheckMD5)(THIS_ VARIANT_BOOL FAR* CheckMD5) PURE;
    STDMETHOD(put_CheckMD5)(THIS_ VARIANT_BOOL CheckMD5) PURE;
    STDMETHOD(get_OtherDisk)(THIS_ IISDisk1File FAR* pOtherDiskFile, long FAR* OtherDisk) PURE;
    STDMETHOD(put_OtherDisk)(THIS_ IISDisk1File FAR* pOtherDiskFile, long OtherDisk) PURE;
    STDMETHOD(get_ReservedSpaces)(THIS_ IReleaseReservedSpacesNeptune FAR* FAR* ppReservedSpaces) PURE;
    STDMETHOD(get_FeaturesInBuild)(THIS_ IMultiSelectNeptune FAR* FAR* ppFeaturesInBuild) PURE;
    STDMETHOD(get_FeaturesUncompressed)(THIS_ IMultiSelectNeptune FAR* FAR* ppFeaturesUncompressed) PURE;
    STDMETHOD(get_DisplayBuildLocation)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(get_InitDlgProductName)(THIS_ BSTR FAR* InitDlgProductName) PURE;
    STDMETHOD(put_InitDlgProductName)(THIS_ BSTR InitDlgProductName) PURE;
    STDMETHOD(RegisterObject)(THIS_ BSTR FAR* bstrWizardFile, long FAR* lResult) PURE;

    /* IReleaseProProteus methods */
    STDMETHOD(get_CertPassword)(THIS_ BSTR FAR* bstrPassword) PURE;
    STDMETHOD(put_CertPassword)(THIS_ BSTR bstrPassword) PURE;

    /* IReleaseProPluto methods */
    STDMETHOD(get_IsDRMDisabled)(THIS_ VARIANT_BOOL FAR* pIsDRMDisabled) PURE;
    STDMETHOD(put_IsDRMDisabled)(THIS_ VARIANT_BOOL IsDRMDisabled) PURE;
    STDMETHOD(get_PublishInfo)(THIS_ IReleasePublishInfoPluto FAR* FAR* ppPublishInfo) PURE;

    /* IReleaseProIronwood methods */
    STDMETHOD(get_ReleaseProperty)(THIS_ EnumReleaseProperty erpProperty, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ReleaseProperty)(THIS_ EnumReleaseProperty erpProperty, BSTR bstrVal) PURE;
#endif

    /* IReleaseProLoyalty methods */
    STDMETHOD(get_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc FAR* nLoc) PURE;
    STDMETHOD(put_ISSetupPrerequisiteLocation)(THIS_ EnumISSetupPreReqLoc nLoc) PURE;
};

DEFINE_GUID(IID_IRelease3,0xD99269FBL,0x5EC8,0x4BA1,0x92,0xD9,0x4E,0x38,0xB2,0x37,0x40,0x95);

/* Definition of interface: IRelease3 */
#undef INTERFACE
#define INTERFACE IRelease3

DECLARE_INTERFACE_(IRelease3, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRelease3 methods */
    STDMETHOD(get_WebDeploy)(THIS_ VARIANT_BOOL FAR* bWebDeploy) PURE;
    STDMETHOD(put_WebDeploy)(THIS_ VARIANT_BOOL bWebDeploy) PURE;
    STDMETHOD(get_WebPageType)(THIS_ EnumWebPageType FAR* ewptWebPageType) PURE;
    STDMETHOD(put_WebPageType)(THIS_ EnumWebPageType ewptWebPageType) PURE;
    STDMETHOD(get_MSI9XNeeded)(THIS_ VARIANT_BOOL FAR* bMSI9XNeeded) PURE;
    STDMETHOD(put_MSI9XNeeded)(THIS_ VARIANT_BOOL bMSI9XNeeded) PURE;
    STDMETHOD(get_MSINTNeeded)(THIS_ VARIANT_BOOL FAR* bMSINTNeeded) PURE;
    STDMETHOD(put_MSINTNeeded)(THIS_ VARIANT_BOOL bMSINTNeeded) PURE;
    STDMETHOD(get_SupressLauncherWarning)(THIS_ VARIANT_BOOL FAR* bSupressLauncherWarning) PURE;
    STDMETHOD(put_SupressLauncherWarning)(THIS_ VARIANT_BOOL bSupressLauncherWarning) PURE;
    STDMETHOD(get_DelayReboot)(THIS_ VARIANT_BOOL FAR* bDelayReboot) PURE;
    STDMETHOD(put_DelayReboot)(THIS_ VARIANT_BOOL bDelayReboot) PURE;
    STDMETHOD(get_MSILocType)(THIS_ EnumMSILocType FAR* MSILocType) PURE;
    STDMETHOD(put_MSILocType)(THIS_ EnumMSILocType MSILocType) PURE;
    STDMETHOD(get_MSI9XURL)(THIS_ BSTR FAR* sMSI9XURL) PURE;
    STDMETHOD(put_MSI9XURL)(THIS_ BSTR sMSI9XURL) PURE;
    STDMETHOD(get_MSINTURL)(THIS_ BSTR FAR* sMSINTURL) PURE;
    STDMETHOD(put_MSINTURL)(THIS_ BSTR sMSINTURL) PURE;
    STDMETHOD(get_OptimizeSize)(THIS_ VARIANT_BOOL FAR* bOptimizeSize) PURE;
    STDMETHOD(put_OptimizeSize)(THIS_ VARIANT_BOOL bOptimizeSize) PURE;
    STDMETHOD(get_CachePackage)(THIS_ VARIANT_BOOL FAR* bCachePackage) PURE;
    STDMETHOD(put_CachePackage)(THIS_ VARIANT_BOOL bCachePackage) PURE;
    STDMETHOD(get_CacheLocation)(THIS_ BSTR FAR* sCacheLocation) PURE;
    STDMETHOD(put_CacheLocation)(THIS_ BSTR sCacheLocation) PURE;
    STDMETHOD(get_SignExe)(THIS_ VARIANT_BOOL FAR* SignExe) PURE;
    STDMETHOD(put_SignExe)(THIS_ VARIANT_BOOL SignExe) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* DigitalURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR DigitalURL) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* DigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR DigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* DigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR DigitalSPC) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* bPasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL bPasswordProtect) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* strPassword) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR strPassword) PURE;
    STDMETHOD(get_KickOffBuild)(THIS_ VARIANT_BOOL FAR* bKickOffBuild) PURE;
    STDMETHOD(put_KickOffBuild)(THIS_ VARIANT_BOOL bKickOffBuild) PURE;
    STDMETHOD(get_TargetIE)(THIS_ VARIANT_BOOL FAR* bTargetIE) PURE;
    STDMETHOD(put_TargetIE)(THIS_ VARIANT_BOOL bTargetIE) PURE;
    STDMETHOD(get_TargetNetscape)(THIS_ VARIANT_BOOL FAR* bTargetNetscape) PURE;
    STDMETHOD(put_TargetNetscape)(THIS_ VARIANT_BOOL bTargetNetscape) PURE;
    STDMETHOD(get_NetscapeCertificateID)(THIS_ BSTR FAR* strNetscapeCertificateID) PURE;
    STDMETHOD(put_NetscapeCertificateID)(THIS_ BSTR strNetscapeCertificateID) PURE;
    STDMETHOD(get_NetscapeCertificateDB)(THIS_ BSTR FAR* strNetscapeCertificateDB) PURE;
    STDMETHOD(put_NetscapeCertificateDB)(THIS_ BSTR strNetscapeCertificateDB) PURE;
    STDMETHOD(get_NetscapeCertificatePasswd)(THIS_ BSTR FAR* strNetscapeCertificatePasswd) PURE;
    STDMETHOD(put_NetscapeCertificatePasswd)(THIS_ BSTR strNetscapeCertificatePasswd) PURE;
    STDMETHOD(get_SignNetscapeMedia)(THIS_ VARIANT_BOOL FAR* bSignNetscapeMedia) PURE;
    STDMETHOD(put_SignNetscapeMedia)(THIS_ VARIANT_BOOL bSignNetscapeMedia) PURE;
};

DEFINE_GUID(IID_IBuildLabel,0xD6495CB5L,0xC357,0x48BE,0x9A,0x96,0x72,0x4E,0x6B,0xEB,0x6D,0x1B);

/* Definition of interface: IBuildLabel */
#undef INTERFACE
#define INTERFACE IBuildLabel

DECLARE_INTERFACE_(IBuildLabel, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IBuildLabel methods */
    STDMETHOD(AddChild)(THIS_ EnumLabelChild elblcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Releases)(THIS_ IReleases FAR* FAR* Releases) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_GeneratePackageCode)(THIS_ EnumGeneratePackageCode FAR* eVal) PURE;
    STDMETHOD(put_GeneratePackageCode)(THIS_ EnumGeneratePackageCode eVal) PURE;
};

DEFINE_GUID(IID_IBuildLabels,0x9A46A34CL,0x4E30,0x4B01,0xAE,0xF5,0x44,0x3A,0x8D,0xBB,0x6A,0x06);

/* Definition of interface: IBuildLabels */
#undef INTERFACE
#define INTERFACE IBuildLabels

DECLARE_INTERFACE_(IBuildLabels, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IBuildLabels methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IBuildLabel FAR* FAR* pMedia) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IBuildLabel2,0x44DF3E9FL,0x4A5A,0x4570,0x8F,0x7A,0xFC,0x37,0xE9,0x7E,0x1B,0xE3);

/* Definition of interface: IBuildLabel2 */
#undef INTERFACE
#define INTERFACE IBuildLabel2

DECLARE_INTERFACE_(IBuildLabel2, IBuildLabel)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IBuildLabel methods */
    STDMETHOD(AddChild)(THIS_ EnumLabelChild elblcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Releases)(THIS_ IReleases FAR* FAR* Releases) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_GeneratePackageCode)(THIS_ EnumGeneratePackageCode FAR* eVal) PURE;
    STDMETHOD(put_GeneratePackageCode)(THIS_ EnumGeneratePackageCode eVal) PURE;
#endif

    /* IBuildLabel2 methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Subject)(THIS_ BSTR FAR* Subject) PURE;
    STDMETHOD(put_Subject)(THIS_ BSTR Subject) PURE;
    STDMETHOD(get_ProductVersion)(THIS_ BSTR FAR* ProductVersion) PURE;
    STDMETHOD(put_ProductVersion)(THIS_ BSTR ProductVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* Title) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR Title) PURE;
    STDMETHOD(get_ProductName)(THIS_ BSTR FAR* ProductName) PURE;
    STDMETHOD(put_ProductName)(THIS_ BSTR ProductName) PURE;
    STDMETHOD(get_PackageCode)(THIS_ BSTR FAR* PackageCode) PURE;
    STDMETHOD(put_PackageCode)(THIS_ BSTR PackageCode) PURE;
    STDMETHOD(get_UpgradeCode)(THIS_ BSTR FAR* UpgradeCode) PURE;
    STDMETHOD(put_UpgradeCode)(THIS_ BSTR UpgradeCode) PURE;
    STDMETHOD(get_ProductCode)(THIS_ BSTR FAR* ProductCode) PURE;
    STDMETHOD(put_ProductCode)(THIS_ BSTR ProductCode) PURE;
    STDMETHOD(get_TemplateSummary)(THIS_ BSTR FAR* TemplateSummary) PURE;
    STDMETHOD(put_TemplateSummary)(THIS_ BSTR TemplateSummary) PURE;
    STDMETHOD(get_ProductConfigurationFlags)(THIS_ BSTR FAR* ProductConfigurationFlags) PURE;
    STDMETHOD(put_ProductConfigurationFlags)(THIS_ BSTR ProductConfigurationFlags) PURE;
    STDMETHOD(get_PageCount)(THIS_ BSTR FAR* pbstrPageCount) PURE;
    STDMETHOD(put_PageCount)(THIS_ BSTR bstrPageCount) PURE;
    STDMETHOD(get_PreProcessorDefines)(THIS_ BSTR FAR* pbstrPreProcessorDefines) PURE;
    STDMETHOD(put_PreProcessorDefines)(THIS_ BSTR bstrPreProcessorDefines) PURE;
    STDMETHOD(get_MSIPackageFileName)(THIS_ BSTR FAR* pbstrMSIPackageFileName) PURE;
    STDMETHOD(put_MSIPackageFileName)(THIS_ BSTR bstrMSIPackageFileName) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
};

DEFINE_GUID(IID_IBuildLabelIndore,0x4C359502L,0x78AF,0x4CD4,0x89,0x69,0xA1,0x60,0x6F,0x40,0xA0,0x5C);

/* Definition of interface: IBuildLabelIndore */
#undef INTERFACE
#define INTERFACE IBuildLabelIndore

DECLARE_INTERFACE_(IBuildLabelIndore, IBuildLabel2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IBuildLabel methods */
    STDMETHOD(AddChild)(THIS_ EnumLabelChild elblcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Releases)(THIS_ IReleases FAR* FAR* Releases) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_GeneratePackageCode)(THIS_ EnumGeneratePackageCode FAR* eVal) PURE;
    STDMETHOD(put_GeneratePackageCode)(THIS_ EnumGeneratePackageCode eVal) PURE;

    /* IBuildLabel2 methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Subject)(THIS_ BSTR FAR* Subject) PURE;
    STDMETHOD(put_Subject)(THIS_ BSTR Subject) PURE;
    STDMETHOD(get_ProductVersion)(THIS_ BSTR FAR* ProductVersion) PURE;
    STDMETHOD(put_ProductVersion)(THIS_ BSTR ProductVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* Title) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR Title) PURE;
    STDMETHOD(get_ProductName)(THIS_ BSTR FAR* ProductName) PURE;
    STDMETHOD(put_ProductName)(THIS_ BSTR ProductName) PURE;
    STDMETHOD(get_PackageCode)(THIS_ BSTR FAR* PackageCode) PURE;
    STDMETHOD(put_PackageCode)(THIS_ BSTR PackageCode) PURE;
    STDMETHOD(get_UpgradeCode)(THIS_ BSTR FAR* UpgradeCode) PURE;
    STDMETHOD(put_UpgradeCode)(THIS_ BSTR UpgradeCode) PURE;
    STDMETHOD(get_ProductCode)(THIS_ BSTR FAR* ProductCode) PURE;
    STDMETHOD(put_ProductCode)(THIS_ BSTR ProductCode) PURE;
    STDMETHOD(get_TemplateSummary)(THIS_ BSTR FAR* TemplateSummary) PURE;
    STDMETHOD(put_TemplateSummary)(THIS_ BSTR TemplateSummary) PURE;
    STDMETHOD(get_ProductConfigurationFlags)(THIS_ BSTR FAR* ProductConfigurationFlags) PURE;
    STDMETHOD(put_ProductConfigurationFlags)(THIS_ BSTR ProductConfigurationFlags) PURE;
    STDMETHOD(get_PageCount)(THIS_ BSTR FAR* pbstrPageCount) PURE;
    STDMETHOD(put_PageCount)(THIS_ BSTR bstrPageCount) PURE;
    STDMETHOD(get_PreProcessorDefines)(THIS_ BSTR FAR* pbstrPreProcessorDefines) PURE;
    STDMETHOD(put_PreProcessorDefines)(THIS_ BSTR bstrPreProcessorDefines) PURE;
    STDMETHOD(get_MSIPackageFileName)(THIS_ BSTR FAR* pbstrMSIPackageFileName) PURE;
    STDMETHOD(put_MSIPackageFileName)(THIS_ BSTR bstrMSIPackageFileName) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
#endif

    /* IBuildLabelIndore methods */
    STDMETHOD(get_IncludeActionHelp)(THIS_ VARIANT_BOOL FAR* pvbVal) PURE;
    STDMETHOD(put_IncludeActionHelp)(THIS_ VARIANT_BOOL vbVal) PURE;
};

interface IProductConfigurationInstances;

DEFINE_GUID(IID_IBuildLabelJustice,0x8C21C3C7L,0x20E5,0x4935,0x91,0xBE,0x91,0x74,0x9E,0x9F,0x9C,0x17);

/* Definition of interface: IBuildLabelJustice */
#undef INTERFACE
#define INTERFACE IBuildLabelJustice

DECLARE_INTERFACE_(IBuildLabelJustice, IBuildLabelIndore)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IBuildLabel methods */
    STDMETHOD(AddChild)(THIS_ EnumLabelChild elblcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Releases)(THIS_ IReleases FAR* FAR* Releases) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_GeneratePackageCode)(THIS_ EnumGeneratePackageCode FAR* eVal) PURE;
    STDMETHOD(put_GeneratePackageCode)(THIS_ EnumGeneratePackageCode eVal) PURE;

    /* IBuildLabel2 methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Subject)(THIS_ BSTR FAR* Subject) PURE;
    STDMETHOD(put_Subject)(THIS_ BSTR Subject) PURE;
    STDMETHOD(get_ProductVersion)(THIS_ BSTR FAR* ProductVersion) PURE;
    STDMETHOD(put_ProductVersion)(THIS_ BSTR ProductVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* Title) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR Title) PURE;
    STDMETHOD(get_ProductName)(THIS_ BSTR FAR* ProductName) PURE;
    STDMETHOD(put_ProductName)(THIS_ BSTR ProductName) PURE;
    STDMETHOD(get_PackageCode)(THIS_ BSTR FAR* PackageCode) PURE;
    STDMETHOD(put_PackageCode)(THIS_ BSTR PackageCode) PURE;
    STDMETHOD(get_UpgradeCode)(THIS_ BSTR FAR* UpgradeCode) PURE;
    STDMETHOD(put_UpgradeCode)(THIS_ BSTR UpgradeCode) PURE;
    STDMETHOD(get_ProductCode)(THIS_ BSTR FAR* ProductCode) PURE;
    STDMETHOD(put_ProductCode)(THIS_ BSTR ProductCode) PURE;
    STDMETHOD(get_TemplateSummary)(THIS_ BSTR FAR* TemplateSummary) PURE;
    STDMETHOD(put_TemplateSummary)(THIS_ BSTR TemplateSummary) PURE;
    STDMETHOD(get_ProductConfigurationFlags)(THIS_ BSTR FAR* ProductConfigurationFlags) PURE;
    STDMETHOD(put_ProductConfigurationFlags)(THIS_ BSTR ProductConfigurationFlags) PURE;
    STDMETHOD(get_PageCount)(THIS_ BSTR FAR* pbstrPageCount) PURE;
    STDMETHOD(put_PageCount)(THIS_ BSTR bstrPageCount) PURE;
    STDMETHOD(get_PreProcessorDefines)(THIS_ BSTR FAR* pbstrPreProcessorDefines) PURE;
    STDMETHOD(put_PreProcessorDefines)(THIS_ BSTR bstrPreProcessorDefines) PURE;
    STDMETHOD(get_MSIPackageFileName)(THIS_ BSTR FAR* pbstrMSIPackageFileName) PURE;
    STDMETHOD(put_MSIPackageFileName)(THIS_ BSTR bstrMSIPackageFileName) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;

    /* IBuildLabelIndore methods */
    STDMETHOD(get_IncludeActionHelp)(THIS_ VARIANT_BOOL FAR* pvbVal) PURE;
    STDMETHOD(put_IncludeActionHelp)(THIS_ VARIANT_BOOL vbVal) PURE;
#endif

    /* IBuildLabelJustice methods */
    STDMETHOD(get_Instances)(THIS_ IProductConfigurationInstances FAR* FAR* ppCol) PURE;
};

DEFINE_GUID(IID_IBuildLabelPunk,0xF0384FFFL,0xDFD6,0x4923,0xA9,0xB8,0x14,0x3C,0x1C,0xC6,0x7C,0xA6);

/* Definition of interface: IBuildLabelPunk */
#undef INTERFACE
#define INTERFACE IBuildLabelPunk

DECLARE_INTERFACE_(IBuildLabelPunk, IBuildLabelJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IBuildLabel methods */
    STDMETHOD(AddChild)(THIS_ EnumLabelChild elblcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Releases)(THIS_ IReleases FAR* FAR* Releases) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_GeneratePackageCode)(THIS_ EnumGeneratePackageCode FAR* eVal) PURE;
    STDMETHOD(put_GeneratePackageCode)(THIS_ EnumGeneratePackageCode eVal) PURE;

    /* IBuildLabel2 methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Subject)(THIS_ BSTR FAR* Subject) PURE;
    STDMETHOD(put_Subject)(THIS_ BSTR Subject) PURE;
    STDMETHOD(get_ProductVersion)(THIS_ BSTR FAR* ProductVersion) PURE;
    STDMETHOD(put_ProductVersion)(THIS_ BSTR ProductVersion) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* Title) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR Title) PURE;
    STDMETHOD(get_ProductName)(THIS_ BSTR FAR* ProductName) PURE;
    STDMETHOD(put_ProductName)(THIS_ BSTR ProductName) PURE;
    STDMETHOD(get_PackageCode)(THIS_ BSTR FAR* PackageCode) PURE;
    STDMETHOD(put_PackageCode)(THIS_ BSTR PackageCode) PURE;
    STDMETHOD(get_UpgradeCode)(THIS_ BSTR FAR* UpgradeCode) PURE;
    STDMETHOD(put_UpgradeCode)(THIS_ BSTR UpgradeCode) PURE;
    STDMETHOD(get_ProductCode)(THIS_ BSTR FAR* ProductCode) PURE;
    STDMETHOD(put_ProductCode)(THIS_ BSTR ProductCode) PURE;
    STDMETHOD(get_TemplateSummary)(THIS_ BSTR FAR* TemplateSummary) PURE;
    STDMETHOD(put_TemplateSummary)(THIS_ BSTR TemplateSummary) PURE;
    STDMETHOD(get_ProductConfigurationFlags)(THIS_ BSTR FAR* ProductConfigurationFlags) PURE;
    STDMETHOD(put_ProductConfigurationFlags)(THIS_ BSTR ProductConfigurationFlags) PURE;
    STDMETHOD(get_PageCount)(THIS_ BSTR FAR* pbstrPageCount) PURE;
    STDMETHOD(put_PageCount)(THIS_ BSTR bstrPageCount) PURE;
    STDMETHOD(get_PreProcessorDefines)(THIS_ BSTR FAR* pbstrPreProcessorDefines) PURE;
    STDMETHOD(put_PreProcessorDefines)(THIS_ BSTR bstrPreProcessorDefines) PURE;
    STDMETHOD(get_MSIPackageFileName)(THIS_ BSTR FAR* pbstrMSIPackageFileName) PURE;
    STDMETHOD(put_MSIPackageFileName)(THIS_ BSTR bstrMSIPackageFileName) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;

    /* IBuildLabelIndore methods */
    STDMETHOD(get_IncludeActionHelp)(THIS_ VARIANT_BOOL FAR* pvbVal) PURE;
    STDMETHOD(put_IncludeActionHelp)(THIS_ VARIANT_BOOL vbVal) PURE;

    /* IBuildLabelJustice methods */
    STDMETHOD(get_Instances)(THIS_ IProductConfigurationInstances FAR* FAR* ppCol) PURE;
#endif

    /* IBuildLabelPunk methods */
    STDMETHOD(get_PlatformValidation)(THIS_ EnumPlatformValidationType FAR* peType) PURE;
    STDMETHOD(put_PlatformValidation)(THIS_ EnumPlatformValidationType eType) PURE;
};

DEFINE_GUID(IID_ILogicalDiskFeature,0x38FCFD83L,0x862D,0x4151,0xB8,0x91,0xA5,0x7B,0xD4,0x7E,0x89,0xC7);

/* Definition of interface: ILogicalDiskFeature */
#undef INTERFACE
#define INTERFACE ILogicalDiskFeature

DECLARE_INTERFACE_(ILogicalDiskFeature, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* ILogicalDiskFeature methods */
    STDMETHOD(get_DiskID)(THIS_ short FAR* DiskID) PURE;
    STDMETHOD(put_DiskID)(THIS_ short DiskID) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_Compressed)(THIS_ VARIANT_BOOL FAR* Compressed) PURE;
    STDMETHOD(put_Compressed)(THIS_ VARIANT_BOOL Compressed) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_Release)(THIS_ BSTR FAR* Release) PURE;
    STDMETHOD(put_Release)(THIS_ BSTR Release) PURE;
    STDMETHOD(get_Feature)(THIS_ BSTR FAR* Feature) PURE;
    STDMETHOD(put_Feature)(THIS_ BSTR Feature) PURE;
};

DEFINE_GUID(IID_ILogicalDiskFeatures,0xA4D97165L,0x79FC,0x4608,0x9A,0x5F,0x57,0x1E,0xBB,0xBC,0x48,0x70);

/* Definition of interface: ILogicalDiskFeatures */
#undef INTERFACE
#define INTERFACE ILogicalDiskFeatures

DECLARE_INTERFACE_(ILogicalDiskFeatures, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* ILogicalDiskFeatures methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ILogicalDiskFeature FAR* FAR* pLogicalDiskFeature) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumLogicalDiskChild {
    eldcLogicalDiskFeature = 0
} EnumLogicalDiskChild;

DEFINE_GUID(IID_ILogicalDisk,0x2E8F5244L,0x8062,0x4BBA,0xA6,0x16,0x84,0x77,0x92,0xED,0x57,0x0F);

/* Definition of interface: ILogicalDisk */
#undef INTERFACE
#define INTERFACE ILogicalDisk

DECLARE_INTERFACE_(ILogicalDisk, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* ILogicalDisk methods */
    STDMETHOD(get_DiskID)(THIS_ short FAR* DiskID) PURE;
    STDMETHOD(put_DiskID)(THIS_ short DiskID) PURE;
    STDMETHOD(get_DiskPrompt)(THIS_ BSTR FAR* DiskPrompt) PURE;
    STDMETHOD(put_DiskPrompt)(THIS_ BSTR DiskPrompt) PURE;
    STDMETHOD(get_LastSequence)(THIS_ long FAR* LastSequence) PURE;
    STDMETHOD(put_LastSequence)(THIS_ long LastSequence) PURE;
    STDMETHOD(get_Cabinet)(THIS_ BSTR FAR* Cabinet) PURE;
    STDMETHOD(put_Cabinet)(THIS_ BSTR Cabinet) PURE;
    STDMETHOD(get_VolumeLabel)(THIS_ BSTR FAR* VolumeLabel) PURE;
    STDMETHOD(put_VolumeLabel)(THIS_ BSTR VolumeLabel) PURE;
    STDMETHOD(get_PatchSource)(THIS_ BSTR FAR* PatchSource) PURE;
    STDMETHOD(put_PatchSource)(THIS_ BSTR PatchSource) PURE;
    STDMETHOD(get_ProductConfiguration)(THIS_ BSTR FAR* ProductConfiguration) PURE;
    STDMETHOD(put_ProductConfiguration)(THIS_ BSTR ProductConfiguration) PURE;
    STDMETHOD(get_Release)(THIS_ BSTR FAR* Release) PURE;
    STDMETHOD(put_Release)(THIS_ BSTR Release) PURE;
    STDMETHOD(get_LogicalDiskFeatures)(THIS_ ILogicalDiskFeatures FAR* FAR* pVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumLogicalDiskChild eldChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_ILogicalDisks,0xEAC30682L,0xF34B,0x4C16,0x9C,0x33,0xF8,0xB5,0x5B,0x7D,0x68,0xE8);

/* Definition of interface: ILogicalDisks */
#undef INTERFACE
#define INTERFACE ILogicalDisks

DECLARE_INTERFACE_(ILogicalDisks, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* ILogicalDisks methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ILogicalDisk FAR* FAR* pLogicalDisk) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumASPublishOptions {
    eapoReplaceExisting = 0,
    eapoCreateNew = 1,
    eapoCreateNewerVersion = 2,
    eapoDoNotUpdate = 3
} EnumASPublishOptions;

DEFINE_GUID(IID_IReleaseASRepositoryPropertyIbizaAtlantis,0xCBAE32C1L,0x4DAE,0x4A47,0x8B,0x5F,0x27,0xD6,0x4C,0x65,0xDD,0x5C);

/* Definition of interface: IReleaseASRepositoryPropertyIbizaAtlantis */
#undef INTERFACE
#define INTERFACE IReleaseASRepositoryPropertyIbizaAtlantis

DECLARE_INTERFACE_(IReleaseASRepositoryPropertyIbizaAtlantis, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IReleaseASRepositoryPropertyIbizaAtlantis methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Value)(THIS_ VARIANT FAR* pvtVal) PURE;
    STDMETHOD(put_Value)(THIS_ VARIANT vtVal) PURE;
};

DEFINE_GUID(IID_IReleaseASRepositoryPropertiesIbizaAtlantis,0xBD2AC4B7L,0x7D9A,0x43C8,0x81,0xBB,0x8D,0x45,0x29,0x1B,0x79,0x72);

/* Definition of interface: IReleaseASRepositoryPropertiesIbizaAtlantis */
#undef INTERFACE
#define INTERFACE IReleaseASRepositoryPropertiesIbizaAtlantis

DECLARE_INTERFACE_(IReleaseASRepositoryPropertiesIbizaAtlantis, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IReleaseASRepositoryPropertiesIbizaAtlantis methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IReleaseASRepositoryPropertyIbizaAtlantis FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IProductConfigurationInstance,0x5E1B8B20L,0xDC9D,0x4F60,0x9B,0x66,0x36,0x05,0x79,0x71,0x73,0xCA);

/* Definition of interface: IProductConfigurationInstance */
#undef INTERFACE
#define INTERFACE IProductConfigurationInstance

DECLARE_INTERFACE_(IProductConfigurationInstance, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProductConfigurationInstance methods */
    STDMETHOD(get_Id)(THIS_ long FAR* plId) PURE;
    STDMETHOD(put_Id)(THIS_ long lId) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* ppCol) PURE;
    STDMETHOD(AddChild)(THIS_ EnumInstanceChild einstChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IProductConfigurationInstances,0xD17F1D1FL,0xA849,0x4A85,0xAE,0x5D,0x5E,0x94,0x0D,0x00,0x83,0xAC);

/* Definition of interface: IProductConfigurationInstances */
#undef INTERFACE
#define INTERFACE IProductConfigurationInstances

DECLARE_INTERFACE_(IProductConfigurationInstances, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProductConfigurationInstances methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IProductConfigurationInstance FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumSetupLauncherTypeOptions {
    esltoAnsi = 0,
    esltoUnicode = 1
} EnumSetupLauncherTypeOptions;

typedef enum EnumCabCompressionType {
    ecctNone = 0,
    ecctMSZIP = 1,
    ecctQUANTUM = 2,
    ecctLZX = 3
} EnumCabCompressionType;

typedef enum QPFileAction {
    qfaPatch = 0,
    qfaDelete = 1,
    qfaNew = 2,
    qfaSelfReg = 4,
    qfaComExtract = 8,
    qfaOverwrite = 16
} QPFileAction;

typedef enum ELauncherType {
    eltMain = 1,
    eltMsi9x = 2,
    eltMsiNT = 3,
    eltScript_OBSOLETE = 4,
    eltDotNet = 5,
    eltMSI30 = 6
} ELauncherType;

typedef enum ELauncherLocation {
    ellDisk = 0,
    ellStream = 1,
    ellWeb = 2
} ELauncherLocation;

typedef enum ERegEffect {
    reNew = 0,
    reModify = 1,
    reDelete = 2,
    reNone = 4
} ERegEffect;

typedef enum EQPRegistryChild {
    qprcKey = 0,
    qprcValue = 1
} EQPRegistryChild;

typedef enum EQPSimplification {
    qpsFileFeatures = 1,
    qpsRegistryFeatures = 2,
    qpsCustomActions = 4
} EQPSimplification;

interface IQPRegistryKey;

DEFINE_GUID(IID_IQPRegistryValue,0x0F7AC22BL,0x16A0,0x450A,0xA2,0x3A,0xB2,0x26,0x6E,0x30,0x11,0x31);

/* Definition of interface: IQPRegistryValue */
#undef INTERFACE
#define INTERFACE IQPRegistryValue

DECLARE_INTERFACE_(IQPRegistryValue, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IQPRegistryValue methods */
    STDMETHOD(get_ValueName)(THIS_ BSTR FAR* ValueName) PURE;
    STDMETHOD(put_ValueName)(THIS_ BSTR ValueName) PURE;
    STDMETHOD(get_ValueType)(THIS_ EnumRegistryDataType FAR* ValueType) PURE;
    STDMETHOD(put_ValueType)(THIS_ EnumRegistryDataType ValueType) PURE;
    STDMETHOD(get_ValueData)(THIS_ BSTR FAR* ValueData) PURE;
    STDMETHOD(put_ValueData)(THIS_ BSTR ValueData) PURE;
    STDMETHOD(put_Effect)(THIS_ ERegEffect re) PURE;
    STDMETHOD(get_Effect)(THIS_ ERegEffect FAR* re) PURE;
    STDMETHOD(get_NewData)(THIS_ BSTR FAR* ValueData) PURE;
    STDMETHOD(put_NewData)(THIS_ BSTR ValueData) PURE;
    STDMETHOD(get_NewName)(THIS_ BSTR FAR* ValueData) PURE;
    STDMETHOD(put_NewName)(THIS_ BSTR ValueData) PURE;
    STDMETHOD(get_Feature)(THIS_ BSTR FAR* ValueData) PURE;
    STDMETHOD(put_Feature)(THIS_ BSTR ValueData) PURE;
    STDMETHOD(GetParentKey)(THIS_ IQPRegistryKey FAR* FAR* ppRegistryKey) PURE;
    STDMETHOD(PutValueDataEx)(THIS_ EnumRegistryDataType eValueType, BSTR bstrValueData) PURE;
};

DEFINE_GUID(IID_IQPRegistryValues,0xA4C5452CL,0x4254,0x47D7,0x9F,0xD0,0x22,0x93,0x4C,0xFA,0x7C,0x40);

/* Definition of interface: IQPRegistryValues */
#undef INTERFACE
#define INTERFACE IQPRegistryValues

DECLARE_INTERFACE_(IQPRegistryValues, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IQPRegistryValues methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IQPRegistryValue FAR* FAR* ppValue) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

interface IQPRegistryKeys;

interface IQPRegistryKey;

DEFINE_GUID(IID_IQPRegistryKey,0xEF4724E1L,0xC8DA,0x4166,0xAD,0xA4,0x4C,0x1D,0xE3,0xF7,0x4E,0xB9);

/* Definition of interface: IQPRegistryKey */
#undef INTERFACE
#define INTERFACE IQPRegistryKey

DECLARE_INTERFACE_(IQPRegistryKey, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IQPRegistryKey methods */
    STDMETHOD(put_Key)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Effect)(THIS_ ERegEffect re) PURE;
    STDMETHOD(get_Effect)(THIS_ ERegEffect FAR* re) PURE;
    STDMETHOD(get_SubKeys)(THIS_ IQPRegistryKeys FAR* FAR* ppSubKeys) PURE;
    STDMETHOD(get_Values)(THIS_ IQPRegistryValues FAR* FAR* ppValues) PURE;
    STDMETHOD(get_NewName)(THIS_ BSTR FAR* ValueData) PURE;
    STDMETHOD(put_NewName)(THIS_ BSTR ValueData) PURE;
    STDMETHOD(get_Feature)(THIS_ BSTR FAR* ValueData) PURE;
    STDMETHOD(put_Feature)(THIS_ BSTR ValueData) PURE;
    STDMETHOD(GetSubKeyByName)(THIS_ BSTR bstrName, IQPRegistryKey FAR* FAR* ppRegistryKey) PURE;
    STDMETHOD(GetSubKeyByNewName)(THIS_ BSTR bstrName, IQPRegistryKey FAR* FAR* ppRegistryKey) PURE;
    STDMETHOD(GetRegistryValueByName)(THIS_ BSTR bstrName, IQPRegistryValue FAR* FAR* ppRegistryValue) PURE;
    STDMETHOD(GetKeyPathAndRoot)(THIS_ BSTR FAR* bstrKeyPath, long FAR* lRoot) PURE;
    STDMETHOD(GetNewKeyPathAndRoot)(THIS_ BSTR FAR* bstrKeyPath, long FAR* lRoot) PURE;
    STDMETHOD(InsertCopy)(THIS_ IQPRegistryKey FAR* ppQPRegistryKey, IRegistryKey FAR* ppRegistryKey, VARIANT_BOOL bOverwrite, BSTR strFeature) PURE;
    STDMETHOD(InsertKey)(THIS_ IQPRegistryKey FAR* ppRegistryKey) PURE;
    STDMETHOD(InsertValue)(THIS_ IQPRegistryValue FAR* ppRegistryValue) PURE;
    STDMETHOD(AddChild)(THIS_ EQPRegistryChild qprcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IQPRegistryKeys,0x73FDF5F2L,0x4868,0x4112,0x96,0x51,0x4C,0x5D,0x20,0x49,0xF1,0x07);

/* Definition of interface: IQPRegistryKeys */
#undef INTERFACE
#define INTERFACE IQPRegistryKeys

DECLARE_INTERFACE_(IQPRegistryKeys, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IQPRegistryKeys methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IQPRegistryKey FAR* FAR* ppKey) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IQPProperty,0xD6F4A3D3L,0x5C24,0x4FB6,0x94,0xBD,0xC6,0x7C,0xFA,0xFB,0x5A,0x8B);

/* Definition of interface: IQPProperty */
#undef INTERFACE
#define INTERFACE IQPProperty

DECLARE_INTERFACE_(IQPProperty, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IQPProperty methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_IQPProperties,0x18100A2BL,0xFCDE,0x4155,0x8A,0x06,0x31,0xAD,0x61,0xA0,0x9C,0xB8);

/* Definition of interface: IQPProperties */
#undef INTERFACE
#define INTERFACE IQPProperties

DECLARE_INTERFACE_(IQPProperties, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IQPProperties methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IQPProperty FAR* FAR* ppProperty) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IQPFile,0xE5115E57L,0x42A2,0x4ADE,0xAD,0x93,0x00,0x45,0x1F,0x87,0xAD,0xD7);

/* Definition of interface: IQPFile */
#undef INTERFACE
#define INTERFACE IQPFile

DECLARE_INTERFACE_(IQPFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IQPFile methods */
    STDMETHOD(put_OriginalSetupKey)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupKey)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchFilePath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchFilePath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Action)(THIS_ QPFileAction bstrVal) PURE;
    STDMETHOD(get_Action)(THIS_ QPFileAction FAR* bstrVal) PURE;
    STDMETHOD(put_SelfReg)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SelfReg)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_ComExtract)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ComExtract)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Overwrite)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_Overwrite)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_Feature)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Feature)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(StampFileVersion)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_IQPFiles,0x905AF75FL,0x3FD0,0x4574,0xBB,0x70,0x10,0x85,0xA4,0xB7,0xE6,0x78);

/* Definition of interface: IQPFiles */
#undef INTERFACE
#define INTERFACE IQPFiles

DECLARE_INTERFACE_(IQPFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IQPFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IQPFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IQPExcludedPackage,0x91AA5888L,0xE9B8,0x42A6,0x9F,0x19,0x8D,0x16,0x9A,0x87,0x16,0x40);

/* Definition of interface: IQPExcludedPackage */
#undef INTERFACE
#define INTERFACE IQPExcludedPackage

DECLARE_INTERFACE_(IQPExcludedPackage, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IQPExcludedPackage methods */
    STDMETHOD(put_PackageCode)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PackageCode)(THIS_ BSTR FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_IQPExcludedPackages,0xF8C59831L,0x8120,0x4863,0xA0,0xA2,0xC0,0xD0,0x9E,0x6C,0xED,0x4C);

/* Definition of interface: IQPExcludedPackages */
#undef INTERFACE
#define INTERFACE IQPExcludedPackages

DECLARE_INTERFACE_(IQPExcludedPackages, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IQPExcludedPackages methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IQPExcludedPackage FAR* FAR* ppQPExcludedPackage) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumQuickPatchChild {
    qpcFile = 10,
    qpcProperty = 11,
    qpcExcludedPackage = 12
} EnumQuickPatchChild;

DEFINE_GUID(IID_IQPRoot,0x365E3D33L,0x6C86,0x42A7,0xBA,0x4D,0x94,0xBB,0x0F,0x00,0x9C,0x24);

/* Definition of interface: IQPRoot */
#undef INTERFACE
#define INTERFACE IQPRoot

DECLARE_INTERFACE_(IQPRoot, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IQPRoot methods */
    STDMETHOD(get_QPFiles)(THIS_ IQPFiles FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_QPProperties)(THIS_ IQPProperties FAR* FAR* ppProperties) PURE;
    STDMETHOD(put_OriginalSetupPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_OriginalSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSetupVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(get_RegistryRoot)(THIS_ BSTR bstrHive, IQPRegistryKey FAR* FAR* ppRegistrysKey) PURE;
    STDMETHOD(get_ModifiedKeysCollection)(THIS_ IQPRegistryKeys FAR* FAR* ppRegistrysKeys) PURE;
    STDMETHOD(get_ModifiedValuesCollection)(THIS_ IQPRegistryValues FAR* FAR* ppRegistrysValues) PURE;
    STDMETHOD(AddChild)(THIS_ EnumQuickPatchChild qpcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(put_OriginalSetupPackageCode)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPackageCode)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ParentQuickPatch)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ParentQuickPatch)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(get_QPExcludedPackages)(THIS_ IQPExcludedPackages FAR* FAR* ppExcludedPackages) PURE;
    STDMETHOD(put_UpdateServiceVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_UpdateServiceVersion)(THIS_ BSTR FAR* pbstrVal) PURE;
};

DEFINE_GUID(IID_IQPRootProteus,0x365E3D34L,0x6C86,0x42A7,0xBA,0x4D,0x94,0xBB,0x0F,0x00,0x9C,0x24);

/* Definition of interface: IQPRootProteus */
#undef INTERFACE
#define INTERFACE IQPRootProteus

DECLARE_INTERFACE_(IQPRootProteus, IQPRoot)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IQPRoot methods */
    STDMETHOD(get_QPFiles)(THIS_ IQPFiles FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_QPProperties)(THIS_ IQPProperties FAR* FAR* ppProperties) PURE;
    STDMETHOD(put_OriginalSetupPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_OriginalSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSetupVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(get_RegistryRoot)(THIS_ BSTR bstrHive, IQPRegistryKey FAR* FAR* ppRegistrysKey) PURE;
    STDMETHOD(get_ModifiedKeysCollection)(THIS_ IQPRegistryKeys FAR* FAR* ppRegistrysKeys) PURE;
    STDMETHOD(get_ModifiedValuesCollection)(THIS_ IQPRegistryValues FAR* FAR* ppRegistrysValues) PURE;
    STDMETHOD(AddChild)(THIS_ EnumQuickPatchChild qpcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(put_OriginalSetupPackageCode)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPackageCode)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ParentQuickPatch)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ParentQuickPatch)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(get_QPExcludedPackages)(THIS_ IQPExcludedPackages FAR* FAR* ppExcludedPackages) PURE;
    STDMETHOD(put_UpdateServiceVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_UpdateServiceVersion)(THIS_ BSTR FAR* pbstrVal) PURE;
#endif

    /* IQPRootProteus methods */
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
};

DEFINE_GUID(IID_IQPRootProteusSP3,0x365E3D35L,0x6C86,0x42A7,0xBA,0x4D,0x94,0xBB,0x0F,0x00,0x9C,0x24);

/* Definition of interface: IQPRootProteusSP3 */
#undef INTERFACE
#define INTERFACE IQPRootProteusSP3

DECLARE_INTERFACE_(IQPRootProteusSP3, IQPRootProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IQPRoot methods */
    STDMETHOD(get_QPFiles)(THIS_ IQPFiles FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_QPProperties)(THIS_ IQPProperties FAR* FAR* ppProperties) PURE;
    STDMETHOD(put_OriginalSetupPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_OriginalSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSetupVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(get_RegistryRoot)(THIS_ BSTR bstrHive, IQPRegistryKey FAR* FAR* ppRegistrysKey) PURE;
    STDMETHOD(get_ModifiedKeysCollection)(THIS_ IQPRegistryKeys FAR* FAR* ppRegistrysKeys) PURE;
    STDMETHOD(get_ModifiedValuesCollection)(THIS_ IQPRegistryValues FAR* FAR* ppRegistrysValues) PURE;
    STDMETHOD(AddChild)(THIS_ EnumQuickPatchChild qpcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(put_OriginalSetupPackageCode)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPackageCode)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ParentQuickPatch)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ParentQuickPatch)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(get_QPExcludedPackages)(THIS_ IQPExcludedPackages FAR* FAR* ppExcludedPackages) PURE;
    STDMETHOD(put_UpdateServiceVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_UpdateServiceVersion)(THIS_ BSTR FAR* pbstrVal) PURE;

    /* IQPRootProteus methods */
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
#endif

    /* IQPRootProteusSP3 methods */
    STDMETHOD(put_AllowRemoval)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_AllowRemoval)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_MoreInfoURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MoreInfoURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ManufacturerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ManufacturerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_TargetProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_TargetProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Classification)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Classification)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisableDefaultSequencing)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_DisableDefaultSequencing)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignPackage)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignPackage)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureSPC)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureSPC)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureCPK)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureCPK)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignaturePassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePassword)(THIS_ BSTR FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_IQPRootPluto,0x365E3D36L,0x6C86,0x42A7,0xBA,0x4D,0x94,0xBB,0x0F,0x00,0x9C,0x24);

/* Definition of interface: IQPRootPluto */
#undef INTERFACE
#define INTERFACE IQPRootPluto

DECLARE_INTERFACE_(IQPRootPluto, IQPRootProteusSP3)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IQPRoot methods */
    STDMETHOD(get_QPFiles)(THIS_ IQPFiles FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_QPProperties)(THIS_ IQPProperties FAR* FAR* ppProperties) PURE;
    STDMETHOD(put_OriginalSetupPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_OriginalSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSetupVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(get_RegistryRoot)(THIS_ BSTR bstrHive, IQPRegistryKey FAR* FAR* ppRegistrysKey) PURE;
    STDMETHOD(get_ModifiedKeysCollection)(THIS_ IQPRegistryKeys FAR* FAR* ppRegistrysKeys) PURE;
    STDMETHOD(get_ModifiedValuesCollection)(THIS_ IQPRegistryValues FAR* FAR* ppRegistrysValues) PURE;
    STDMETHOD(AddChild)(THIS_ EnumQuickPatchChild qpcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(put_OriginalSetupPackageCode)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPackageCode)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ParentQuickPatch)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ParentQuickPatch)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(get_QPExcludedPackages)(THIS_ IQPExcludedPackages FAR* FAR* ppExcludedPackages) PURE;
    STDMETHOD(put_UpdateServiceVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_UpdateServiceVersion)(THIS_ BSTR FAR* pbstrVal) PURE;

    /* IQPRootProteus methods */
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;

    /* IQPRootProteusSP3 methods */
    STDMETHOD(put_AllowRemoval)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_AllowRemoval)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_MoreInfoURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MoreInfoURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ManufacturerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ManufacturerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_TargetProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_TargetProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Classification)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Classification)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisableDefaultSequencing)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_DisableDefaultSequencing)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignPackage)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignPackage)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureSPC)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureSPC)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureCPK)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureCPK)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignaturePassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePassword)(THIS_ BSTR FAR* bstrVal) PURE;
#endif

    /* IQPRootPluto methods */
    STDMETHOD(put_SignUpdateExe)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignUpdateExe)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_IQPRootJustice,0x365E3D37L,0x6C86,0x42A7,0xBA,0x4D,0x94,0xBB,0x0F,0x00,0x9C,0x24);

/* Definition of interface: IQPRootJustice */
#undef INTERFACE
#define INTERFACE IQPRootJustice

DECLARE_INTERFACE_(IQPRootJustice, IQPRootPluto)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IQPRoot methods */
    STDMETHOD(get_QPFiles)(THIS_ IQPFiles FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_QPProperties)(THIS_ IQPProperties FAR* FAR* ppProperties) PURE;
    STDMETHOD(put_OriginalSetupPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_OriginalSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSetupVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(get_RegistryRoot)(THIS_ BSTR bstrHive, IQPRegistryKey FAR* FAR* ppRegistrysKey) PURE;
    STDMETHOD(get_ModifiedKeysCollection)(THIS_ IQPRegistryKeys FAR* FAR* ppRegistrysKeys) PURE;
    STDMETHOD(get_ModifiedValuesCollection)(THIS_ IQPRegistryValues FAR* FAR* ppRegistrysValues) PURE;
    STDMETHOD(AddChild)(THIS_ EnumQuickPatchChild qpcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(put_OriginalSetupPackageCode)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPackageCode)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ParentQuickPatch)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ParentQuickPatch)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(get_QPExcludedPackages)(THIS_ IQPExcludedPackages FAR* FAR* ppExcludedPackages) PURE;
    STDMETHOD(put_UpdateServiceVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_UpdateServiceVersion)(THIS_ BSTR FAR* pbstrVal) PURE;

    /* IQPRootProteus methods */
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;

    /* IQPRootProteusSP3 methods */
    STDMETHOD(put_AllowRemoval)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_AllowRemoval)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_MoreInfoURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MoreInfoURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ManufacturerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ManufacturerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_TargetProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_TargetProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Classification)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Classification)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisableDefaultSequencing)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_DisableDefaultSequencing)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignPackage)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignPackage)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureSPC)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureSPC)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureCPK)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureCPK)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignaturePassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePassword)(THIS_ BSTR FAR* bstrVal) PURE;

    /* IQPRootPluto methods */
    STDMETHOD(put_SignUpdateExe)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignUpdateExe)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
#endif

    /* IQPRootJustice methods */
    STDMETHOD(put_BuildSimplification)(THIS_ EQPSimplification eqpSimplify) PURE;
    STDMETHOD(get_BuildSimplification)(THIS_ EQPSimplification FAR* eqpSimplify) PURE;
    STDMETHOD(put_PasswordProtected)(THIS_ VARIANT_BOOL vbProtected) PURE;
    STDMETHOD(get_PasswordProtected)(THIS_ VARIANT_BOOL FAR* vbProtected) PURE;
    STDMETHOD(put_LauncherPassword)(THIS_ BSTR bstrPassword) PURE;
    STDMETHOD(get_LauncherPassword)(THIS_ BSTR FAR* bstrPassword) PURE;
    STDMETHOD(put_LauncherType)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherType)(THIS_ BSTR FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_IQPRootMajesty,0xF8A4170DL,0xB5C9,0x40C0,0xA8,0x31,0x93,0x0B,0x09,0xE3,0xEF,0x93);

/* Definition of interface: IQPRootMajesty */
#undef INTERFACE
#define INTERFACE IQPRootMajesty

DECLARE_INTERFACE_(IQPRootMajesty, IQPRootJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IQPRoot methods */
    STDMETHOD(get_QPFiles)(THIS_ IQPFiles FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_QPProperties)(THIS_ IQPProperties FAR* FAR* ppProperties) PURE;
    STDMETHOD(put_OriginalSetupPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_OriginalSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSetupVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(get_RegistryRoot)(THIS_ BSTR bstrHive, IQPRegistryKey FAR* FAR* ppRegistrysKey) PURE;
    STDMETHOD(get_ModifiedKeysCollection)(THIS_ IQPRegistryKeys FAR* FAR* ppRegistrysKeys) PURE;
    STDMETHOD(get_ModifiedValuesCollection)(THIS_ IQPRegistryValues FAR* FAR* ppRegistrysValues) PURE;
    STDMETHOD(AddChild)(THIS_ EnumQuickPatchChild qpcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(put_OriginalSetupPackageCode)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPackageCode)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ParentQuickPatch)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ParentQuickPatch)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(get_QPExcludedPackages)(THIS_ IQPExcludedPackages FAR* FAR* ppExcludedPackages) PURE;
    STDMETHOD(put_UpdateServiceVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_UpdateServiceVersion)(THIS_ BSTR FAR* pbstrVal) PURE;

    /* IQPRootProteus methods */
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;

    /* IQPRootProteusSP3 methods */
    STDMETHOD(put_AllowRemoval)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_AllowRemoval)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_MoreInfoURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MoreInfoURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ManufacturerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ManufacturerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_TargetProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_TargetProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Classification)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Classification)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisableDefaultSequencing)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_DisableDefaultSequencing)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignPackage)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignPackage)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureSPC)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureSPC)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureCPK)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureCPK)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignaturePassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePassword)(THIS_ BSTR FAR* bstrVal) PURE;

    /* IQPRootPluto methods */
    STDMETHOD(put_SignUpdateExe)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignUpdateExe)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;

    /* IQPRootJustice methods */
    STDMETHOD(put_BuildSimplification)(THIS_ EQPSimplification eqpSimplify) PURE;
    STDMETHOD(get_BuildSimplification)(THIS_ EQPSimplification FAR* eqpSimplify) PURE;
    STDMETHOD(put_PasswordProtected)(THIS_ VARIANT_BOOL vbProtected) PURE;
    STDMETHOD(get_PasswordProtected)(THIS_ VARIANT_BOOL FAR* vbProtected) PURE;
    STDMETHOD(put_LauncherPassword)(THIS_ BSTR bstrPassword) PURE;
    STDMETHOD(get_LauncherPassword)(THIS_ BSTR FAR* bstrPassword) PURE;
    STDMETHOD(put_LauncherType)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherType)(THIS_ BSTR FAR* bstrVal) PURE;
#endif

    /* IQPRootMajesty methods */
    STDMETHOD(get_LauncherCompanyName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherCompanyName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherProductVer)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherProductVer)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherDescription)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherDescription)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherCopyright)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherCopyright)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherManifest)(THIS_ EnumRequiredExecutionLevel FAR* eLevel) PURE;
    STDMETHOD(put_LauncherManifest)(THIS_ EnumRequiredExecutionLevel eLevel) PURE;
    STDMETHOD(get_LauncherIcon)(THIS_ BSTR FAR* bstrIcon) PURE;
    STDMETHOD(put_LauncherIcon)(THIS_ BSTR bstrIcon) PURE;
};

DEFINE_GUID(IID_IQPRootRipley,0x38308B5CL,0x5B7D,0x4155,0xB0,0x47,0x9C,0xBA,0x80,0x4B,0x1F,0xE5);

/* Definition of interface: IQPRootRipley */
#undef INTERFACE
#define INTERFACE IQPRootRipley

DECLARE_INTERFACE_(IQPRootRipley, IQPRootMajesty)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IQPRoot methods */
    STDMETHOD(get_QPFiles)(THIS_ IQPFiles FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_QPProperties)(THIS_ IQPProperties FAR* FAR* ppProperties) PURE;
    STDMETHOD(put_OriginalSetupPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_OriginalSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSetupVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSetupVersion)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(get_RegistryRoot)(THIS_ BSTR bstrHive, IQPRegistryKey FAR* FAR* ppRegistrysKey) PURE;
    STDMETHOD(get_ModifiedKeysCollection)(THIS_ IQPRegistryKeys FAR* FAR* ppRegistrysKeys) PURE;
    STDMETHOD(get_ModifiedValuesCollection)(THIS_ IQPRegistryValues FAR* FAR* ppRegistrysValues) PURE;
    STDMETHOD(AddChild)(THIS_ EnumQuickPatchChild qpcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(put_OriginalSetupPackageCode)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_OriginalSetupPackageCode)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ParentQuickPatch)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ParentQuickPatch)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(get_QPExcludedPackages)(THIS_ IQPExcludedPackages FAR* FAR* ppExcludedPackages) PURE;
    STDMETHOD(put_UpdateServiceVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_UpdateServiceVersion)(THIS_ BSTR FAR* pbstrVal) PURE;

    /* IQPRootProteus methods */
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;

    /* IQPRootProteusSP3 methods */
    STDMETHOD(put_AllowRemoval)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_AllowRemoval)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_MoreInfoURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MoreInfoURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ManufacturerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ManufacturerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_TargetProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_TargetProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Classification)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Classification)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisableDefaultSequencing)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_DisableDefaultSequencing)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignPackage)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignPackage)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureSPC)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureSPC)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureCPK)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureCPK)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignaturePassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePassword)(THIS_ BSTR FAR* bstrVal) PURE;

    /* IQPRootPluto methods */
    STDMETHOD(put_SignUpdateExe)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignUpdateExe)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;

    /* IQPRootJustice methods */
    STDMETHOD(put_BuildSimplification)(THIS_ EQPSimplification eqpSimplify) PURE;
    STDMETHOD(get_BuildSimplification)(THIS_ EQPSimplification FAR* eqpSimplify) PURE;
    STDMETHOD(put_PasswordProtected)(THIS_ VARIANT_BOOL vbProtected) PURE;
    STDMETHOD(get_PasswordProtected)(THIS_ VARIANT_BOOL FAR* vbProtected) PURE;
    STDMETHOD(put_LauncherPassword)(THIS_ BSTR bstrPassword) PURE;
    STDMETHOD(get_LauncherPassword)(THIS_ BSTR FAR* bstrPassword) PURE;
    STDMETHOD(put_LauncherType)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherType)(THIS_ BSTR FAR* bstrVal) PURE;

    /* IQPRootMajesty methods */
    STDMETHOD(get_LauncherCompanyName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherCompanyName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherProductVer)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherProductVer)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherDescription)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherDescription)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherCopyright)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherCopyright)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherManifest)(THIS_ EnumRequiredExecutionLevel FAR* eLevel) PURE;
    STDMETHOD(put_LauncherManifest)(THIS_ EnumRequiredExecutionLevel eLevel) PURE;
    STDMETHOD(get_LauncherIcon)(THIS_ BSTR FAR* bstrIcon) PURE;
    STDMETHOD(put_LauncherIcon)(THIS_ BSTR bstrIcon) PURE;
#endif

    /* IQPRootRipley methods */
    STDMETHOD(get_SignaturePasswordRaw)(THIS_ BSTR FAR* pbstrPassword) PURE;
    STDMETHOD(put_SignaturePasswordRaw)(THIS_ BSTR bstrPassword) PURE;
    STDMETHOD(get_SignatureDescription)(THIS_ BSTR FAR* pbstrDescription) PURE;
    STDMETHOD(put_SignatureDescription)(THIS_ BSTR bstrDescription) PURE;
};

interface IUpgradedImage;

DEFINE_GUID(IID_IMsiPatchSequenceProteusSP,0xDA490341L,0x47EA,0x431F,0xB6,0xE6,0x10,0x4F,0x4E,0x79,0x85,0x9A);

/* Definition of interface: IMsiPatchSequenceProteusSP */
#undef INTERFACE
#define INTERFACE IMsiPatchSequenceProteusSP

DECLARE_INTERFACE_(IMsiPatchSequenceProteusSP, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMsiPatchSequenceProteusSP methods */
    STDMETHOD(put_FamilyName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FamilyName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Sequence)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Sequence)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Supersede)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_Supersede)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_IMsiPatchSequencesProteusSP,0xDA490340L,0x47EA,0x431F,0xB6,0xE6,0x10,0x4F,0x4E,0x79,0x85,0x9A);

/* Definition of interface: IMsiPatchSequencesProteusSP */
#undef INTERFACE
#define INTERFACE IMsiPatchSequencesProteusSP

DECLARE_INTERFACE_(IMsiPatchSequencesProteusSP, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMsiPatchSequencesProteusSP methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IMsiPatchSequenceProteusSP FAR* FAR* ppItem) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IPatchExternalFile,0x5C10C548L,0x2B35,0x4EA0,0x8F,0xF8,0x14,0xFB,0x01,0xB7,0xB2,0x59);

/* Definition of interface: IPatchExternalFile */
#undef INTERFACE
#define INTERFACE IPatchExternalFile

DECLARE_INTERFACE_(IPatchExternalFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPatchExternalFile methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_FileKey)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FileKey)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_FilePath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FilePath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_UpgradedImage)(THIS_ IUpgradedImage FAR* FAR* pUpgradedImage) PURE;
};

DEFINE_GUID(IID_IPatchExternalFiles,0x236C28B8L,0x7604,0x4939,0xB8,0x4B,0xAF,0x69,0x45,0xDC,0x22,0x88);

/* Definition of interface: IPatchExternalFiles */
#undef INTERFACE
#define INTERFACE IPatchExternalFiles

DECLARE_INTERFACE_(IPatchExternalFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPatchExternalFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IPatchExternalFile FAR* FAR* ppPatchWholeFile) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IPatchWholeFile,0xAD0F330BL,0x1B89,0x4AF1,0xAF,0x9D,0xE9,0x9D,0xAA,0xB3,0xDF,0x69);

/* Definition of interface: IPatchWholeFile */
#undef INTERFACE
#define INTERFACE IPatchWholeFile

DECLARE_INTERFACE_(IPatchWholeFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPatchWholeFile methods */
    STDMETHOD(put_FileKey)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FileKey)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_IPatchWholeFiles,0xFE56F5A3L,0x50EC,0x4267,0xB5,0x2A,0x0E,0xD0,0xFC,0x62,0x46,0x6D);

/* Definition of interface: IPatchWholeFiles */
#undef INTERFACE
#define INTERFACE IPatchWholeFiles

DECLARE_INTERFACE_(IPatchWholeFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPatchWholeFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IPatchWholeFile FAR* FAR* ppPatchWholeFile) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ITargetImage,0x40B8BF0EL,0x6FEC,0x4C97,0xBC,0x6B,0x65,0x9D,0x8B,0xA6,0x05,0x3A);

/* Definition of interface: ITargetImage */
#undef INTERFACE
#define INTERFACE ITargetImage

DECLARE_INTERFACE_(ITargetImage, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ITargetImage methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_MsiPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MsiPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Order)(THIS_ long bstrVal) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* bstrVal) PURE;
    STDMETHOD(put_ValidateFlags)(THIS_ long bstrVal) PURE;
    STDMETHOD(get_ValidateFlags)(THIS_ long FAR* bstrVal) PURE;
    STDMETHOD(put_IgnoreMissingFiles)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IgnoreMissingFiles)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
};

DEFINE_GUID(IID_ITargetImages,0x6054CB1EL,0xFA03,0x49AF,0xBB,0x2D,0x87,0x95,0x86,0xF0,0x98,0x76);

/* Definition of interface: ITargetImages */
#undef INTERFACE
#define INTERFACE ITargetImages

DECLARE_INTERFACE_(ITargetImages, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ITargetImages methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ITargetImage FAR* FAR* ppTargetImage) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumUpgradedImageChild {
    uiTargetImage = 10,
    uiPatchWholeFile = 11,
    uiPatchExternalFile = 12
} EnumUpgradedImageChild;

DEFINE_GUID(IID_IUpgradedImage,0x72BC5A54L,0xA43C,0x4948,0xBA,0xA1,0x12,0x96,0x61,0x63,0x1D,0x76);

/* Definition of interface: IUpgradedImage */
#undef INTERFACE
#define INTERFACE IUpgradedImage

DECLARE_INTERFACE_(IUpgradedImage, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IUpgradedImage methods */
    STDMETHOD(get_TargetImages)(THIS_ ITargetImages FAR* FAR* ppTargetImages) PURE;
    STDMETHOD(get_PatchWholeFiles)(THIS_ IPatchWholeFiles FAR* FAR* ppPatchWholeFiles) PURE;
    STDMETHOD(get_PatchExternalFiles)(THIS_ IPatchExternalFiles FAR* FAR* ppPatchExternalFiles) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_MsiPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MsiPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Family)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Family)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumUpgradedImageChild pcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IUpgradedImages,0xC8D86F58L,0xFFF6,0x41E9,0xBF,0xF8,0x99,0x60,0xDB,0x29,0x83,0x10);

/* Definition of interface: IUpgradedImages */
#undef INTERFACE
#define INTERFACE IUpgradedImages

DECLARE_INTERFACE_(IUpgradedImages, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IUpgradedImages methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IUpgradedImage FAR* FAR* ppUpgradedImage) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumPatchConfigurationChild {
    pcUpgradedImage = 10,
    pcPatchMetadata = 11,
    pcPatchSequence = 12
} EnumPatchConfigurationChild;

DEFINE_GUID(IID_IPatchConfiguration,0x90D2B8F0L,0x4EE0,0x4841,0xBE,0x4B,0x93,0xFA,0x8F,0x23,0x91,0x12);

/* Definition of interface: IPatchConfiguration */
#undef INTERFACE
#define INTERFACE IPatchConfiguration

DECLARE_INTERFACE_(IPatchConfiguration, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPatchConfiguration methods */
    STDMETHOD(get_UpgradedImages)(THIS_ IUpgradedImages FAR* FAR* ppUpgradedImages) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_EnablePatchCache)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_EnablePatchCache)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchingFlags)(THIS_ long bVal) PURE;
    STDMETHOD(get_PatchingFlags)(THIS_ long FAR* bVal) PURE;
    STDMETHOD(put_ListOfPatchGuidsToReplace)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfPatchGuidsToReplace)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ListOfTargetProductCodes)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfTargetProductCodes)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchGuid)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchGuid)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GeneratePatchGuid)(THIS_ VARIANT_BOOL bGenerate) PURE;
    STDMETHOD(get_GeneratePatchGuid)(THIS_ VARIANT_BOOL FAR* bGenerate) PURE;
    STDMETHOD(put_ValidateAtBuild)(THIS_ VARIANT_BOOL bValidate) PURE;
    STDMETHOD(get_ValidateAtBuild)(THIS_ VARIANT_BOOL FAR* bValidate) PURE;
    STDMETHOD(put_PatchOutputPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchOutputPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_MinimumRequiredMsiVersion)(THIS_ long bstrVal) PURE;
    STDMETHOD(get_MinimumRequiredMsiVersion)(THIS_ long FAR* bstrVal) PURE;
    STDMETHOD(put_PatchCacheDirectory)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchCacheDirectory)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(AddChild)(THIS_ EnumPatchConfigurationChild pcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AttachUpgradedImage)(THIS_ IUpgradedImage FAR* pUpgradedImage) PURE;
    STDMETHOD(RemoveUpgradedImage)(THIS_ BSTR bstrUpgradedImage) PURE;
};

DEFINE_GUID(IID_IPatchConfigurationNeptunePDC,0x60CD3F4BL,0x2CE9,0x4760,0x92,0x8C,0x6E,0xEB,0x1D,0xC3,0x84,0x39);

/* Definition of interface: IPatchConfigurationNeptunePDC */
#undef INTERFACE
#define INTERFACE IPatchConfigurationNeptunePDC

DECLARE_INTERFACE_(IPatchConfigurationNeptunePDC, IPatchConfiguration)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPatchConfiguration methods */
    STDMETHOD(get_UpgradedImages)(THIS_ IUpgradedImages FAR* FAR* ppUpgradedImages) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_EnablePatchCache)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_EnablePatchCache)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchingFlags)(THIS_ long bVal) PURE;
    STDMETHOD(get_PatchingFlags)(THIS_ long FAR* bVal) PURE;
    STDMETHOD(put_ListOfPatchGuidsToReplace)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfPatchGuidsToReplace)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ListOfTargetProductCodes)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfTargetProductCodes)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchGuid)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchGuid)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GeneratePatchGuid)(THIS_ VARIANT_BOOL bGenerate) PURE;
    STDMETHOD(get_GeneratePatchGuid)(THIS_ VARIANT_BOOL FAR* bGenerate) PURE;
    STDMETHOD(put_ValidateAtBuild)(THIS_ VARIANT_BOOL bValidate) PURE;
    STDMETHOD(get_ValidateAtBuild)(THIS_ VARIANT_BOOL FAR* bValidate) PURE;
    STDMETHOD(put_PatchOutputPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchOutputPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_MinimumRequiredMsiVersion)(THIS_ long bstrVal) PURE;
    STDMETHOD(get_MinimumRequiredMsiVersion)(THIS_ long FAR* bstrVal) PURE;
    STDMETHOD(put_PatchCacheDirectory)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchCacheDirectory)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(AddChild)(THIS_ EnumPatchConfigurationChild pcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AttachUpgradedImage)(THIS_ IUpgradedImage FAR* pUpgradedImage) PURE;
    STDMETHOD(RemoveUpgradedImage)(THIS_ BSTR bstrUpgradedImage) PURE;
#endif

    /* IPatchConfigurationNeptunePDC methods */
    STDMETHOD(put_PatchFamily)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchFamily)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSequence)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSequence)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SupersedePreviousPatches)(THIS_ VARIANT_BOOL vbSupersede) PURE;
    STDMETHOD(get_SupersedePreviousPatches)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(get_UseCustomPatchSequence)(THIS_ VARIANT_BOOL FAR* vbUseCustomPatchSequence) PURE;
    STDMETHOD(IncrementGlobalPatchSequence)(THIS) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;
};

DEFINE_GUID(IID_IPatchConfigurationProteus,0x60CD3F4CL,0x2CE9,0x4760,0x92,0x8C,0x6E,0xEB,0x1D,0xC3,0x84,0x39);

/* Definition of interface: IPatchConfigurationProteus */
#undef INTERFACE
#define INTERFACE IPatchConfigurationProteus

DECLARE_INTERFACE_(IPatchConfigurationProteus, IPatchConfigurationNeptunePDC)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPatchConfiguration methods */
    STDMETHOD(get_UpgradedImages)(THIS_ IUpgradedImages FAR* FAR* ppUpgradedImages) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_EnablePatchCache)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_EnablePatchCache)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchingFlags)(THIS_ long bVal) PURE;
    STDMETHOD(get_PatchingFlags)(THIS_ long FAR* bVal) PURE;
    STDMETHOD(put_ListOfPatchGuidsToReplace)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfPatchGuidsToReplace)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ListOfTargetProductCodes)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfTargetProductCodes)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchGuid)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchGuid)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GeneratePatchGuid)(THIS_ VARIANT_BOOL bGenerate) PURE;
    STDMETHOD(get_GeneratePatchGuid)(THIS_ VARIANT_BOOL FAR* bGenerate) PURE;
    STDMETHOD(put_ValidateAtBuild)(THIS_ VARIANT_BOOL bValidate) PURE;
    STDMETHOD(get_ValidateAtBuild)(THIS_ VARIANT_BOOL FAR* bValidate) PURE;
    STDMETHOD(put_PatchOutputPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchOutputPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_MinimumRequiredMsiVersion)(THIS_ long bstrVal) PURE;
    STDMETHOD(get_MinimumRequiredMsiVersion)(THIS_ long FAR* bstrVal) PURE;
    STDMETHOD(put_PatchCacheDirectory)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchCacheDirectory)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(AddChild)(THIS_ EnumPatchConfigurationChild pcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AttachUpgradedImage)(THIS_ IUpgradedImage FAR* pUpgradedImage) PURE;
    STDMETHOD(RemoveUpgradedImage)(THIS_ BSTR bstrUpgradedImage) PURE;

    /* IPatchConfigurationNeptunePDC methods */
    STDMETHOD(put_PatchFamily)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchFamily)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSequence)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSequence)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SupersedePreviousPatches)(THIS_ VARIANT_BOOL vbSupersede) PURE;
    STDMETHOD(get_SupersedePreviousPatches)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(get_UseCustomPatchSequence)(THIS_ VARIANT_BOOL FAR* vbUseCustomPatchSequence) PURE;
    STDMETHOD(IncrementGlobalPatchSequence)(THIS) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;
#endif

    /* IPatchConfigurationProteus methods */
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchCommandLine)(THIS_ BSTR bstPropertyValue) PURE;
};

DEFINE_GUID(IID_IPatchConfigurationProteusSP,0x60CD3F4DL,0x2CE9,0x4760,0x92,0x8C,0x6E,0xEB,0x1D,0xC3,0x84,0x39);

/* Definition of interface: IPatchConfigurationProteusSP */
#undef INTERFACE
#define INTERFACE IPatchConfigurationProteusSP

DECLARE_INTERFACE_(IPatchConfigurationProteusSP, IPatchConfigurationProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPatchConfiguration methods */
    STDMETHOD(get_UpgradedImages)(THIS_ IUpgradedImages FAR* FAR* ppUpgradedImages) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_EnablePatchCache)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_EnablePatchCache)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchingFlags)(THIS_ long bVal) PURE;
    STDMETHOD(get_PatchingFlags)(THIS_ long FAR* bVal) PURE;
    STDMETHOD(put_ListOfPatchGuidsToReplace)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfPatchGuidsToReplace)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ListOfTargetProductCodes)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfTargetProductCodes)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchGuid)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchGuid)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GeneratePatchGuid)(THIS_ VARIANT_BOOL bGenerate) PURE;
    STDMETHOD(get_GeneratePatchGuid)(THIS_ VARIANT_BOOL FAR* bGenerate) PURE;
    STDMETHOD(put_ValidateAtBuild)(THIS_ VARIANT_BOOL bValidate) PURE;
    STDMETHOD(get_ValidateAtBuild)(THIS_ VARIANT_BOOL FAR* bValidate) PURE;
    STDMETHOD(put_PatchOutputPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchOutputPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_MinimumRequiredMsiVersion)(THIS_ long bstrVal) PURE;
    STDMETHOD(get_MinimumRequiredMsiVersion)(THIS_ long FAR* bstrVal) PURE;
    STDMETHOD(put_PatchCacheDirectory)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchCacheDirectory)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(AddChild)(THIS_ EnumPatchConfigurationChild pcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AttachUpgradedImage)(THIS_ IUpgradedImage FAR* pUpgradedImage) PURE;
    STDMETHOD(RemoveUpgradedImage)(THIS_ BSTR bstrUpgradedImage) PURE;

    /* IPatchConfigurationNeptunePDC methods */
    STDMETHOD(put_PatchFamily)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchFamily)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSequence)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSequence)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SupersedePreviousPatches)(THIS_ VARIANT_BOOL vbSupersede) PURE;
    STDMETHOD(get_SupersedePreviousPatches)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(get_UseCustomPatchSequence)(THIS_ VARIANT_BOOL FAR* vbUseCustomPatchSequence) PURE;
    STDMETHOD(IncrementGlobalPatchSequence)(THIS) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;

    /* IPatchConfigurationProteus methods */
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchCommandLine)(THIS_ BSTR bstPropertyValue) PURE;
#endif

    /* IPatchConfigurationProteusSP methods */
    STDMETHOD(put_AllowRemoval)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_AllowRemoval)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_MoreInfoURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MoreInfoURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ManufacturerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ManufacturerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_TargetProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_TargetProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Classification)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Classification)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_PatchSequences)(THIS_ IMsiPatchSequencesProteusSP FAR* FAR* ppSequences) PURE;
    STDMETHOD(put_DisableDefaultSequencing)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_DisableDefaultSequencing)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignPackage)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignPackage)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureSPC)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureSPC)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureCPK)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureCPK)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignaturePassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePassword)(THIS_ BSTR FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_IPatchConfigurationPluto,0x60CD3F4EL,0x2CE9,0x4760,0x92,0x8C,0x6E,0xEB,0x1D,0xC3,0x84,0x39);

/* Definition of interface: IPatchConfigurationPluto */
#undef INTERFACE
#define INTERFACE IPatchConfigurationPluto

DECLARE_INTERFACE_(IPatchConfigurationPluto, IPatchConfigurationProteusSP)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPatchConfiguration methods */
    STDMETHOD(get_UpgradedImages)(THIS_ IUpgradedImages FAR* FAR* ppUpgradedImages) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_EnablePatchCache)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_EnablePatchCache)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchingFlags)(THIS_ long bVal) PURE;
    STDMETHOD(get_PatchingFlags)(THIS_ long FAR* bVal) PURE;
    STDMETHOD(put_ListOfPatchGuidsToReplace)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfPatchGuidsToReplace)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ListOfTargetProductCodes)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfTargetProductCodes)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchGuid)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchGuid)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GeneratePatchGuid)(THIS_ VARIANT_BOOL bGenerate) PURE;
    STDMETHOD(get_GeneratePatchGuid)(THIS_ VARIANT_BOOL FAR* bGenerate) PURE;
    STDMETHOD(put_ValidateAtBuild)(THIS_ VARIANT_BOOL bValidate) PURE;
    STDMETHOD(get_ValidateAtBuild)(THIS_ VARIANT_BOOL FAR* bValidate) PURE;
    STDMETHOD(put_PatchOutputPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchOutputPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_MinimumRequiredMsiVersion)(THIS_ long bstrVal) PURE;
    STDMETHOD(get_MinimumRequiredMsiVersion)(THIS_ long FAR* bstrVal) PURE;
    STDMETHOD(put_PatchCacheDirectory)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchCacheDirectory)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(AddChild)(THIS_ EnumPatchConfigurationChild pcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AttachUpgradedImage)(THIS_ IUpgradedImage FAR* pUpgradedImage) PURE;
    STDMETHOD(RemoveUpgradedImage)(THIS_ BSTR bstrUpgradedImage) PURE;

    /* IPatchConfigurationNeptunePDC methods */
    STDMETHOD(put_PatchFamily)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchFamily)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSequence)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSequence)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SupersedePreviousPatches)(THIS_ VARIANT_BOOL vbSupersede) PURE;
    STDMETHOD(get_SupersedePreviousPatches)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(get_UseCustomPatchSequence)(THIS_ VARIANT_BOOL FAR* vbUseCustomPatchSequence) PURE;
    STDMETHOD(IncrementGlobalPatchSequence)(THIS) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;

    /* IPatchConfigurationProteus methods */
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchCommandLine)(THIS_ BSTR bstPropertyValue) PURE;

    /* IPatchConfigurationProteusSP methods */
    STDMETHOD(put_AllowRemoval)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_AllowRemoval)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_MoreInfoURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MoreInfoURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ManufacturerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ManufacturerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_TargetProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_TargetProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Classification)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Classification)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_PatchSequences)(THIS_ IMsiPatchSequencesProteusSP FAR* FAR* ppSequences) PURE;
    STDMETHOD(put_DisableDefaultSequencing)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_DisableDefaultSequencing)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignPackage)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignPackage)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureSPC)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureSPC)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureCPK)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureCPK)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignaturePassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePassword)(THIS_ BSTR FAR* bstrVal) PURE;
#endif

    /* IPatchConfigurationPluto methods */
    STDMETHOD(put_SignUpdateExe)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignUpdateExe)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_IPatchConfigurationIbiza,0x976AC200L,0x0967,0x496A,0xBF,0xE6,0xD0,0x43,0x1A,0x04,0x41,0x59);

/* Definition of interface: IPatchConfigurationIbiza */
#undef INTERFACE
#define INTERFACE IPatchConfigurationIbiza

DECLARE_INTERFACE_(IPatchConfigurationIbiza, IPatchConfigurationPluto)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPatchConfiguration methods */
    STDMETHOD(get_UpgradedImages)(THIS_ IUpgradedImages FAR* FAR* ppUpgradedImages) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_EnablePatchCache)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_EnablePatchCache)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchingFlags)(THIS_ long bVal) PURE;
    STDMETHOD(get_PatchingFlags)(THIS_ long FAR* bVal) PURE;
    STDMETHOD(put_ListOfPatchGuidsToReplace)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfPatchGuidsToReplace)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ListOfTargetProductCodes)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfTargetProductCodes)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchGuid)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchGuid)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GeneratePatchGuid)(THIS_ VARIANT_BOOL bGenerate) PURE;
    STDMETHOD(get_GeneratePatchGuid)(THIS_ VARIANT_BOOL FAR* bGenerate) PURE;
    STDMETHOD(put_ValidateAtBuild)(THIS_ VARIANT_BOOL bValidate) PURE;
    STDMETHOD(get_ValidateAtBuild)(THIS_ VARIANT_BOOL FAR* bValidate) PURE;
    STDMETHOD(put_PatchOutputPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchOutputPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_MinimumRequiredMsiVersion)(THIS_ long bstrVal) PURE;
    STDMETHOD(get_MinimumRequiredMsiVersion)(THIS_ long FAR* bstrVal) PURE;
    STDMETHOD(put_PatchCacheDirectory)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchCacheDirectory)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(AddChild)(THIS_ EnumPatchConfigurationChild pcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AttachUpgradedImage)(THIS_ IUpgradedImage FAR* pUpgradedImage) PURE;
    STDMETHOD(RemoveUpgradedImage)(THIS_ BSTR bstrUpgradedImage) PURE;

    /* IPatchConfigurationNeptunePDC methods */
    STDMETHOD(put_PatchFamily)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchFamily)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSequence)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSequence)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SupersedePreviousPatches)(THIS_ VARIANT_BOOL vbSupersede) PURE;
    STDMETHOD(get_SupersedePreviousPatches)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(get_UseCustomPatchSequence)(THIS_ VARIANT_BOOL FAR* vbUseCustomPatchSequence) PURE;
    STDMETHOD(IncrementGlobalPatchSequence)(THIS) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;

    /* IPatchConfigurationProteus methods */
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchCommandLine)(THIS_ BSTR bstPropertyValue) PURE;

    /* IPatchConfigurationProteusSP methods */
    STDMETHOD(put_AllowRemoval)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_AllowRemoval)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_MoreInfoURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MoreInfoURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ManufacturerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ManufacturerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_TargetProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_TargetProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Classification)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Classification)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_PatchSequences)(THIS_ IMsiPatchSequencesProteusSP FAR* FAR* ppSequences) PURE;
    STDMETHOD(put_DisableDefaultSequencing)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_DisableDefaultSequencing)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignPackage)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignPackage)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureSPC)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureSPC)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureCPK)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureCPK)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignaturePassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePassword)(THIS_ BSTR FAR* bstrVal) PURE;

    /* IPatchConfigurationPluto methods */
    STDMETHOD(put_SignUpdateExe)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignUpdateExe)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
#endif

    /* IPatchConfigurationIbiza methods */
    STDMETHOD(get_PatchCommandLine)(THIS_ BSTR FAR* bstPropertyValue) PURE;
    STDMETHOD(put_MinorUpdateTargetRTM)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_MinorUpdateTargetRTM)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_OptimizedInstallMode)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_OptimizedInstallMode)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_IPatchConfigurationJustice,0xBA2FCA47L,0xB01D,0x49D3,0x8B,0x54,0xF5,0xD1,0xFE,0x29,0xB0,0xE0);

/* Definition of interface: IPatchConfigurationJustice */
#undef INTERFACE
#define INTERFACE IPatchConfigurationJustice

DECLARE_INTERFACE_(IPatchConfigurationJustice, IPatchConfigurationIbiza)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPatchConfiguration methods */
    STDMETHOD(get_UpgradedImages)(THIS_ IUpgradedImages FAR* FAR* ppUpgradedImages) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_EnablePatchCache)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_EnablePatchCache)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchingFlags)(THIS_ long bVal) PURE;
    STDMETHOD(get_PatchingFlags)(THIS_ long FAR* bVal) PURE;
    STDMETHOD(put_ListOfPatchGuidsToReplace)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfPatchGuidsToReplace)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ListOfTargetProductCodes)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfTargetProductCodes)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchGuid)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchGuid)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GeneratePatchGuid)(THIS_ VARIANT_BOOL bGenerate) PURE;
    STDMETHOD(get_GeneratePatchGuid)(THIS_ VARIANT_BOOL FAR* bGenerate) PURE;
    STDMETHOD(put_ValidateAtBuild)(THIS_ VARIANT_BOOL bValidate) PURE;
    STDMETHOD(get_ValidateAtBuild)(THIS_ VARIANT_BOOL FAR* bValidate) PURE;
    STDMETHOD(put_PatchOutputPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchOutputPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_MinimumRequiredMsiVersion)(THIS_ long bstrVal) PURE;
    STDMETHOD(get_MinimumRequiredMsiVersion)(THIS_ long FAR* bstrVal) PURE;
    STDMETHOD(put_PatchCacheDirectory)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchCacheDirectory)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(AddChild)(THIS_ EnumPatchConfigurationChild pcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AttachUpgradedImage)(THIS_ IUpgradedImage FAR* pUpgradedImage) PURE;
    STDMETHOD(RemoveUpgradedImage)(THIS_ BSTR bstrUpgradedImage) PURE;

    /* IPatchConfigurationNeptunePDC methods */
    STDMETHOD(put_PatchFamily)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchFamily)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSequence)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSequence)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SupersedePreviousPatches)(THIS_ VARIANT_BOOL vbSupersede) PURE;
    STDMETHOD(get_SupersedePreviousPatches)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(get_UseCustomPatchSequence)(THIS_ VARIANT_BOOL FAR* vbUseCustomPatchSequence) PURE;
    STDMETHOD(IncrementGlobalPatchSequence)(THIS) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;

    /* IPatchConfigurationProteus methods */
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchCommandLine)(THIS_ BSTR bstPropertyValue) PURE;

    /* IPatchConfigurationProteusSP methods */
    STDMETHOD(put_AllowRemoval)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_AllowRemoval)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_MoreInfoURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MoreInfoURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ManufacturerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ManufacturerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_TargetProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_TargetProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Classification)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Classification)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_PatchSequences)(THIS_ IMsiPatchSequencesProteusSP FAR* FAR* ppSequences) PURE;
    STDMETHOD(put_DisableDefaultSequencing)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_DisableDefaultSequencing)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignPackage)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignPackage)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureSPC)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureSPC)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureCPK)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureCPK)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignaturePassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePassword)(THIS_ BSTR FAR* bstrVal) PURE;

    /* IPatchConfigurationPluto methods */
    STDMETHOD(put_SignUpdateExe)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignUpdateExe)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;

    /* IPatchConfigurationIbiza methods */
    STDMETHOD(get_PatchCommandLine)(THIS_ BSTR FAR* bstPropertyValue) PURE;
    STDMETHOD(put_MinorUpdateTargetRTM)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_MinorUpdateTargetRTM)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_OptimizedInstallMode)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_OptimizedInstallMode)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
#endif

    /* IPatchConfigurationJustice methods */
    STDMETHOD(get_PasswordProtected)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PasswordProtected)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LauncherPassword)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherPassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherType)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherType)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_IPatchConfigurationMajesty,0xCBBD692BL,0xFFD7,0x4D77,0x9F,0x2D,0x51,0x8D,0xFC,0x5B,0x60,0x06);

/* Definition of interface: IPatchConfigurationMajesty */
#undef INTERFACE
#define INTERFACE IPatchConfigurationMajesty

DECLARE_INTERFACE_(IPatchConfigurationMajesty, IPatchConfigurationJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPatchConfiguration methods */
    STDMETHOD(get_UpgradedImages)(THIS_ IUpgradedImages FAR* FAR* ppUpgradedImages) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_EnablePatchCache)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_EnablePatchCache)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchingFlags)(THIS_ long bVal) PURE;
    STDMETHOD(get_PatchingFlags)(THIS_ long FAR* bVal) PURE;
    STDMETHOD(put_ListOfPatchGuidsToReplace)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfPatchGuidsToReplace)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ListOfTargetProductCodes)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfTargetProductCodes)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchGuid)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchGuid)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GeneratePatchGuid)(THIS_ VARIANT_BOOL bGenerate) PURE;
    STDMETHOD(get_GeneratePatchGuid)(THIS_ VARIANT_BOOL FAR* bGenerate) PURE;
    STDMETHOD(put_ValidateAtBuild)(THIS_ VARIANT_BOOL bValidate) PURE;
    STDMETHOD(get_ValidateAtBuild)(THIS_ VARIANT_BOOL FAR* bValidate) PURE;
    STDMETHOD(put_PatchOutputPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchOutputPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_MinimumRequiredMsiVersion)(THIS_ long bstrVal) PURE;
    STDMETHOD(get_MinimumRequiredMsiVersion)(THIS_ long FAR* bstrVal) PURE;
    STDMETHOD(put_PatchCacheDirectory)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchCacheDirectory)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(AddChild)(THIS_ EnumPatchConfigurationChild pcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AttachUpgradedImage)(THIS_ IUpgradedImage FAR* pUpgradedImage) PURE;
    STDMETHOD(RemoveUpgradedImage)(THIS_ BSTR bstrUpgradedImage) PURE;

    /* IPatchConfigurationNeptunePDC methods */
    STDMETHOD(put_PatchFamily)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchFamily)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSequence)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSequence)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SupersedePreviousPatches)(THIS_ VARIANT_BOOL vbSupersede) PURE;
    STDMETHOD(get_SupersedePreviousPatches)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(get_UseCustomPatchSequence)(THIS_ VARIANT_BOOL FAR* vbUseCustomPatchSequence) PURE;
    STDMETHOD(IncrementGlobalPatchSequence)(THIS) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;

    /* IPatchConfigurationProteus methods */
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchCommandLine)(THIS_ BSTR bstPropertyValue) PURE;

    /* IPatchConfigurationProteusSP methods */
    STDMETHOD(put_AllowRemoval)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_AllowRemoval)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_MoreInfoURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MoreInfoURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ManufacturerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ManufacturerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_TargetProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_TargetProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Classification)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Classification)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_PatchSequences)(THIS_ IMsiPatchSequencesProteusSP FAR* FAR* ppSequences) PURE;
    STDMETHOD(put_DisableDefaultSequencing)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_DisableDefaultSequencing)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignPackage)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignPackage)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureSPC)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureSPC)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureCPK)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureCPK)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignaturePassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePassword)(THIS_ BSTR FAR* bstrVal) PURE;

    /* IPatchConfigurationPluto methods */
    STDMETHOD(put_SignUpdateExe)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignUpdateExe)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;

    /* IPatchConfigurationIbiza methods */
    STDMETHOD(get_PatchCommandLine)(THIS_ BSTR FAR* bstPropertyValue) PURE;
    STDMETHOD(put_MinorUpdateTargetRTM)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_MinorUpdateTargetRTM)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_OptimizedInstallMode)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_OptimizedInstallMode)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;

    /* IPatchConfigurationJustice methods */
    STDMETHOD(get_PasswordProtected)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PasswordProtected)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LauncherPassword)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherPassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherType)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherType)(THIS_ BSTR bstrVal) PURE;
#endif

    /* IPatchConfigurationMajesty methods */
    STDMETHOD(get_LauncherCompanyName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherCompanyName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherProductVer)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherProductVer)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherDescription)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherDescription)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherCopyright)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherCopyright)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherManifest)(THIS_ EnumRequiredExecutionLevel FAR* eLevel) PURE;
    STDMETHOD(put_LauncherManifest)(THIS_ EnumRequiredExecutionLevel eLevel) PURE;
    STDMETHOD(get_LauncherIcon)(THIS_ BSTR FAR* bstrIcon) PURE;
    STDMETHOD(put_LauncherIcon)(THIS_ BSTR bstrIcon) PURE;
};

DEFINE_GUID(IID_IPatchConfigurationQi,0x4F4435E5L,0x8092,0x4C39,0xA4,0x43,0x20,0x2E,0x9C,0xA9,0xA3,0x76);

/* Definition of interface: IPatchConfigurationQi */
#undef INTERFACE
#define INTERFACE IPatchConfigurationQi

DECLARE_INTERFACE_(IPatchConfigurationQi, IPatchConfigurationMajesty)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPatchConfiguration methods */
    STDMETHOD(get_UpgradedImages)(THIS_ IUpgradedImages FAR* FAR* ppUpgradedImages) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_EnablePatchCache)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_EnablePatchCache)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchingFlags)(THIS_ long bVal) PURE;
    STDMETHOD(get_PatchingFlags)(THIS_ long FAR* bVal) PURE;
    STDMETHOD(put_ListOfPatchGuidsToReplace)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfPatchGuidsToReplace)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ListOfTargetProductCodes)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfTargetProductCodes)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchGuid)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchGuid)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GeneratePatchGuid)(THIS_ VARIANT_BOOL bGenerate) PURE;
    STDMETHOD(get_GeneratePatchGuid)(THIS_ VARIANT_BOOL FAR* bGenerate) PURE;
    STDMETHOD(put_ValidateAtBuild)(THIS_ VARIANT_BOOL bValidate) PURE;
    STDMETHOD(get_ValidateAtBuild)(THIS_ VARIANT_BOOL FAR* bValidate) PURE;
    STDMETHOD(put_PatchOutputPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchOutputPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_MinimumRequiredMsiVersion)(THIS_ long bstrVal) PURE;
    STDMETHOD(get_MinimumRequiredMsiVersion)(THIS_ long FAR* bstrVal) PURE;
    STDMETHOD(put_PatchCacheDirectory)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchCacheDirectory)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(AddChild)(THIS_ EnumPatchConfigurationChild pcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AttachUpgradedImage)(THIS_ IUpgradedImage FAR* pUpgradedImage) PURE;
    STDMETHOD(RemoveUpgradedImage)(THIS_ BSTR bstrUpgradedImage) PURE;

    /* IPatchConfigurationNeptunePDC methods */
    STDMETHOD(put_PatchFamily)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchFamily)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSequence)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSequence)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SupersedePreviousPatches)(THIS_ VARIANT_BOOL vbSupersede) PURE;
    STDMETHOD(get_SupersedePreviousPatches)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(get_UseCustomPatchSequence)(THIS_ VARIANT_BOOL FAR* vbUseCustomPatchSequence) PURE;
    STDMETHOD(IncrementGlobalPatchSequence)(THIS) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;

    /* IPatchConfigurationProteus methods */
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchCommandLine)(THIS_ BSTR bstPropertyValue) PURE;

    /* IPatchConfigurationProteusSP methods */
    STDMETHOD(put_AllowRemoval)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_AllowRemoval)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_MoreInfoURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MoreInfoURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ManufacturerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ManufacturerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_TargetProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_TargetProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Classification)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Classification)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_PatchSequences)(THIS_ IMsiPatchSequencesProteusSP FAR* FAR* ppSequences) PURE;
    STDMETHOD(put_DisableDefaultSequencing)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_DisableDefaultSequencing)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignPackage)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignPackage)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureSPC)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureSPC)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureCPK)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureCPK)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignaturePassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePassword)(THIS_ BSTR FAR* bstrVal) PURE;

    /* IPatchConfigurationPluto methods */
    STDMETHOD(put_SignUpdateExe)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignUpdateExe)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;

    /* IPatchConfigurationIbiza methods */
    STDMETHOD(get_PatchCommandLine)(THIS_ BSTR FAR* bstPropertyValue) PURE;
    STDMETHOD(put_MinorUpdateTargetRTM)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_MinorUpdateTargetRTM)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_OptimizedInstallMode)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_OptimizedInstallMode)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;

    /* IPatchConfigurationJustice methods */
    STDMETHOD(get_PasswordProtected)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PasswordProtected)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LauncherPassword)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherPassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherType)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherType)(THIS_ BSTR bstrVal) PURE;

    /* IPatchConfigurationMajesty methods */
    STDMETHOD(get_LauncherCompanyName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherCompanyName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherProductVer)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherProductVer)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherDescription)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherDescription)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherCopyright)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherCopyright)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherManifest)(THIS_ EnumRequiredExecutionLevel FAR* eLevel) PURE;
    STDMETHOD(put_LauncherManifest)(THIS_ EnumRequiredExecutionLevel eLevel) PURE;
    STDMETHOD(get_LauncherIcon)(THIS_ BSTR FAR* bstrIcon) PURE;
    STDMETHOD(put_LauncherIcon)(THIS_ BSTR bstrIcon) PURE;
#endif

    /* IPatchConfigurationQi methods */
    STDMETHOD(put_SignaturePasswordRaw)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePasswordRaw)(THIS_ BSTR FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_IPatchConfigurationRipley,0xD1BE89C1L,0x56A4,0x4618,0x85,0x54,0xE1,0x79,0x52,0x8C,0xA8,0x97);

/* Definition of interface: IPatchConfigurationRipley */
#undef INTERFACE
#define INTERFACE IPatchConfigurationRipley

DECLARE_INTERFACE_(IPatchConfigurationRipley, IPatchConfigurationQi)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPatchConfiguration methods */
    STDMETHOD(get_UpgradedImages)(THIS_ IUpgradedImages FAR* FAR* ppUpgradedImages) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductCodeMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_AllowProductVersionMajorMismatches)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeWholeFilesOnly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LeaveIntermDecompressed)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_OptimizeForLargeFiles)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_EnablePatchCache)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_EnablePatchCache)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchingFlags)(THIS_ long bVal) PURE;
    STDMETHOD(get_PatchingFlags)(THIS_ long FAR* bVal) PURE;
    STDMETHOD(put_ListOfPatchGuidsToReplace)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfPatchGuidsToReplace)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ListOfTargetProductCodes)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ListOfTargetProductCodes)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchGuid)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchGuid)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_GeneratePatchGuid)(THIS_ VARIANT_BOOL bGenerate) PURE;
    STDMETHOD(get_GeneratePatchGuid)(THIS_ VARIANT_BOOL FAR* bGenerate) PURE;
    STDMETHOD(put_ValidateAtBuild)(THIS_ VARIANT_BOOL bValidate) PURE;
    STDMETHOD(get_ValidateAtBuild)(THIS_ VARIANT_BOOL FAR* bValidate) PURE;
    STDMETHOD(put_PatchOutputPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchOutputPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_MinimumRequiredMsiVersion)(THIS_ long bstrVal) PURE;
    STDMETHOD(get_MinimumRequiredMsiVersion)(THIS_ long FAR* bstrVal) PURE;
    STDMETHOD(put_PatchCacheDirectory)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchCacheDirectory)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL FAR* bEnabled) PURE;
    STDMETHOD(put_LauncherState)(THIS_ ELauncherType elt, VARIANT_BOOL bEnabled) PURE;
    STDMETHOD(get_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation FAR* ell) PURE;
    STDMETHOD(put_LauncherLocation)(THIS_ ELauncherType elt, ELauncherLocation ell) PURE;
    STDMETHOD(get_LauncherWebPath)(THIS_ ELauncherType elt, BSTR FAR* bstrWebLocation) PURE;
    STDMETHOD(put_LauncherWebPath)(THIS_ ELauncherType elt, BSTR bstrWebLocation) PURE;
    STDMETHOD(AddChild)(THIS_ EnumPatchConfigurationChild pcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(AttachUpgradedImage)(THIS_ IUpgradedImage FAR* pUpgradedImage) PURE;
    STDMETHOD(RemoveUpgradedImage)(THIS_ BSTR bstrUpgradedImage) PURE;

    /* IPatchConfigurationNeptunePDC methods */
    STDMETHOD(put_PatchFamily)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchFamily)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_PatchSequence)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_PatchSequence)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SupersedePreviousPatches)(THIS_ VARIANT_BOOL vbSupersede) PURE;
    STDMETHOD(get_SupersedePreviousPatches)(THIS_ VARIANT_BOOL FAR* vbSupersede) PURE;
    STDMETHOD(get_UseCustomPatchSequence)(THIS_ VARIANT_BOOL FAR* vbUseCustomPatchSequence) PURE;
    STDMETHOD(IncrementGlobalPatchSequence)(THIS) PURE;
    STDMETHOD(put_MsiEngineVersion)(THIS_ EnumMsiEngineVersion eEngineVersion) PURE;
    STDMETHOD(get_MsiEngineVersion)(THIS_ EnumMsiEngineVersion FAR* eEngineVersion) PURE;

    /* IPatchConfigurationProteus methods */
    STDMETHOD(put_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_GenerateMsiPatchOldAssembly)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PatchCommandLine)(THIS_ BSTR bstPropertyValue) PURE;

    /* IPatchConfigurationProteusSP methods */
    STDMETHOD(put_AllowRemoval)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_AllowRemoval)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_MoreInfoURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_MoreInfoURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ManufacturerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ManufacturerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_TargetProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_TargetProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Classification)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Classification)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_PatchSequences)(THIS_ IMsiPatchSequencesProteusSP FAR* FAR* ppSequences) PURE;
    STDMETHOD(put_DisableDefaultSequencing)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_DisableDefaultSequencing)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignPackage)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignPackage)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureURL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureURL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureSPC)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureSPC)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignatureCPK)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignatureCPK)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_SignaturePassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePassword)(THIS_ BSTR FAR* bstrVal) PURE;

    /* IPatchConfigurationPluto methods */
    STDMETHOD(put_SignUpdateExe)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_SignUpdateExe)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;

    /* IPatchConfigurationIbiza methods */
    STDMETHOD(get_PatchCommandLine)(THIS_ BSTR FAR* bstPropertyValue) PURE;
    STDMETHOD(put_MinorUpdateTargetRTM)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_MinorUpdateTargetRTM)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;
    STDMETHOD(put_OptimizedInstallMode)(THIS_ VARIANT_BOOL bstrVal) PURE;
    STDMETHOD(get_OptimizedInstallMode)(THIS_ VARIANT_BOOL FAR* bstrVal) PURE;

    /* IPatchConfigurationJustice methods */
    STDMETHOD(get_PasswordProtected)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_PasswordProtected)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_LauncherPassword)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherPassword)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherType)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherType)(THIS_ BSTR bstrVal) PURE;

    /* IPatchConfigurationMajesty methods */
    STDMETHOD(get_LauncherCompanyName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherCompanyName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherProductName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherProductName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherProductVer)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherProductVer)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherDescription)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherDescription)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherCopyright)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_LauncherCopyright)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_LauncherManifest)(THIS_ EnumRequiredExecutionLevel FAR* eLevel) PURE;
    STDMETHOD(put_LauncherManifest)(THIS_ EnumRequiredExecutionLevel eLevel) PURE;
    STDMETHOD(get_LauncherIcon)(THIS_ BSTR FAR* bstrIcon) PURE;
    STDMETHOD(put_LauncherIcon)(THIS_ BSTR bstrIcon) PURE;

    /* IPatchConfigurationQi methods */
    STDMETHOD(put_SignaturePasswordRaw)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_SignaturePasswordRaw)(THIS_ BSTR FAR* bstrVal) PURE;
#endif

    /* IPatchConfigurationRipley methods */
    STDMETHOD(get_SignatureDescription)(THIS_ BSTR FAR* pbstrDescription) PURE;
    STDMETHOD(put_SignatureDescription)(THIS_ BSTR bstrDescription) PURE;
};

DEFINE_GUID(IID_IPatchConfigurations,0x228D6FACL,0xCDB3,0x4B97,0xA6,0x32,0xBB,0x48,0x53,0x3E,0x90,0x19);

/* Definition of interface: IPatchConfigurations */
#undef INTERFACE
#define INTERFACE IPatchConfigurations

DECLARE_INTERFACE_(IPatchConfigurations, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPatchConfigurations methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IPatchConfiguration FAR* FAR* ppPatchConfiguration) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumPropScriptFile {
    epsfFileName = 10
} EnumPropScriptFile;

DEFINE_GUID(IID_IScriptFile,0x4D340FC8L,0x324D,0x4E7F,0xB5,0x83,0x6B,0x4C,0xA2,0x2B,0x86,0xEB);

/* Definition of interface: IScriptFile */
#undef INTERFACE
#define INTERFACE IScriptFile

DECLARE_INTERFACE_(IScriptFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IScriptFile methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* sPath) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* sFullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR sFullPath) PURE;
    STDMETHOD(get_CustomActions)(THIS_ BSTR FAR* sCustomActions) PURE;
};

DEFINE_GUID(IID_IScriptFiles,0xD3147338L,0xE411,0x4AA5,0x9E,0xD0,0xDC,0x5A,0xCC,0xF7,0x7B,0x44);

/* Definition of interface: IScriptFiles */
#undef INTERFACE
#define INTERFACE IScriptFiles

DECLARE_INTERFACE_(IScriptFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IScriptFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IScriptFile FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(get_GetSetupRul)(THIS_ IScriptFile FAR* FAR* Return) PURE;
};

typedef enum EnumPropCompilerOption {
    epcoWarningLevel = 10,
    epcoWarningAsErrors = 11,
    epcoMaxWarnings = 12,
    epcoMaxErrors = 13,
    epcoDefines = 14,
    epcoDebug = 15,
    epcoIncludePath = 16,
    epcoOutputPath = 17,
    epcoCompileBeforeBuild = 18
} EnumPropCompilerOption;

DEFINE_GUID(IID_ICompilerOption,0x9AA68CF0L,0x5015,0x455B,0xAE,0xA1,0xA4,0x71,0xA0,0x9A,0xBA,0xF4);

/* Definition of interface: ICompilerOption */
#undef INTERFACE
#define INTERFACE ICompilerOption

DECLARE_INTERFACE_(ICompilerOption, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICompilerOption methods */
    STDMETHOD(get_WarningLevel)(THIS_ BSTR FAR* sWarningLevel) PURE;
    STDMETHOD(put_WarningLevel)(THIS_ BSTR sWarningLevel) PURE;
    STDMETHOD(get_WarningsAsErrors)(THIS_ VARIANT_BOOL FAR* bWarningsAsErrors) PURE;
    STDMETHOD(put_WarningsAsErrors)(THIS_ VARIANT_BOOL bWarningsAsErrors) PURE;
    STDMETHOD(get_MaxWarnings)(THIS_ long FAR* lMaxWarnings) PURE;
    STDMETHOD(put_MaxWarnings)(THIS_ long lMaxWarnings) PURE;
    STDMETHOD(get_MaxErrors)(THIS_ long FAR* lMaxErrors) PURE;
    STDMETHOD(put_MaxErrors)(THIS_ long lMaxErrors) PURE;
    STDMETHOD(get_PreProcessor)(THIS_ BSTR FAR* sPreProcessor) PURE;
    STDMETHOD(put_PreProcessor)(THIS_ BSTR sPreProcessor) PURE;
    STDMETHOD(get_Debug)(THIS_ VARIANT_BOOL FAR* bDebug) PURE;
    STDMETHOD(put_Debug)(THIS_ VARIANT_BOOL bDebug) PURE;
    STDMETHOD(get_IncludePath)(THIS_ BSTR FAR* sIncludePath) PURE;
    STDMETHOD(put_IncludePath)(THIS_ BSTR sIncludePath) PURE;
};

DEFINE_GUID(IID_ICompilerOption2,0x419433F0L,0xB55C,0x4112,0xB8,0x5C,0x5C,0x8B,0x01,0x28,0x8F,0xDF);

/* Definition of interface: ICompilerOption2 */
#undef INTERFACE
#define INTERFACE ICompilerOption2

DECLARE_INTERFACE_(ICompilerOption2, ICompilerOption)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICompilerOption methods */
    STDMETHOD(get_WarningLevel)(THIS_ BSTR FAR* sWarningLevel) PURE;
    STDMETHOD(put_WarningLevel)(THIS_ BSTR sWarningLevel) PURE;
    STDMETHOD(get_WarningsAsErrors)(THIS_ VARIANT_BOOL FAR* bWarningsAsErrors) PURE;
    STDMETHOD(put_WarningsAsErrors)(THIS_ VARIANT_BOOL bWarningsAsErrors) PURE;
    STDMETHOD(get_MaxWarnings)(THIS_ long FAR* lMaxWarnings) PURE;
    STDMETHOD(put_MaxWarnings)(THIS_ long lMaxWarnings) PURE;
    STDMETHOD(get_MaxErrors)(THIS_ long FAR* lMaxErrors) PURE;
    STDMETHOD(put_MaxErrors)(THIS_ long lMaxErrors) PURE;
    STDMETHOD(get_PreProcessor)(THIS_ BSTR FAR* sPreProcessor) PURE;
    STDMETHOD(put_PreProcessor)(THIS_ BSTR sPreProcessor) PURE;
    STDMETHOD(get_Debug)(THIS_ VARIANT_BOOL FAR* bDebug) PURE;
    STDMETHOD(put_Debug)(THIS_ VARIANT_BOOL bDebug) PURE;
    STDMETHOD(get_IncludePath)(THIS_ BSTR FAR* sIncludePath) PURE;
    STDMETHOD(put_IncludePath)(THIS_ BSTR sIncludePath) PURE;
#endif

    /* ICompilerOption2 methods */
    STDMETHOD(get_OutputPath)(THIS_ BSTR FAR* sOutputPath) PURE;
    STDMETHOD(put_OutputPath)(THIS_ BSTR sOutputPath) PURE;
};

DEFINE_GUID(IID_ICompilerOptionNeptune,0x7AC844FAL,0xF528,0x40D4,0xAE,0x5E,0x04,0x10,0x52,0x3A,0x5F,0x46);

/* Definition of interface: ICompilerOptionNeptune */
#undef INTERFACE
#define INTERFACE ICompilerOptionNeptune

DECLARE_INTERFACE_(ICompilerOptionNeptune, ICompilerOption2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICompilerOption methods */
    STDMETHOD(get_WarningLevel)(THIS_ BSTR FAR* sWarningLevel) PURE;
    STDMETHOD(put_WarningLevel)(THIS_ BSTR sWarningLevel) PURE;
    STDMETHOD(get_WarningsAsErrors)(THIS_ VARIANT_BOOL FAR* bWarningsAsErrors) PURE;
    STDMETHOD(put_WarningsAsErrors)(THIS_ VARIANT_BOOL bWarningsAsErrors) PURE;
    STDMETHOD(get_MaxWarnings)(THIS_ long FAR* lMaxWarnings) PURE;
    STDMETHOD(put_MaxWarnings)(THIS_ long lMaxWarnings) PURE;
    STDMETHOD(get_MaxErrors)(THIS_ long FAR* lMaxErrors) PURE;
    STDMETHOD(put_MaxErrors)(THIS_ long lMaxErrors) PURE;
    STDMETHOD(get_PreProcessor)(THIS_ BSTR FAR* sPreProcessor) PURE;
    STDMETHOD(put_PreProcessor)(THIS_ BSTR sPreProcessor) PURE;
    STDMETHOD(get_Debug)(THIS_ VARIANT_BOOL FAR* bDebug) PURE;
    STDMETHOD(put_Debug)(THIS_ VARIANT_BOOL bDebug) PURE;
    STDMETHOD(get_IncludePath)(THIS_ BSTR FAR* sIncludePath) PURE;
    STDMETHOD(put_IncludePath)(THIS_ BSTR sIncludePath) PURE;

    /* ICompilerOption2 methods */
    STDMETHOD(get_OutputPath)(THIS_ BSTR FAR* sOutputPath) PURE;
    STDMETHOD(put_OutputPath)(THIS_ BSTR sOutputPath) PURE;
#endif

    /* ICompilerOptionNeptune methods */
    STDMETHOD(get_CompileBeforeBuild)(THIS_ VARIANT_BOOL FAR* pbCompileBeforeBuild) PURE;
    STDMETHOD(put_CompileBeforeBuild)(THIS_ VARIANT_BOOL bCompileBeforeBuild) PURE;
};

DEFINE_GUID(IID_ICompilerOptionLoyalty,0x1D5A28DDL,0x11CF,0x4713,0x89,0x72,0x23,0x14,0x98,0x43,0xA5,0x66);

/* Definition of interface: ICompilerOptionLoyalty */
#undef INTERFACE
#define INTERFACE ICompilerOptionLoyalty

DECLARE_INTERFACE_(ICompilerOptionLoyalty, ICompilerOptionNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICompilerOption methods */
    STDMETHOD(get_WarningLevel)(THIS_ BSTR FAR* sWarningLevel) PURE;
    STDMETHOD(put_WarningLevel)(THIS_ BSTR sWarningLevel) PURE;
    STDMETHOD(get_WarningsAsErrors)(THIS_ VARIANT_BOOL FAR* bWarningsAsErrors) PURE;
    STDMETHOD(put_WarningsAsErrors)(THIS_ VARIANT_BOOL bWarningsAsErrors) PURE;
    STDMETHOD(get_MaxWarnings)(THIS_ long FAR* lMaxWarnings) PURE;
    STDMETHOD(put_MaxWarnings)(THIS_ long lMaxWarnings) PURE;
    STDMETHOD(get_MaxErrors)(THIS_ long FAR* lMaxErrors) PURE;
    STDMETHOD(put_MaxErrors)(THIS_ long lMaxErrors) PURE;
    STDMETHOD(get_PreProcessor)(THIS_ BSTR FAR* sPreProcessor) PURE;
    STDMETHOD(put_PreProcessor)(THIS_ BSTR sPreProcessor) PURE;
    STDMETHOD(get_Debug)(THIS_ VARIANT_BOOL FAR* bDebug) PURE;
    STDMETHOD(put_Debug)(THIS_ VARIANT_BOOL bDebug) PURE;
    STDMETHOD(get_IncludePath)(THIS_ BSTR FAR* sIncludePath) PURE;
    STDMETHOD(put_IncludePath)(THIS_ BSTR sIncludePath) PURE;

    /* ICompilerOption2 methods */
    STDMETHOD(get_OutputPath)(THIS_ BSTR FAR* sOutputPath) PURE;
    STDMETHOD(put_OutputPath)(THIS_ BSTR sOutputPath) PURE;

    /* ICompilerOptionNeptune methods */
    STDMETHOD(get_CompileBeforeBuild)(THIS_ VARIANT_BOOL FAR* pbCompileBeforeBuild) PURE;
    STDMETHOD(put_CompileBeforeBuild)(THIS_ VARIANT_BOOL bCompileBeforeBuild) PURE;
#endif

    /* ICompilerOptionLoyalty methods */
    STDMETHOD(get_LibraryPath)(THIS_ BSTR FAR* sLibraryPath) PURE;
    STDMETHOD(put_LibraryPath)(THIS_ BSTR sLibraryPath) PURE;
};

typedef enum EnumPropLinkerOption {
    eploFileName = 10,
    eploLibraries = 11
} EnumPropLinkerOption;

DEFINE_GUID(IID_ILinkerOption,0x3C8995E8L,0x5D85,0x4ECE,0xBE,0xA1,0x60,0x56,0xF2,0xAA,0x06,0xC1);

/* Definition of interface: ILinkerOption */
#undef INTERFACE
#define INTERFACE ILinkerOption

DECLARE_INTERFACE_(ILinkerOption, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILinkerOption methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Libraries)(THIS_ BSTR FAR* sLibraries) PURE;
    STDMETHOD(put_Libraries)(THIS_ BSTR sLibraries) PURE;
};

DEFINE_GUID(IID_ILinkerOption2,0x170DED61L,0x8CCB,0x4090,0x83,0x19,0x0F,0xD4,0x5E,0x1F,0x77,0x95);

/* Definition of interface: ILinkerOption2 */
#undef INTERFACE
#define INTERFACE ILinkerOption2

DECLARE_INTERFACE_(ILinkerOption2, ILinkerOption)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILinkerOption methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Libraries)(THIS_ BSTR FAR* sLibraries) PURE;
    STDMETHOD(put_Libraries)(THIS_ BSTR sLibraries) PURE;
#endif

    /* ILinkerOption2 methods */
    STDMETHOD(get_Order)(THIS_ long FAR* plOrder) PURE;
    STDMETHOD(put_Order)(THIS_ long lOrder) PURE;
};

DEFINE_GUID(IID_ILinkerOptions,0x5B2571C2L,0xE6FB,0x47A5,0x9A,0x19,0x1B,0xF6,0xDC,0x51,0x24,0xA6);

/* Definition of interface: ILinkerOptions */
#undef INTERFACE
#define INTERFACE ILinkerOptions

DECLARE_INTERFACE_(ILinkerOptions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILinkerOptions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILinkerOption FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropScriptingBillboard {
    epsbName = 0,
    epsbDuration = 11,
    epsbOrigin = 12,
    epsbX = 13,
    epsbY = 14,
    epsbEffect = 15,
    epsbSequence = 16,
    epsbTarget = 17,
    epsbColor = 18,
    epsbStyle = 19,
    epsbFont = 20,
    epsbTitle = 21
} EnumPropScriptingBillboard;

typedef enum EnumPropOrigin {
    epoUpperRight = 1,
    epoUpperLeft = 2,
    epoLowerRight = 4,
    epoLowerLeft = 8,
    epoCenter = 16384
} EnumPropOrigin;

typedef enum EnumPropEffect {
    epeNone = 0,
    epeFade = 1,
    epeReveal = 2,
    epeHorizonReveal = 3,
    epeHorizonStripe = 4,
    epeVerticalStripe = 5,
    epeInOutStripe = 6,
    epeDiagonalStripe = 7
} EnumPropEffect;

typedef enum EnumPropTarget {
    eptgtDefault = 0
} EnumPropTarget;

DEFINE_GUID(IID_IScriptingBillboard,0xD91E3FE2L,0xD617,0x4186,0xB0,0xBD,0x55,0xD9,0x5F,0xEC,0x37,0xC3);

/* Definition of interface: IScriptingBillboard */
#undef INTERFACE
#define INTERFACE IScriptingBillboard

DECLARE_INTERFACE_(IScriptingBillboard, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IScriptingBillboard methods */
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* DisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR DisplayName) PURE;
    STDMETHOD(get_Duration)(THIS_ long FAR* Duration) PURE;
    STDMETHOD(put_Duration)(THIS_ long Duration) PURE;
    STDMETHOD(get_Origin)(THIS_ EnumPropOrigin FAR* Origin) PURE;
    STDMETHOD(put_Origin)(THIS_ EnumPropOrigin Origin) PURE;
    STDMETHOD(get_X)(THIS_ long FAR* X) PURE;
    STDMETHOD(put_X)(THIS_ long X) PURE;
    STDMETHOD(get_Y)(THIS_ long FAR* Y) PURE;
    STDMETHOD(put_Y)(THIS_ long Y) PURE;
    STDMETHOD(get_Effect)(THIS_ EnumPropEffect FAR* Effect) PURE;
    STDMETHOD(put_Effect)(THIS_ EnumPropEffect Effect) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* Sequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long Sequence) PURE;
    STDMETHOD(get_Target)(THIS_ EnumPropTarget FAR* Target) PURE;
    STDMETHOD(put_Target)(THIS_ EnumPropTarget Target) PURE;
    STDMETHOD(get_Filename)(THIS_ BSTR FAR* Filename) PURE;
    STDMETHOD(put_Filename)(THIS_ BSTR Filename) PURE;
    STDMETHOD(get_Color)(THIS_ BSTR FAR* Color) PURE;
    STDMETHOD(put_Color)(THIS_ BSTR Color) PURE;
    STDMETHOD(get_Style)(THIS_ BSTR FAR* Style) PURE;
    STDMETHOD(put_Style)(THIS_ BSTR Style) PURE;
    STDMETHOD(get_Font)(THIS_ BSTR FAR* Font) PURE;
    STDMETHOD(put_Font)(THIS_ BSTR Font) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* Title) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR Title) PURE;
};

DEFINE_GUID(IID_IScriptingBillboards,0x88090AC9L,0x038B,0x46BD,0x98,0x52,0xFF,0xEE,0x92,0xF0,0xAA,0x3D);

/* Definition of interface: IScriptingBillboards */
#undef INTERFACE
#define INTERFACE IScriptingBillboards

DECLARE_INTERFACE_(IScriptingBillboards, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IScriptingBillboards methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IScriptingBillboard FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IVisitedView,0xDA7A5C3AL,0xD01A,0x43E1,0x97,0xBF,0x66,0x57,0x25,0x84,0x73,0x73);

/* Definition of interface: IVisitedView */
#undef INTERFACE
#define INTERFACE IVisitedView

DECLARE_INTERFACE_(IVisitedView, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVisitedView methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Visited)(THIS_ VARIANT_BOOL FAR* Visited) PURE;
    STDMETHOD(put_Visited)(THIS_ VARIANT_BOOL Visited) PURE;
};

DEFINE_GUID(IID_IVisitedViews,0x9D913C12L,0x5FE7,0x40C6,0xB5,0x51,0xA9,0x48,0x71,0xF9,0x48,0xF2);

/* Definition of interface: IVisitedViews */
#undef INTERFACE
#define INTERFACE IVisitedViews

DECLARE_INTERFACE_(IVisitedViews, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVisitedViews methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IVisitedView FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(IsVisited)(THIS_ BSTR strViewName, VARIANT_BOOL FAR* bVisited) PURE;
};

DEFINE_GUID(IID_ICheckedODBCComponents,0x02723335L,0xC716,0x44CB,0xAE,0xF5,0x6E,0x8C,0xC0,0x20,0x4A,0x0F);

/* Definition of interface: ICheckedODBCComponents */
#undef INTERFACE
#define INTERFACE ICheckedODBCComponents

DECLARE_INTERFACE_(ICheckedODBCComponents, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICheckedODBCComponents methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IComponent FAR* FAR* ppRet) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(InsertComponent)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(RemoveComponent)(THIS_ IComponent FAR* pComp) PURE;
};

typedef enum EnumPropEnvironment {
    epevComponentKey = 13,
    epevDisplayName = 10,
    epevName = 11,
    epevInternalName = 0,
    epevValue = 12
} EnumPropEnvironment;

typedef enum EnumOnInstall {
    eoiRemove = 0,
    eoiSet = 1,
    eoiCreate = 2
} EnumOnInstall;

typedef enum EnumPlacement {
    epReplace = 0,
    epPrefix = 1,
    epAppend = 2
} EnumPlacement;

typedef enum EnumOnUninstall {
    eouRemove = 0,
    eouLeave = 1
} EnumOnUninstall;

typedef enum EnumEnvType {
    eetSystem = 0,
    eetUser = 1
} EnumEnvType;

DEFINE_GUID(IID_IEnvironment,0x34DA3704L,0x8495,0x457F,0x8F,0xC0,0x26,0x46,0x39,0xF4,0x7A,0x62);

/* Definition of interface: IEnvironment */
#undef INTERFACE
#define INTERFACE IEnvironment

DECLARE_INTERFACE_(IEnvironment, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IEnvironment methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_OnInstall)(THIS_ EnumOnInstall FAR* OnInstall) PURE;
    STDMETHOD(put_OnInstall)(THIS_ EnumOnInstall OnInstall) PURE;
    STDMETHOD(get_Placement)(THIS_ EnumPlacement FAR* Placement) PURE;
    STDMETHOD(put_Placement)(THIS_ EnumPlacement Placement) PURE;
    STDMETHOD(get_OnUninstall)(THIS_ EnumOnUninstall FAR* OnUninstall) PURE;
    STDMETHOD(put_OnUninstall)(THIS_ EnumOnUninstall OnUninstall) PURE;
    STDMETHOD(get_EnvType)(THIS_ EnumEnvType FAR* EnvType) PURE;
    STDMETHOD(put_EnvType)(THIS_ EnumEnvType EnvType) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* Component) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Component) PURE;
};

DEFINE_GUID(IID_IEnvironmentIbiza,0xA3E1444BL,0x991E,0x43DA,0xBE,0x37,0x09,0x16,0x12,0x3E,0xE7,0x15);

/* Definition of interface: IEnvironmentIbiza */
#undef INTERFACE
#define INTERFACE IEnvironmentIbiza

DECLARE_INTERFACE_(IEnvironmentIbiza, IEnvironment)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IEnvironment methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_OnInstall)(THIS_ EnumOnInstall FAR* OnInstall) PURE;
    STDMETHOD(put_OnInstall)(THIS_ EnumOnInstall OnInstall) PURE;
    STDMETHOD(get_Placement)(THIS_ EnumPlacement FAR* Placement) PURE;
    STDMETHOD(put_Placement)(THIS_ EnumPlacement Placement) PURE;
    STDMETHOD(get_OnUninstall)(THIS_ EnumOnUninstall FAR* OnUninstall) PURE;
    STDMETHOD(put_OnUninstall)(THIS_ EnumOnUninstall OnUninstall) PURE;
    STDMETHOD(get_EnvType)(THIS_ EnumEnvType FAR* EnvType) PURE;
    STDMETHOD(put_EnvType)(THIS_ EnumEnvType EnvType) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* Component) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Component) PURE;
#endif

    /* IEnvironmentIbiza methods */
    STDMETHOD(UpdateAllLanguageName)(THIS_ BSTR newName) PURE;
};

DEFINE_GUID(IID_IEnvironments,0x348486F1L,0xA1D0,0x4B53,0x8D,0xB8,0xCD,0x8B,0xB2,0x62,0x37,0xD5);

/* Definition of interface: IEnvironments */
#undef INTERFACE
#define INTERFACE IEnvironments

DECLARE_INTERFACE_(IEnvironments, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IEnvironments methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IEnvironment FAR* FAR* pEnv) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumUpgradeMsiItemAttribute {
    umiaAutomatic = 0,
    umiaMinor = 1,
    umiaMajor = 2
} EnumUpgradeMsiItemAttribute;

typedef enum EnumUpgradeScope {
    usInstallFirst = 0,
    usReinstall = 1
} EnumUpgradeScope;

DEFINE_GUID(IID_IUpgradeSettings,0xA5A1CF23L,0x18EF,0x4CC5,0x92,0x47,0x7D,0x99,0xFB,0xA0,0x03,0x1C);

/* Definition of interface: IUpgradeSettings */
#undef INTERFACE
#define INTERFACE IUpgradeSettings

DECLARE_INTERFACE_(IUpgradeSettings, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IUpgradeSettings methods */
    STDMETHOD(EnableRollback)(THIS_ VARIANT_BOOL bEnable) PURE;
    STDMETHOD(IsRollbackEnabled)(THIS_ VARIANT_BOOL FAR* bEnable) PURE;
    STDMETHOD(get_UpgradeScope)(THIS_ EnumUpgradeScope FAR* us) PURE;
    STDMETHOD(put_UpgradeScope)(THIS_ EnumUpgradeScope us) PURE;
};

DEFINE_GUID(IID_IUpgradeEntry,0xF3FC199BL,0x81C9,0x41BF,0x88,0x8E,0x28,0x5B,0x88,0xE3,0x32,0xEC);

/* Definition of interface: IUpgradeEntry */
#undef INTERFACE
#define INTERFACE IUpgradeEntry

DECLARE_INTERFACE_(IUpgradeEntry, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IUpgradeEntry methods */
    STDMETHOD(get_UpgradeCode)(THIS_ BSTR FAR* pbstrGUID) PURE;
    STDMETHOD(put_UpgradeCode)(THIS_ BSTR bstrGUID) PURE;
    STDMETHOD(get_MinVersion)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_MinVersion)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_MaxVersion)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_MaxVersion)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Language)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Language)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* plnValue) PURE;
    STDMETHOD(put_Attributes)(THIS_ long lnValue) PURE;
    STDMETHOD(get_Remove)(THIS_ BSTR FAR* pBstrValue) PURE;
    STDMETHOD(put_Remove)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(get_ActionProp)(THIS_ BSTR FAR* pBstrValue) PURE;
    STDMETHOD(put_ActionProp)(THIS_ BSTR bstrValue) PURE;
};

DEFINE_GUID(IID_IUpgradeEntry2,0x93AB3351L,0xB12B,0x4EB3,0x8E,0xD1,0x15,0xE9,0x5E,0x20,0x23,0xB6);

/* Definition of interface: IUpgradeEntry2 */
#undef INTERFACE
#define INTERFACE IUpgradeEntry2

DECLARE_INTERFACE_(IUpgradeEntry2, IUpgradeEntry)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IUpgradeEntry methods */
    STDMETHOD(get_UpgradeCode)(THIS_ BSTR FAR* pbstrGUID) PURE;
    STDMETHOD(put_UpgradeCode)(THIS_ BSTR bstrGUID) PURE;
    STDMETHOD(get_MinVersion)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_MinVersion)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_MaxVersion)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_MaxVersion)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Language)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Language)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* plnValue) PURE;
    STDMETHOD(put_Attributes)(THIS_ long lnValue) PURE;
    STDMETHOD(get_Remove)(THIS_ BSTR FAR* pBstrValue) PURE;
    STDMETHOD(put_Remove)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(get_ActionProp)(THIS_ BSTR FAR* pBstrValue) PURE;
    STDMETHOD(put_ActionProp)(THIS_ BSTR bstrValue) PURE;
#endif

    /* IUpgradeEntry2 methods */
    STDMETHOD(get_ISDisplayName)(THIS_ BSTR FAR* pBstrValue) PURE;
    STDMETHOD(put_ISDisplayName)(THIS_ BSTR bstrValue) PURE;
};

DEFINE_GUID(IID_IUpgradeEntries,0x0192A765L,0x14CB,0x4016,0x95,0xC3,0x4D,0xE9,0xA2,0x2D,0x60,0xCC);

/* Definition of interface: IUpgradeEntries */
#undef INTERFACE
#define INTERFACE IUpgradeEntries

DECLARE_INTERFACE_(IUpgradeEntries, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IUpgradeEntries methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IUpgradeEntry FAR* FAR* pEnv) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IUpgradeMsiItem,0x08F7330AL,0x7E75,0x4A51,0x8F,0x82,0xDF,0x29,0x8E,0xA2,0xD6,0xA7);

/* Definition of interface: IUpgradeMsiItem */
#undef INTERFACE
#define INTERFACE IUpgradeMsiItem

DECLARE_INTERFACE_(IUpgradeMsiItem, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IUpgradeMsiItem methods */
    STDMETHOD(get_UpgradeItem)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_UpgradeItem)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_ObjectSetupPath)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_ObjectSetupPath)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ISReleaseFlags)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_ISReleaseFlags)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ EnumUpgradeMsiItemAttribute FAR* Value) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ EnumUpgradeMsiItemAttribute Value) PURE;
    STDMETHOD(get_UpgradeEntry)(THIS_ IUpgradeEntry FAR* FAR* Value) PURE;
};

DEFINE_GUID(IID_IUpgradeMsiItems,0xC8179FA2L,0xC779,0x457B,0x82,0xB9,0xD0,0xF2,0x6B,0x21,0x05,0x48);

/* Definition of interface: IUpgradeMsiItems */
#undef INTERFACE
#define INTERFACE IUpgradeMsiItems

DECLARE_INTERFACE_(IUpgradeMsiItems, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IUpgradeMsiItems methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IUpgradeMsiItem FAR* FAR* pEnv) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ITempFile,0x386B732CL,0x6F8F,0x42C7,0xBB,0xD3,0x7A,0xAB,0x97,0x0C,0x58,0x56);

/* Definition of interface: ITempFile */
#undef INTERFACE
#define INTERFACE ITempFile

DECLARE_INTERFACE_(ITempFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ITempFile methods */
    STDMETHOD(get_TempFile)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_TempFile)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_ITempFiles,0x43706AD6L,0x1341,0x4369,0x9B,0x3E,0x03,0x04,0x6E,0x42,0x3A,0x3D);

/* Definition of interface: ITempFiles */
#undef INTERFACE
#define INTERFACE ITempFiles

DECLARE_INTERFACE_(ITempFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ITempFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ITempFile FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(Add)(THIS_ BSTR sFileName, long FAR* pErrorCode, ITempFile FAR* FAR* ppRet) PURE;
    STDMETHOD(Remove)(THIS_ ITempFile FAR* pTempFile) PURE;
};

typedef enum EnumSetupFolderType {
    esftSupport = 0,
    esftSplash = 1,
    esftBillboard = 2
} EnumSetupFolderType;

typedef enum EnumSetupFolderChild {
    esfcSetupFolder = 0,
    esfcSetupFile = 1
} EnumSetupFolderChild;

DEFINE_GUID(IID_ISetupFile,0x8BB5C18DL,0xFDE7,0x441C,0x9E,0xA7,0xB8,0x54,0xC0,0x31,0x5F,0x9A);

/* Definition of interface: ISetupFile */
#undef INTERFACE
#define INTERFACE ISetupFile

DECLARE_INTERFACE_(ISetupFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISetupFile methods */
    STDMETHOD(get_ISSetupFile)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_ISSetupFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_FileName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Stream)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Stream)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Language)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Language)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Splash)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_Splash)(THIS_ long Value) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Path)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_ISetupFileQi,0x0B539B5BL,0x1A00,0x4A9B,0xB8,0x11,0x34,0xAC,0xF0,0xBA,0xA3,0x7D);

/* Definition of interface: ISetupFileQi */
#undef INTERFACE
#define INTERFACE ISetupFileQi

DECLARE_INTERFACE_(ISetupFileQi, ISetupFile)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISetupFile methods */
    STDMETHOD(get_ISSetupFile)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_ISSetupFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_FileName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Stream)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Stream)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Language)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Language)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Splash)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_Splash)(THIS_ long Value) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Path)(THIS_ BSTR Value) PURE;
#endif

    /* ISetupFileQi methods */
    STDMETHOD(get_Target)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_ISetupFiles,0xDC1237D5L,0x65A2,0x4E58,0x97,0xE0,0xF7,0x37,0xD9,0x52,0xAE,0x70);

/* Definition of interface: ISetupFiles */
#undef INTERFACE
#define INTERFACE ISetupFiles

DECLARE_INTERFACE_(ISetupFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISetupFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISetupFile FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

interface ISetupFolders;

DEFINE_GUID(IID_ISetupFolder,0x3FABA2F4L,0x1566,0x4FE8,0x87,0xCA,0x29,0x0B,0x19,0x0D,0xCD,0x68);

/* Definition of interface: ISetupFolder */
#undef INTERFACE
#define INTERFACE ISetupFolder

DECLARE_INTERFACE_(ISetupFolder, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISetupFolder methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Type)(THIS_ EnumSetupFolderType FAR* pType) PURE;
    STDMETHOD(get_Language)(THIS_ BSTR FAR* pbstrLang) PURE;
    STDMETHOD(get_SubFolders)(THIS_ ISetupFolders FAR* FAR* ppCol) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppCol) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSetupFolderChild esfcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_HasSubFolder)(THIS_ VARIANT_BOOL FAR* vbHasSubFolder) PURE;
    STDMETHOD(InsertFolder)(THIS_ ISetupFolder FAR* pSrcFolder, VARIANT_BOOL vbMove, ISetupFolder FAR* FAR* ppNewFolder) PURE;
};

DEFINE_GUID(IID_ISetupFolders,0xD71693A7L,0x0D70,0x4FDF,0x8C,0x88,0x73,0x03,0x95,0x2C,0xE3,0x7C);

/* Definition of interface: ISetupFolders */
#undef INTERFACE
#define INTERFACE ISetupFolders

DECLARE_INTERFACE_(ISetupFolders, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISetupFolders methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISetupFolder FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumDimReferenceChild {
    edrcRuntimeVariable = 1,
    edrcBuildVariable = 2,
    edrcDependency = 3,
    edrcVirtualBuildOption = 4
} EnumDimReferenceChild;

interface IDimVariableIxtapa;

interface IDimDimDependencyIxtapa;

interface IDimDimDependenciesIxtapa;

interface IDimVariablesIxtapa;

interface IVirtualBuildOptions;

DEFINE_GUID(IID_IDimReferenceIxtapa,0xBB62CEFDL,0xA784,0x4FF4,0x97,0xE1,0x3A,0x51,0x81,0x5E,0xD1,0x8D);

/* Definition of interface: IDimReferenceIxtapa */
#undef INTERFACE
#define INTERFACE IDimReferenceIxtapa

DECLARE_INTERFACE_(IDimReferenceIxtapa, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDimReferenceIxtapa methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ISBuildSourcePath)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_ISBuildSourcePath)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(get_BuildVariable)(THIS_ BSTR bstrName, IDimVariableIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RuntimeVariable)(THIS_ BSTR bstrName, IDimVariableIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IsDimDependency)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(get_DimDependency)(THIS_ BSTR bstrRequiredUUID, BSTR bstrRequiredMajorVersion, BSTR bstrRequiredMinorVersion, BSTR bstrRequiredBuildVersion, BSTR bstrRequiredRevisionVersion, IDimDimDependencyIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DimDependencies)(THIS_ IDimDimDependenciesIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDimReferenceChild edrcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_ParentFeatures)(THIS_ IFeatures FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DimBuildVariables)(THIS_ IDimVariablesIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DimRuntimeVariables)(THIS_ IDimVariablesIxtapa FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_IDimReferenceJustice,0x7E31A1F7L,0xCF70,0x4412,0xA6,0x5E,0xBD,0x86,0xD9,0x14,0xC0,0xC1);

/* Definition of interface: IDimReferenceJustice */
#undef INTERFACE
#define INTERFACE IDimReferenceJustice

DECLARE_INTERFACE_(IDimReferenceJustice, IDimReferenceIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDimReferenceIxtapa methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ISBuildSourcePath)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_ISBuildSourcePath)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(get_BuildVariable)(THIS_ BSTR bstrName, IDimVariableIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RuntimeVariable)(THIS_ BSTR bstrName, IDimVariableIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IsDimDependency)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(get_DimDependency)(THIS_ BSTR bstrRequiredUUID, BSTR bstrRequiredMajorVersion, BSTR bstrRequiredMinorVersion, BSTR bstrRequiredBuildVersion, BSTR bstrRequiredRevisionVersion, IDimDimDependencyIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DimDependencies)(THIS_ IDimDimDependenciesIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDimReferenceChild edrcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_ParentFeatures)(THIS_ IFeatures FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DimBuildVariables)(THIS_ IDimVariablesIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DimRuntimeVariables)(THIS_ IDimVariablesIxtapa FAR* FAR* ppVal) PURE;
#endif

    /* IDimReferenceJustice methods */
    STDMETHOD(get_ParentDimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(AddDimDependency)(THIS_ BSTR bstrRequiredUUID, BSTR bstrRequiredMajorVersion, BSTR bstrRequiredMinorVersion, BSTR bstrRequiredBuildVersion, BSTR bstrRequiredRevisionVersion, IDimDimDependencyIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(RefreshDimDependencies)(THIS) PURE;
};

DEFINE_GUID(IID_IDimReferenceLoyalty,0xC94A14E0L,0x9311,0x4536,0xA5,0x47,0xBE,0xCF,0x66,0x6E,0x42,0xEE);

/* Definition of interface: IDimReferenceLoyalty */
#undef INTERFACE
#define INTERFACE IDimReferenceLoyalty

DECLARE_INTERFACE_(IDimReferenceLoyalty, IDimReferenceJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDimReferenceIxtapa methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ISBuildSourcePath)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_ISBuildSourcePath)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(get_BuildVariable)(THIS_ BSTR bstrName, IDimVariableIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RuntimeVariable)(THIS_ BSTR bstrName, IDimVariableIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IsDimDependency)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(get_DimDependency)(THIS_ BSTR bstrRequiredUUID, BSTR bstrRequiredMajorVersion, BSTR bstrRequiredMinorVersion, BSTR bstrRequiredBuildVersion, BSTR bstrRequiredRevisionVersion, IDimDimDependencyIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DimDependencies)(THIS_ IDimDimDependenciesIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDimReferenceChild edrcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_ParentFeatures)(THIS_ IFeatures FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DimBuildVariables)(THIS_ IDimVariablesIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DimRuntimeVariables)(THIS_ IDimVariablesIxtapa FAR* FAR* ppVal) PURE;

    /* IDimReferenceJustice methods */
    STDMETHOD(get_ParentDimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(AddDimDependency)(THIS_ BSTR bstrRequiredUUID, BSTR bstrRequiredMajorVersion, BSTR bstrRequiredMinorVersion, BSTR bstrRequiredBuildVersion, BSTR bstrRequiredRevisionVersion, IDimDimDependencyIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(RefreshDimDependencies)(THIS) PURE;
#endif

    /* IDimReferenceLoyalty methods */
    STDMETHOD(get_VirtualBuildOptions)(THIS_ IVirtualBuildOptions FAR* FAR* pVirtualBuildOptions) PURE;
};

DEFINE_GUID(IID_IDimReferencesIxtapa,0x927FADAEL,0x592A,0x415C,0xB2,0xD9,0x6A,0x63,0x0E,0x69,0x77,0x0F);

/* Definition of interface: IDimReferencesIxtapa */
#undef INTERFACE
#define INTERFACE IDimReferencesIxtapa

DECLARE_INTERFACE_(IDimReferencesIxtapa, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDimReferencesIxtapa methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IDimReferenceIxtapa FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IDimVariableIxtapa,0x6877FBDEL,0xCA42,0x4568,0x8E,0x3D,0xA9,0x6A,0x6D,0x83,0xAA,0xEA);

/* Definition of interface: IDimVariableIxtapa */
#undef INTERFACE
#define INTERFACE IDimVariableIxtapa

DECLARE_INTERFACE_(IDimVariableIxtapa, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDimVariableIxtapa methods */
    STDMETHOD(get_ParentDimReference)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_ParentDimReference)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_NewValue)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_NewValue)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Type)(THIS_ long Value) PURE;
};

DEFINE_GUID(IID_IDimVariablesIxtapa,0xC9962960L,0xD832,0x468E,0x84,0x18,0xD9,0xDB,0x62,0x97,0x47,0xB3);

/* Definition of interface: IDimVariablesIxtapa */
#undef INTERFACE
#define INTERFACE IDimVariablesIxtapa

DECLARE_INTERFACE_(IDimVariablesIxtapa, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDimVariablesIxtapa methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IDimVariableIxtapa FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IDimDimDependencyIxtapa,0xE11BDF8DL,0xA4D5,0x4D55,0x85,0x61,0x46,0x40,0xF0,0x4F,0xF9,0xC6);

/* Definition of interface: IDimDimDependencyIxtapa */
#undef INTERFACE
#define INTERFACE IDimDimDependencyIxtapa

DECLARE_INTERFACE_(IDimDimDependencyIxtapa, IDimReferenceJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDimReferenceIxtapa methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ISBuildSourcePath)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_ISBuildSourcePath)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(get_BuildVariable)(THIS_ BSTR bstrName, IDimVariableIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RuntimeVariable)(THIS_ BSTR bstrName, IDimVariableIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_IsDimDependency)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(get_DimDependency)(THIS_ BSTR bstrRequiredUUID, BSTR bstrRequiredMajorVersion, BSTR bstrRequiredMinorVersion, BSTR bstrRequiredBuildVersion, BSTR bstrRequiredRevisionVersion, IDimDimDependencyIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DimDependencies)(THIS_ IDimDimDependenciesIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumDimReferenceChild edrcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_ParentFeatures)(THIS_ IFeatures FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DimBuildVariables)(THIS_ IDimVariablesIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(get_DimRuntimeVariables)(THIS_ IDimVariablesIxtapa FAR* FAR* ppVal) PURE;

    /* IDimReferenceJustice methods */
    STDMETHOD(get_ParentDimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(AddDimDependency)(THIS_ BSTR bstrRequiredUUID, BSTR bstrRequiredMajorVersion, BSTR bstrRequiredMinorVersion, BSTR bstrRequiredBuildVersion, BSTR bstrRequiredRevisionVersion, IDimDimDependencyIxtapa FAR* FAR* ppVal) PURE;
    STDMETHOD(RefreshDimDependencies)(THIS) PURE;
#endif

    /* IDimDimDependencyIxtapa methods */
    STDMETHOD(get_RequiredUUID)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_RequiredUUID)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_RequiredMajorVersion)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_RequiredMajorVersion)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_RequiredMinorVersion)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_RequiredMinorVersion)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_RequiredBuildVersion)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_RequiredBuildVersion)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_RequiredRevisionVersion)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_RequiredRevisionVersion)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IDimDimDependenciesIxtapa,0x79BC1C8BL,0xA0BE,0x4562,0x9F,0x3E,0x6B,0x3E,0xF4,0x98,0x7F,0x99);

/* Definition of interface: IDimDimDependenciesIxtapa */
#undef INTERFACE
#define INTERFACE IDimDimDependenciesIxtapa

DECLARE_INTERFACE_(IDimDimDependenciesIxtapa, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDimDimDependenciesIxtapa methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IDimDimDependencyIxtapa FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

interface IXmlElementPluto;

interface IXmlElementsPluto;

interface IXmlElementAttribsPluto;

interface IXmlXPathExpressionsPluto;

interface IXmlNamespacesIronwood;

typedef enum EnumXmlOpScheduling {
    exosInstall = 1,
    exosUnInstall = 2,
    exosInstallAndUninstall = 3
} EnumXmlOpScheduling;

typedef enum EnumXmlFileOp {
    exfoCreate = 1,
    exfoRemove = 2
} EnumXmlFileOp;

typedef enum EnumXmlFileChild {
    exfcXmlElement = 1,
    exfcXPath = 2,
    exfcNamespace = 3
} EnumXmlFileChild;

DEFINE_GUID(IID_IXmlFilePluto,0x239E4639L,0x1C23,0x4976,0xB5,0xC5,0xDF,0x02,0x36,0x3B,0x2B,0xBC);

/* Definition of interface: IXmlFilePluto */
#undef INTERFACE
#define INTERFACE IXmlFilePluto

DECLARE_INTERFACE_(IXmlFilePluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IXmlFilePluto methods */
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_FileName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CreateOnInstall)(THIS_ VARIANT_BOOL FAR* vbCreateOnInstall) PURE;
    STDMETHOD(put_CreateOnInstall)(THIS_ VARIANT_BOOL vbCreateOnInstall) PURE;
    STDMETHOD(get_RemoveOnUnInstall)(THIS_ VARIANT_BOOL FAR* vbRemoveOnUnInstall) PURE;
    STDMETHOD(put_RemoveOnUnInstall)(THIS_ VARIANT_BOOL vbRemoveOnUnInstall) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Value) PURE;
    STDMETHOD(AddChild)(THIS_ EnumXmlFileChild execChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_RootElement)(THIS_ IXmlElementPluto FAR* FAR* ppXmlElement) PURE;
    STDMETHOD(get_XPathExpressions)(THIS_ IXmlXPathExpressionsPluto FAR* FAR* ppXPaths) PURE;
    STDMETHOD(CreateCopy)(THIS_ IXmlFilePluto FAR* FAR* ppXmlFile) PURE;
    STDMETHOD(InsertCopy)(THIS_ IXmlElementPluto FAR* pXmlElement, IXmlElementPluto FAR* FAR* ppXmlElement) PURE;
};

DEFINE_GUID(IID_IXmlFileIronwood,0x5731A5D6L,0xA094,0x482D,0x87,0x08,0x74,0xDE,0x07,0x74,0x97,0x1B);

/* Definition of interface: IXmlFileIronwood */
#undef INTERFACE
#define INTERFACE IXmlFileIronwood

DECLARE_INTERFACE_(IXmlFileIronwood, IXmlFilePluto)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IXmlFilePluto methods */
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_FileName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CreateOnInstall)(THIS_ VARIANT_BOOL FAR* vbCreateOnInstall) PURE;
    STDMETHOD(put_CreateOnInstall)(THIS_ VARIANT_BOOL vbCreateOnInstall) PURE;
    STDMETHOD(get_RemoveOnUnInstall)(THIS_ VARIANT_BOOL FAR* vbRemoveOnUnInstall) PURE;
    STDMETHOD(put_RemoveOnUnInstall)(THIS_ VARIANT_BOOL vbRemoveOnUnInstall) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Value) PURE;
    STDMETHOD(AddChild)(THIS_ EnumXmlFileChild execChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_RootElement)(THIS_ IXmlElementPluto FAR* FAR* ppXmlElement) PURE;
    STDMETHOD(get_XPathExpressions)(THIS_ IXmlXPathExpressionsPluto FAR* FAR* ppXPaths) PURE;
    STDMETHOD(CreateCopy)(THIS_ IXmlFilePluto FAR* FAR* ppXmlFile) PURE;
    STDMETHOD(InsertCopy)(THIS_ IXmlElementPluto FAR* pXmlElement, IXmlElementPluto FAR* FAR* ppXmlElement) PURE;
#endif

    /* IXmlFileIronwood methods */
    STDMETHOD(get_SelectionNamespaces)(THIS_ IXmlNamespacesIronwood FAR* FAR* ppNamespaces) PURE;
    STDMETHOD(get_Encoding)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Encoding)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IXmlFileLoyalty,0x563F44FBL,0xF8B9,0x4B62,0xAE,0x13,0xAC,0xBC,0xD9,0x20,0xD1,0xA1);

/* Definition of interface: IXmlFileLoyalty */
#undef INTERFACE
#define INTERFACE IXmlFileLoyalty

DECLARE_INTERFACE_(IXmlFileLoyalty, IXmlFileIronwood)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IXmlFilePluto methods */
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_FileName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CreateOnInstall)(THIS_ VARIANT_BOOL FAR* vbCreateOnInstall) PURE;
    STDMETHOD(put_CreateOnInstall)(THIS_ VARIANT_BOOL vbCreateOnInstall) PURE;
    STDMETHOD(get_RemoveOnUnInstall)(THIS_ VARIANT_BOOL FAR* vbRemoveOnUnInstall) PURE;
    STDMETHOD(put_RemoveOnUnInstall)(THIS_ VARIANT_BOOL vbRemoveOnUnInstall) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Value) PURE;
    STDMETHOD(AddChild)(THIS_ EnumXmlFileChild execChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_RootElement)(THIS_ IXmlElementPluto FAR* FAR* ppXmlElement) PURE;
    STDMETHOD(get_XPathExpressions)(THIS_ IXmlXPathExpressionsPluto FAR* FAR* ppXPaths) PURE;
    STDMETHOD(CreateCopy)(THIS_ IXmlFilePluto FAR* FAR* ppXmlFile) PURE;
    STDMETHOD(InsertCopy)(THIS_ IXmlElementPluto FAR* pXmlElement, IXmlElementPluto FAR* FAR* ppXmlElement) PURE;

    /* IXmlFileIronwood methods */
    STDMETHOD(get_SelectionNamespaces)(THIS_ IXmlNamespacesIronwood FAR* FAR* ppNamespaces) PURE;
    STDMETHOD(get_Encoding)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Encoding)(THIS_ BSTR Value) PURE;
#endif

    /* IXmlFileLoyalty methods */
    STDMETHOD(get_SkipStylesheet)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(put_SkipStylesheet)(THIS_ VARIANT_BOOL Value) PURE;
};

DEFINE_GUID(IID_IXmlFilesPluto,0xCB79A807L,0xB3EF,0x4A10,0xA8,0xFB,0xE1,0x50,0x36,0x1F,0xCB,0xF7);

/* Definition of interface: IXmlFilesPluto */
#undef INTERFACE
#define INTERFACE IXmlFilesPluto

DECLARE_INTERFACE_(IXmlFilesPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IXmlFilesPluto methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IXmlFilePluto FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumXmlElementContentOp {
    execoNone = 1,
    execoUpdate = 2,
    execoAppend = 3,
    execoPrepend = 4
} EnumXmlElementContentOp;

typedef enum EnumXmlElementChild {
    execXmlElement = 1,
    execXmlAttribute = 2
} EnumXmlElementChild;

DEFINE_GUID(IID_IXmlElementPluto,0xE5B23437L,0x4DE3,0x472E,0x96,0x77,0x7A,0xC4,0x21,0x79,0xF8,0xF3);

/* Definition of interface: IXmlElementPluto */
#undef INTERFACE
#define INTERFACE IXmlElementPluto

DECLARE_INTERFACE_(IXmlElementPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IXmlElementPluto methods */
    STDMETHOD(get_ParentElement)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_ParentElement)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_XPath)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_XPath)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Content)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Content)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ContentDisplayName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_ContentDisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CreateOnInstall)(THIS_ VARIANT_BOOL FAR* vbCreateOnInstall) PURE;
    STDMETHOD(put_CreateOnInstall)(THIS_ VARIANT_BOOL vbCreateOnInstall) PURE;
    STDMETHOD(get_RemoveOnInstall)(THIS_ VARIANT_BOOL FAR* vbRemoveOnInstall) PURE;
    STDMETHOD(put_RemoveOnInstall)(THIS_ VARIANT_BOOL vbRemoveOnInstall) PURE;
    STDMETHOD(get_CreateOnUnInstall)(THIS_ VARIANT_BOOL FAR* vbCreateOnUnInstall) PURE;
    STDMETHOD(put_CreateOnUnInstall)(THIS_ VARIANT_BOOL vbCreateOnUnInstall) PURE;
    STDMETHOD(get_RemoveOnUnInstall)(THIS_ VARIANT_BOOL FAR* vbRemoveOnUnInstall) PURE;
    STDMETHOD(put_RemoveOnUnInstall)(THIS_ VARIANT_BOOL vbRemoveOnUnInstall) PURE;
    STDMETHOD(get_ContentOp)(THIS_ EnumXmlElementContentOp FAR* eOp) PURE;
    STDMETHOD(put_ContentOp)(THIS_ EnumXmlElementContentOp eOp) PURE;
    STDMETHOD(get_MatchFirstElementOnly)(THIS_ VARIANT_BOOL FAR* vbMatchFirstElement) PURE;
    STDMETHOD(put_MatchFirstElementOnly)(THIS_ VARIANT_BOOL vbMatchFirstElement) PURE;
    STDMETHOD(AddChild)(THIS_ EnumXmlElementChild execChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_SubElements)(THIS_ IXmlElementsPluto FAR* FAR* ppXmlElements) PURE;
    STDMETHOD(get_Attribs)(THIS_ IXmlElementAttribsPluto FAR* FAR* ppXmlElementAttribs) PURE;
    STDMETHOD(InsertCopy)(THIS_ IXmlElementPluto FAR* pXmlElement, IXmlElementPluto FAR* FAR* ppXmlElement) PURE;
};

DEFINE_GUID(IID_IXmlElementIronwood,0x7562681DL,0x26C6,0x46D4,0xA0,0x77,0x7A,0x22,0x61,0x6C,0xDC,0x7A);

/* Definition of interface: IXmlElementIronwood */
#undef INTERFACE
#define INTERFACE IXmlElementIronwood

DECLARE_INTERFACE_(IXmlElementIronwood, IXmlElementPluto)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IXmlElementPluto methods */
    STDMETHOD(get_ParentElement)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_ParentElement)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_XPath)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_XPath)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Content)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Content)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ContentDisplayName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_ContentDisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CreateOnInstall)(THIS_ VARIANT_BOOL FAR* vbCreateOnInstall) PURE;
    STDMETHOD(put_CreateOnInstall)(THIS_ VARIANT_BOOL vbCreateOnInstall) PURE;
    STDMETHOD(get_RemoveOnInstall)(THIS_ VARIANT_BOOL FAR* vbRemoveOnInstall) PURE;
    STDMETHOD(put_RemoveOnInstall)(THIS_ VARIANT_BOOL vbRemoveOnInstall) PURE;
    STDMETHOD(get_CreateOnUnInstall)(THIS_ VARIANT_BOOL FAR* vbCreateOnUnInstall) PURE;
    STDMETHOD(put_CreateOnUnInstall)(THIS_ VARIANT_BOOL vbCreateOnUnInstall) PURE;
    STDMETHOD(get_RemoveOnUnInstall)(THIS_ VARIANT_BOOL FAR* vbRemoveOnUnInstall) PURE;
    STDMETHOD(put_RemoveOnUnInstall)(THIS_ VARIANT_BOOL vbRemoveOnUnInstall) PURE;
    STDMETHOD(get_ContentOp)(THIS_ EnumXmlElementContentOp FAR* eOp) PURE;
    STDMETHOD(put_ContentOp)(THIS_ EnumXmlElementContentOp eOp) PURE;
    STDMETHOD(get_MatchFirstElementOnly)(THIS_ VARIANT_BOOL FAR* vbMatchFirstElement) PURE;
    STDMETHOD(put_MatchFirstElementOnly)(THIS_ VARIANT_BOOL vbMatchFirstElement) PURE;
    STDMETHOD(AddChild)(THIS_ EnumXmlElementChild execChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_SubElements)(THIS_ IXmlElementsPluto FAR* FAR* ppXmlElements) PURE;
    STDMETHOD(get_Attribs)(THIS_ IXmlElementAttribsPluto FAR* FAR* ppXmlElementAttribs) PURE;
    STDMETHOD(InsertCopy)(THIS_ IXmlElementPluto FAR* pXmlElement, IXmlElementPluto FAR* FAR* ppXmlElement) PURE;
#endif

    /* IXmlElementIronwood methods */
    STDMETHOD(get_NSPrefix)(THIS_ BSTR FAR* bstrNSPrefix) PURE;
    STDMETHOD(put_NSPrefix)(THIS_ BSTR bstrNSPrefix, VARIANT_BOOL vbApplyToSubElements) PURE;
};

DEFINE_GUID(IID_IXmlElementsPluto,0x9469CBCEL,0xB9AE,0x4D07,0x89,0x04,0xE1,0x50,0xE2,0x2F,0xAB,0x4C);

/* Definition of interface: IXmlElementsPluto */
#undef INTERFACE
#define INTERFACE IXmlElementsPluto

DECLARE_INTERFACE_(IXmlElementsPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IXmlElementsPluto methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IXmlElementPluto FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumXmlElementAttribOp {
    exeaoCreate = 1,
    exeaoRemove = 2,
    exeaoAppend = 3
} EnumXmlElementAttribOp;

DEFINE_GUID(IID_IXmlElementAttribPluto,0xE38E52FEL,0x8E87,0x485D,0xB3,0x62,0x48,0x6E,0x69,0xC7,0x6C,0x80);

/* Definition of interface: IXmlElementAttribPluto */
#undef INTERFACE
#define INTERFACE IXmlElementAttribPluto

DECLARE_INTERFACE_(IXmlElementAttribPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IXmlElementAttribPluto methods */
    STDMETHOD(get_Element)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Element)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AttribName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AttribName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AttribDisplayName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AttribDisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AttribValue)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AttribValue)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AttribDisplayValue)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AttribDisplayValue)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Scheduling)(THIS_ EnumXmlOpScheduling FAR* eScheduling) PURE;
    STDMETHOD(put_Scheduling)(THIS_ EnumXmlOpScheduling eScheduling) PURE;
    STDMETHOD(get_Op)(THIS_ EnumXmlElementAttribOp FAR* eOp) PURE;
    STDMETHOD(put_Op)(THIS_ EnumXmlElementAttribOp eOp) PURE;
    STDMETHOD(InsertCopy)(THIS_ IXmlElementPluto FAR* pXmlElement, IXmlElementAttribPluto FAR* FAR* ppXmlElementAttrib) PURE;
};

DEFINE_GUID(IID_IXmlElementAttribsPluto,0xDA107E50L,0x0356,0x4F47,0x88,0xA1,0xE0,0x8C,0x1F,0x45,0x53,0xD6);

/* Definition of interface: IXmlElementAttribsPluto */
#undef INTERFACE
#define INTERFACE IXmlElementAttribsPluto

DECLARE_INTERFACE_(IXmlElementAttribsPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IXmlElementAttribsPluto methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IXmlElementAttribPluto FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumXmlLocatorAttribute {
    xmlAttribute = 0,
    xmlElementContents = 1,
    xmlElementExists = 2
} EnumXmlLocatorAttribute;

DEFINE_GUID(IID_IXmlLocatorPluto,0x4F8D9237L,0x82CD,0x4E22,0x88,0x79,0x8F,0x7B,0x7C,0x38,0x86,0xAE);

/* Definition of interface: IXmlLocatorPluto */
#undef INTERFACE
#define INTERFACE IXmlLocatorPluto

DECLARE_INTERFACE_(IXmlLocatorPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IXmlLocatorPluto methods */
    STDMETHOD(get_Signature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_Signature)(THIS_ BSTR Signature) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* Parent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR Parent) PURE;
    STDMETHOD(get_Element)(THIS_ BSTR FAR* Element) PURE;
    STDMETHOD(put_Element)(THIS_ BSTR Element) PURE;
    STDMETHOD(get_Attribute)(THIS_ BSTR FAR* Attribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ BSTR Attribute) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ EnumXmlLocatorAttribute FAR* Value) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ EnumXmlLocatorAttribute Value) PURE;
};

DEFINE_GUID(IID_IXmlLocatorsPluto,0x63B2F641L,0x4070,0x4286,0xB4,0xDF,0xF6,0x2F,0x17,0xBA,0xBE,0x45);

/* Definition of interface: IXmlLocatorsPluto */
#undef INTERFACE
#define INTERFACE IXmlLocatorsPluto

DECLARE_INTERFACE_(IXmlLocatorsPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IXmlLocatorsPluto methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IXmlLocatorPluto FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IXmlXPathExpressionPluto,0xC0C66416L,0x1922,0x4907,0x81,0x4B,0x3C,0x2D,0xF5,0x65,0xA7,0x5D);

/* Definition of interface: IXmlXPathExpressionPluto */
#undef INTERFACE
#define INTERFACE IXmlXPathExpressionPluto

DECLARE_INTERFACE_(IXmlXPathExpressionPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IXmlXPathExpressionPluto methods */
    STDMETHOD(get_XPathExpression)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_XPathExpression)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IXmlXPathExpressionsPluto,0x760CB5E3L,0x63CF,0x4F7B,0xAC,0x83,0xF2,0x4E,0xBB,0x23,0x6A,0x5C);

/* Definition of interface: IXmlXPathExpressionsPluto */
#undef INTERFACE
#define INTERFACE IXmlXPathExpressionsPluto

DECLARE_INTERFACE_(IXmlXPathExpressionsPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IXmlXPathExpressionsPluto methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IXmlXPathExpressionPluto FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IXmlNamespaceIronwood,0x69A37AE0L,0xBE6C,0x4000,0x86,0x1A,0x5E,0x53,0x82,0xF2,0xFF,0x07);

/* Definition of interface: IXmlNamespaceIronwood */
#undef INTERFACE
#define INTERFACE IXmlNamespaceIronwood

DECLARE_INTERFACE_(IXmlNamespaceIronwood, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IXmlNamespaceIronwood methods */
    STDMETHOD(get_Prefix)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Prefix)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_URI)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_URI)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IXmlNamespacesIronwood,0x2038D051L,0xCA7E,0x445C,0xBA,0xD1,0xEF,0xF7,0xD9,0xAF,0xBC,0xEF);

/* Definition of interface: IXmlNamespacesIronwood */
#undef INTERFACE
#define INTERFACE IXmlNamespacesIronwood

DECLARE_INTERFACE_(IXmlNamespacesIronwood, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IXmlNamespacesIronwood methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IXmlNamespaceIronwood FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IAppSearch,0x244E05B2L,0x25BF,0x45B3,0x8A,0xF8,0xAB,0xBC,0x30,0x86,0x9A,0x03);

/* Definition of interface: IAppSearch */
#undef INTERFACE
#define INTERFACE IAppSearch

DECLARE_INTERFACE_(IAppSearch, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IAppSearch methods */
    STDMETHOD(get_Property)(THIS_ BSTR FAR* Property) PURE;
    STDMETHOD(put_Property)(THIS_ BSTR Property) PURE;
    STDMETHOD(get_Signature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_Signature)(THIS_ BSTR Signature) PURE;
};

DEFINE_GUID(IID_IAppSearches,0xB2D3C115L,0x6424,0x4028,0xBE,0xD0,0x94,0x0F,0xEC,0xA0,0x49,0xC2);

/* Definition of interface: IAppSearches */
#undef INTERFACE
#define INTERFACE IAppSearches

DECLARE_INTERFACE_(IAppSearches, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IAppSearches methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IAppSearch FAR* FAR* pEnv) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumRegLocatorRoot {
    erlrHKCR = 0,
    erlrHKCU = 1,
    erlrHKLM = 2,
    erlrHKU = 3
} EnumRegLocatorRoot;

typedef enum EnumRegLocatorType {
    erltDirectory = 0,
    erltFileName = 1,
    erltRawValue = 2
} EnumRegLocatorType;

DEFINE_GUID(IID_IRegLocator,0x87CA88E2L,0x8615,0x444A,0xBE,0x78,0xB0,0xA1,0x2A,0xA1,0xF6,0xC0);

/* Definition of interface: IRegLocator */
#undef INTERFACE
#define INTERFACE IRegLocator

DECLARE_INTERFACE_(IRegLocator, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRegLocator methods */
    STDMETHOD(get_Signature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_Signature)(THIS_ BSTR Signature) PURE;
    STDMETHOD(get_Root)(THIS_ EnumRegLocatorRoot FAR* Root) PURE;
    STDMETHOD(put_Root)(THIS_ EnumRegLocatorRoot Root) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* Key) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR Key) PURE;
    STDMETHOD(get_RegLocatorName)(THIS_ BSTR FAR* RegLocatorName) PURE;
    STDMETHOD(put_RegLocatorName)(THIS_ BSTR RegLocatorName) PURE;
    STDMETHOD(get_RegLocatorType)(THIS_ EnumRegLocatorType FAR* Type) PURE;
    STDMETHOD(put_RegLocatorType)(THIS_ EnumRegLocatorType Type) PURE;
};

DEFINE_GUID(IID_IRegLocator2,0x480A4B3AL,0x8079,0x407D,0x95,0x0F,0x77,0xF4,0x4B,0xB4,0xBC,0xEC);

/* Definition of interface: IRegLocator2 */
#undef INTERFACE
#define INTERFACE IRegLocator2

DECLARE_INTERFACE_(IRegLocator2, IRegLocator)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IRegLocator methods */
    STDMETHOD(get_Signature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_Signature)(THIS_ BSTR Signature) PURE;
    STDMETHOD(get_Root)(THIS_ EnumRegLocatorRoot FAR* Root) PURE;
    STDMETHOD(put_Root)(THIS_ EnumRegLocatorRoot Root) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* Key) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR Key) PURE;
    STDMETHOD(get_RegLocatorName)(THIS_ BSTR FAR* RegLocatorName) PURE;
    STDMETHOD(put_RegLocatorName)(THIS_ BSTR RegLocatorName) PURE;
    STDMETHOD(get_RegLocatorType)(THIS_ EnumRegLocatorType FAR* Type) PURE;
    STDMETHOD(put_RegLocatorType)(THIS_ EnumRegLocatorType Type) PURE;
#endif

    /* IRegLocator2 methods */
    STDMETHOD(get_RegLocatorType64Bit)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_RegLocatorType64Bit)(THIS_ VARIANT_BOOL Val) PURE;
};

DEFINE_GUID(IID_IRegLocators,0x20F88549L,0x5889,0x445E,0x94,0x36,0xE9,0x21,0x2B,0x36,0xFC,0x88);

/* Definition of interface: IRegLocators */
#undef INTERFACE
#define INTERFACE IRegLocators

DECLARE_INTERFACE_(IRegLocators, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IRegLocators methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IRegLocator FAR* FAR* pEnv) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumIniLocatorType {
    eiltDirectory = 0,
    eiltFileName = 1,
    eiltRawValue = 2
} EnumIniLocatorType;

DEFINE_GUID(IID_IIniLocator,0x7C1492E4L,0x4F2A,0x4B08,0x87,0x7E,0x69,0x86,0xDA,0x79,0xF2,0x56);

/* Definition of interface: IIniLocator */
#undef INTERFACE
#define INTERFACE IIniLocator

DECLARE_INTERFACE_(IIniLocator, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIniLocator methods */
    STDMETHOD(get_Signature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_Signature)(THIS_ BSTR Signature) PURE;
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* FileName) PURE;
    STDMETHOD(put_FileName)(THIS_ BSTR FileName) PURE;
    STDMETHOD(get_Section)(THIS_ BSTR FAR* Section) PURE;
    STDMETHOD(put_Section)(THIS_ BSTR Section) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* Key) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR Key) PURE;
    STDMETHOD(get_Field)(THIS_ long FAR* Field) PURE;
    STDMETHOD(put_Field)(THIS_ long Field) PURE;
    STDMETHOD(get_IniLocatorType)(THIS_ EnumIniLocatorType FAR* Type) PURE;
    STDMETHOD(put_IniLocatorType)(THIS_ EnumIniLocatorType Type) PURE;
};

DEFINE_GUID(IID_IIniLocators,0x5FCCD58CL,0x852A,0x4B82,0x8F,0xE1,0xD4,0x74,0xFA,0xEB,0x6E,0x9A);

/* Definition of interface: IIniLocators */
#undef INTERFACE
#define INTERFACE IIniLocators

DECLARE_INTERFACE_(IIniLocators, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIniLocators methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IIniLocator FAR* FAR* pEnv) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumCompLocatorType {
    ecltDirectory = 0,
    ecltFileName = 1
} EnumCompLocatorType;

DEFINE_GUID(IID_ICompLocator,0x90869B0BL,0x6AAE,0x4DD4,0xB0,0xB1,0x7C,0xA8,0xBC,0xEB,0xC6,0x05);

/* Definition of interface: ICompLocator */
#undef INTERFACE
#define INTERFACE ICompLocator

DECLARE_INTERFACE_(ICompLocator, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICompLocator methods */
    STDMETHOD(get_Signature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_Signature)(THIS_ BSTR Signature) PURE;
    STDMETHOD(get_ComponentId)(THIS_ BSTR FAR* ComponentId) PURE;
    STDMETHOD(put_ComponentId)(THIS_ BSTR ComponentId) PURE;
    STDMETHOD(get_CompLocatorType)(THIS_ EnumCompLocatorType FAR* Type) PURE;
    STDMETHOD(put_CompLocatorType)(THIS_ EnumCompLocatorType Type) PURE;
};

DEFINE_GUID(IID_ICompLocators,0xA653CABEL,0x7E2B,0x4FDC,0xAA,0x1B,0x4C,0x34,0x42,0xE9,0x56,0xD9);

/* Definition of interface: ICompLocators */
#undef INTERFACE
#define INTERFACE ICompLocators

DECLARE_INTERFACE_(ICompLocators, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICompLocators methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ICompLocator FAR* FAR* pEnv) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IDrLocator,0xFF2A66E1L,0xD77C,0x45CF,0xB8,0xB2,0x7C,0x23,0xDB,0x09,0x11,0x83);

/* Definition of interface: IDrLocator */
#undef INTERFACE
#define INTERFACE IDrLocator

DECLARE_INTERFACE_(IDrLocator, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDrLocator methods */
    STDMETHOD(get_Signature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_Signature)(THIS_ BSTR Signature) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* Parent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR Parent) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* Path) PURE;
    STDMETHOD(put_Path)(THIS_ BSTR Path) PURE;
    STDMETHOD(get_Depth)(THIS_ long FAR* Depth) PURE;
    STDMETHOD(put_Depth)(THIS_ long Depth) PURE;
};

DEFINE_GUID(IID_IDrLocatorIxtapa,0xA0F23B15L,0xBD47,0x48B7,0xA7,0x3A,0x50,0x8E,0xC4,0x74,0xCF,0xB6);

/* Definition of interface: IDrLocatorIxtapa */
#undef INTERFACE
#define INTERFACE IDrLocatorIxtapa

DECLARE_INTERFACE_(IDrLocatorIxtapa, IDrLocator)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDrLocator methods */
    STDMETHOD(get_Signature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_Signature)(THIS_ BSTR Signature) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* Parent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR Parent) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* Path) PURE;
    STDMETHOD(put_Path)(THIS_ BSTR Path) PURE;
    STDMETHOD(get_Depth)(THIS_ long FAR* Depth) PURE;
    STDMETHOD(put_Depth)(THIS_ long Depth) PURE;
#endif

    /* IDrLocatorIxtapa methods */
    STDMETHOD(get_FullSignature)(THIS_ BSTR FAR* Signature) PURE;
};

DEFINE_GUID(IID_IDrLocatorIndore,0xE1A2CE60L,0x9134,0x4849,0xB9,0x49,0xDD,0xEC,0x8F,0x0C,0xF3,0x9B);

/* Definition of interface: IDrLocatorIndore */
#undef INTERFACE
#define INTERFACE IDrLocatorIndore

DECLARE_INTERFACE_(IDrLocatorIndore, IDrLocatorIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDrLocator methods */
    STDMETHOD(get_Signature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_Signature)(THIS_ BSTR Signature) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* Parent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR Parent) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* Path) PURE;
    STDMETHOD(put_Path)(THIS_ BSTR Path) PURE;
    STDMETHOD(get_Depth)(THIS_ long FAR* Depth) PURE;
    STDMETHOD(put_Depth)(THIS_ long Depth) PURE;

    /* IDrLocatorIxtapa methods */
    STDMETHOD(get_FullSignature)(THIS_ BSTR FAR* Signature) PURE;
#endif

    /* IDrLocatorIndore methods */
    STDMETHOD(get_FullParent)(THIS_ BSTR FAR* Parent) PURE;
};

DEFINE_GUID(IID_IDrLocators,0xFEDA7C90L,0x0C53,0x499A,0x9A,0x20,0x32,0xFC,0x1B,0xCA,0xC9,0xC2);

/* Definition of interface: IDrLocators */
#undef INTERFACE
#define INTERFACE IDrLocators

DECLARE_INTERFACE_(IDrLocators, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDrLocators methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IDrLocator FAR* FAR* pEnv) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ISignature,0xEE127D7DL,0xCE49,0x4291,0xB2,0x28,0x16,0x20,0xC1,0xF5,0x9B,0x57);

/* Definition of interface: ISignature */
#undef INTERFACE
#define INTERFACE ISignature

DECLARE_INTERFACE_(ISignature, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISignature methods */
    STDMETHOD(get_Signature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_Signature)(THIS_ BSTR Signature) PURE;
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* FileName) PURE;
    STDMETHOD(put_FileName)(THIS_ BSTR FileName) PURE;
    STDMETHOD(get_MinVersion)(THIS_ BSTR FAR* MinVersion) PURE;
    STDMETHOD(put_MinVersion)(THIS_ BSTR MinVersion) PURE;
    STDMETHOD(get_MaxVersion)(THIS_ BSTR FAR* MaxVersion) PURE;
    STDMETHOD(put_MaxVersion)(THIS_ BSTR MaxVersion) PURE;
    STDMETHOD(get_MinSize)(THIS_ long FAR* MinSize) PURE;
    STDMETHOD(put_MinSize)(THIS_ long MinSize) PURE;
    STDMETHOD(get_MaxSize)(THIS_ long FAR* MaxSize) PURE;
    STDMETHOD(put_MaxSize)(THIS_ long MaxSize) PURE;
    STDMETHOD(get_MinDate)(THIS_ long FAR* MinDate) PURE;
    STDMETHOD(put_MinDate)(THIS_ long MinDate) PURE;
    STDMETHOD(get_MaxDate)(THIS_ long FAR* MaxDate) PURE;
    STDMETHOD(put_MaxDate)(THIS_ long MaxDate) PURE;
    STDMETHOD(get_Languages)(THIS_ BSTR FAR* Languages) PURE;
    STDMETHOD(put_Languages)(THIS_ BSTR Languages) PURE;
};

DEFINE_GUID(IID_ISignatures,0xC31C00A4L,0x3695,0x4978,0xBC,0x2C,0xAF,0xA4,0x32,0xE8,0x09,0x95);

/* Definition of interface: ISignatures */
#undef INTERFACE
#define INTERFACE ISignatures

DECLARE_INTERFACE_(ISignatures, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISignatures methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ISignature FAR* FAR* pEnv) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumAppSearchChild {
    eascSignature = 0,
    eascRegLocator = 1,
    eascIniLocator = 2,
    eascCompLocator = 3,
    eascDrLocator = 4
} EnumAppSearchChild;

DEFINE_GUID(IID_IAppSearch2,0xE76610A4L,0x31F4,0x4ED0,0xA1,0x18,0x75,0x8B,0xD4,0xBF,0x9D,0xEC);

/* Definition of interface: IAppSearch2 */
#undef INTERFACE
#define INTERFACE IAppSearch2

DECLARE_INTERFACE_(IAppSearch2, IAppSearch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IAppSearch methods */
    STDMETHOD(get_Property)(THIS_ BSTR FAR* Property) PURE;
    STDMETHOD(put_Property)(THIS_ BSTR Property) PURE;
    STDMETHOD(get_Signature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_Signature)(THIS_ BSTR Signature) PURE;
#endif

    /* IAppSearch2 methods */
    STDMETHOD(get_RegLocator)(THIS_ IRegLocator FAR* FAR* ppRegLocator) PURE;
    STDMETHOD(get_IniLocator)(THIS_ IIniLocator FAR* FAR* ppIniLocator) PURE;
    STDMETHOD(get_CompLocator)(THIS_ ICompLocator FAR* FAR* ppCompLocator) PURE;
    STDMETHOD(get_DrLocator)(THIS_ IDrLocator FAR* FAR* ppDrLocator) PURE;
    STDMETHOD(get_ISignature)(THIS_ ISignature FAR* FAR* ppISignature) PURE;
    STDMETHOD(AddChild)(THIS_ EnumAppSearchChild easChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ConditionCount)(THIS_ long FAR* lConditionCount) PURE;
    STDMETHOD(get_FeatureDisplayStringIDs)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_CustomActionNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
};

DEFINE_GUID(IID_IAppSearchPluto,0xB4626493L,0x1A3D,0x421E,0xAC,0xBA,0x58,0x0F,0x1E,0xE2,0x5C,0xBE);

/* Definition of interface: IAppSearchPluto */
#undef INTERFACE
#define INTERFACE IAppSearchPluto

DECLARE_INTERFACE_(IAppSearchPluto, IAppSearch2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IAppSearch methods */
    STDMETHOD(get_Property)(THIS_ BSTR FAR* Property) PURE;
    STDMETHOD(put_Property)(THIS_ BSTR Property) PURE;
    STDMETHOD(get_Signature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_Signature)(THIS_ BSTR Signature) PURE;

    /* IAppSearch2 methods */
    STDMETHOD(get_RegLocator)(THIS_ IRegLocator FAR* FAR* ppRegLocator) PURE;
    STDMETHOD(get_IniLocator)(THIS_ IIniLocator FAR* FAR* ppIniLocator) PURE;
    STDMETHOD(get_CompLocator)(THIS_ ICompLocator FAR* FAR* ppCompLocator) PURE;
    STDMETHOD(get_DrLocator)(THIS_ IDrLocator FAR* FAR* ppDrLocator) PURE;
    STDMETHOD(get_ISignature)(THIS_ ISignature FAR* FAR* ppISignature) PURE;
    STDMETHOD(AddChild)(THIS_ EnumAppSearchChild easChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ConditionCount)(THIS_ long FAR* lConditionCount) PURE;
    STDMETHOD(get_FeatureDisplayStringIDs)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_CustomActionNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
#endif

    /* IAppSearchPluto methods */
    STDMETHOD(get_XmlLocator)(THIS_ IXmlLocatorPluto FAR* FAR* ppXmlLocator) PURE;
};

DEFINE_GUID(IID_IAppSearchIndore,0x2E1B1D8AL,0xE255,0x4D14,0x98,0x32,0xA1,0xDF,0x70,0xE1,0x44,0x61);

/* Definition of interface: IAppSearchIndore */
#undef INTERFACE
#define INTERFACE IAppSearchIndore

DECLARE_INTERFACE_(IAppSearchIndore, IAppSearchPluto)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IAppSearch methods */
    STDMETHOD(get_Property)(THIS_ BSTR FAR* Property) PURE;
    STDMETHOD(put_Property)(THIS_ BSTR Property) PURE;
    STDMETHOD(get_Signature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_Signature)(THIS_ BSTR Signature) PURE;

    /* IAppSearch2 methods */
    STDMETHOD(get_RegLocator)(THIS_ IRegLocator FAR* FAR* ppRegLocator) PURE;
    STDMETHOD(get_IniLocator)(THIS_ IIniLocator FAR* FAR* ppIniLocator) PURE;
    STDMETHOD(get_CompLocator)(THIS_ ICompLocator FAR* FAR* ppCompLocator) PURE;
    STDMETHOD(get_DrLocator)(THIS_ IDrLocator FAR* FAR* ppDrLocator) PURE;
    STDMETHOD(get_ISignature)(THIS_ ISignature FAR* FAR* ppISignature) PURE;
    STDMETHOD(AddChild)(THIS_ EnumAppSearchChild easChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ConditionCount)(THIS_ long FAR* lConditionCount) PURE;
    STDMETHOD(get_FeatureDisplayStringIDs)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;
    STDMETHOD(get_CustomActionNames)(THIS_ IIsStrings FAR* FAR* ppRet) PURE;

    /* IAppSearchPluto methods */
    STDMETHOD(get_XmlLocator)(THIS_ IXmlLocatorPluto FAR* FAR* ppXmlLocator) PURE;
#endif

    /* IAppSearchIndore methods */
    STDMETHOD(get_FullSignature)(THIS_ BSTR FAR* Signature) PURE;
    STDMETHOD(put_FullSignature)(THIS_ BSTR Signature) PURE;
};

DEFINE_GUID(IID_ILaunchCondition,0xA504AC91L,0x33D1,0x46B4,0xB3,0xFA,0x6B,0xAD,0x82,0xF7,0xA9,0x14);

/* Definition of interface: ILaunchCondition */
#undef INTERFACE
#define INTERFACE ILaunchCondition

DECLARE_INTERFACE_(ILaunchCondition, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* ILaunchCondition methods */
    STDMETHOD(put_Condition)(THIS_ BSTR bstrCondition) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* bstrCondition) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrDescription) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrDescription) PURE;
};

DEFINE_GUID(IID_ILaunchConditions,0xC9AEE86AL,0xC796,0x4D2A,0xB8,0x50,0x6D,0x77,0xB7,0x99,0x9F,0x52);

/* Definition of interface: ILaunchConditions */
#undef INTERFACE
#define INTERFACE ILaunchConditions

DECLARE_INTERFACE_(ILaunchConditions, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* ILaunchConditions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILaunchCondition FAR* FAR* ppLaunchCondition) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropAppID {
    eaidAppID = 0,
    eaidRemoteServerName = 10,
    eaidLocalService = 11,
    eaidServiceParameters = 12,
    eaidDLLSurrogate = 13,
    eaidActivateAtStorage = 14,
    eaidRunAsInteractiveUser = 15
} EnumPropAppID;

DEFINE_GUID(IID_IAppId,0x92312797L,0x158B,0x4FE1,0x99,0xD8,0x73,0xBE,0x25,0x7B,0x0D,0x5A);

/* Definition of interface: IAppId */
#undef INTERFACE
#define INTERFACE IAppId

DECLARE_INTERFACE_(IAppId, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IAppId methods */
    STDMETHOD(get_AppId)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_AppId)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_RemoteServerName)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_RemoteServerName)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_LocalService)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_LocalService)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_ServiceParameters)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_ServiceParameters)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_DllSurrogate)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_DllSurrogate)(THIS_ BSTR bstrNew) PURE;
    STDMETHOD(get_ActivateAtStorage)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_ActivateAtStorage)(THIS_ long lVal) PURE;
    STDMETHOD(get_RunAsInteractiveUser)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_RunAsInteractiveUser)(THIS_ long lVal) PURE;
};

DEFINE_GUID(IID_IAppIds,0x533F6BBBL,0x82F4,0x4493,0x8D,0x74,0xE3,0x5E,0x2B,0xC8,0xA8,0x6B);

/* Definition of interface: IAppIds */
#undef INTERFACE
#define INTERFACE IAppIds

DECLARE_INTERFACE_(IAppIds, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IAppIds methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IAppId FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IMedia,0x78FD7E6CL,0xF49D,0x46ED,0x9C,0xBD,0xCB,0x1F,0xBD,0xB5,0x8C,0x6E);

/* Definition of interface: IMedia */
#undef INTERFACE
#define INTERFACE IMedia

DECLARE_INTERFACE_(IMedia, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMedia methods */
    STDMETHOD(get_DiskId)(THIS_ short FAR* nDiskId) PURE;
    STDMETHOD(put_DiskId)(THIS_ short nDiskId) PURE;
    STDMETHOD(get_LastSequence)(THIS_ short FAR* nLastSequence) PURE;
    STDMETHOD(put_LastSequence)(THIS_ short nLastSequence) PURE;
    STDMETHOD(get_DiskPrompt)(THIS_ BSTR FAR* pbstrDiskPrompt) PURE;
    STDMETHOD(put_DiskPrompt)(THIS_ BSTR bstrDiskPrompt) PURE;
    STDMETHOD(get_Cabinet)(THIS_ BSTR FAR* pbstrCabinet) PURE;
    STDMETHOD(put_Cabinet)(THIS_ BSTR bstrCabinet) PURE;
    STDMETHOD(get_VolumeLabel)(THIS_ BSTR FAR* pbstrVolumeLabel) PURE;
    STDMETHOD(put_VolumeLabel)(THIS_ BSTR bstrVolumeLabel) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* pbstrSource) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR bstrSource) PURE;
};

DEFINE_GUID(IID_IMedias,0xDF57DFA6L,0x9CE6,0x4B01,0xAB,0x88,0xB7,0x51,0x7D,0xA5,0x93,0xF3);

/* Definition of interface: IMedias */
#undef INTERFACE
#define INTERFACE IMedias

DECLARE_INTERFACE_(IMedias, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMedias methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IMedia FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumFilePermissions {
    efpGenericAll = 268435456,
    efpGenericExecute = 536870912,
    efpGenericWrite = 1073741824,
    efpGenericRead = 0,
    efpTraverseFolderExecuteFile = 32,
    efpListFolderReadData = 1,
    efpReadAttributes = 128,
    efpReadExtendedAttributes = 8,
    efpCreateFilesWriteData = 2,
    efpCreateFoldersAppendData = 4,
    efpWriteAttributes = 256,
    efpWriteExtendedAttributes = 16,
    efpDeleteSubFoldersFiles = 64,
    efpDelete = 65536,
    efpReadPermissions = 131072,
    efpChangePermissions = 262144,
    efpTakeOwnership = 524288
} EnumFilePermissions;

typedef enum EnumRegPermissions {
    erpQueryValue = 1,
    erpSetValue = 2,
    erpCreateSubKey = 4,
    erpEnumerateSubKeys = 8,
    erpNotify = 16,
    erpCreateLink = 32,
    erpDelete = 65536,
    erpWriteDAC = 262144,
    erpWriteOwner = 524288,
    erpReadControl = 131072
} EnumRegPermissions;

DEFINE_GUID(IID_ILockPermission,0xEA7461F6L,0x61CC,0x4D43,0xB0,0x2F,0x40,0xBA,0x37,0x45,0xDD,0x8D);

/* Definition of interface: ILockPermission */
#undef INTERFACE
#define INTERFACE ILockPermission

DECLARE_INTERFACE_(ILockPermission, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILockPermission methods */
    STDMETHOD(get_LockObject)(THIS_ BSTR FAR* pBstrValue) PURE;
    STDMETHOD(put_LockObject)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(get_Table)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Table)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Domain)(THIS_ BSTR FAR* pBstrValue) PURE;
    STDMETHOD(put_Domain)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(get_User)(THIS_ BSTR FAR* pBstrValue) PURE;
    STDMETHOD(put_User)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(get_Permission)(THIS_ long FAR* Permission) PURE;
    STDMETHOD(put_Permission)(THIS_ long Permission) PURE;
};

DEFINE_GUID(IID_ILockPermissions,0xA04C267FL,0xB16E,0x4476,0xB9,0x25,0xC5,0x30,0x0A,0x6C,0xF8,0x21);

/* Definition of interface: ILockPermissions */
#undef INTERFACE
#define INTERFACE ILockPermissions

DECLARE_INTERFACE_(ILockPermissions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILockPermissions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ILockPermission FAR* FAR* pEnv) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IISLockPermission,0xF30B81B2L,0xB62A,0x4CA8,0xAF,0x05,0xC2,0x3B,0xE3,0x65,0x6C,0x18);

/* Definition of interface: IISLockPermission */
#undef INTERFACE
#define INTERFACE IISLockPermission

DECLARE_INTERFACE_(IISLockPermission, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISLockPermission methods */
    STDMETHOD(get_LockObject)(THIS_ BSTR FAR* bstrLockObject) PURE;
    STDMETHOD(put_LockObject)(THIS_ BSTR bstrLockObject) PURE;
    STDMETHOD(get_Table)(THIS_ BSTR FAR* bstrTable) PURE;
    STDMETHOD(put_Table)(THIS_ BSTR bstrTable) PURE;
    STDMETHOD(get_Domain)(THIS_ BSTR FAR* bstrDomain) PURE;
    STDMETHOD(put_Domain)(THIS_ BSTR bstrDomain) PURE;
    STDMETHOD(get_User)(THIS_ BSTR FAR* bstrUser) PURE;
    STDMETHOD(put_User)(THIS_ BSTR bstrUser) PURE;
    STDMETHOD(get_Permission)(THIS_ long FAR* nPermission) PURE;
    STDMETHOD(put_Permission)(THIS_ long nPermission) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* nAttributes) PURE;
    STDMETHOD(put_Attributes)(THIS_ long nAttributes) PURE;
};

DEFINE_GUID(IID_IISLockPermissions,0xFDAC1793L,0x71A7,0x490A,0x92,0x83,0x2C,0x1F,0x94,0xAA,0xE9,0x86);

/* Definition of interface: IISLockPermissions */
#undef INTERFACE
#define INTERFACE IISLockPermissions

DECLARE_INTERFACE_(IISLockPermissions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISLockPermissions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IISLockPermission FAR* FAR* pEnv) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IMsiLockPermissionsEx,0x0A26B0D1L,0x0F5D,0x4B09,0xBA,0x08,0xAE,0x0B,0xDB,0xB2,0xD5,0xA8);

/* Definition of interface: IMsiLockPermissionsEx */
#undef INTERFACE
#define INTERFACE IMsiLockPermissionsEx

DECLARE_INTERFACE_(IMsiLockPermissionsEx, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMsiLockPermissionsEx methods */
    STDMETHOD(get_MsiLockPermissionsEx)(THIS_ BSTR FAR* pBstrValue) PURE;
    STDMETHOD(put_MsiLockPermissionsEx)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(get_LockObject)(THIS_ BSTR FAR* pBstrValue) PURE;
    STDMETHOD(put_LockObject)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(get_Table)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Table)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SDDLText)(THIS_ BSTR FAR* pBstrValue) PURE;
    STDMETHOD(put_SDDLText)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IMsiLockPermissionsExs,0xF75950F5L,0x1D34,0x480C,0xA0,0xEB,0x9A,0xEB,0x58,0xFC,0x41,0x14);

/* Definition of interface: IMsiLockPermissionsExs */
#undef INTERFACE
#define INTERFACE IMsiLockPermissionsExs

DECLARE_INTERFACE_(IMsiLockPermissionsExs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IMsiLockPermissionsExs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IMsiLockPermissionsEx FAR* FAR* pEnv) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumAppMapProps {
    apPropNone = 0,
    apPropScrEng = 1,
    apPrpChkFileExist = 4,
    apPrpBoth = 5
} EnumAppMapProps;

DEFINE_GUID(IID_IVRootAppMap,0xF721BC08L,0xBA62,0x4216,0x97,0x11,0x3D,0x22,0xF1,0x31,0x0E,0xCC);

/* Definition of interface: IVRootAppMap */
#undef INTERFACE
#define INTERFACE IVRootAppMap

DECLARE_INTERFACE_(IVRootAppMap, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVRootAppMap methods */
    STDMETHOD(get_VRootKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_VRootKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootAppMapKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_VRootAppMapKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Extension)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Extension)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Execpath)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Execpath)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Verb)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Verb)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AppMapProps)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_AppMapProps)(THIS_ long Value) PURE;
};

DEFINE_GUID(IID_IVRootAppMaps,0x34B88D6BL,0x8E76,0x4675,0xBC,0xC7,0xE3,0x42,0x7B,0x1F,0x06,0xD7);

/* Definition of interface: IVRootAppMaps */
#undef INTERFACE
#define INTERFACE IVRootAppMaps

DECLARE_INTERFACE_(IVRootAppMaps, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVRootAppMaps methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IVRootAppMap FAR* FAR* pVRoot) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumExecPermission {
    exNone = 0,
    exScriptOnly = 1,
    exScriptExec = 2
} EnumExecPermission;

typedef enum EnumAppProtection {
    apPrLow = 0,
    apPrMed = 1,
    apPrHigh = 2
} EnumAppProtection;

DEFINE_GUID(IID_IVRoot,0xCE33A15CL,0xDB59,0x40C1,0x88,0xFA,0x66,0x5C,0x20,0x2F,0x0C,0xF0);

/* Definition of interface: IVRoot */
#undef INTERFACE
#define INTERFACE IVRoot

DECLARE_INTERFACE_(IVRoot, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVRoot methods */
    STDMETHOD(get_VRootName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootDir)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootAppName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootAppName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootDefDoc)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootDefDoc)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ReadAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ReadAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_WriteAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_WriteAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ScriptSrcAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ScriptSrcAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DirBrowse)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DirBrowse)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ExecPermission)(THIS_ EnumExecPermission FAR* Value) PURE;
    STDMETHOD(put_ExecPermission)(THIS_ EnumExecPermission Value) PURE;
    STDMETHOD(get_Indexing)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Indexing)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_LogVisit)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_LogVisit)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DelUninstall)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DelUninstall)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AppProtection)(THIS_ EnumAppProtection FAR* Value) PURE;
    STDMETHOD(put_AppProtection)(THIS_ EnumAppProtection Value) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootAppMaps)(THIS_ IVRootAppMaps FAR* FAR* ppVRootAppMaps) PURE;
    STDMETHOD(AddVRootAppMap)(THIS_ BSTR sExtension, BSTR sExecPath, BSTR sVerb, long AppMapProps, IVRootAppMap FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRootKey)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SessionTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_SessionTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_ScriptTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_ScriptTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_AnonyAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonyAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_BasicAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_BasicAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonyUserName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyUserName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyPasswrd)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyPasswrd)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonySyncPass)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonySyncPass)(THIS_ VARIANT_BOOL Value) PURE;
};

DEFINE_GUID(IID_IVRootProteus,0x6365922AL,0x842E,0x4145,0x8D,0x83,0x05,0x2D,0xC4,0x6E,0xFB,0xDB);

/* Definition of interface: IVRootProteus */
#undef INTERFACE
#define INTERFACE IVRootProteus

DECLARE_INTERFACE_(IVRootProteus, IVRoot)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IVRoot methods */
    STDMETHOD(get_VRootName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootDir)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootAppName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootAppName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootDefDoc)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootDefDoc)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ReadAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ReadAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_WriteAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_WriteAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ScriptSrcAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ScriptSrcAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DirBrowse)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DirBrowse)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ExecPermission)(THIS_ EnumExecPermission FAR* Value) PURE;
    STDMETHOD(put_ExecPermission)(THIS_ EnumExecPermission Value) PURE;
    STDMETHOD(get_Indexing)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Indexing)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_LogVisit)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_LogVisit)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DelUninstall)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DelUninstall)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AppProtection)(THIS_ EnumAppProtection FAR* Value) PURE;
    STDMETHOD(put_AppProtection)(THIS_ EnumAppProtection Value) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootAppMaps)(THIS_ IVRootAppMaps FAR* FAR* ppVRootAppMaps) PURE;
    STDMETHOD(AddVRootAppMap)(THIS_ BSTR sExtension, BSTR sExecPath, BSTR sVerb, long AppMapProps, IVRootAppMap FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRootKey)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SessionTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_SessionTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_ScriptTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_ScriptTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_AnonyAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonyAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_BasicAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_BasicAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonyUserName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyUserName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyPasswrd)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyPasswrd)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonySyncPass)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonySyncPass)(THIS_ VARIANT_BOOL Value) PURE;
#endif

    /* IVRootProteus methods */
    STDMETHOD(get_Component)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CustomErrors)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_CustomErrors)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IVRootIbiza,0xF1550428L,0xC14C,0x4CC2,0xB7,0x8F,0x22,0xB2,0xE6,0x55,0xEE,0xF4);

/* Definition of interface: IVRootIbiza */
#undef INTERFACE
#define INTERFACE IVRootIbiza

DECLARE_INTERFACE_(IVRootIbiza, IVRootProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IVRoot methods */
    STDMETHOD(get_VRootName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootDir)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootAppName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootAppName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootDefDoc)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootDefDoc)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ReadAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ReadAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_WriteAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_WriteAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ScriptSrcAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ScriptSrcAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DirBrowse)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DirBrowse)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ExecPermission)(THIS_ EnumExecPermission FAR* Value) PURE;
    STDMETHOD(put_ExecPermission)(THIS_ EnumExecPermission Value) PURE;
    STDMETHOD(get_Indexing)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Indexing)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_LogVisit)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_LogVisit)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DelUninstall)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DelUninstall)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AppProtection)(THIS_ EnumAppProtection FAR* Value) PURE;
    STDMETHOD(put_AppProtection)(THIS_ EnumAppProtection Value) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootAppMaps)(THIS_ IVRootAppMaps FAR* FAR* ppVRootAppMaps) PURE;
    STDMETHOD(AddVRootAppMap)(THIS_ BSTR sExtension, BSTR sExecPath, BSTR sVerb, long AppMapProps, IVRootAppMap FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRootKey)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SessionTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_SessionTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_ScriptTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_ScriptTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_AnonyAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonyAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_BasicAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_BasicAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonyUserName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyUserName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyPasswrd)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyPasswrd)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonySyncPass)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonySyncPass)(THIS_ VARIANT_BOOL Value) PURE;

    /* IVRootProteus methods */
    STDMETHOD(get_Component)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CustomErrors)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_CustomErrors)(THIS_ BSTR Value) PURE;
#endif

    /* IVRootIbiza methods */
    STDMETHOD(get_AppPool)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AppPool)(THIS_ BSTR Value) PURE;
};

interface IWebSitesProteus;

DEFINE_GUID(IID_IVRootIxtapa,0x73269CFFL,0xD12E,0x4308,0x89,0x1B,0xD5,0x00,0xE4,0xFD,0x23,0x33);

/* Definition of interface: IVRootIxtapa */
#undef INTERFACE
#define INTERFACE IVRootIxtapa

DECLARE_INTERFACE_(IVRootIxtapa, IVRootIbiza)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IVRoot methods */
    STDMETHOD(get_VRootName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootDir)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootAppName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootAppName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootDefDoc)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootDefDoc)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ReadAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ReadAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_WriteAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_WriteAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ScriptSrcAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ScriptSrcAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DirBrowse)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DirBrowse)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ExecPermission)(THIS_ EnumExecPermission FAR* Value) PURE;
    STDMETHOD(put_ExecPermission)(THIS_ EnumExecPermission Value) PURE;
    STDMETHOD(get_Indexing)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Indexing)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_LogVisit)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_LogVisit)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DelUninstall)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DelUninstall)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AppProtection)(THIS_ EnumAppProtection FAR* Value) PURE;
    STDMETHOD(put_AppProtection)(THIS_ EnumAppProtection Value) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootAppMaps)(THIS_ IVRootAppMaps FAR* FAR* ppVRootAppMaps) PURE;
    STDMETHOD(AddVRootAppMap)(THIS_ BSTR sExtension, BSTR sExecPath, BSTR sVerb, long AppMapProps, IVRootAppMap FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRootKey)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SessionTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_SessionTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_ScriptTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_ScriptTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_AnonyAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonyAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_BasicAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_BasicAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonyUserName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyUserName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyPasswrd)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyPasswrd)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonySyncPass)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonySyncPass)(THIS_ VARIANT_BOOL Value) PURE;

    /* IVRootProteus methods */
    STDMETHOD(get_Component)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CustomErrors)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_CustomErrors)(THIS_ BSTR Value) PURE;

    /* IVRootIbiza methods */
    STDMETHOD(get_AppPool)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AppPool)(THIS_ BSTR Value) PURE;
#endif

    /* IVRootIxtapa methods */
    STDMETHOD(get_IsDimVRoot)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_IsDimVRoot)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ParentWebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_Advanced)(THIS_ BSTR Property, BSTR FAR* Value) PURE;
    STDMETHOD(put_Advanced)(THIS_ BSTR Property, BSTR Value) PURE;
    STDMETHOD(get_AdvancedPropertyList)(THIS_ BSTR FAR* AdvancedPropertyList) PURE;
};

DEFINE_GUID(IID_IVRootIndore,0x49DD66C5L,0xC4B9,0x4D52,0xBA,0xC9,0xE1,0xB3,0xE0,0x77,0x2C,0x8E);

/* Definition of interface: IVRootIndore */
#undef INTERFACE
#define INTERFACE IVRootIndore

DECLARE_INTERFACE_(IVRootIndore, IVRootIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IVRoot methods */
    STDMETHOD(get_VRootName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootDir)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootAppName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootAppName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootDefDoc)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootDefDoc)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ReadAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ReadAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_WriteAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_WriteAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ScriptSrcAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ScriptSrcAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DirBrowse)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DirBrowse)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ExecPermission)(THIS_ EnumExecPermission FAR* Value) PURE;
    STDMETHOD(put_ExecPermission)(THIS_ EnumExecPermission Value) PURE;
    STDMETHOD(get_Indexing)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Indexing)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_LogVisit)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_LogVisit)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DelUninstall)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DelUninstall)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AppProtection)(THIS_ EnumAppProtection FAR* Value) PURE;
    STDMETHOD(put_AppProtection)(THIS_ EnumAppProtection Value) PURE;
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRootAppMaps)(THIS_ IVRootAppMaps FAR* FAR* ppVRootAppMaps) PURE;
    STDMETHOD(AddVRootAppMap)(THIS_ BSTR sExtension, BSTR sExecPath, BSTR sVerb, long AppMapProps, IVRootAppMap FAR* FAR* ppVal) PURE;
    STDMETHOD(get_VRootKey)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_VRootKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SessionTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_SessionTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_ScriptTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_ScriptTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_AnonyAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonyAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_BasicAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_BasicAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonyUserName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyUserName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyPasswrd)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyPasswrd)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonySyncPass)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonySyncPass)(THIS_ VARIANT_BOOL Value) PURE;

    /* IVRootProteus methods */
    STDMETHOD(get_Component)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CustomErrors)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_CustomErrors)(THIS_ BSTR Value) PURE;

    /* IVRootIbiza methods */
    STDMETHOD(get_AppPool)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AppPool)(THIS_ BSTR Value) PURE;

    /* IVRootIxtapa methods */
    STDMETHOD(get_IsDimVRoot)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_IsDimVRoot)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ParentWebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_Advanced)(THIS_ BSTR Property, BSTR FAR* Value) PURE;
    STDMETHOD(put_Advanced)(THIS_ BSTR Property, BSTR Value) PURE;
    STDMETHOD(get_AdvancedPropertyList)(THIS_ BSTR FAR* AdvancedPropertyList) PURE;
#endif

    /* IVRootIndore methods */
    STDMETHOD(get_Aspversion)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Aspversion)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IVRoots,0x24E0C453L,0x8ED1,0x41ED,0x92,0x70,0x82,0xD8,0x89,0xA3,0x6F,0x99);

/* Definition of interface: IVRoots */
#undef INTERFACE
#define INTERFACE IVRoots

DECLARE_INTERFACE_(IVRoots, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVRoots methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IVRoot FAR* FAR* pVRoot) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ICERedist,0x10FFE7F6L,0xE748,0x44D7,0xB9,0xAD,0x9E,0xC2,0xFF,0xB7,0x25,0x0A);

/* Definition of interface: ICERedist */
#undef INTERFACE
#define INTERFACE ICERedist

DECLARE_INTERFACE_(ICERedist, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICERedist methods */
    STDMETHOD(get_AppKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Platforms)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Platforms)(THIS_ long Value) PURE;
};

DEFINE_GUID(IID_ICERedists,0x7309775FL,0x9850,0x46F9,0x89,0xE1,0x78,0xC5,0x44,0x37,0xEB,0x2F);

/* Definition of interface: ICERedists */
#undef INTERFACE
#define INTERFACE ICERedists

DECLARE_INTERFACE_(ICERedists, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICERedists methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ICERedist FAR* FAR* ppCERedist) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ICEFileExt,0x7FA407D1L,0x6C0F,0x44CC,0x81,0x51,0x85,0xF7,0x39,0x34,0xE2,0xF3);

/* Definition of interface: ICEFileExt */
#undef INTERFACE
#define INTERFACE ICEFileExt

DECLARE_INTERFACE_(ICEFileExt, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICEFileExt methods */
    STDMETHOD(get_AppKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_FileKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_FileKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ExtKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_ExtKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Extension)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Extension)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long Value) PURE;
};

DEFINE_GUID(IID_ICEFileExts,0x83E07666L,0xDBB4,0x4518,0x9A,0x8A,0x66,0x57,0x3A,0xFD,0x21,0x8C);

/* Definition of interface: ICEFileExts */
#undef INTERFACE
#define INTERFACE ICEFileExts

DECLARE_INTERFACE_(ICEFileExts, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICEFileExts methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ICEFileExt FAR* FAR* ppFileExt) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ICERegEntry,0x6CA0787FL,0x78C6,0x44D3,0x97,0x5C,0xB8,0x85,0xA7,0x2A,0x23,0xB1);

/* Definition of interface: ICERegEntry */
#undef INTERFACE
#define INTERFACE ICERegEntry

DECLARE_INTERFACE_(ICERegEntry, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICERegEntry methods */
    STDMETHOD(get_AppKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_RegKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_RegKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Root)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Root)(THIS_ long Value) PURE;
    STDMETHOD(get_Key)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Processor)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Processor)(THIS_ long Value) PURE;
    STDMETHOD(get_Platform)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Platform)(THIS_ long Value) PURE;
    STDMETHOD(get_Overwrite)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Overwrite)(THIS_ long Value) PURE;
};

DEFINE_GUID(IID_ICERegEntries,0xCE89AEFAL,0x1EF3,0x48B2,0x90,0x19,0x7D,0x00,0x66,0xA4,0x3F,0xF8);

/* Definition of interface: ICERegEntries */
#undef INTERFACE
#define INTERFACE ICERegEntries

DECLARE_INTERFACE_(ICERegEntries, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICERegEntries methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ICERegEntry FAR* FAR* ppRegEntry) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ICESetupFile,0x506D165EL,0x4BAC,0x4CE4,0xB5,0xCC,0xDE,0xE1,0xE8,0x73,0xFE,0x25);

/* Definition of interface: ICESetupFile */
#undef INTERFACE
#define INTERFACE ICESetupFile

DECLARE_INTERFACE_(ICESetupFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICESetupFile methods */
    STDMETHOD(get_AppKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SetupFileKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_SetupFileKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Processor)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Processor)(THIS_ long Value) PURE;
    STDMETHOD(get_Platform)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Platform)(THIS_ long Value) PURE;
};

DEFINE_GUID(IID_ICESetupFiles,0x07833DB6L,0xCD36,0x436D,0x82,0x9A,0xC8,0xA8,0x29,0xDB,0xAC,0xCF);

/* Definition of interface: ICESetupFiles */
#undef INTERFACE
#define INTERFACE ICESetupFiles

DECLARE_INTERFACE_(ICESetupFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICESetupFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ICESetupFile FAR* FAR* ppSetupFile) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ICEShtCut,0x66C5C00BL,0xE488,0x4735,0x87,0xB4,0xFB,0xC7,0x4A,0xE7,0xF5,0xAC);

/* Definition of interface: ICEShtCut */
#undef INTERFACE
#define INTERFACE ICEShtCut

DECLARE_INTERFACE_(ICEShtCut, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICEShtCut methods */
    STDMETHOD(get_AppKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ShtCutKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_ShtCutKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Platform)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Platform)(THIS_ long Value) PURE;
};

DEFINE_GUID(IID_ICEShtCutLoyaltySP,0x318224A1L,0x325E,0x4FE1,0x89,0x67,0xF3,0x41,0x49,0x87,0xA8,0xAB);

/* Definition of interface: ICEShtCutLoyaltySP */
#undef INTERFACE
#define INTERFACE ICEShtCutLoyaltySP

DECLARE_INTERFACE_(ICEShtCutLoyaltySP, ICEShtCut)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICEShtCut methods */
    STDMETHOD(get_AppKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ShtCutKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_ShtCutKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Platform)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Platform)(THIS_ long Value) PURE;
#endif

    /* ICEShtCutLoyaltySP methods */
    STDMETHOD(get_StartScreenIcon)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_StartScreenIcon)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_ICEShtCuts,0x720A162DL,0x62CF,0x40DB,0xB8,0xFE,0xA1,0xBA,0x95,0xA4,0x68,0xA4);

/* Definition of interface: ICEShtCuts */
#undef INTERFACE
#define INTERFACE ICEShtCuts

DECLARE_INTERFACE_(ICEShtCuts, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICEShtCuts methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ICEShtCut FAR* FAR* ppShtCut) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ICEFile,0xFB31629EL,0x3C38,0x4799,0xBD,0x09,0xAE,0xFF,0x9A,0x9A,0xE0,0x3E);

/* Definition of interface: ICEFile */
#undef INTERFACE
#define INTERFACE ICEFile

DECLARE_INTERFACE_(ICEFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICEFile methods */
    STDMETHOD(get_AppKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_FileKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_FileKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Processor)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Processor)(THIS_ long Value) PURE;
    STDMETHOD(get_Platform)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Platform)(THIS_ long Value) PURE;
    STDMETHOD(get_CopyOption)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_CopyOption)(THIS_ long Value) PURE;
    STDMETHOD(get_FileOption)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_FileOption)(THIS_ long Value) PURE;
    STDMETHOD(AddExtension)(THIS_ BSTR bstrExt, BSTR strDesc, long nIndex, ICEFileExt FAR* FAR* ppExt) PURE;
    STDMETHOD(get_CEExtensions)(THIS_ ICEFileExts FAR* FAR* ppExts) PURE;
    STDMETHOD(DeleteExts)(THIS) PURE;
    STDMETHOD(get_InstalltoGAC)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(put_InstalltoGAC)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ProjectOutput)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(put_ProjectOutput)(THIS_ VARIANT_BOOL Value) PURE;
};

DEFINE_GUID(IID_ICEFiles,0x67BB797FL,0x16A6,0x422F,0xBC,0x19,0x83,0x68,0x88,0xCB,0x48,0x30);

/* Definition of interface: ICEFiles */
#undef INTERFACE
#define INTERFACE ICEFiles

DECLARE_INTERFACE_(ICEFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICEFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ICEFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ICEDir,0x7D5C5533L,0x2967,0x41C1,0x9B,0xB9,0xBC,0xCE,0x34,0x81,0xFE,0xC0);

/* Definition of interface: ICEDir */
#undef INTERFACE
#define INTERFACE ICEDir

DECLARE_INTERFACE_(ICEDir, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICEDir methods */
    STDMETHOD(get_AppKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DirKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DirKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DirParent)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DirParent)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DirValue)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DirValue)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_ICEDirs,0xA594E9A8L,0x340C,0x4E54,0x92,0x99,0xA8,0xEC,0x7B,0x98,0x65,0x28);

/* Definition of interface: ICEDirs */
#undef INTERFACE
#define INTERFACE ICEDirs

DECLARE_INTERFACE_(ICEDirs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICEDirs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ICEDir FAR* FAR* pDir) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ICECabFile,0x772D45FFL,0x7E3D,0x4ED8,0x9B,0xE4,0x82,0xF1,0x93,0x57,0xF1,0x50);

/* Definition of interface: ICECabFile */
#undef INTERFACE
#define INTERFACE ICECabFile

DECLARE_INTERFACE_(ICECabFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICECabFile methods */
    STDMETHOD(get_AppKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_FileKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_FileKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_BuildSourcePath)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_BuildSourcePath)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_ICECabFiles,0x00831F35L,0x66C3,0x4F98,0x86,0x2B,0x5B,0x2D,0x4E,0x7A,0xF0,0x2C);

/* Definition of interface: ICECabFiles */
#undef INTERFACE
#define INTERFACE ICECabFiles

DECLARE_INTERFACE_(ICECabFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICECabFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ICECabFile FAR* FAR* pApp) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ICEApp,0x59BD8294L,0xFC75,0x45FA,0x83,0x56,0x53,0x20,0x9D,0x98,0x71,0x06);

/* Definition of interface: ICEApp */
#undef INTERFACE
#define INTERFACE ICEApp

DECLARE_INTERFACE_(ICEApp, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICEApp methods */
    STDMETHOD(get_AppKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AppName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CompName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_CompName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IconPath)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_IconPath)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long Value) PURE;
    STDMETHOD(get_DeviceFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DeviceFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CEDirs)(THIS_ ICEDirs FAR* FAR* ppDirs) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(AddCEDir)(THIS_ BSTR bstrParent, ICEDir FAR* FAR* ppCEDir) PURE;
    STDMETHOD(get_DefDir)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DefDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(AddCEFile)(THIS_ BSTR bstrFileName, BSTR bstrSrc, BSTR bstrDest, ICEFile FAR* FAR* ppCEFile) PURE;
    STDMETHOD(get_CEFiles)(THIS_ ICEFiles FAR* FAR* ppFiles) PURE;
    STDMETHOD(AddShtCut)(THIS_ ICEShtCut FAR* FAR* ppShtCut) PURE;
    STDMETHOD(get_CEShtCuts)(THIS_ ICEShtCuts FAR* FAR* ppShtCuts) PURE;
    STDMETHOD(AddCESetupFile)(THIS_ BSTR bstrFileName, BSTR bstrSrc, ICESetupFile FAR* FAR* ppCESetupFile) PURE;
    STDMETHOD(get_CESetupFiles)(THIS_ ICESetupFiles FAR* FAR* ppSetupFiles) PURE;
    STDMETHOD(AddRegEntry)(THIS_ long lnRoot, BSTR key, BSTR name, BSTR Value, ICERegEntry FAR* FAR* ppRegEntry) PURE;
    STDMETHOD(get_CERegEntries)(THIS_ ICERegEntries FAR* FAR* ppRegEntries) PURE;
    STDMETHOD(get_DesktopTargetDir)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DesktopTargetDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DeleteMedia)(THIS_ short FAR* pValue) PURE;
    STDMETHOD(put_DeleteMedia)(THIS_ short Value) PURE;
    STDMETHOD(get_InstallNetCF)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallNetCF)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLServer)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLServer)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLClient)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLClient)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLDev)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLDev)(THIS_ long Value) PURE;
    STDMETHOD(get_SPCFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_SPCFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_PVKFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_PVKFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_PreXML)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_PreXML)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_PostXML)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_PostXML)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_NoUninstall)(THIS_ short FAR* pValue) PURE;
    STDMETHOD(put_NoUninstall)(THIS_ short Value) PURE;
};

DEFINE_GUID(IID_ICEApps,0x1DF28E9EL,0xD97F,0x4C7A,0x90,0xB3,0x45,0x01,0xE3,0x12,0x49,0x1B);

/* Definition of interface: ICEApps */
#undef INTERFACE
#define INTERFACE ICEApps

DECLARE_INTERFACE_(ICEApps, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ICEApps methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ICEApp FAR* FAR* pApp) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ICEAppProteus,0x004C6A8EL,0x1E79,0x4445,0x9A,0x43,0xDD,0xC8,0x02,0x2F,0xAD,0x37);

/* Definition of interface: ICEAppProteus */
#undef INTERFACE
#define INTERFACE ICEAppProteus

DECLARE_INTERFACE_(ICEAppProteus, ICEApp)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICEApp methods */
    STDMETHOD(get_AppKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AppName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CompName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_CompName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IconPath)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_IconPath)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long Value) PURE;
    STDMETHOD(get_DeviceFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DeviceFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CEDirs)(THIS_ ICEDirs FAR* FAR* ppDirs) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(AddCEDir)(THIS_ BSTR bstrParent, ICEDir FAR* FAR* ppCEDir) PURE;
    STDMETHOD(get_DefDir)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DefDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(AddCEFile)(THIS_ BSTR bstrFileName, BSTR bstrSrc, BSTR bstrDest, ICEFile FAR* FAR* ppCEFile) PURE;
    STDMETHOD(get_CEFiles)(THIS_ ICEFiles FAR* FAR* ppFiles) PURE;
    STDMETHOD(AddShtCut)(THIS_ ICEShtCut FAR* FAR* ppShtCut) PURE;
    STDMETHOD(get_CEShtCuts)(THIS_ ICEShtCuts FAR* FAR* ppShtCuts) PURE;
    STDMETHOD(AddCESetupFile)(THIS_ BSTR bstrFileName, BSTR bstrSrc, ICESetupFile FAR* FAR* ppCESetupFile) PURE;
    STDMETHOD(get_CESetupFiles)(THIS_ ICESetupFiles FAR* FAR* ppSetupFiles) PURE;
    STDMETHOD(AddRegEntry)(THIS_ long lnRoot, BSTR key, BSTR name, BSTR Value, ICERegEntry FAR* FAR* ppRegEntry) PURE;
    STDMETHOD(get_CERegEntries)(THIS_ ICERegEntries FAR* FAR* ppRegEntries) PURE;
    STDMETHOD(get_DesktopTargetDir)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DesktopTargetDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DeleteMedia)(THIS_ short FAR* pValue) PURE;
    STDMETHOD(put_DeleteMedia)(THIS_ short Value) PURE;
    STDMETHOD(get_InstallNetCF)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallNetCF)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLServer)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLServer)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLClient)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLClient)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLDev)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLDev)(THIS_ long Value) PURE;
    STDMETHOD(get_SPCFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_SPCFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_PVKFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_PVKFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_PreXML)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_PreXML)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_PostXML)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_PostXML)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_NoUninstall)(THIS_ short FAR* pValue) PURE;
    STDMETHOD(put_NoUninstall)(THIS_ short Value) PURE;
#endif

    /* ICEAppProteus methods */
    STDMETHOD(get_Attributes)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Attributes)(THIS_ long Value) PURE;
    STDMETHOD(get_RawDeviceFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_RawDeviceFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CEOtherCabs)(THIS_ ICECabFiles FAR* FAR* ppCabs) PURE;
    STDMETHOD(AddOtherCabEntry)(THIS_ BSTR file, ICECabFile FAR* FAR* ppCabEntry) PURE;
    STDMETHOD(DeleteAppRecordsInTable)(THIS_ BSTR bstrTableName) PURE;
    STDMETHOD(get_IsCEComponent)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(put_IsCEComponent)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent FAR* FAR* pValue) PURE;
    STDMETHOD(put_Component)(THIS_ IComponent FAR* Value) PURE;
    STDMETHOD(InsertToFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(RemoveFromFeature)(THIS_ IFeature FAR* pFeature) PURE;
};

DEFINE_GUID(IID_ICEAppIndore,0x9C25AF67L,0x3548,0x4269,0x82,0xEE,0xAC,0x86,0xFA,0x09,0x96,0x4D);

/* Definition of interface: ICEAppIndore */
#undef INTERFACE
#define INTERFACE ICEAppIndore

DECLARE_INTERFACE_(ICEAppIndore, ICEAppProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICEApp methods */
    STDMETHOD(get_AppKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AppName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CompName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_CompName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IconPath)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_IconPath)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long Value) PURE;
    STDMETHOD(get_DeviceFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DeviceFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CEDirs)(THIS_ ICEDirs FAR* FAR* ppDirs) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(AddCEDir)(THIS_ BSTR bstrParent, ICEDir FAR* FAR* ppCEDir) PURE;
    STDMETHOD(get_DefDir)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DefDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(AddCEFile)(THIS_ BSTR bstrFileName, BSTR bstrSrc, BSTR bstrDest, ICEFile FAR* FAR* ppCEFile) PURE;
    STDMETHOD(get_CEFiles)(THIS_ ICEFiles FAR* FAR* ppFiles) PURE;
    STDMETHOD(AddShtCut)(THIS_ ICEShtCut FAR* FAR* ppShtCut) PURE;
    STDMETHOD(get_CEShtCuts)(THIS_ ICEShtCuts FAR* FAR* ppShtCuts) PURE;
    STDMETHOD(AddCESetupFile)(THIS_ BSTR bstrFileName, BSTR bstrSrc, ICESetupFile FAR* FAR* ppCESetupFile) PURE;
    STDMETHOD(get_CESetupFiles)(THIS_ ICESetupFiles FAR* FAR* ppSetupFiles) PURE;
    STDMETHOD(AddRegEntry)(THIS_ long lnRoot, BSTR key, BSTR name, BSTR Value, ICERegEntry FAR* FAR* ppRegEntry) PURE;
    STDMETHOD(get_CERegEntries)(THIS_ ICERegEntries FAR* FAR* ppRegEntries) PURE;
    STDMETHOD(get_DesktopTargetDir)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DesktopTargetDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DeleteMedia)(THIS_ short FAR* pValue) PURE;
    STDMETHOD(put_DeleteMedia)(THIS_ short Value) PURE;
    STDMETHOD(get_InstallNetCF)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallNetCF)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLServer)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLServer)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLClient)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLClient)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLDev)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLDev)(THIS_ long Value) PURE;
    STDMETHOD(get_SPCFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_SPCFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_PVKFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_PVKFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_PreXML)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_PreXML)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_PostXML)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_PostXML)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_NoUninstall)(THIS_ short FAR* pValue) PURE;
    STDMETHOD(put_NoUninstall)(THIS_ short Value) PURE;

    /* ICEAppProteus methods */
    STDMETHOD(get_Attributes)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Attributes)(THIS_ long Value) PURE;
    STDMETHOD(get_RawDeviceFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_RawDeviceFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CEOtherCabs)(THIS_ ICECabFiles FAR* FAR* ppCabs) PURE;
    STDMETHOD(AddOtherCabEntry)(THIS_ BSTR file, ICECabFile FAR* FAR* ppCabEntry) PURE;
    STDMETHOD(DeleteAppRecordsInTable)(THIS_ BSTR bstrTableName) PURE;
    STDMETHOD(get_IsCEComponent)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(put_IsCEComponent)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent FAR* FAR* pValue) PURE;
    STDMETHOD(put_Component)(THIS_ IComponent FAR* Value) PURE;
    STDMETHOD(InsertToFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(RemoveFromFeature)(THIS_ IFeature FAR* pFeature) PURE;
#endif

    /* ICEAppIndore methods */
    STDMETHOD(get_InstallNetCF2)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallNetCF2)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLServer2)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLServer2)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLClient2)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLClient2)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLDev2)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLDev2)(THIS_ long Value) PURE;
    STDMETHOD(get_OtherAppCabType)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(put_OtherAppCabType)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_SuppressDisplayWarning)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(put_SuppressDisplayWarning)(THIS_ VARIANT_BOOL Value) PURE;
};

DEFINE_GUID(IID_ICEAppJustice,0xE03C0D06L,0x2A21,0x450F,0x82,0x70,0x54,0x60,0xC2,0x9A,0x0E,0x29);

/* Definition of interface: ICEAppJustice */
#undef INTERFACE
#define INTERFACE ICEAppJustice

DECLARE_INTERFACE_(ICEAppJustice, ICEAppIndore)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ICEApp methods */
    STDMETHOD(get_AppKey)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AppName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_AppName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CompName)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_CompName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IconPath)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_IconPath)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long Value) PURE;
    STDMETHOD(get_DeviceFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DeviceFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CEDirs)(THIS_ ICEDirs FAR* FAR* ppDirs) PURE;
    STDMETHOD(Delete)(THIS) PURE;
    STDMETHOD(AddCEDir)(THIS_ BSTR bstrParent, ICEDir FAR* FAR* ppCEDir) PURE;
    STDMETHOD(get_DefDir)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DefDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(AddCEFile)(THIS_ BSTR bstrFileName, BSTR bstrSrc, BSTR bstrDest, ICEFile FAR* FAR* ppCEFile) PURE;
    STDMETHOD(get_CEFiles)(THIS_ ICEFiles FAR* FAR* ppFiles) PURE;
    STDMETHOD(AddShtCut)(THIS_ ICEShtCut FAR* FAR* ppShtCut) PURE;
    STDMETHOD(get_CEShtCuts)(THIS_ ICEShtCuts FAR* FAR* ppShtCuts) PURE;
    STDMETHOD(AddCESetupFile)(THIS_ BSTR bstrFileName, BSTR bstrSrc, ICESetupFile FAR* FAR* ppCESetupFile) PURE;
    STDMETHOD(get_CESetupFiles)(THIS_ ICESetupFiles FAR* FAR* ppSetupFiles) PURE;
    STDMETHOD(AddRegEntry)(THIS_ long lnRoot, BSTR key, BSTR name, BSTR Value, ICERegEntry FAR* FAR* ppRegEntry) PURE;
    STDMETHOD(get_CERegEntries)(THIS_ ICERegEntries FAR* FAR* ppRegEntries) PURE;
    STDMETHOD(get_DesktopTargetDir)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_DesktopTargetDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DeleteMedia)(THIS_ short FAR* pValue) PURE;
    STDMETHOD(put_DeleteMedia)(THIS_ short Value) PURE;
    STDMETHOD(get_InstallNetCF)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallNetCF)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLServer)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLServer)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLClient)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLClient)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLDev)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLDev)(THIS_ long Value) PURE;
    STDMETHOD(get_SPCFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_SPCFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_PVKFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_PVKFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_PreXML)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_PreXML)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_PostXML)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_PostXML)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_NoUninstall)(THIS_ short FAR* pValue) PURE;
    STDMETHOD(put_NoUninstall)(THIS_ short Value) PURE;

    /* ICEAppProteus methods */
    STDMETHOD(get_Attributes)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_Attributes)(THIS_ long Value) PURE;
    STDMETHOD(get_RawDeviceFile)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_RawDeviceFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CEOtherCabs)(THIS_ ICECabFiles FAR* FAR* ppCabs) PURE;
    STDMETHOD(AddOtherCabEntry)(THIS_ BSTR file, ICECabFile FAR* FAR* ppCabEntry) PURE;
    STDMETHOD(DeleteAppRecordsInTable)(THIS_ BSTR bstrTableName) PURE;
    STDMETHOD(get_IsCEComponent)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(put_IsCEComponent)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent FAR* FAR* pValue) PURE;
    STDMETHOD(put_Component)(THIS_ IComponent FAR* Value) PURE;
    STDMETHOD(InsertToFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(RemoveFromFeature)(THIS_ IFeature FAR* pFeature) PURE;

    /* ICEAppIndore methods */
    STDMETHOD(get_InstallNetCF2)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallNetCF2)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLServer2)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLServer2)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLClient2)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLClient2)(THIS_ long Value) PURE;
    STDMETHOD(get_InstallSQLDev2)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_InstallSQLDev2)(THIS_ long Value) PURE;
    STDMETHOD(get_OtherAppCabType)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(put_OtherAppCabType)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_SuppressDisplayWarning)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(put_SuppressDisplayWarning)(THIS_ VARIANT_BOOL Value) PURE;
#endif

    /* ICEAppJustice methods */
    STDMETHOD(get_InstallCERedist)(THIS_ BSTR bstrName, long FAR* plPlatforms) PURE;
    STDMETHOD(put_InstallCERedist)(THIS_ BSTR bstrName, long lPlatforms) PURE;
    STDMETHOD(get_SPCPwd)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_SPCPwd)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CompressCab)(THIS_ VARIANT_BOOL FAR* pValue) PURE;
    STDMETHOD(put_CompressCab)(THIS_ VARIANT_BOOL Value) PURE;
};

typedef enum EnumPalmChild {
    epcFile
} EnumPalmChild;

typedef enum EnumPalmFileDestination {
    epfdHandheld = 0,
    epfdStorageCard = 1
} EnumPalmFileDestination;

DEFINE_GUID(IID_IPalmAppFileProteus,0x694CCE9DL,0x48BA,0x4462,0x90,0xAB,0x87,0x2D,0xEE,0x29,0x0D,0xBB);

/* Definition of interface: IPalmAppFileProteus */
#undef INTERFACE
#define INTERFACE IPalmAppFileProteus

DECLARE_INTERFACE_(IPalmAppFileProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPalmAppFileProteus methods */
    STDMETHOD(get_FileKey)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_FileKey)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Destination)(THIS_ EnumPalmFileDestination FAR* Val) PURE;
    STDMETHOD(put_Destination)(THIS_ EnumPalmFileDestination Val) PURE;
};

DEFINE_GUID(IID_IPalmAppFilesProteus,0x694CCE9CL,0x48BA,0x4462,0x90,0xAB,0x87,0x2D,0xEE,0x29,0x0D,0xBB);

/* Definition of interface: IPalmAppFilesProteus */
#undef INTERFACE
#define INTERFACE IPalmAppFilesProteus

DECLARE_INTERFACE_(IPalmAppFilesProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPalmAppFilesProteus methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IPalmAppFileProteus FAR* FAR* pApp) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IPalmAppProteus,0x694CCE9AL,0x48BA,0x4462,0x90,0xAB,0x87,0x2D,0xEE,0x29,0x0D,0xBB);

/* Definition of interface: IPalmAppProteus */
#undef INTERFACE
#define INTERFACE IPalmAppProteus

DECLARE_INTERFACE_(IPalmAppProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPalmAppProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumPalmChild epc, BSTR bstrFileKey, IBusinessObject FAR* FAR* ppObject) PURE;
    STDMETHOD(get_PalmAppFiles)(THIS_ IPalmAppFilesProteus FAR* FAR* ppFiles) PURE;
    STDMETHOD(DeletePalmApp)(THIS) PURE;
};

DEFINE_GUID(IID_IPalmAppsProteus,0x694CCE99L,0x48BA,0x4462,0x90,0xAB,0x87,0x2D,0xEE,0x29,0x0D,0xBB);

/* Definition of interface: IPalmAppsProteus */
#undef INTERFACE
#define INTERFACE IPalmAppsProteus

DECLARE_INTERFACE_(IPalmAppsProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPalmAppsProteus methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IPalmAppProteus FAR* FAR* pApp) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IISDependency,0xC01E2CC2L,0x91C5,0x4DEE,0xB5,0xFD,0xB2,0xEA,0x0F,0x3E,0x9C,0xAC);

/* Definition of interface: IISDependency */
#undef INTERFACE
#define INTERFACE IISDependency

DECLARE_INTERFACE_(IISDependency, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISDependency methods */
    STDMETHOD(get_ISDependency)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_ISDependency)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Exclude)(THIS_ short FAR* Value) PURE;
    STDMETHOD(put_Exclude)(THIS_ short Value) PURE;
};

DEFINE_GUID(IID_IISDependencies,0x8894F5BAL,0x01CF,0x411D,0x8A,0xCD,0xDF,0x2D,0x8A,0x52,0xE7,0x0B);

/* Definition of interface: IISDependencies */
#undef INTERFACE
#define INTERFACE IISDependencies

DECLARE_INTERFACE_(IISDependencies, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISDependencies methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IISDependency FAR* FAR* pISDependency) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumCatalogCollectionChild {
    ecccObject = 1
} EnumCatalogCollectionChild;

typedef enum EnumCatalogObjectChild {
    ecocAttribute = 1,
    ecocCollection = 2,
    ecocProxy = 3
} EnumCatalogObjectChild;

typedef enum EnumComPlusAppDLLChild {
    ecpadServerFile = 1,
    ecpadProxyFile = 2
} EnumComPlusAppDLLChild;

interface IISCatalogObjectsNeptune;

DEFINE_GUID(IID_IISCatalogCollectionNeptune,0x4A2D7026L,0x28C8,0x41C3,0x91,0x19,0x21,0x18,0xA9,0x00,0xEF,0xC7);

/* Definition of interface: IISCatalogCollectionNeptune */
#undef INTERFACE
#define INTERFACE IISCatalogCollectionNeptune

DECLARE_INTERFACE_(IISCatalogCollectionNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISCatalogCollectionNeptune methods */
    STDMETHOD(get_Key)(THIS_ BSTR FAR* pbstrKey) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrKey) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_CatalogObjects)(THIS_ IISCatalogObjectsNeptune FAR* FAR* pIISCatalogObjectsNeptune) PURE;
    STDMETHOD(AddChild)(THIS_ EnumCatalogCollectionChild eccChild, BSTR bstrName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IISCatalogCollectionsNeptune,0x7D46A5F5L,0x0C80,0x4F77,0xA6,0x03,0x9F,0xF9,0x53,0x4A,0x24,0x24);

/* Definition of interface: IISCatalogCollectionsNeptune */
#undef INTERFACE
#define INTERFACE IISCatalogCollectionsNeptune

DECLARE_INTERFACE_(IISCatalogCollectionsNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISCatalogCollectionsNeptune methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IISCatalogCollectionNeptune FAR* FAR* pIISCatalogCollectionsNeptune) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IISCatalogAttributeNeptune,0x392B9F05L,0x27BB,0x4C32,0xA1,0xFD,0xA6,0xB8,0x76,0xFB,0x95,0x1D);

/* Definition of interface: IISCatalogAttributeNeptune */
#undef INTERFACE
#define INTERFACE IISCatalogAttributeNeptune

DECLARE_INTERFACE_(IISCatalogAttributeNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISCatalogAttributeNeptune methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrPropName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrPropName) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pbstrValue) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(put_ValueEx)(THIS_ IComponent FAR* pComponent, BSTR bstrValue) PURE;
};

interface IISComPlusApplicationProteus;

DEFINE_GUID(IID_IISCatalogAttributeProteus,0x78953FE3L,0xED42,0x47BA,0x93,0x2A,0x46,0x08,0x74,0x36,0xE7,0x8B);

/* Definition of interface: IISCatalogAttributeProteus */
#undef INTERFACE
#define INTERFACE IISCatalogAttributeProteus

DECLARE_INTERFACE_(IISCatalogAttributeProteus, IISCatalogAttributeNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IISCatalogAttributeNeptune methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrPropName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrPropName) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pbstrValue) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(put_ValueEx)(THIS_ IComponent FAR* pComponent, BSTR bstrValue) PURE;
#endif

    /* IISCatalogAttributeProteus methods */
    STDMETHOD(get_ValueEx)(THIS_ IISComPlusApplicationProteus FAR* pComplusApp, BSTR FAR* pbstrValue) PURE;
    STDMETHOD(put_ValueEx)(THIS_ IISComPlusApplicationProteus FAR* pComplusApp, BSTR bstrValue) PURE;
};

DEFINE_GUID(IID_IISCatalogAttributesNeptune,0xC2B7CCFDL,0x0BD2,0x4487,0x8A,0x03,0x3B,0x87,0x8A,0xA9,0xF4,0xFE);

/* Definition of interface: IISCatalogAttributesNeptune */
#undef INTERFACE
#define INTERFACE IISCatalogAttributesNeptune

DECLARE_INTERFACE_(IISCatalogAttributesNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISCatalogAttributesNeptune methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IISCatalogAttributeNeptune FAR* FAR* pIISCatalogAttributeNeptune) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IISCatalogObjectNeptune,0x06B2F695L,0x0419,0x47D2,0xAF,0x78,0x95,0x82,0x48,0x00,0xEB,0x96);

/* Definition of interface: IISCatalogObjectNeptune */
#undef INTERFACE
#define INTERFACE IISCatalogObjectNeptune

DECLARE_INTERFACE_(IISCatalogObjectNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISCatalogObjectNeptune methods */
    STDMETHOD(get_Key)(THIS_ BSTR FAR* pbstrKey) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrKey) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_CatalogAttributes)(THIS_ IISCatalogAttributesNeptune FAR* FAR* pIISCatalogAttributesNeptune) PURE;
    STDMETHOD(get_CatalogCollections)(THIS_ IISCatalogCollectionsNeptune FAR* FAR* pIISCatalogCollectionsNeptune) PURE;
    STDMETHOD(AddChild)(THIS_ EnumCatalogObjectChild eocChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
};

interface IISComPlusApplicationDLLIndore;

DEFINE_GUID(IID_IISCatalogObjectIndore,0xA9B9D424L,0xCCB1,0x43F9,0xB6,0x5C,0x5C,0x66,0xB2,0xCD,0xA8,0xA1);

/* Definition of interface: IISCatalogObjectIndore */
#undef INTERFACE
#define INTERFACE IISCatalogObjectIndore

DECLARE_INTERFACE_(IISCatalogObjectIndore, IISCatalogObjectNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IISCatalogObjectNeptune methods */
    STDMETHOD(get_Key)(THIS_ BSTR FAR* pbstrKey) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrKey) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_CatalogAttributes)(THIS_ IISCatalogAttributesNeptune FAR* FAR* pIISCatalogAttributesNeptune) PURE;
    STDMETHOD(get_CatalogCollections)(THIS_ IISCatalogCollectionsNeptune FAR* FAR* pIISCatalogCollectionsNeptune) PURE;
    STDMETHOD(AddChild)(THIS_ EnumCatalogObjectChild eocChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
#endif

    /* IISCatalogObjectIndore methods */
    STDMETHOD(SaveComPlusApplicationDLL)(THIS_ BSTR bstrAppKey, BSTR bstrDLL, BSTR bstrCLSID, BSTR bstrProgId, IISComPlusApplicationDLLIndore FAR* FAR* ppComPlusAppDLL) PURE;
};

DEFINE_GUID(IID_IISCatalogObjectsNeptune,0x51C0E79DL,0xFE32,0x4BAF,0xB0,0xE6,0x25,0x28,0xCB,0x36,0xE2,0x3F);

/* Definition of interface: IISCatalogObjectsNeptune */
#undef INTERFACE
#define INTERFACE IISCatalogObjectsNeptune

DECLARE_INTERFACE_(IISCatalogObjectsNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISCatalogObjectsNeptune methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IISCatalogObjectNeptune FAR* FAR* pIISCatalogObjectNeptune) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IISComPlusApplicationNeptune,0xFD8137C1L,0xC459,0x4DCD,0xA1,0x41,0x66,0x1D,0x20,0x08,0x9D,0x18);

/* Definition of interface: IISComPlusApplicationNeptune */
#undef INTERFACE
#define INTERFACE IISComPlusApplicationNeptune

DECLARE_INTERFACE_(IISComPlusApplicationNeptune, IISCatalogObjectNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IISCatalogObjectNeptune methods */
    STDMETHOD(get_Key)(THIS_ BSTR FAR* pbstrKey) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrKey) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_CatalogAttributes)(THIS_ IISCatalogAttributesNeptune FAR* FAR* pIISCatalogAttributesNeptune) PURE;
    STDMETHOD(get_CatalogCollections)(THIS_ IISCatalogCollectionsNeptune FAR* FAR* pIISCatalogCollectionsNeptune) PURE;
    STDMETHOD(AddChild)(THIS_ EnumCatalogObjectChild eocChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
#endif

    /* IISComPlusApplicationNeptune methods */
    STDMETHOD(get_ComputerName)(THIS_ BSTR FAR* pbstrComputerName) PURE;
    STDMETHOD(put_ComputerName)(THIS_ BSTR bstrComputerName) PURE;
    STDMETHOD(get_Selected)(THIS_ VARIANT_BOOL FAR* pvbSelected) PURE;
    STDMETHOD(put_Selected)(THIS_ VARIANT_BOOL vbSelected) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_Component)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(get_RefreshAtBuild)(THIS_ VARIANT_BOOL FAR* pvbRefreshAtBuild) PURE;
    STDMETHOD(put_RefreshAtBuild)(THIS_ VARIANT_BOOL vbRefreshAtBuild) PURE;
};

interface IISComPlusEvents;

interface IISComPlusProxyProteus;

DEFINE_GUID(IID_IISComPlusApplicationProteus,0x4A3734B2L,0xB0F6,0x4BA8,0x91,0x3F,0x4C,0x0A,0x5B,0x4C,0x18,0x55);

/* Definition of interface: IISComPlusApplicationProteus */
#undef INTERFACE
#define INTERFACE IISComPlusApplicationProteus

DECLARE_INTERFACE_(IISComPlusApplicationProteus, IISComPlusApplicationNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IISCatalogObjectNeptune methods */
    STDMETHOD(get_Key)(THIS_ BSTR FAR* pbstrKey) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrKey) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_CatalogAttributes)(THIS_ IISCatalogAttributesNeptune FAR* FAR* pIISCatalogAttributesNeptune) PURE;
    STDMETHOD(get_CatalogCollections)(THIS_ IISCatalogCollectionsNeptune FAR* FAR* pIISCatalogCollectionsNeptune) PURE;
    STDMETHOD(AddChild)(THIS_ EnumCatalogObjectChild eocChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;

    /* IISComPlusApplicationNeptune methods */
    STDMETHOD(get_ComputerName)(THIS_ BSTR FAR* pbstrComputerName) PURE;
    STDMETHOD(put_ComputerName)(THIS_ BSTR bstrComputerName) PURE;
    STDMETHOD(get_Selected)(THIS_ VARIANT_BOOL FAR* pvbSelected) PURE;
    STDMETHOD(put_Selected)(THIS_ VARIANT_BOOL vbSelected) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_Component)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(get_RefreshAtBuild)(THIS_ VARIANT_BOOL FAR* pvbRefreshAtBuild) PURE;
    STDMETHOD(put_RefreshAtBuild)(THIS_ VARIANT_BOOL vbRefreshAtBuild) PURE;
#endif

    /* IISComPlusApplicationProteus methods */
    STDMETHOD(get_IsServer)(THIS_ VARIANT_BOOL FAR* pvbIsServer) PURE;
    STDMETHOD(put_IsServer)(THIS_ VARIANT_BOOL vbIsServer) PURE;
    STDMETHOD(get_IsProxy)(THIS_ VARIANT_BOOL FAR* pvbIsProxy) PURE;
    STDMETHOD(put_IsProxy)(THIS_ VARIANT_BOOL vbIsProxy) PURE;
    STDMETHOD(get_ISComPlusProxy)(THIS_ IISComPlusProxyProteus FAR* FAR* ppISComPlusProxy) PURE;
    STDMETHOD(AddServerDLLsToProject)(THIS) PURE;
    STDMETHOD(DeleteServerDLLsFromProject)(THIS) PURE;
    STDMETHOD(InsertToFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(RemoveFromFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(Advise)(THIS_ IISComPlusEvents FAR* pComPlusEvents) PURE;
    STDMETHOD(Unadvise)(THIS) PURE;
    STDMETHOD(get_InstallCondition)(THIS_ BSTR FAR* pbstrCondition) PURE;
    STDMETHOD(put_InstallCondition)(THIS_ BSTR bstrCondition) PURE;
    STDMETHOD(get_ComponentNamesForDLLs)(THIS_ IIsStrings2 FAR* FAR* ppCompNames) PURE;
    STDMETHOD(get_InstallUsersWithRoles)(THIS_ VARIANT_BOOL FAR* pvbInstallUsersWithRoles) PURE;
    STDMETHOD(put_InstallUsersWithRoles)(THIS_ VARIANT_BOOL vbInstallUsersWithRoles) PURE;
    STDMETHOD(get_DepFiles)(THIS_ BSTR FAR* pbstrDepFiles) PURE;
    STDMETHOD(put_DepFiles)(THIS_ BSTR bstrDepFiles) PURE;
};

DEFINE_GUID(IID_IISComPlusApplicationIndore,0xA71FBB8BL,0xA81B,0x4CF2,0x9C,0xF4,0x0C,0x66,0xE9,0x17,0x53,0x78);

/* Definition of interface: IISComPlusApplicationIndore */
#undef INTERFACE
#define INTERFACE IISComPlusApplicationIndore

DECLARE_INTERFACE_(IISComPlusApplicationIndore, IISComPlusApplicationProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IISCatalogObjectNeptune methods */
    STDMETHOD(get_Key)(THIS_ BSTR FAR* pbstrKey) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrKey) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_CatalogAttributes)(THIS_ IISCatalogAttributesNeptune FAR* FAR* pIISCatalogAttributesNeptune) PURE;
    STDMETHOD(get_CatalogCollections)(THIS_ IISCatalogCollectionsNeptune FAR* FAR* pIISCatalogCollectionsNeptune) PURE;
    STDMETHOD(AddChild)(THIS_ EnumCatalogObjectChild eocChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;

    /* IISComPlusApplicationNeptune methods */
    STDMETHOD(get_ComputerName)(THIS_ BSTR FAR* pbstrComputerName) PURE;
    STDMETHOD(put_ComputerName)(THIS_ BSTR bstrComputerName) PURE;
    STDMETHOD(get_Selected)(THIS_ VARIANT_BOOL FAR* pvbSelected) PURE;
    STDMETHOD(put_Selected)(THIS_ VARIANT_BOOL vbSelected) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_Component)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(get_RefreshAtBuild)(THIS_ VARIANT_BOOL FAR* pvbRefreshAtBuild) PURE;
    STDMETHOD(put_RefreshAtBuild)(THIS_ VARIANT_BOOL vbRefreshAtBuild) PURE;

    /* IISComPlusApplicationProteus methods */
    STDMETHOD(get_IsServer)(THIS_ VARIANT_BOOL FAR* pvbIsServer) PURE;
    STDMETHOD(put_IsServer)(THIS_ VARIANT_BOOL vbIsServer) PURE;
    STDMETHOD(get_IsProxy)(THIS_ VARIANT_BOOL FAR* pvbIsProxy) PURE;
    STDMETHOD(put_IsProxy)(THIS_ VARIANT_BOOL vbIsProxy) PURE;
    STDMETHOD(get_ISComPlusProxy)(THIS_ IISComPlusProxyProteus FAR* FAR* ppISComPlusProxy) PURE;
    STDMETHOD(AddServerDLLsToProject)(THIS) PURE;
    STDMETHOD(DeleteServerDLLsFromProject)(THIS) PURE;
    STDMETHOD(InsertToFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(RemoveFromFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(Advise)(THIS_ IISComPlusEvents FAR* pComPlusEvents) PURE;
    STDMETHOD(Unadvise)(THIS) PURE;
    STDMETHOD(get_InstallCondition)(THIS_ BSTR FAR* pbstrCondition) PURE;
    STDMETHOD(put_InstallCondition)(THIS_ BSTR bstrCondition) PURE;
    STDMETHOD(get_ComponentNamesForDLLs)(THIS_ IIsStrings2 FAR* FAR* ppCompNames) PURE;
    STDMETHOD(get_InstallUsersWithRoles)(THIS_ VARIANT_BOOL FAR* pvbInstallUsersWithRoles) PURE;
    STDMETHOD(put_InstallUsersWithRoles)(THIS_ VARIANT_BOOL vbInstallUsersWithRoles) PURE;
    STDMETHOD(get_DepFiles)(THIS_ BSTR FAR* pbstrDepFiles) PURE;
    STDMETHOD(put_DepFiles)(THIS_ BSTR bstrDepFiles) PURE;
#endif

    /* IISComPlusApplicationIndore methods */
    STDMETHOD(put_IsServerLight)(THIS_ VARIANT_BOOL vbIsServer) PURE;
    STDMETHOD(PrepareSaveAll)(THIS) PURE;
    STDMETHOD(FinalSaveAll)(THIS) PURE;
};

DEFINE_GUID(IID_IISComPlusApplicationIna,0xA633667BL,0xB4C5,0x4B65,0xB6,0xD0,0xE1,0x7E,0xC9,0x57,0x9B,0x66);

/* Definition of interface: IISComPlusApplicationIna */
#undef INTERFACE
#define INTERFACE IISComPlusApplicationIna

DECLARE_INTERFACE_(IISComPlusApplicationIna, IISComPlusApplicationIndore)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IISCatalogObjectNeptune methods */
    STDMETHOD(get_Key)(THIS_ BSTR FAR* pbstrKey) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrKey) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_CatalogAttributes)(THIS_ IISCatalogAttributesNeptune FAR* FAR* pIISCatalogAttributesNeptune) PURE;
    STDMETHOD(get_CatalogCollections)(THIS_ IISCatalogCollectionsNeptune FAR* FAR* pIISCatalogCollectionsNeptune) PURE;
    STDMETHOD(AddChild)(THIS_ EnumCatalogObjectChild eocChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;

    /* IISComPlusApplicationNeptune methods */
    STDMETHOD(get_ComputerName)(THIS_ BSTR FAR* pbstrComputerName) PURE;
    STDMETHOD(put_ComputerName)(THIS_ BSTR bstrComputerName) PURE;
    STDMETHOD(get_Selected)(THIS_ VARIANT_BOOL FAR* pvbSelected) PURE;
    STDMETHOD(put_Selected)(THIS_ VARIANT_BOOL vbSelected) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_Component)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(get_RefreshAtBuild)(THIS_ VARIANT_BOOL FAR* pvbRefreshAtBuild) PURE;
    STDMETHOD(put_RefreshAtBuild)(THIS_ VARIANT_BOOL vbRefreshAtBuild) PURE;

    /* IISComPlusApplicationProteus methods */
    STDMETHOD(get_IsServer)(THIS_ VARIANT_BOOL FAR* pvbIsServer) PURE;
    STDMETHOD(put_IsServer)(THIS_ VARIANT_BOOL vbIsServer) PURE;
    STDMETHOD(get_IsProxy)(THIS_ VARIANT_BOOL FAR* pvbIsProxy) PURE;
    STDMETHOD(put_IsProxy)(THIS_ VARIANT_BOOL vbIsProxy) PURE;
    STDMETHOD(get_ISComPlusProxy)(THIS_ IISComPlusProxyProteus FAR* FAR* ppISComPlusProxy) PURE;
    STDMETHOD(AddServerDLLsToProject)(THIS) PURE;
    STDMETHOD(DeleteServerDLLsFromProject)(THIS) PURE;
    STDMETHOD(InsertToFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(RemoveFromFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(Advise)(THIS_ IISComPlusEvents FAR* pComPlusEvents) PURE;
    STDMETHOD(Unadvise)(THIS) PURE;
    STDMETHOD(get_InstallCondition)(THIS_ BSTR FAR* pbstrCondition) PURE;
    STDMETHOD(put_InstallCondition)(THIS_ BSTR bstrCondition) PURE;
    STDMETHOD(get_ComponentNamesForDLLs)(THIS_ IIsStrings2 FAR* FAR* ppCompNames) PURE;
    STDMETHOD(get_InstallUsersWithRoles)(THIS_ VARIANT_BOOL FAR* pvbInstallUsersWithRoles) PURE;
    STDMETHOD(put_InstallUsersWithRoles)(THIS_ VARIANT_BOOL vbInstallUsersWithRoles) PURE;
    STDMETHOD(get_DepFiles)(THIS_ BSTR FAR* pbstrDepFiles) PURE;
    STDMETHOD(put_DepFiles)(THIS_ BSTR bstrDepFiles) PURE;

    /* IISComPlusApplicationIndore methods */
    STDMETHOD(put_IsServerLight)(THIS_ VARIANT_BOOL vbIsServer) PURE;
    STDMETHOD(PrepareSaveAll)(THIS) PURE;
    STDMETHOD(FinalSaveAll)(THIS) PURE;
#endif

    /* IISComPlusApplicationIna methods */
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_AppId)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_AppId)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_IISComPlusApplicationQi,0x7518DA5DL,0x34B8,0x4642,0x93,0x6C,0x3C,0x59,0xD4,0x35,0xDA,0xD5);

/* Definition of interface: IISComPlusApplicationQi */
#undef INTERFACE
#define INTERFACE IISComPlusApplicationQi

DECLARE_INTERFACE_(IISComPlusApplicationQi, IISComPlusApplicationIna)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IISCatalogObjectNeptune methods */
    STDMETHOD(get_Key)(THIS_ BSTR FAR* pbstrKey) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrKey) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_CatalogAttributes)(THIS_ IISCatalogAttributesNeptune FAR* FAR* pIISCatalogAttributesNeptune) PURE;
    STDMETHOD(get_CatalogCollections)(THIS_ IISCatalogCollectionsNeptune FAR* FAR* pIISCatalogCollectionsNeptune) PURE;
    STDMETHOD(AddChild)(THIS_ EnumCatalogObjectChild eocChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;

    /* IISComPlusApplicationNeptune methods */
    STDMETHOD(get_ComputerName)(THIS_ BSTR FAR* pbstrComputerName) PURE;
    STDMETHOD(put_ComputerName)(THIS_ BSTR bstrComputerName) PURE;
    STDMETHOD(get_Selected)(THIS_ VARIANT_BOOL FAR* pvbSelected) PURE;
    STDMETHOD(put_Selected)(THIS_ VARIANT_BOOL vbSelected) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_Component)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(get_RefreshAtBuild)(THIS_ VARIANT_BOOL FAR* pvbRefreshAtBuild) PURE;
    STDMETHOD(put_RefreshAtBuild)(THIS_ VARIANT_BOOL vbRefreshAtBuild) PURE;

    /* IISComPlusApplicationProteus methods */
    STDMETHOD(get_IsServer)(THIS_ VARIANT_BOOL FAR* pvbIsServer) PURE;
    STDMETHOD(put_IsServer)(THIS_ VARIANT_BOOL vbIsServer) PURE;
    STDMETHOD(get_IsProxy)(THIS_ VARIANT_BOOL FAR* pvbIsProxy) PURE;
    STDMETHOD(put_IsProxy)(THIS_ VARIANT_BOOL vbIsProxy) PURE;
    STDMETHOD(get_ISComPlusProxy)(THIS_ IISComPlusProxyProteus FAR* FAR* ppISComPlusProxy) PURE;
    STDMETHOD(AddServerDLLsToProject)(THIS) PURE;
    STDMETHOD(DeleteServerDLLsFromProject)(THIS) PURE;
    STDMETHOD(InsertToFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(RemoveFromFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(Advise)(THIS_ IISComPlusEvents FAR* pComPlusEvents) PURE;
    STDMETHOD(Unadvise)(THIS) PURE;
    STDMETHOD(get_InstallCondition)(THIS_ BSTR FAR* pbstrCondition) PURE;
    STDMETHOD(put_InstallCondition)(THIS_ BSTR bstrCondition) PURE;
    STDMETHOD(get_ComponentNamesForDLLs)(THIS_ IIsStrings2 FAR* FAR* ppCompNames) PURE;
    STDMETHOD(get_InstallUsersWithRoles)(THIS_ VARIANT_BOOL FAR* pvbInstallUsersWithRoles) PURE;
    STDMETHOD(put_InstallUsersWithRoles)(THIS_ VARIANT_BOOL vbInstallUsersWithRoles) PURE;
    STDMETHOD(get_DepFiles)(THIS_ BSTR FAR* pbstrDepFiles) PURE;
    STDMETHOD(put_DepFiles)(THIS_ BSTR bstrDepFiles) PURE;

    /* IISComPlusApplicationIndore methods */
    STDMETHOD(put_IsServerLight)(THIS_ VARIANT_BOOL vbIsServer) PURE;
    STDMETHOD(PrepareSaveAll)(THIS) PURE;
    STDMETHOD(FinalSaveAll)(THIS) PURE;

    /* IISComPlusApplicationIna methods */
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_AppId)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_AppId)(THIS_ BSTR bstrVal) PURE;
#endif

    /* IISComPlusApplicationQi methods */
    STDMETHOD(get_InstallFinalize)(THIS_ VARIANT_BOOL FAR* vbInstallFinalize) PURE;
    STDMETHOD(put_InstallFinalize)(THIS_ VARIANT_BOOL vbInstallFinalize) PURE;
};

DEFINE_GUID(IID_IISComPlusApplicationsNeptune,0x8EFF68B3L,0x1798,0x489B,0xB8,0xDC,0x48,0x74,0x9E,0x5D,0x6A,0xE0);

/* Definition of interface: IISComPlusApplicationsNeptune */
#undef INTERFACE
#define INTERFACE IISComPlusApplicationsNeptune

DECLARE_INTERFACE_(IISComPlusApplicationsNeptune, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISComPlusApplicationsNeptune methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IISComPlusApplicationNeptune FAR* FAR* pIISComPlusApplicationNeptune) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IISComPlusProxyProteus,0x5814E57BL,0xAC12,0x4A88,0xBC,0x14,0xFE,0xFF,0x31,0x6C,0x0B,0x82);

/* Definition of interface: IISComPlusProxyProteus */
#undef INTERFACE
#define INTERFACE IISComPlusProxyProteus

DECLARE_INTERFACE_(IISComPlusProxyProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISComPlusProxyProteus methods */
    STDMETHOD(get_RemoteServerName)(THIS_ BSTR FAR* pbstrRemoteServerName) PURE;
    STDMETHOD(put_RemoteServerName)(THIS_ BSTR bstrRemoteServerName) PURE;
    STDMETHOD(get_EnableDCOM)(THIS_ VARIANT_BOOL FAR* pvbSelected) PURE;
    STDMETHOD(put_EnableDCOM)(THIS_ VARIANT_BOOL vbSelected) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_Component)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(AddServerDLLsToProject)(THIS) PURE;
    STDMETHOD(DeleteServerDLLsFromProject)(THIS) PURE;
    STDMETHOD(InsertToFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(RemoveFromFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(get_InstallCondition)(THIS_ BSTR FAR* pbstrCondition) PURE;
    STDMETHOD(put_InstallCondition)(THIS_ BSTR bstrCondition) PURE;
    STDMETHOD(get_DepFiles)(THIS_ BSTR FAR* pbstrDepFiles) PURE;
    STDMETHOD(put_DepFiles)(THIS_ BSTR bstrDepFiles) PURE;
};

DEFINE_GUID(IID_IISComPlusProxyIna,0xE6E259DBL,0xB04C,0x4393,0xBE,0xDB,0xC8,0xD2,0xE8,0x48,0x2E,0x5F);

/* Definition of interface: IISComPlusProxyIna */
#undef INTERFACE
#define INTERFACE IISComPlusProxyIna

DECLARE_INTERFACE_(IISComPlusProxyIna, IISComPlusProxyProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IISComPlusProxyProteus methods */
    STDMETHOD(get_RemoteServerName)(THIS_ BSTR FAR* pbstrRemoteServerName) PURE;
    STDMETHOD(put_RemoteServerName)(THIS_ BSTR bstrRemoteServerName) PURE;
    STDMETHOD(get_EnableDCOM)(THIS_ VARIANT_BOOL FAR* pvbSelected) PURE;
    STDMETHOD(put_EnableDCOM)(THIS_ VARIANT_BOOL vbSelected) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_ComponentName)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Component)(THIS_ IComponent FAR* FAR* ppComp) PURE;
    STDMETHOD(put_Component)(THIS_ IComponent FAR* pComp) PURE;
    STDMETHOD(AddServerDLLsToProject)(THIS) PURE;
    STDMETHOD(DeleteServerDLLsFromProject)(THIS) PURE;
    STDMETHOD(InsertToFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(RemoveFromFeature)(THIS_ IFeature FAR* pFeature) PURE;
    STDMETHOD(get_InstallCondition)(THIS_ BSTR FAR* pbstrCondition) PURE;
    STDMETHOD(put_InstallCondition)(THIS_ BSTR bstrCondition) PURE;
    STDMETHOD(get_DepFiles)(THIS_ BSTR FAR* pbstrDepFiles) PURE;
    STDMETHOD(put_DepFiles)(THIS_ BSTR bstrDepFiles) PURE;
#endif

    /* IISComPlusProxyIna methods */
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_IISComPlusProxiesProteus,0x058E9FB1L,0x58A2,0x45A9,0xAD,0x6C,0x02,0x41,0x77,0x43,0x5E,0xA7);

/* Definition of interface: IISComPlusProxiesProteus */
#undef INTERFACE
#define INTERFACE IISComPlusProxiesProteus

DECLARE_INTERFACE_(IISComPlusProxiesProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISComPlusProxiesProteus methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IISComPlusProxyProteus FAR* FAR* ppIISComPlusProxyProteus) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

interface IISComPlusFileIndore;

DEFINE_GUID(IID_IISComPlusApplicationDLLIndore,0xE8FA5853L,0x9431,0x4AC9,0x84,0xF5,0x0C,0x2B,0x14,0x77,0xCD,0x56);

/* Definition of interface: IISComPlusApplicationDLLIndore */
#undef INTERFACE
#define INTERFACE IISComPlusApplicationDLLIndore

DECLARE_INTERFACE_(IISComPlusApplicationDLLIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISComPlusApplicationDLLIndore methods */
    STDMETHOD(get_CLSID)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_CLSID)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ProgId)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProgId)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DLL)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_DLL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_AlterDLL)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_AlterDLL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ComPlusFile)(THIS_ EnumComPlusAppDLLChild ecpadhild, IISComPlusFileIndore FAR* FAR* ppISComPlusFile) PURE;
    STDMETHOD(AddChild)(THIS_ EnumComPlusAppDLLChild ecpadhild, BSTR bstrName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(SaveFileKey)(THIS_ EnumComPlusAppDLLChild ecpadhild, BSTR strFileKey, IISComPlusFileIndore FAR* FAR* ppVal) PURE;
    STDMETHOD(ImportComPlusFile)(THIS_ IISComPlusApplicationIndore FAR* pComplusApp) PURE;
};

DEFINE_GUID(IID_IISComPlusApplicationDLLsIndore,0x283A8381L,0x60E0,0x45A8,0xB2,0x02,0xED,0xC6,0x03,0xAF,0x86,0x82);

/* Definition of interface: IISComPlusApplicationDLLsIndore */
#undef INTERFACE
#define INTERFACE IISComPlusApplicationDLLsIndore

DECLARE_INTERFACE_(IISComPlusApplicationDLLsIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISComPlusApplicationDLLsIndore methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IISComPlusApplicationDLLIndore FAR* FAR* ppISComPlusApplicationDLL) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IISComPlusFileIndore,0x3C75195EL,0x0B29,0x4C6A,0x8C,0x46,0x16,0x81,0x70,0x48,0x40,0x02);

/* Definition of interface: IISComPlusFileIndore */
#undef INTERFACE
#define INTERFACE IISComPlusFileIndore

DECLARE_INTERFACE_(IISComPlusFileIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISComPlusFileIndore methods */
    STDMETHOD(get_File)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_File)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_IISComPlusFilesIndore,0xDFED0427L,0xF19B,0x45C1,0xA9,0xE3,0x55,0x02,0x94,0x9C,0x52,0xFA);

/* Definition of interface: IISComPlusFilesIndore */
#undef INTERFACE
#define INTERFACE IISComPlusFilesIndore

DECLARE_INTERFACE_(IISComPlusFilesIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISComPlusFilesIndore methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IISComPlusFileIndore FAR* FAR* ppComPlusFile) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

interface ILightComCatalogObjectNeptuneSP;

DEFINE_GUID(IID_ILightComCatalogCollectionEntryNeptuneSP,0x4F75EC22L,0x481B,0x458C,0x89,0x53,0xCD,0xDC,0xDB,0xC9,0x4F,0x64);

/* Definition of interface: ILightComCatalogCollectionEntryNeptuneSP */
#undef INTERFACE
#define INTERFACE ILightComCatalogCollectionEntryNeptuneSP

DECLARE_INTERFACE_(ILightComCatalogCollectionEntryNeptuneSP, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComCatalogCollectionEntryNeptuneSP methods */
    STDMETHOD(put_ISComCatalogCollection)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComCatalogCollection)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISComCatalogObject)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComCatalogObject)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_CollectionName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_CollectionName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LightComCatalogObject)(THIS_ ILightComCatalogObjectNeptuneSP FAR* FAR* ppLightComCatalogObject) PURE;
    STDMETHOD(Save)(THIS) PURE;
};

DEFINE_GUID(IID_ILightComCatalogCollectionNeptuneSP,0xF02372D7L,0x0244,0x4BA5,0x8C,0x98,0xE5,0xCB,0xDC,0xD5,0xB3,0xDB);

/* Definition of interface: ILightComCatalogCollectionNeptuneSP */
#undef INTERFACE
#define INTERFACE ILightComCatalogCollectionNeptuneSP

DECLARE_INTERFACE_(ILightComCatalogCollectionNeptuneSP, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComCatalogCollectionNeptuneSP methods */
    STDMETHOD(NewEntry)(THIS_ ILightComCatalogCollectionEntryNeptuneSP FAR* FAR* ppLightComCatalogCollectionEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightComCatalogCollectionEntryNeptuneSP FAR* FAR* ppLightComCatalogCollectionEntry) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ILightComCatalogCollectionIndore,0x9BEA5A19L,0xA90D,0x47AF,0x91,0xEB,0x37,0xF4,0x68,0x3D,0x5F,0x68);

/* Definition of interface: ILightComCatalogCollectionIndore */
#undef INTERFACE
#define INTERFACE ILightComCatalogCollectionIndore

DECLARE_INTERFACE_(ILightComCatalogCollectionIndore, ILightComCatalogCollectionNeptuneSP)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILightComCatalogCollectionNeptuneSP methods */
    STDMETHOD(NewEntry)(THIS_ ILightComCatalogCollectionEntryNeptuneSP FAR* FAR* ppLightComCatalogCollectionEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightComCatalogCollectionEntryNeptuneSP FAR* FAR* ppLightComCatalogCollectionEntry) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
#endif

    /* ILightComCatalogCollectionIndore methods */
    STDMETHOD(NewEntryEx)(THIS_ BSTR bstrKey, BSTR bstrName, ILightComCatalogCollectionEntryNeptuneSP FAR* FAR* ppLightComCatalogCollectionEntry) PURE;
};

DEFINE_GUID(IID_ILightComCatalogAttributeEntryNeptuneSP,0xB07A6139L,0x8D9E,0x4213,0xAB,0xBB,0x1C,0x10,0x83,0x1C,0x4D,0x9E);

/* Definition of interface: ILightComCatalogAttributeEntryNeptuneSP */
#undef INTERFACE
#define INTERFACE ILightComCatalogAttributeEntryNeptuneSP

DECLARE_INTERFACE_(ILightComCatalogAttributeEntryNeptuneSP, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComCatalogAttributeEntryNeptuneSP methods */
    STDMETHOD(put_ISComCatalogObject)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComCatalogObject)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ItemName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ItemName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ItemValue)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ItemValue)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(Save)(THIS) PURE;
};

DEFINE_GUID(IID_ILightComCatalogAttributeNeptuneSP,0xA8E6F501L,0x9DE2,0x4188,0x93,0x6C,0x44,0x19,0x02,0x73,0x36,0x23);

/* Definition of interface: ILightComCatalogAttributeNeptuneSP */
#undef INTERFACE
#define INTERFACE ILightComCatalogAttributeNeptuneSP

DECLARE_INTERFACE_(ILightComCatalogAttributeNeptuneSP, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComCatalogAttributeNeptuneSP methods */
    STDMETHOD(NewEntry)(THIS_ ILightComCatalogAttributeEntryNeptuneSP FAR* FAR* pLightComCatalogAttributeEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightComCatalogAttributeEntryNeptuneSP FAR* FAR* ppLightComCatalogAttributeEntry) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ILightComCatalogObjectEntryNeptuneSP,0x3E281D2BL,0xC874,0x432F,0xBB,0x2A,0xAF,0xD7,0xFD,0xC1,0xEA,0xF0);

/* Definition of interface: ILightComCatalogObjectEntryNeptuneSP */
#undef INTERFACE
#define INTERFACE ILightComCatalogObjectEntryNeptuneSP

DECLARE_INTERFACE_(ILightComCatalogObjectEntryNeptuneSP, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComCatalogObjectEntryNeptuneSP methods */
    STDMETHOD(put_ISComCatalogObject)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComCatalogObject)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LightComCatalogCollection)(THIS_ ILightComCatalogCollectionNeptuneSP FAR* FAR* ppLightComCatalogCollection) PURE;
    STDMETHOD(get_LightComCatalogAttribute)(THIS_ ILightComCatalogAttributeNeptuneSP FAR* FAR* ppLightComCatalogAttribute) PURE;
    STDMETHOD(Save)(THIS) PURE;
};

interface ILightComPlusApplicationDLLIndore;

DEFINE_GUID(IID_ILightComCatalogObjectEntryIndore,0xBBDF10F1L,0xAC64,0x40B7,0xA2,0x3F,0xD6,0x9E,0x9D,0x78,0xFD,0xCA);

/* Definition of interface: ILightComCatalogObjectEntryIndore */
#undef INTERFACE
#define INTERFACE ILightComCatalogObjectEntryIndore

DECLARE_INTERFACE_(ILightComCatalogObjectEntryIndore, ILightComCatalogObjectEntryNeptuneSP)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILightComCatalogObjectEntryNeptuneSP methods */
    STDMETHOD(put_ISComCatalogObject)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComCatalogObject)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LightComCatalogCollection)(THIS_ ILightComCatalogCollectionNeptuneSP FAR* FAR* ppLightComCatalogCollection) PURE;
    STDMETHOD(get_LightComCatalogAttribute)(THIS_ ILightComCatalogAttributeNeptuneSP FAR* FAR* ppLightComCatalogAttribute) PURE;
    STDMETHOD(Save)(THIS) PURE;
#endif

    /* ILightComCatalogObjectEntryIndore methods */
    STDMETHOD(get_LightComPlusApplicationDLL)(THIS_ ILightComPlusApplicationDLLIndore FAR* FAR* ppLightComPlusApplicationDLL) PURE;
};

DEFINE_GUID(IID_ILightComCatalogObjectNeptuneSP,0x048EA707L,0xE47B,0x4103,0xB5,0xB4,0xE6,0x4A,0x30,0x29,0xCE,0x03);

/* Definition of interface: ILightComCatalogObjectNeptuneSP */
#undef INTERFACE
#define INTERFACE ILightComCatalogObjectNeptuneSP

DECLARE_INTERFACE_(ILightComCatalogObjectNeptuneSP, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComCatalogObjectNeptuneSP methods */
    STDMETHOD(NewEntry)(THIS_ ILightComCatalogObjectEntryNeptuneSP FAR* FAR* ppLightComCatalogObjectEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightComCatalogObjectEntryNeptuneSP FAR* FAR* ppLightComCatalogObjectEntry) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ILightComCatalogObjectIndore,0xE07E41E6L,0xE872,0x4D24,0xB0,0xBF,0xBB,0x1D,0xD8,0x8E,0x7D,0xA7);

/* Definition of interface: ILightComCatalogObjectIndore */
#undef INTERFACE
#define INTERFACE ILightComCatalogObjectIndore

DECLARE_INTERFACE_(ILightComCatalogObjectIndore, ILightComCatalogObjectNeptuneSP)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILightComCatalogObjectNeptuneSP methods */
    STDMETHOD(NewEntry)(THIS_ ILightComCatalogObjectEntryNeptuneSP FAR* FAR* ppLightComCatalogObjectEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightComCatalogObjectEntryNeptuneSP FAR* FAR* ppLightComCatalogObjectEntry) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
#endif

    /* ILightComCatalogObjectIndore methods */
    STDMETHOD(NewEntryEx)(THIS_ BSTR bstrKey, BSTR bstrName, ILightComCatalogObjectEntryNeptuneSP FAR* FAR* ppLightComCatalogObjectEntry) PURE;
};

DEFINE_GUID(IID_ILightComPlusApplicationEntryNeptuneSP,0xBF5E0A47L,0x1739,0x433B,0xA5,0x67,0x8C,0xFB,0x8E,0x9B,0xA7,0xF0);

/* Definition of interface: ILightComPlusApplicationEntryNeptuneSP */
#undef INTERFACE
#define INTERFACE ILightComPlusApplicationEntryNeptuneSP

DECLARE_INTERFACE_(ILightComPlusApplicationEntryNeptuneSP, ILightComCatalogObjectEntryNeptuneSP)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILightComCatalogObjectEntryNeptuneSP methods */
    STDMETHOD(put_ISComCatalogObject)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComCatalogObject)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LightComCatalogCollection)(THIS_ ILightComCatalogCollectionNeptuneSP FAR* FAR* ppLightComCatalogCollection) PURE;
    STDMETHOD(get_LightComCatalogAttribute)(THIS_ ILightComCatalogAttributeNeptuneSP FAR* FAR* ppLightComCatalogAttribute) PURE;
    STDMETHOD(Save)(THIS) PURE;
#endif

    /* ILightComPlusApplicationEntryNeptuneSP methods */
    STDMETHOD(put_Component)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ComputerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ComputerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(get_IsmAutoComPlusApplication)(THIS_ IISComPlusApplicationNeptune FAR* FAR* ppIsmAutoComPlusApplication) PURE;
};

DEFINE_GUID(IID_ILightComPlusApplicationEntryIndore,0xE901B484L,0x917D,0x40EB,0xA9,0x0C,0x8D,0x8B,0x3F,0xB6,0xAA,0x3C);

/* Definition of interface: ILightComPlusApplicationEntryIndore */
#undef INTERFACE
#define INTERFACE ILightComPlusApplicationEntryIndore

DECLARE_INTERFACE_(ILightComPlusApplicationEntryIndore, ILightComPlusApplicationEntryNeptuneSP)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILightComCatalogObjectEntryNeptuneSP methods */
    STDMETHOD(put_ISComCatalogObject)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComCatalogObject)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LightComCatalogCollection)(THIS_ ILightComCatalogCollectionNeptuneSP FAR* FAR* ppLightComCatalogCollection) PURE;
    STDMETHOD(get_LightComCatalogAttribute)(THIS_ ILightComCatalogAttributeNeptuneSP FAR* FAR* ppLightComCatalogAttribute) PURE;
    STDMETHOD(Save)(THIS) PURE;

    /* ILightComPlusApplicationEntryNeptuneSP methods */
    STDMETHOD(put_Component)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ComputerName)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ComputerName)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long lVal) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(get_IsmAutoComPlusApplication)(THIS_ IISComPlusApplicationNeptune FAR* FAR* ppIsmAutoComPlusApplication) PURE;
#endif

    /* ILightComPlusApplicationEntryIndore methods */
    STDMETHOD(ImportTypeLibs)(THIS) PURE;
};

DEFINE_GUID(IID_ILightComPlusApplicationNeptuneSP,0x4CB70EF2L,0xD7A8,0x4EE6,0xBA,0x72,0x7E,0x74,0xBF,0x46,0x0B,0xCE);

/* Definition of interface: ILightComPlusApplicationNeptuneSP */
#undef INTERFACE
#define INTERFACE ILightComPlusApplicationNeptuneSP

DECLARE_INTERFACE_(ILightComPlusApplicationNeptuneSP, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComPlusApplicationNeptuneSP methods */
    STDMETHOD(OpenSession)(THIS) PURE;
    STDMETHOD(CloseSession)(THIS) PURE;
    STDMETHOD(NewEntry)(THIS_ ILightComPlusApplicationEntryNeptuneSP FAR* FAR* pLightComPlusApplicationEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightComPlusApplicationEntryNeptuneSP FAR* FAR* ppLightComPlusApplicationEntry) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ILightComPlusApplicationIndore,0xB5FE776AL,0x58E6,0x4622,0x8E,0xAE,0x01,0x5C,0x5A,0x96,0x5C,0x8B);

/* Definition of interface: ILightComPlusApplicationIndore */
#undef INTERFACE
#define INTERFACE ILightComPlusApplicationIndore

DECLARE_INTERFACE_(ILightComPlusApplicationIndore, ILightComPlusApplicationNeptuneSP)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ILightComPlusApplicationNeptuneSP methods */
    STDMETHOD(OpenSession)(THIS) PURE;
    STDMETHOD(CloseSession)(THIS) PURE;
    STDMETHOD(NewEntry)(THIS_ ILightComPlusApplicationEntryNeptuneSP FAR* FAR* pLightComPlusApplicationEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightComPlusApplicationEntryNeptuneSP FAR* FAR* ppLightComPlusApplicationEntry) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
#endif

    /* ILightComPlusApplicationIndore methods */
    STDMETHOD(NewEntryEx)(THIS_ BSTR bstrKey, BSTR bstrName, ILightComPlusApplicationEntryNeptuneSP FAR* FAR* pLightComPlusApplicationEntry) PURE;
    STDMETHOD(put_UseOldUniqueKeyMethod)(THIS_ VARIANT_BOOL vbUseOldMethod) PURE;
    STDMETHOD(get_UseOldUniqueKeyMethod)(THIS_ VARIANT_BOOL FAR* pvbUseOldMethod) PURE;
};

DEFINE_GUID(IID_ILightComPlusServerFileEntryIndore,0xD05F8868L,0x494B,0x4F53,0xA0,0xD4,0xCD,0x3A,0xA3,0xF4,0x01,0x48);

/* Definition of interface: ILightComPlusServerFileEntryIndore */
#undef INTERFACE
#define INTERFACE ILightComPlusServerFileEntryIndore

DECLARE_INTERFACE_(ILightComPlusServerFileEntryIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComPlusServerFileEntryIndore methods */
    STDMETHOD(put_File)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISComPlusApplicationDLL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComPlusApplicationDLL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(Save)(THIS) PURE;
};

DEFINE_GUID(IID_ILightComPlusServerFileIndore,0x0B8E509EL,0x9B22,0x440B,0x98,0x5E,0x7B,0x4A,0x0E,0x9C,0x3F,0x1F);

/* Definition of interface: ILightComPlusServerFileIndore */
#undef INTERFACE
#define INTERFACE ILightComPlusServerFileIndore

DECLARE_INTERFACE_(ILightComPlusServerFileIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComPlusServerFileIndore methods */
    STDMETHOD(NewEntry)(THIS_ ILightComPlusServerFileEntryIndore FAR* FAR* ppLightComPlusServerFileEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightComPlusServerFileEntryIndore FAR* FAR* ppLightComPlusServerFileEntry) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ILightComPlusProxyFileEntryIndore,0xFCDC2D0CL,0x96A8,0x4743,0x96,0x45,0xAB,0x9F,0x40,0x81,0x0C,0xB2);

/* Definition of interface: ILightComPlusProxyFileEntryIndore */
#undef INTERFACE
#define INTERFACE ILightComPlusProxyFileEntryIndore

DECLARE_INTERFACE_(ILightComPlusProxyFileEntryIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComPlusProxyFileEntryIndore methods */
    STDMETHOD(put_File)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISComPlusApplicationDLL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComPlusApplicationDLL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(Save)(THIS) PURE;
};

DEFINE_GUID(IID_ILightComPlusProxyFileIndore,0x5D4CD2CDL,0xEDE6,0x41C8,0x9D,0xCC,0x72,0x6D,0x97,0x3B,0xC2,0xEA);

/* Definition of interface: ILightComPlusProxyFileIndore */
#undef INTERFACE
#define INTERFACE ILightComPlusProxyFileIndore

DECLARE_INTERFACE_(ILightComPlusProxyFileIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComPlusProxyFileIndore methods */
    STDMETHOD(NewEntry)(THIS_ ILightComPlusProxyFileEntryIndore FAR* FAR* ppLightComPlusProxyFileEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightComPlusProxyFileEntryIndore FAR* FAR* ppLightComPlusProxyFileEntry) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ILightComPlusApplicationDLLEntryIndore,0x6B36F394L,0xFFAA,0x44F8,0x96,0xCC,0x63,0x81,0xA8,0xDF,0x60,0xFA);

/* Definition of interface: ILightComPlusApplicationDLLEntryIndore */
#undef INTERFACE
#define INTERFACE ILightComPlusApplicationDLLEntryIndore

DECLARE_INTERFACE_(ILightComPlusApplicationDLLEntryIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComPlusApplicationDLLEntryIndore methods */
    STDMETHOD(put_ISComPlusApplicationDLL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComPlusApplicationDLL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISComPlusApplication)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComPlusApplication)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISComCatalogObject)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComCatalogObject)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_CLSID)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_CLSID)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ProgId)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ProgId)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_DLL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_DLL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_AlterDLL)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_AlterDLL)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(get_LightComPlusServerFile)(THIS_ ILightComPlusServerFileIndore FAR* FAR* ppLightComPlusServerFile) PURE;
    STDMETHOD(get_LightComPlusProxyFile)(THIS_ ILightComPlusProxyFileIndore FAR* FAR* ppLightComPlusProxyFile) PURE;
    STDMETHOD(Save)(THIS) PURE;
    STDMETHOD(ImportComPlusFile)(THIS) PURE;
};

DEFINE_GUID(IID_ILightComPlusApplicationDLLIndore,0xCDD27CDDL,0x574B,0x40B4,0x89,0x8B,0x4C,0xF7,0x83,0xBE,0xB5,0x97);

/* Definition of interface: ILightComPlusApplicationDLLIndore */
#undef INTERFACE
#define INTERFACE ILightComPlusApplicationDLLIndore

DECLARE_INTERFACE_(ILightComPlusApplicationDLLIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComPlusApplicationDLLIndore methods */
    STDMETHOD(NewEntry)(THIS_ BSTR bstrCLSID, BSTR bstrProgId, BSTR bstrDLL, ILightComPlusApplicationDLLEntryIndore FAR* FAR* ppLightComPlusApplicationDLLEntry) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightComPlusApplicationDLLEntryIndore FAR* FAR* ppLightComPlusApplicationDLLEntry) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ILightComPlusServerDepFileEntryIndore,0x9DEE5643L,0xBF40,0x4C8B,0x81,0x36,0x88,0xE5,0x5E,0x8F,0xE0,0xFF);

/* Definition of interface: ILightComPlusServerDepFileEntryIndore */
#undef INTERFACE
#define INTERFACE ILightComPlusServerDepFileEntryIndore

DECLARE_INTERFACE_(ILightComPlusServerDepFileEntryIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComPlusServerDepFileEntryIndore methods */
    STDMETHOD(put_ISComPlusApplication)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComPlusApplication)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_File)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(Save)(THIS) PURE;
};

DEFINE_GUID(IID_ILightComPlusServerDepFileIndore,0xE8C3A424L,0x3F56,0x4B63,0x86,0xC1,0xF5,0xEF,0xFE,0x91,0x90,0x9D);

/* Definition of interface: ILightComPlusServerDepFileIndore */
#undef INTERFACE
#define INTERFACE ILightComPlusServerDepFileIndore

DECLARE_INTERFACE_(ILightComPlusServerDepFileIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComPlusServerDepFileIndore methods */
    STDMETHOD(NewEntry)(THIS_ ILightComPlusServerDepFileEntryIndore FAR* FAR* ppVal) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightComPlusServerDepFileEntryIndore FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ILightComPlusProxyDepFileEntryIndore,0xF356B98AL,0x2AE3,0x404D,0xB9,0x04,0x63,0x95,0x91,0x81,0x88,0xB2);

/* Definition of interface: ILightComPlusProxyDepFileEntryIndore */
#undef INTERFACE
#define INTERFACE ILightComPlusProxyDepFileEntryIndore

DECLARE_INTERFACE_(ILightComPlusProxyDepFileEntryIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComPlusProxyDepFileEntryIndore methods */
    STDMETHOD(put_ISComPlusApplication)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISComPlusApplication)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_File)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISPath)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISPath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(Save)(THIS) PURE;
};

DEFINE_GUID(IID_ILightComPlusProxyDepFileIndore,0x31716388L,0x6FCB,0x49CC,0xA3,0xD6,0xCC,0xC9,0x59,0x4C,0x37,0xDC);

/* Definition of interface: ILightComPlusProxyDepFileIndore */
#undef INTERFACE
#define INTERFACE ILightComPlusProxyDepFileIndore

DECLARE_INTERFACE_(ILightComPlusProxyDepFileIndore, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ILightComPlusProxyDepFileIndore methods */
    STDMETHOD(NewEntry)(THIS_ ILightComPlusProxyDepFileEntryIndore FAR* FAR* ppVal) PURE;
    STDMETHOD(PrepareEnumerator)(THIS) PURE;
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ILightComPlusProxyDepFileEntryIndore FAR* FAR* ppVal) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumSearchReplaceAction {
    esraReplace = 0,
    esraPrefixToFile = 1,
    esraAppendToFile = 2,
    esraPrefixToText = 3,
    esraAppendToText = 4
} EnumSearchReplaceAction;

typedef enum EnumSearchReplaceSetChild {
    esrcReplacement
} EnumSearchReplaceSetChild;

DEFINE_GUID(IID_ISearchReplace,0x3FD84852L,0xAAB3,0x4CD6,0x95,0xF7,0xD5,0x1B,0xD9,0x94,0xA1,0x33);

/* Definition of interface: ISearchReplace */
#undef INTERFACE
#define INTERFACE ISearchReplace

DECLARE_INTERFACE_(ISearchReplace, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISearchReplace methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_SearchReplaceSet)(THIS_ BSTR FAR* bstrSearchReplaceSet) PURE;
    STDMETHOD(put_SearchReplaceSet)(THIS_ BSTR bstrSearchReplaceSet) PURE;
    STDMETHOD(get_Search)(THIS_ BSTR FAR* bstrSearch) PURE;
    STDMETHOD(put_Search)(THIS_ BSTR bstrSearch) PURE;
    STDMETHOD(get_Replace)(THIS_ BSTR FAR* bstrReplace) PURE;
    STDMETHOD(put_Replace)(THIS_ BSTR bstrReplace) PURE;
    STDMETHOD(get_MatchWholeWord)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_MatchWholeWord)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_MatchCase)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_MatchCase)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_ReplaceOnce)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_ReplaceOnce)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_PreserveCase)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_PreserveCase)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Order)(THIS_ long lVal) PURE;
    STDMETHOD(Move)(THIS_ VARIANT_BOOL vBool) PURE;
};

DEFINE_GUID(IID_ISearchReplaceQi,0xD017F2D9L,0x1C4B,0x47E3,0x9D,0xA0,0x92,0x22,0x1A,0x7C,0x65,0x58);

/* Definition of interface: ISearchReplaceQi */
#undef INTERFACE
#define INTERFACE ISearchReplaceQi

DECLARE_INTERFACE_(ISearchReplaceQi, ISearchReplace)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISearchReplace methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_SearchReplaceSet)(THIS_ BSTR FAR* bstrSearchReplaceSet) PURE;
    STDMETHOD(put_SearchReplaceSet)(THIS_ BSTR bstrSearchReplaceSet) PURE;
    STDMETHOD(get_Search)(THIS_ BSTR FAR* bstrSearch) PURE;
    STDMETHOD(put_Search)(THIS_ BSTR bstrSearch) PURE;
    STDMETHOD(get_Replace)(THIS_ BSTR FAR* bstrReplace) PURE;
    STDMETHOD(put_Replace)(THIS_ BSTR bstrReplace) PURE;
    STDMETHOD(get_MatchWholeWord)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_MatchWholeWord)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_MatchCase)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_MatchCase)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_ReplaceOnce)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_ReplaceOnce)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_PreserveCase)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_PreserveCase)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Order)(THIS_ long lVal) PURE;
    STDMETHOD(Move)(THIS_ VARIANT_BOOL vBool) PURE;
#endif

    /* ISearchReplaceQi methods */
    STDMETHOD(get_Action)(THIS_ EnumSearchReplaceAction FAR* eAction) PURE;
    STDMETHOD(put_Action)(THIS_ EnumSearchReplaceAction eAction) PURE;
};

DEFINE_GUID(IID_ISearchReplaces,0xBEA574DFL,0xF317,0x4E16,0x93,0x1F,0x97,0x03,0xC5,0x38,0xC7,0x16);

/* Definition of interface: ISearchReplaces */
#undef INTERFACE
#define INTERFACE ISearchReplaces

DECLARE_INTERFACE_(ISearchReplaces, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISearchReplaces methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ISearchReplace FAR* FAR* ppSearchReplace) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ISearchReplaceSet,0xBE94479DL,0x154C,0x4C62,0x96,0x6F,0xE6,0x11,0x77,0xE0,0xF9,0xA9);

/* Definition of interface: ISearchReplaceSet */
#undef INTERFACE
#define INTERFACE ISearchReplaceSet

DECLARE_INTERFACE_(ISearchReplaceSet, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISearchReplaceSet methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Directory)(THIS_ BSTR FAR* pbstrDirectory) PURE;
    STDMETHOD(put_Directory)(THIS_ BSTR bstrDirectory) PURE;
    STDMETHOD(get_IncludeFiles)(THIS_ BSTR FAR* pbstrIncludeFiles) PURE;
    STDMETHOD(put_IncludeFiles)(THIS_ BSTR bstrIncludeFiles) PURE;
    STDMETHOD(get_ExcludeFiles)(THIS_ BSTR FAR* pbstrExcludeFiles) PURE;
    STDMETHOD(put_ExcludeFiles)(THIS_ BSTR bstrExcludeFiles) PURE;
    STDMETHOD(get_IncludeSubFolders)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_IncludeSubFolders)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_LookInUnicodeFiles)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_LookInUnicodeFiles)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_LookInAnsiFiles)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_LookInAnsiFiles)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_LookInBinaryFiles)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_LookInBinaryFiles)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Order)(THIS_ long lVal) PURE;
    STDMETHOD(get_RunOnInstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnInstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_RunOnUninstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnUninstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_SearchReplaces)(THIS_ ISearchReplaces FAR* FAR* ppVal) PURE;
    STDMETHOD(get_HasChild)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(Move)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSearchReplaceSetChild esrc, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* ppBusObj) PURE;
};

DEFINE_GUID(IID_ISearchReplaceSets,0x47E2949DL,0xC852,0x480B,0x9E,0xCE,0x9B,0x54,0xA4,0xD1,0x37,0x0C);

/* Definition of interface: ISearchReplaceSets */
#undef INTERFACE
#define INTERFACE ISearchReplaceSets

DECLARE_INTERFACE_(ISearchReplaceSets, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISearchReplaceSets methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ISearchReplaceSet FAR* FAR* pSearchReplaceSet) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumSQLReplaceAttribute {
    esraNone = 0,
    esraMatchWholeWord = 1,
    esstMatchCase = 2,
    esstReplaceOnce = 4,
    esstPreserveCase = 8
} EnumSQLReplaceAttribute;

typedef enum EnumSQLAuthenticationMethod {
    esamWindows = 0,
    esamSQLServer = 1
} EnumSQLAuthenticationMethod;

typedef enum EnumSQLScriptChild {
    esscReplacement,
    esscError
} EnumSQLScriptChild;

typedef enum EnumSQLConnectionChild {
    esccScriptFile,
    esccRequirement
} EnumSQLConnectionChild;

typedef enum EnumSQLServerVersion {
    essvCustom,
    essv65,
    essv65sp1,
    essv65sp2,
    essv65sp3,
    essv65sp4,
    essv65sp5,
    essv65sp5a,
    essv65sp5aUpdate,
    essv7,
    essv7sp1,
    essv7sp2,
    essv7sp3,
    essv7sp4,
    essv2K,
    essv2Ksp1,
    essv2Ksp2,
    essv2Ksp3
} EnumSQLServerVersion;

typedef enum EnumSQLErrorHandling {
    esehGotoNextScript = 0,
    esehGotoNextStatement = 1,
    esehAbort = 2
} EnumSQLErrorHandling;

typedef enum EnumSQLDBServerChild {
    esdbRequirement
} EnumSQLDBServerChild;

DEFINE_GUID(IID_ISQLScriptImportProteus,0x2DACC714L,0xFDF4,0x4557,0xB3,0x12,0x73,0xCD,0x3F,0xED,0x43,0xD5);

/* Definition of interface: ISQLScriptImportProteus */
#undef INTERFACE
#define INTERFACE ISQLScriptImportProteus

DECLARE_INTERFACE_(ISQLScriptImportProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLScriptImportProteus methods */
    STDMETHOD(get_Server)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Server)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_Database)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Database)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_UserName)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_UserName)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_Authentication)(THIS_ EnumSQLAuthenticationMethod FAR* pval) PURE;
    STDMETHOD(put_Authentication)(THIS_ EnumSQLAuthenticationMethod val) PURE;
    STDMETHOD(get_ImportTables)(THIS_ VARIANT_BOOL FAR* vbImportTables) PURE;
    STDMETHOD(put_ImportTables)(THIS_ VARIANT_BOOL vbImportTables) PURE;
    STDMETHOD(get_DropIfExists)(THIS_ VARIANT_BOOL FAR* vbDrop) PURE;
    STDMETHOD(put_DropIfExists)(THIS_ VARIANT_BOOL vbDrop) PURE;
    STDMETHOD(get_CreateIfNotExist)(THIS_ VARIANT_BOOL FAR* vbCreate) PURE;
    STDMETHOD(put_CreateIfNotExist)(THIS_ VARIANT_BOOL vbCreate) PURE;
    STDMETHOD(get_Only70Compatible)(THIS_ VARIANT_BOOL FAR* vbOnly7) PURE;
    STDMETHOD(put_Only70Compatible)(THIS_ VARIANT_BOOL vbOnly7) PURE;
    STDMETHOD(get_IncludeExtendedProps)(THIS_ VARIANT_BOOL FAR* vbExtProps) PURE;
    STDMETHOD(put_IncludeExtendedProps)(THIS_ VARIANT_BOOL vbExtProps) PURE;
    STDMETHOD(get_IncludeTables)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_IncludeTables)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_ExcludeTables)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_ExcludeTables)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_RecreateAtBuild)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_RecreateAtBuild)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeData)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeData)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeViews)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeViews)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeProcedures)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeProcedures)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeDefaults)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeDefaults)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeRules)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeRules)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeUserDataTypes)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeUserDataTypes)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeUserFunctions)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeUserFunctions)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_CreateUnicode)(THIS_ VARIANT_BOOL FAR* vbUnicode) PURE;
    STDMETHOD(put_CreateUnicode)(THIS_ VARIANT_BOOL vbUnicode) PURE;
    STDMETHOD(get_IncludeDescriptiveHeaders)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeDescriptiveHeaders)(THIS_ VARIANT_BOOL bVal) PURE;
};

DEFINE_GUID(IID_ISQLScriptImportProteusSP,0x849E0945L,0x968C,0x4038,0xBF,0x2F,0xB1,0x2F,0x2D,0xB6,0x68,0x5B);

/* Definition of interface: ISQLScriptImportProteusSP */
#undef INTERFACE
#define INTERFACE ISQLScriptImportProteusSP

DECLARE_INTERFACE_(ISQLScriptImportProteusSP, ISQLScriptImportProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLScriptImportProteus methods */
    STDMETHOD(get_Server)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Server)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_Database)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Database)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_UserName)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_UserName)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_Authentication)(THIS_ EnumSQLAuthenticationMethod FAR* pval) PURE;
    STDMETHOD(put_Authentication)(THIS_ EnumSQLAuthenticationMethod val) PURE;
    STDMETHOD(get_ImportTables)(THIS_ VARIANT_BOOL FAR* vbImportTables) PURE;
    STDMETHOD(put_ImportTables)(THIS_ VARIANT_BOOL vbImportTables) PURE;
    STDMETHOD(get_DropIfExists)(THIS_ VARIANT_BOOL FAR* vbDrop) PURE;
    STDMETHOD(put_DropIfExists)(THIS_ VARIANT_BOOL vbDrop) PURE;
    STDMETHOD(get_CreateIfNotExist)(THIS_ VARIANT_BOOL FAR* vbCreate) PURE;
    STDMETHOD(put_CreateIfNotExist)(THIS_ VARIANT_BOOL vbCreate) PURE;
    STDMETHOD(get_Only70Compatible)(THIS_ VARIANT_BOOL FAR* vbOnly7) PURE;
    STDMETHOD(put_Only70Compatible)(THIS_ VARIANT_BOOL vbOnly7) PURE;
    STDMETHOD(get_IncludeExtendedProps)(THIS_ VARIANT_BOOL FAR* vbExtProps) PURE;
    STDMETHOD(put_IncludeExtendedProps)(THIS_ VARIANT_BOOL vbExtProps) PURE;
    STDMETHOD(get_IncludeTables)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_IncludeTables)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_ExcludeTables)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_ExcludeTables)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_RecreateAtBuild)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_RecreateAtBuild)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeData)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeData)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeViews)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeViews)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeProcedures)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeProcedures)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeDefaults)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeDefaults)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeRules)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeRules)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeUserDataTypes)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeUserDataTypes)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeUserFunctions)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeUserFunctions)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_CreateUnicode)(THIS_ VARIANT_BOOL FAR* vbUnicode) PURE;
    STDMETHOD(put_CreateUnicode)(THIS_ VARIANT_BOOL vbUnicode) PURE;
    STDMETHOD(get_IncludeDescriptiveHeaders)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeDescriptiveHeaders)(THIS_ VARIANT_BOOL bVal) PURE;
#endif

    /* ISQLScriptImportProteusSP methods */
    STDMETHOD(get_ExcludeReadOnlyColumn)(THIS_ VARIANT_BOOL FAR* vbVal) PURE;
    STDMETHOD(put_ExcludeReadOnlyColumn)(THIS_ VARIANT_BOOL vbVal) PURE;
};

DEFINE_GUID(IID_ISQLScriptImportIxtapa,0x1A10C121L,0xFF24,0x46E6,0xAE,0xD5,0xF1,0x18,0xC4,0x1A,0xEC,0x62);

/* Definition of interface: ISQLScriptImportIxtapa */
#undef INTERFACE
#define INTERFACE ISQLScriptImportIxtapa

DECLARE_INTERFACE_(ISQLScriptImportIxtapa, ISQLScriptImportProteusSP)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLScriptImportProteus methods */
    STDMETHOD(get_Server)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Server)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_Database)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Database)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_UserName)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_UserName)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_Authentication)(THIS_ EnumSQLAuthenticationMethod FAR* pval) PURE;
    STDMETHOD(put_Authentication)(THIS_ EnumSQLAuthenticationMethod val) PURE;
    STDMETHOD(get_ImportTables)(THIS_ VARIANT_BOOL FAR* vbImportTables) PURE;
    STDMETHOD(put_ImportTables)(THIS_ VARIANT_BOOL vbImportTables) PURE;
    STDMETHOD(get_DropIfExists)(THIS_ VARIANT_BOOL FAR* vbDrop) PURE;
    STDMETHOD(put_DropIfExists)(THIS_ VARIANT_BOOL vbDrop) PURE;
    STDMETHOD(get_CreateIfNotExist)(THIS_ VARIANT_BOOL FAR* vbCreate) PURE;
    STDMETHOD(put_CreateIfNotExist)(THIS_ VARIANT_BOOL vbCreate) PURE;
    STDMETHOD(get_Only70Compatible)(THIS_ VARIANT_BOOL FAR* vbOnly7) PURE;
    STDMETHOD(put_Only70Compatible)(THIS_ VARIANT_BOOL vbOnly7) PURE;
    STDMETHOD(get_IncludeExtendedProps)(THIS_ VARIANT_BOOL FAR* vbExtProps) PURE;
    STDMETHOD(put_IncludeExtendedProps)(THIS_ VARIANT_BOOL vbExtProps) PURE;
    STDMETHOD(get_IncludeTables)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_IncludeTables)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_ExcludeTables)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_ExcludeTables)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_RecreateAtBuild)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_RecreateAtBuild)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeData)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeData)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeViews)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeViews)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeProcedures)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeProcedures)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeDefaults)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeDefaults)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeRules)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeRules)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeUserDataTypes)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeUserDataTypes)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeUserFunctions)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeUserFunctions)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_CreateUnicode)(THIS_ VARIANT_BOOL FAR* vbUnicode) PURE;
    STDMETHOD(put_CreateUnicode)(THIS_ VARIANT_BOOL vbUnicode) PURE;
    STDMETHOD(get_IncludeDescriptiveHeaders)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeDescriptiveHeaders)(THIS_ VARIANT_BOOL bVal) PURE;

    /* ISQLScriptImportProteusSP methods */
    STDMETHOD(get_ExcludeReadOnlyColumn)(THIS_ VARIANT_BOOL FAR* vbVal) PURE;
    STDMETHOD(put_ExcludeReadOnlyColumn)(THIS_ VARIANT_BOOL vbVal) PURE;
#endif

    /* ISQLScriptImportIxtapa methods */
    STDMETHOD(get_RawPassword)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_RawPassword)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_ScriptIndexes)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptIndexes)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptFullTextIndexes)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptFullTextIndexes)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptTriggers)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptTriggers)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptCheckConstraints)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptCheckConstraints)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptDefaults)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptDefaults)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptForeignKeys)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptForeignKeys)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptUniqueKeys)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptUniqueKeys)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptPrimaryKeys)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptPrimaryKeys)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptCollation)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptCollation)(THIS_ VARIANT_BOOL bVal) PURE;
};

DEFINE_GUID(IID_ISQLScriptImportIna,0x8A17DBACL,0x8867,0x4BB2,0x80,0x03,0x8C,0x17,0xAA,0x73,0x32,0x5B);

/* Definition of interface: ISQLScriptImportIna */
#undef INTERFACE
#define INTERFACE ISQLScriptImportIna

DECLARE_INTERFACE_(ISQLScriptImportIna, ISQLScriptImportIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLScriptImportProteus methods */
    STDMETHOD(get_Server)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Server)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_Database)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Database)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_UserName)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_UserName)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_Authentication)(THIS_ EnumSQLAuthenticationMethod FAR* pval) PURE;
    STDMETHOD(put_Authentication)(THIS_ EnumSQLAuthenticationMethod val) PURE;
    STDMETHOD(get_ImportTables)(THIS_ VARIANT_BOOL FAR* vbImportTables) PURE;
    STDMETHOD(put_ImportTables)(THIS_ VARIANT_BOOL vbImportTables) PURE;
    STDMETHOD(get_DropIfExists)(THIS_ VARIANT_BOOL FAR* vbDrop) PURE;
    STDMETHOD(put_DropIfExists)(THIS_ VARIANT_BOOL vbDrop) PURE;
    STDMETHOD(get_CreateIfNotExist)(THIS_ VARIANT_BOOL FAR* vbCreate) PURE;
    STDMETHOD(put_CreateIfNotExist)(THIS_ VARIANT_BOOL vbCreate) PURE;
    STDMETHOD(get_Only70Compatible)(THIS_ VARIANT_BOOL FAR* vbOnly7) PURE;
    STDMETHOD(put_Only70Compatible)(THIS_ VARIANT_BOOL vbOnly7) PURE;
    STDMETHOD(get_IncludeExtendedProps)(THIS_ VARIANT_BOOL FAR* vbExtProps) PURE;
    STDMETHOD(put_IncludeExtendedProps)(THIS_ VARIANT_BOOL vbExtProps) PURE;
    STDMETHOD(get_IncludeTables)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_IncludeTables)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_ExcludeTables)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_ExcludeTables)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_RecreateAtBuild)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_RecreateAtBuild)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeData)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeData)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeViews)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeViews)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeProcedures)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeProcedures)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeDefaults)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeDefaults)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeRules)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeRules)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeUserDataTypes)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeUserDataTypes)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_IncludeUserFunctions)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeUserFunctions)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_CreateUnicode)(THIS_ VARIANT_BOOL FAR* vbUnicode) PURE;
    STDMETHOD(put_CreateUnicode)(THIS_ VARIANT_BOOL vbUnicode) PURE;
    STDMETHOD(get_IncludeDescriptiveHeaders)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_IncludeDescriptiveHeaders)(THIS_ VARIANT_BOOL bVal) PURE;

    /* ISQLScriptImportProteusSP methods */
    STDMETHOD(get_ExcludeReadOnlyColumn)(THIS_ VARIANT_BOOL FAR* vbVal) PURE;
    STDMETHOD(put_ExcludeReadOnlyColumn)(THIS_ VARIANT_BOOL vbVal) PURE;

    /* ISQLScriptImportIxtapa methods */
    STDMETHOD(get_RawPassword)(THIS_ BSTR FAR* pBstr) PURE;
    STDMETHOD(put_RawPassword)(THIS_ BSTR Bstr) PURE;
    STDMETHOD(get_ScriptIndexes)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptIndexes)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptFullTextIndexes)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptFullTextIndexes)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptTriggers)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptTriggers)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptCheckConstraints)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptCheckConstraints)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptDefaults)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptDefaults)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptForeignKeys)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptForeignKeys)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptUniqueKeys)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptUniqueKeys)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptPrimaryKeys)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptPrimaryKeys)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptCollation)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptCollation)(THIS_ VARIANT_BOOL bVal) PURE;
#endif

    /* ISQLScriptImportIna methods */
    STDMETHOD(get_ScriptDatabase)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptDatabase)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptUsersAndRoles)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptUsersAndRoles)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptLogins)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptLogins)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_ScriptObjectPermissions)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(put_ScriptObjectPermissions)(THIS_ VARIANT_BOOL bVal) PURE;
};

DEFINE_GUID(IID_ISQLScriptImportsIxtapa,0xA16D2B25L,0xD0D9,0x4B83,0xBA,0xD0,0x1E,0x12,0xDF,0xF6,0xE4,0x21);

/* Definition of interface: ISQLScriptImportsIxtapa */
#undef INTERFACE
#define INTERFACE ISQLScriptImportsIxtapa

DECLARE_INTERFACE_(ISQLScriptImportsIxtapa, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLScriptImportsIxtapa methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ISQLScriptImportIxtapa FAR* FAR* ppValue) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ISQLRequirementProteus,0x2DACC723L,0xFDF4,0x4557,0xB3,0x12,0x73,0xCD,0x3F,0xED,0x43,0xD5);

/* Definition of interface: ISQLRequirementProteus */
#undef INTERFACE
#define INTERFACE ISQLRequirementProteus

DECLARE_INTERFACE_(ISQLRequirementProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLRequirementProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_MajorVersion)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_MajorVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ServicePackLevel)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ServicePackLevel)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Disable)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_Disable)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_AnyGreaterVersion)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_AnyGreaterVersion)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_AnyGreaterServicePack)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_AnyGreaterServicePack)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(put_PredefinedRequirement)(THIS_ EnumSQLServerVersion pVersion) PURE;
    STDMETHOD(get_PredefinedRequirement)(THIS_ EnumSQLServerVersion FAR* pVersion) PURE;
};

interface ISQLDatabaseServerPluto;

interface ISQLDatabaseServersPluto;

DEFINE_GUID(IID_ISQLRequirementPluto,0x46CA1328L,0x643C,0x421B,0x87,0x54,0x6E,0x12,0x37,0xFE,0x7F,0xDB);

/* Definition of interface: ISQLRequirementPluto */
#undef INTERFACE
#define INTERFACE ISQLRequirementPluto

DECLARE_INTERFACE_(ISQLRequirementPluto, ISQLRequirementProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLRequirementProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_MajorVersion)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_MajorVersion)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ServicePackLevel)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ServicePackLevel)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Disable)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_Disable)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_AnyGreaterVersion)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_AnyGreaterVersion)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_AnyGreaterServicePack)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_AnyGreaterServicePack)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(put_PredefinedRequirement)(THIS_ EnumSQLServerVersion pVersion) PURE;
    STDMETHOD(get_PredefinedRequirement)(THIS_ EnumSQLServerVersion FAR* pVersion) PURE;
#endif

    /* ISQLRequirementPluto methods */
    STDMETHOD(put_PredefinedRequirementEx)(THIS_ BSTR strVersionName) PURE;
    STDMETHOD(get_IsPredefinedRequirement)(THIS_ VARIANT_BOOL FAR* pvbIsPredefined) PURE;
    STDMETHOD(get_ParentDatabaseServer)(THIS_ ISQLDatabaseServerPluto FAR* FAR* ppDatabaseServer) PURE;
    STDMETHOD(put_ParentDatabaseServer)(THIS_ ISQLDatabaseServerPluto FAR* pDatabaseServer) PURE;
};

DEFINE_GUID(IID_ISQLRequirementsProteus,0x2DACC722L,0xFDF4,0x4557,0xB3,0x12,0x73,0xCD,0x3F,0xED,0x43,0xD5);

/* Definition of interface: ISQLRequirementsProteus */
#undef INTERFACE
#define INTERFACE ISQLRequirementsProteus

DECLARE_INTERFACE_(ISQLRequirementsProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLRequirementsProteus methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ISQLRequirementProteus FAR* FAR* ppSQLRequirement) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ISQLScriptReplacementProteus,0x2DACC713L,0xFDF4,0x4557,0xB3,0x12,0x73,0xCD,0x3F,0xED,0x43,0xD5);

/* Definition of interface: ISQLScriptReplacementProteus */
#undef INTERFACE
#define INTERFACE ISQLScriptReplacementProteus

DECLARE_INTERFACE_(ISQLScriptReplacementProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLScriptReplacementProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Search)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_Search)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_Replace)(THIS_ BSTR FAR* pbstrFullPath) PURE;
    STDMETHOD(put_Replace)(THIS_ BSTR bstrFullPath) PURE;
    STDMETHOD(get_MatchWholeWord)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_MatchWholeWord)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_MatchCase)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_MatchCase)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_ReplaceOnce)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_ReplaceOnce)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_PreserveCase)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_PreserveCase)(THIS_ VARIANT_BOOL vBool) PURE;
};

DEFINE_GUID(IID_ISQLScriptReplacementsProteus,0x2DACC712L,0xFDF4,0x4557,0xB3,0x12,0x73,0xCD,0x3F,0xED,0x43,0xD5);

/* Definition of interface: ISQLScriptReplacementsProteus */
#undef INTERFACE
#define INTERFACE ISQLScriptReplacementsProteus

DECLARE_INTERFACE_(ISQLScriptReplacementsProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLScriptReplacementsProteus methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ISQLScriptReplacementProteus FAR* FAR* ppSQLScriptReplacement) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ISQLScriptErrorProteus,0x41A26F34L,0x4057,0x49DA,0xAD,0x66,0x55,0x07,0x42,0x4E,0x52,0x2A);

/* Definition of interface: ISQLScriptErrorProteus */
#undef INTERFACE
#define INTERFACE ISQLScriptErrorProteus

DECLARE_INTERFACE_(ISQLScriptErrorProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLScriptErrorProteus methods */
    STDMETHOD(get_ErrNumber)(THIS_ long FAR* lErr) PURE;
    STDMETHOD(put_ErrNumber)(THIS_ long lErr) PURE;
    STDMETHOD(get_ScriptFileKey)(THIS_ BSTR FAR* pbstrScriptFileKey) PURE;
    STDMETHOD(put_ScriptFileKey)(THIS_ BSTR bstrScriptFileKey) PURE;
    STDMETHOD(get_ErrHandling)(THIS_ EnumSQLErrorHandling FAR* pval) PURE;
    STDMETHOD(put_ErrHandling)(THIS_ EnumSQLErrorHandling val) PURE;
    STDMETHOD(get_Message)(THIS_ BSTR FAR* pbstrMessage) PURE;
    STDMETHOD(put_Message)(THIS_ BSTR bstrMessage) PURE;
};

DEFINE_GUID(IID_ISQLScriptErrorsProteus,0x54CEEA74L,0x06D8,0x48D0,0xA2,0xFA,0xDC,0x92,0x56,0xFB,0xE0,0x90);

/* Definition of interface: ISQLScriptErrorsProteus */
#undef INTERFACE
#define INTERFACE ISQLScriptErrorsProteus

DECLARE_INTERFACE_(ISQLScriptErrorsProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLScriptErrorsProteus methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ISQLScriptErrorProteus FAR* FAR* ppSQLScriptReplacement) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ISQLScriptFileProteus,0x35730BB8L,0x8F57,0x4A24,0x86,0xC5,0x71,0xE0,0x1A,0x63,0x93,0xCE);

/* Definition of interface: ISQLScriptFileProteus */
#undef INTERFACE
#define INTERFACE ISQLScriptFileProteus

DECLARE_INTERFACE_(ISQLScriptFileProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLScriptFileProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_InstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_InstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_UninstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_UninstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* pbstrFullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR bstrFullPath) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* pbstrComment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR bstrComment) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lOrder) PURE;
    STDMETHOD(put_Order)(THIS_ long lOrder) PURE;
    STDMETHOD(get_RunOnInstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnInstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_RunOnUninstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnUninstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_SQLScriptImport)(THIS_ ISQLScriptImportProteus FAR* FAR* ppImport) PURE;
    STDMETHOD(get_SQLScriptReplacements)(THIS_ ISQLScriptReplacementsProteus FAR* FAR* ppReplacements) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(IsShared)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLScriptChild essc, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
    STDMETHOD(get_ErrorHandling)(THIS_ EnumSQLErrorHandling FAR* pval) PURE;
    STDMETHOD(put_ErrorHandling)(THIS_ EnumSQLErrorHandling val) PURE;
    STDMETHOD(get_SQLScriptErrors)(THIS_ ISQLScriptErrorsProteus FAR* FAR* ppErrors) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* sVer) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR sVer) PURE;
};

DEFINE_GUID(IID_ISQLScriptFileProteusSP,0xEF0AF9BDL,0xC76F,0x4124,0xBA,0x50,0xC9,0x0D,0x97,0x5E,0xC5,0xBF);

/* Definition of interface: ISQLScriptFileProteusSP */
#undef INTERFACE
#define INTERFACE ISQLScriptFileProteusSP

DECLARE_INTERFACE_(ISQLScriptFileProteusSP, ISQLScriptFileProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLScriptFileProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_InstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_InstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_UninstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_UninstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* pbstrFullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR bstrFullPath) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* pbstrComment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR bstrComment) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lOrder) PURE;
    STDMETHOD(put_Order)(THIS_ long lOrder) PURE;
    STDMETHOD(get_RunOnInstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnInstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_RunOnUninstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnUninstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_SQLScriptImport)(THIS_ ISQLScriptImportProteus FAR* FAR* ppImport) PURE;
    STDMETHOD(get_SQLScriptReplacements)(THIS_ ISQLScriptReplacementsProteus FAR* FAR* ppReplacements) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(IsShared)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLScriptChild essc, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
    STDMETHOD(get_ErrorHandling)(THIS_ EnumSQLErrorHandling FAR* pval) PURE;
    STDMETHOD(put_ErrorHandling)(THIS_ EnumSQLErrorHandling val) PURE;
    STDMETHOD(get_SQLScriptErrors)(THIS_ ISQLScriptErrorsProteus FAR* FAR* ppErrors) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* sVer) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR sVer) PURE;
#endif

    /* ISQLScriptFileProteusSP methods */
    STDMETHOD(get_RunOnRollback)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnRollback)(THIS_ VARIANT_BOOL vBool) PURE;
};

DEFINE_GUID(IID_ISQLScriptFileIbiza,0x6B31F451L,0xB5DA,0x452D,0xA8,0xC7,0x1D,0x32,0x54,0xEC,0x79,0x15);

/* Definition of interface: ISQLScriptFileIbiza */
#undef INTERFACE
#define INTERFACE ISQLScriptFileIbiza

DECLARE_INTERFACE_(ISQLScriptFileIbiza, ISQLScriptFileProteusSP)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLScriptFileProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_InstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_InstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_UninstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_UninstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* pbstrFullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR bstrFullPath) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* pbstrComment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR bstrComment) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lOrder) PURE;
    STDMETHOD(put_Order)(THIS_ long lOrder) PURE;
    STDMETHOD(get_RunOnInstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnInstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_RunOnUninstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnUninstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_SQLScriptImport)(THIS_ ISQLScriptImportProteus FAR* FAR* ppImport) PURE;
    STDMETHOD(get_SQLScriptReplacements)(THIS_ ISQLScriptReplacementsProteus FAR* FAR* ppReplacements) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(IsShared)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLScriptChild essc, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
    STDMETHOD(get_ErrorHandling)(THIS_ EnumSQLErrorHandling FAR* pval) PURE;
    STDMETHOD(put_ErrorHandling)(THIS_ EnumSQLErrorHandling val) PURE;
    STDMETHOD(get_SQLScriptErrors)(THIS_ ISQLScriptErrorsProteus FAR* FAR* ppErrors) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* sVer) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR sVer) PURE;

    /* ISQLScriptFileProteusSP methods */
    STDMETHOD(get_RunOnRollback)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnRollback)(THIS_ VARIANT_BOOL vBool) PURE;
#endif

    /* ISQLScriptFileIbiza methods */
    STDMETHOD(get_RunOnLogin)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnLogin)(THIS_ VARIANT_BOOL vBool) PURE;
};

interface ISQLConnectionsProteus;

DEFINE_GUID(IID_ISQLScriptFileIxtapa,0x37A7B4A8L,0x2C00,0x4159,0xA5,0xFA,0x88,0xEF,0x43,0x3B,0x2E,0x1B);

/* Definition of interface: ISQLScriptFileIxtapa */
#undef INTERFACE
#define INTERFACE ISQLScriptFileIxtapa

DECLARE_INTERFACE_(ISQLScriptFileIxtapa, ISQLScriptFileIbiza)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLScriptFileProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_InstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_InstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_UninstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_UninstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* pbstrFullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR bstrFullPath) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* pbstrComment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR bstrComment) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lOrder) PURE;
    STDMETHOD(put_Order)(THIS_ long lOrder) PURE;
    STDMETHOD(get_RunOnInstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnInstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_RunOnUninstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnUninstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_SQLScriptImport)(THIS_ ISQLScriptImportProteus FAR* FAR* ppImport) PURE;
    STDMETHOD(get_SQLScriptReplacements)(THIS_ ISQLScriptReplacementsProteus FAR* FAR* ppReplacements) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(IsShared)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLScriptChild essc, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
    STDMETHOD(get_ErrorHandling)(THIS_ EnumSQLErrorHandling FAR* pval) PURE;
    STDMETHOD(put_ErrorHandling)(THIS_ EnumSQLErrorHandling val) PURE;
    STDMETHOD(get_SQLScriptErrors)(THIS_ ISQLScriptErrorsProteus FAR* FAR* ppErrors) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* sVer) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR sVer) PURE;

    /* ISQLScriptFileProteusSP methods */
    STDMETHOD(get_RunOnRollback)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnRollback)(THIS_ VARIANT_BOOL vBool) PURE;

    /* ISQLScriptFileIbiza methods */
    STDMETHOD(get_RunOnLogin)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnLogin)(THIS_ VARIANT_BOOL vBool) PURE;
#endif

    /* ISQLScriptFileIxtapa methods */
    STDMETHOD(get_IsDimSQLScript)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_IsDimSQLScript)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_ParentConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppCol) PURE;
};

DEFINE_GUID(IID_ISQLScriptFileJustice,0x130A4529L,0x94AA,0x4E7F,0x99,0x08,0xFA,0xB2,0xC0,0xE7,0xC8,0x55);

/* Definition of interface: ISQLScriptFileJustice */
#undef INTERFACE
#define INTERFACE ISQLScriptFileJustice

DECLARE_INTERFACE_(ISQLScriptFileJustice, ISQLScriptFileIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLScriptFileProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_InstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_InstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_UninstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_UninstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* pbstrFullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR bstrFullPath) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* pbstrComment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR bstrComment) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lOrder) PURE;
    STDMETHOD(put_Order)(THIS_ long lOrder) PURE;
    STDMETHOD(get_RunOnInstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnInstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_RunOnUninstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnUninstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_SQLScriptImport)(THIS_ ISQLScriptImportProteus FAR* FAR* ppImport) PURE;
    STDMETHOD(get_SQLScriptReplacements)(THIS_ ISQLScriptReplacementsProteus FAR* FAR* ppReplacements) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(IsShared)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLScriptChild essc, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
    STDMETHOD(get_ErrorHandling)(THIS_ EnumSQLErrorHandling FAR* pval) PURE;
    STDMETHOD(put_ErrorHandling)(THIS_ EnumSQLErrorHandling val) PURE;
    STDMETHOD(get_SQLScriptErrors)(THIS_ ISQLScriptErrorsProteus FAR* FAR* ppErrors) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* sVer) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR sVer) PURE;

    /* ISQLScriptFileProteusSP methods */
    STDMETHOD(get_RunOnRollback)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnRollback)(THIS_ VARIANT_BOOL vBool) PURE;

    /* ISQLScriptFileIbiza methods */
    STDMETHOD(get_RunOnLogin)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnLogin)(THIS_ VARIANT_BOOL vBool) PURE;

    /* ISQLScriptFileIxtapa methods */
    STDMETHOD(get_IsDimSQLScript)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_IsDimSQLScript)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_ParentConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppCol) PURE;
#endif

    /* ISQLScriptFileJustice methods */
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* pbstrCondition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR bstrCondition) PURE;
};

DEFINE_GUID(IID_ISQLScriptFileLoyalty,0x7CCDE479L,0xD82B,0x4591,0x84,0x00,0x42,0x3C,0x98,0x7B,0x27,0x95);

/* Definition of interface: ISQLScriptFileLoyalty */
#undef INTERFACE
#define INTERFACE ISQLScriptFileLoyalty

DECLARE_INTERFACE_(ISQLScriptFileLoyalty, ISQLScriptFileJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLScriptFileProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_InstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_InstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_UninstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_UninstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* pbstrFullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR bstrFullPath) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* pbstrComment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR bstrComment) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lOrder) PURE;
    STDMETHOD(put_Order)(THIS_ long lOrder) PURE;
    STDMETHOD(get_RunOnInstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnInstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_RunOnUninstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnUninstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_SQLScriptImport)(THIS_ ISQLScriptImportProteus FAR* FAR* ppImport) PURE;
    STDMETHOD(get_SQLScriptReplacements)(THIS_ ISQLScriptReplacementsProteus FAR* FAR* ppReplacements) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(IsShared)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLScriptChild essc, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
    STDMETHOD(get_ErrorHandling)(THIS_ EnumSQLErrorHandling FAR* pval) PURE;
    STDMETHOD(put_ErrorHandling)(THIS_ EnumSQLErrorHandling val) PURE;
    STDMETHOD(get_SQLScriptErrors)(THIS_ ISQLScriptErrorsProteus FAR* FAR* ppErrors) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* sVer) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR sVer) PURE;

    /* ISQLScriptFileProteusSP methods */
    STDMETHOD(get_RunOnRollback)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnRollback)(THIS_ VARIANT_BOOL vBool) PURE;

    /* ISQLScriptFileIbiza methods */
    STDMETHOD(get_RunOnLogin)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnLogin)(THIS_ VARIANT_BOOL vBool) PURE;

    /* ISQLScriptFileIxtapa methods */
    STDMETHOD(get_IsDimSQLScript)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_IsDimSQLScript)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_ParentConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppCol) PURE;

    /* ISQLScriptFileJustice methods */
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* pbstrCondition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR bstrCondition) PURE;
#endif

    /* ISQLScriptFileLoyalty methods */
    STDMETHOD(get_IComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
};

DEFINE_GUID(IID_ISQLScriptFileNeo,0xEC499EECL,0xE9E3,0x43B4,0x9B,0xCD,0x14,0xA0,0xFA,0x84,0x15,0xA5);

/* Definition of interface: ISQLScriptFileNeo */
#undef INTERFACE
#define INTERFACE ISQLScriptFileNeo

DECLARE_INTERFACE_(ISQLScriptFileNeo, ISQLScriptFileLoyalty)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLScriptFileProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* pbstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_InstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_InstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_UninstallText)(THIS_ BSTR FAR* pbstrProgressText) PURE;
    STDMETHOD(put_UninstallText)(THIS_ BSTR bstrProgressText) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* pbstrFullPath) PURE;
    STDMETHOD(put_FullPath)(THIS_ BSTR bstrFullPath) PURE;
    STDMETHOD(get_Comment)(THIS_ BSTR FAR* pbstrComment) PURE;
    STDMETHOD(put_Comment)(THIS_ BSTR bstrComment) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lOrder) PURE;
    STDMETHOD(put_Order)(THIS_ long lOrder) PURE;
    STDMETHOD(get_RunOnInstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnInstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_RunOnUninstall)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnUninstall)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_SQLScriptImport)(THIS_ ISQLScriptImportProteus FAR* FAR* ppImport) PURE;
    STDMETHOD(get_SQLScriptReplacements)(THIS_ ISQLScriptReplacementsProteus FAR* FAR* ppReplacements) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(IsShared)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLScriptChild essc, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
    STDMETHOD(get_ErrorHandling)(THIS_ EnumSQLErrorHandling FAR* pval) PURE;
    STDMETHOD(put_ErrorHandling)(THIS_ EnumSQLErrorHandling val) PURE;
    STDMETHOD(get_SQLScriptErrors)(THIS_ ISQLScriptErrorsProteus FAR* FAR* ppErrors) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* sVer) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR sVer) PURE;

    /* ISQLScriptFileProteusSP methods */
    STDMETHOD(get_RunOnRollback)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnRollback)(THIS_ VARIANT_BOOL vBool) PURE;

    /* ISQLScriptFileIbiza methods */
    STDMETHOD(get_RunOnLogin)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_RunOnLogin)(THIS_ VARIANT_BOOL vBool) PURE;

    /* ISQLScriptFileIxtapa methods */
    STDMETHOD(get_IsDimSQLScript)(THIS_ VARIANT_BOOL FAR* pvBool) PURE;
    STDMETHOD(put_IsDimSQLScript)(THIS_ VARIANT_BOOL vBool) PURE;
    STDMETHOD(get_ParentConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppCol) PURE;

    /* ISQLScriptFileJustice methods */
    STDMETHOD(get_Condition)(THIS_ BSTR FAR* pbstrCondition) PURE;
    STDMETHOD(put_Condition)(THIS_ BSTR bstrCondition) PURE;

    /* ISQLScriptFileLoyalty methods */
    STDMETHOD(get_IComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
#endif

    /* ISQLScriptFileNeo methods */
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Name) PURE;
};

DEFINE_GUID(IID_ISQLScriptFilesProteus,0xAF82F9C4L,0xAC14,0x4D39,0x96,0x28,0x38,0x6F,0xA6,0xD8,0xB5,0xC4);

/* Definition of interface: ISQLScriptFilesProteus */
#undef INTERFACE
#define INTERFACE ISQLScriptFilesProteus

DECLARE_INTERFACE_(ISQLScriptFilesProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLScriptFilesProteus methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ISQLScriptFileProteus FAR* FAR* ppSQLScriptFile) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ISQLConnectionProteus,0x2DACC710L,0xFDF4,0x4557,0xB3,0x12,0x73,0xCD,0x3F,0xED,0x43,0xD5);

/* Definition of interface: ISQLConnectionProteus */
#undef INTERFACE
#define INTERFACE ISQLConnectionProteus

DECLARE_INTERFACE_(ISQLConnectionProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLConnectionProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Server)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Server)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Database)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Database)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_UserName)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_UserName)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Authentication)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Authentication)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_LocalOnly)(THIS_ VARIANT_BOOL FAR* vbLocalOnly) PURE;
    STDMETHOD(put_LocalOnly)(THIS_ VARIANT_BOOL vbLocalOnly) PURE;
    STDMETHOD(get_DisallowToMSDE)(THIS_ VARIANT_BOOL FAR* vbDisallowToMSDE) PURE;
    STDMETHOD(put_DisallowToMSDE)(THIS_ VARIANT_BOOL vbDisallowToMSDE) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Order)(THIS_ long lVal) PURE;
    STDMETHOD(get_SQLRequirements)(THIS_ ISQLRequirementsProteus FAR* FAR* ppSQLRequirements) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFilesProteus) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLConnectionChild escc, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
    STDMETHOD(Attach)(THIS_ ISQLScriptFileProteus FAR* pScriptFile) PURE;
    STDMETHOD(Detach)(THIS_ ISQLScriptFileProteus FAR* pScriptFile) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
};

DEFINE_GUID(IID_ISQLConnectionProteusSP,0x39DC5001L,0xD6CF,0x4134,0x90,0xA0,0x33,0x9C,0x70,0x11,0xDE,0x58);

/* Definition of interface: ISQLConnectionProteusSP */
#undef INTERFACE
#define INTERFACE ISQLConnectionProteusSP

DECLARE_INTERFACE_(ISQLConnectionProteusSP, ISQLConnectionProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLConnectionProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Server)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Server)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Database)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Database)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_UserName)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_UserName)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Authentication)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Authentication)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_LocalOnly)(THIS_ VARIANT_BOOL FAR* vbLocalOnly) PURE;
    STDMETHOD(put_LocalOnly)(THIS_ VARIANT_BOOL vbLocalOnly) PURE;
    STDMETHOD(get_DisallowToMSDE)(THIS_ VARIANT_BOOL FAR* vbDisallowToMSDE) PURE;
    STDMETHOD(put_DisallowToMSDE)(THIS_ VARIANT_BOOL vbDisallowToMSDE) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Order)(THIS_ long lVal) PURE;
    STDMETHOD(get_SQLRequirements)(THIS_ ISQLRequirementsProteus FAR* FAR* ppSQLRequirements) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFilesProteus) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLConnectionChild escc, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
    STDMETHOD(Attach)(THIS_ ISQLScriptFileProteus FAR* pScriptFile) PURE;
    STDMETHOD(Detach)(THIS_ ISQLScriptFileProteus FAR* pScriptFile) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
#endif

    /* ISQLConnectionProteusSP methods */
    STDMETHOD(get_DoNotCreateDB)(THIS_ VARIANT_BOOL FAR* vbNotCreateDB) PURE;
    STDMETHOD(put_DoNotCreateDB)(THIS_ VARIANT_BOOL vbNotCreateDB) PURE;
};

DEFINE_GUID(IID_ISQLConnectionPluto,0xF22200ABL,0x7767,0x45E5,0x94,0xB1,0x81,0x4F,0xAA,0xA9,0x01,0x5F);

/* Definition of interface: ISQLConnectionPluto */
#undef INTERFACE
#define INTERFACE ISQLConnectionPluto

DECLARE_INTERFACE_(ISQLConnectionPluto, ISQLConnectionProteusSP)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLConnectionProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Server)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Server)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Database)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Database)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_UserName)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_UserName)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Authentication)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Authentication)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_LocalOnly)(THIS_ VARIANT_BOOL FAR* vbLocalOnly) PURE;
    STDMETHOD(put_LocalOnly)(THIS_ VARIANT_BOOL vbLocalOnly) PURE;
    STDMETHOD(get_DisallowToMSDE)(THIS_ VARIANT_BOOL FAR* vbDisallowToMSDE) PURE;
    STDMETHOD(put_DisallowToMSDE)(THIS_ VARIANT_BOOL vbDisallowToMSDE) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Order)(THIS_ long lVal) PURE;
    STDMETHOD(get_SQLRequirements)(THIS_ ISQLRequirementsProteus FAR* FAR* ppSQLRequirements) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFilesProteus) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLConnectionChild escc, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
    STDMETHOD(Attach)(THIS_ ISQLScriptFileProteus FAR* pScriptFile) PURE;
    STDMETHOD(Detach)(THIS_ ISQLScriptFileProteus FAR* pScriptFile) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;

    /* ISQLConnectionProteusSP methods */
    STDMETHOD(get_DoNotCreateDB)(THIS_ VARIANT_BOOL FAR* vbNotCreateDB) PURE;
    STDMETHOD(put_DoNotCreateDB)(THIS_ VARIANT_BOOL vbNotCreateDB) PURE;
#endif

    /* ISQLConnectionPluto methods */
    STDMETHOD(get_SelectDatabaseServer)(THIS_ BSTR strName, VARIANT_BOOL FAR* pvbSelected) PURE;
    STDMETHOD(put_SelectDatabaseServer)(THIS_ BSTR strName, VARIANT_BOOL vbSelected) PURE;
    STDMETHOD(get_DatabaseServer)(THIS_ BSTR strName, ISQLDatabaseServerPluto FAR* FAR* ppDatabaseServer) PURE;
    STDMETHOD(get_DatabaseServers)(THIS_ ISQLDatabaseServersPluto FAR* FAR* ppDatabaseServers) PURE;
    STDMETHOD(get_CommandTimeout)(THIS_ long FAR* plTimeout) PURE;
    STDMETHOD(put_CommandTimeout)(THIS_ long lTimeout) PURE;
};

DEFINE_GUID(IID_ISQLConnectionIxtapa,0x55CD8826L,0x7C1F,0x4C7B,0xAB,0x35,0x77,0xF4,0x67,0x54,0xC2,0x63);

/* Definition of interface: ISQLConnectionIxtapa */
#undef INTERFACE
#define INTERFACE ISQLConnectionIxtapa

DECLARE_INTERFACE_(ISQLConnectionIxtapa, ISQLConnectionPluto)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLConnectionProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Server)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Server)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Database)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Database)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_UserName)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_UserName)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Authentication)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Authentication)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_LocalOnly)(THIS_ VARIANT_BOOL FAR* vbLocalOnly) PURE;
    STDMETHOD(put_LocalOnly)(THIS_ VARIANT_BOOL vbLocalOnly) PURE;
    STDMETHOD(get_DisallowToMSDE)(THIS_ VARIANT_BOOL FAR* vbDisallowToMSDE) PURE;
    STDMETHOD(put_DisallowToMSDE)(THIS_ VARIANT_BOOL vbDisallowToMSDE) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Order)(THIS_ long lVal) PURE;
    STDMETHOD(get_SQLRequirements)(THIS_ ISQLRequirementsProteus FAR* FAR* ppSQLRequirements) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFilesProteus) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLConnectionChild escc, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
    STDMETHOD(Attach)(THIS_ ISQLScriptFileProteus FAR* pScriptFile) PURE;
    STDMETHOD(Detach)(THIS_ ISQLScriptFileProteus FAR* pScriptFile) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;

    /* ISQLConnectionProteusSP methods */
    STDMETHOD(get_DoNotCreateDB)(THIS_ VARIANT_BOOL FAR* vbNotCreateDB) PURE;
    STDMETHOD(put_DoNotCreateDB)(THIS_ VARIANT_BOOL vbNotCreateDB) PURE;

    /* ISQLConnectionPluto methods */
    STDMETHOD(get_SelectDatabaseServer)(THIS_ BSTR strName, VARIANT_BOOL FAR* pvbSelected) PURE;
    STDMETHOD(put_SelectDatabaseServer)(THIS_ BSTR strName, VARIANT_BOOL vbSelected) PURE;
    STDMETHOD(get_DatabaseServer)(THIS_ BSTR strName, ISQLDatabaseServerPluto FAR* FAR* ppDatabaseServer) PURE;
    STDMETHOD(get_DatabaseServers)(THIS_ ISQLDatabaseServersPluto FAR* FAR* ppDatabaseServers) PURE;
    STDMETHOD(get_CommandTimeout)(THIS_ long FAR* plTimeout) PURE;
    STDMETHOD(put_CommandTimeout)(THIS_ long lTimeout) PURE;
#endif

    /* ISQLConnectionIxtapa methods */
    STDMETHOD(get_BatchSeparator)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_BatchSeparator)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_ISQLConnectionJustice,0x0CA8CBBFL,0xA7E6,0x4B93,0xA6,0xB1,0x52,0xF2,0x59,0x15,0x40,0xD1);

/* Definition of interface: ISQLConnectionJustice */
#undef INTERFACE
#define INTERFACE ISQLConnectionJustice

DECLARE_INTERFACE_(ISQLConnectionJustice, ISQLConnectionIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLConnectionProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Server)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Server)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Database)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Database)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_UserName)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_UserName)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Authentication)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Authentication)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_LocalOnly)(THIS_ VARIANT_BOOL FAR* vbLocalOnly) PURE;
    STDMETHOD(put_LocalOnly)(THIS_ VARIANT_BOOL vbLocalOnly) PURE;
    STDMETHOD(get_DisallowToMSDE)(THIS_ VARIANT_BOOL FAR* vbDisallowToMSDE) PURE;
    STDMETHOD(put_DisallowToMSDE)(THIS_ VARIANT_BOOL vbDisallowToMSDE) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Order)(THIS_ long lVal) PURE;
    STDMETHOD(get_SQLRequirements)(THIS_ ISQLRequirementsProteus FAR* FAR* ppSQLRequirements) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFilesProteus) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLConnectionChild escc, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
    STDMETHOD(Attach)(THIS_ ISQLScriptFileProteus FAR* pScriptFile) PURE;
    STDMETHOD(Detach)(THIS_ ISQLScriptFileProteus FAR* pScriptFile) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;

    /* ISQLConnectionProteusSP methods */
    STDMETHOD(get_DoNotCreateDB)(THIS_ VARIANT_BOOL FAR* vbNotCreateDB) PURE;
    STDMETHOD(put_DoNotCreateDB)(THIS_ VARIANT_BOOL vbNotCreateDB) PURE;

    /* ISQLConnectionPluto methods */
    STDMETHOD(get_SelectDatabaseServer)(THIS_ BSTR strName, VARIANT_BOOL FAR* pvbSelected) PURE;
    STDMETHOD(put_SelectDatabaseServer)(THIS_ BSTR strName, VARIANT_BOOL vbSelected) PURE;
    STDMETHOD(get_DatabaseServer)(THIS_ BSTR strName, ISQLDatabaseServerPluto FAR* FAR* ppDatabaseServer) PURE;
    STDMETHOD(get_DatabaseServers)(THIS_ ISQLDatabaseServersPluto FAR* FAR* ppDatabaseServers) PURE;
    STDMETHOD(get_CommandTimeout)(THIS_ long FAR* plTimeout) PURE;
    STDMETHOD(put_CommandTimeout)(THIS_ long lTimeout) PURE;

    /* ISQLConnectionIxtapa methods */
    STDMETHOD(get_BatchSeparator)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_BatchSeparator)(THIS_ BSTR bstrVal) PURE;
#endif

    /* ISQLConnectionJustice methods */
    STDMETHOD(get_SkipCxnIfReqNotMet)(THIS_ VARIANT_BOOL FAR* pvbVal) PURE;
    STDMETHOD(put_SkipCxnIfReqNotMet)(THIS_ VARIANT_BOOL vbVal) PURE;
};

DEFINE_GUID(IID_ISQLConnectionLoyalty,0x6AB3FAE7L,0x0ADD,0x4923,0x97,0x51,0x0F,0x9A,0x4C,0x9A,0x04,0xEF);

/* Definition of interface: ISQLConnectionLoyalty */
#undef INTERFACE
#define INTERFACE ISQLConnectionLoyalty

DECLARE_INTERFACE_(ISQLConnectionLoyalty, ISQLConnectionJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLConnectionProteus methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_Server)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Server)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Database)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Database)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_UserName)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_UserName)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Authentication)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Authentication)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_LocalOnly)(THIS_ VARIANT_BOOL FAR* vbLocalOnly) PURE;
    STDMETHOD(put_LocalOnly)(THIS_ VARIANT_BOOL vbLocalOnly) PURE;
    STDMETHOD(get_DisallowToMSDE)(THIS_ VARIANT_BOOL FAR* vbDisallowToMSDE) PURE;
    STDMETHOD(put_DisallowToMSDE)(THIS_ VARIANT_BOOL vbDisallowToMSDE) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* pbstr) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* lVal) PURE;
    STDMETHOD(put_Order)(THIS_ long lVal) PURE;
    STDMETHOD(get_SQLRequirements)(THIS_ ISQLRequirementsProteus FAR* FAR* ppSQLRequirements) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFilesProteus) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLConnectionChild escc, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
    STDMETHOD(Attach)(THIS_ ISQLScriptFileProteus FAR* pScriptFile) PURE;
    STDMETHOD(Detach)(THIS_ ISQLScriptFileProteus FAR* pScriptFile) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;

    /* ISQLConnectionProteusSP methods */
    STDMETHOD(get_DoNotCreateDB)(THIS_ VARIANT_BOOL FAR* vbNotCreateDB) PURE;
    STDMETHOD(put_DoNotCreateDB)(THIS_ VARIANT_BOOL vbNotCreateDB) PURE;

    /* ISQLConnectionPluto methods */
    STDMETHOD(get_SelectDatabaseServer)(THIS_ BSTR strName, VARIANT_BOOL FAR* pvbSelected) PURE;
    STDMETHOD(put_SelectDatabaseServer)(THIS_ BSTR strName, VARIANT_BOOL vbSelected) PURE;
    STDMETHOD(get_DatabaseServer)(THIS_ BSTR strName, ISQLDatabaseServerPluto FAR* FAR* ppDatabaseServer) PURE;
    STDMETHOD(get_DatabaseServers)(THIS_ ISQLDatabaseServersPluto FAR* FAR* ppDatabaseServers) PURE;
    STDMETHOD(get_CommandTimeout)(THIS_ long FAR* plTimeout) PURE;
    STDMETHOD(put_CommandTimeout)(THIS_ long lTimeout) PURE;

    /* ISQLConnectionIxtapa methods */
    STDMETHOD(get_BatchSeparator)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_BatchSeparator)(THIS_ BSTR bstrVal) PURE;

    /* ISQLConnectionJustice methods */
    STDMETHOD(get_SkipCxnIfReqNotMet)(THIS_ VARIANT_BOOL FAR* pvbVal) PURE;
    STDMETHOD(put_SkipCxnIfReqNotMet)(THIS_ VARIANT_BOOL vbVal) PURE;
#endif

    /* ISQLConnectionLoyalty methods */
    STDMETHOD(AddSQLScript)(THIS_ BSTR strName, VARIANT_BOOL vbLookupUniqueName, VARIANT_BOOL vbCreateComponent, ISQLScriptFileProteus FAR* FAR* ppSQLScript) PURE;
};

DEFINE_GUID(IID_ISQLConnectionsProteus,0x2DACC711L,0xFDF4,0x4557,0xB3,0x12,0x73,0xCD,0x3F,0xED,0x43,0xD5);

/* Definition of interface: ISQLConnectionsProteus */
#undef INTERFACE
#define INTERFACE ISQLConnectionsProteus

DECLARE_INTERFACE_(ISQLConnectionsProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLConnectionsProteus methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ISQLConnectionProteus FAR* FAR* ppSQLConnection) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ISQLDBMetaDataPluto,0x40A0E90DL,0xE936,0x4EEF,0x9B,0xAE,0x31,0x73,0x93,0x44,0xFA,0xD3);

/* Definition of interface: ISQLDBMetaDataPluto */
#undef INTERFACE
#define INTERFACE ISQLDBMetaDataPluto

DECLARE_INTERFACE_(ISQLDBMetaDataPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLDBMetaDataPluto methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pbstrDisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_AdoDriverName)(THIS_ BSTR FAR* pbstrDriverName) PURE;
    STDMETHOD(put_AdoDriverName)(THIS_ BSTR bstrAdoDriverName) PURE;
    STDMETHOD(get_AdoCxnDriver)(THIS_ BSTR FAR* pbstrCxnDriver) PURE;
    STDMETHOD(put_AdoCxnDriver)(THIS_ BSTR bstrCxnDriver) PURE;
    STDMETHOD(get_AdoCxnServer)(THIS_ BSTR FAR* pbstrCxnServer) PURE;
    STDMETHOD(put_AdoCxnServer)(THIS_ BSTR bstrCxnServer) PURE;
    STDMETHOD(get_AdoCxnDatabase)(THIS_ BSTR FAR* pbstrCxnDatabase) PURE;
    STDMETHOD(put_AdoCxnDatabase)(THIS_ BSTR bstrCxnDatabase) PURE;
    STDMETHOD(get_AdoCxnUserID)(THIS_ BSTR FAR* pbstrCxnUserID) PURE;
    STDMETHOD(put_AdoCxnUserID)(THIS_ BSTR bstrCxnUserID) PURE;
    STDMETHOD(get_AdoCxnPassword)(THIS_ BSTR FAR* pbstrCxnPassword) PURE;
    STDMETHOD(put_AdoCxnPassword)(THIS_ BSTR bstrCxnPassword) PURE;
    STDMETHOD(get_AdoCxnWindowsSecurity)(THIS_ BSTR FAR* pbstrCxnWindowsSecurity) PURE;
    STDMETHOD(put_AdoCxnWindowsSecurity)(THIS_ BSTR bstrCxnWindowsSecurity) PURE;
    STDMETHOD(get_AdoCxnNetLibrary)(THIS_ BSTR FAR* pbstrCxnNetLibrary) PURE;
    STDMETHOD(put_AdoCxnNetLibrary)(THIS_ BSTR bstrCxnNetLibrary) PURE;
    STDMETHOD(get_VersionBeginToken)(THIS_ BSTR FAR* pbstrBeginToken) PURE;
    STDMETHOD(put_VersionBeginToken)(THIS_ BSTR bstrBeginToken) PURE;
    STDMETHOD(get_VersionEndToken)(THIS_ BSTR FAR* pbstrEndToken) PURE;
    STDMETHOD(put_VersionEndToken)(THIS_ BSTR bstrEndToken) PURE;
    STDMETHOD(get_VersionInfoCmd)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_VersionInfoCmd)(THIS_ BSTR bstrCommand) PURE;
    STDMETHOD(get_LocalInstanceNames)(THIS_ BSTR FAR* pbstrLocalNames) PURE;
    STDMETHOD(put_LocalInstanceNames)(THIS_ BSTR bstrLocalNames) PURE;
    STDMETHOD(get_TestDatabaseCmd)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_TestDatabaseCmd)(THIS_ BSTR bstrCommand) PURE;
    STDMETHOD(get_TestTableCmd)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_TestTableCmd)(THIS_ BSTR bstrCommand) PURE;
};

DEFINE_GUID(IID_ISQLDBMetaDataIbiza,0xE489ECC7L,0x7201,0x47EC,0x85,0x0B,0x90,0xE0,0x8C,0x69,0x2F,0x11);

/* Definition of interface: ISQLDBMetaDataIbiza */
#undef INTERFACE
#define INTERFACE ISQLDBMetaDataIbiza

DECLARE_INTERFACE_(ISQLDBMetaDataIbiza, ISQLDBMetaDataPluto)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLDBMetaDataPluto methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pbstrDisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_AdoDriverName)(THIS_ BSTR FAR* pbstrDriverName) PURE;
    STDMETHOD(put_AdoDriverName)(THIS_ BSTR bstrAdoDriverName) PURE;
    STDMETHOD(get_AdoCxnDriver)(THIS_ BSTR FAR* pbstrCxnDriver) PURE;
    STDMETHOD(put_AdoCxnDriver)(THIS_ BSTR bstrCxnDriver) PURE;
    STDMETHOD(get_AdoCxnServer)(THIS_ BSTR FAR* pbstrCxnServer) PURE;
    STDMETHOD(put_AdoCxnServer)(THIS_ BSTR bstrCxnServer) PURE;
    STDMETHOD(get_AdoCxnDatabase)(THIS_ BSTR FAR* pbstrCxnDatabase) PURE;
    STDMETHOD(put_AdoCxnDatabase)(THIS_ BSTR bstrCxnDatabase) PURE;
    STDMETHOD(get_AdoCxnUserID)(THIS_ BSTR FAR* pbstrCxnUserID) PURE;
    STDMETHOD(put_AdoCxnUserID)(THIS_ BSTR bstrCxnUserID) PURE;
    STDMETHOD(get_AdoCxnPassword)(THIS_ BSTR FAR* pbstrCxnPassword) PURE;
    STDMETHOD(put_AdoCxnPassword)(THIS_ BSTR bstrCxnPassword) PURE;
    STDMETHOD(get_AdoCxnWindowsSecurity)(THIS_ BSTR FAR* pbstrCxnWindowsSecurity) PURE;
    STDMETHOD(put_AdoCxnWindowsSecurity)(THIS_ BSTR bstrCxnWindowsSecurity) PURE;
    STDMETHOD(get_AdoCxnNetLibrary)(THIS_ BSTR FAR* pbstrCxnNetLibrary) PURE;
    STDMETHOD(put_AdoCxnNetLibrary)(THIS_ BSTR bstrCxnNetLibrary) PURE;
    STDMETHOD(get_VersionBeginToken)(THIS_ BSTR FAR* pbstrBeginToken) PURE;
    STDMETHOD(put_VersionBeginToken)(THIS_ BSTR bstrBeginToken) PURE;
    STDMETHOD(get_VersionEndToken)(THIS_ BSTR FAR* pbstrEndToken) PURE;
    STDMETHOD(put_VersionEndToken)(THIS_ BSTR bstrEndToken) PURE;
    STDMETHOD(get_VersionInfoCmd)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_VersionInfoCmd)(THIS_ BSTR bstrCommand) PURE;
    STDMETHOD(get_LocalInstanceNames)(THIS_ BSTR FAR* pbstrLocalNames) PURE;
    STDMETHOD(put_LocalInstanceNames)(THIS_ BSTR bstrLocalNames) PURE;
    STDMETHOD(get_TestDatabaseCmd)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_TestDatabaseCmd)(THIS_ BSTR bstrCommand) PURE;
    STDMETHOD(get_TestTableCmd)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_TestTableCmd)(THIS_ BSTR bstrCommand) PURE;
#endif

    /* ISQLDBMetaDataIbiza methods */
    STDMETHOD(get_CreateDbCmd)(THIS_ BSTR FAR* pbstrCreateDbCmd) PURE;
    STDMETHOD(put_CreateDbCmd)(THIS_ BSTR bstrCreateDbCmd) PURE;
    STDMETHOD(get_SwitchDbCmd)(THIS_ BSTR FAR* pbstrSwitchDbCmd) PURE;
    STDMETHOD(put_SwitchDbCmd)(THIS_ BSTR bstrSwitchDbCmd) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* pISAttributes) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long ISAttributes) PURE;
    STDMETHOD(get_TestTableCmd2)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_TestTableCmd2)(THIS_ BSTR bstrCommand) PURE;
    STDMETHOD(get_WinAuthentUserId)(THIS_ BSTR FAR* pbstrWinAuthentUserId) PURE;
    STDMETHOD(put_WinAuthentUserId)(THIS_ BSTR bstrWinAuthentUserId) PURE;
    STDMETHOD(get_DsnODBCName)(THIS_ BSTR FAR* pbstrDsnODBCName) PURE;
    STDMETHOD(put_DsnODBCName)(THIS_ BSTR bstrDsnODBCName) PURE;
};

DEFINE_GUID(IID_ISQLDBMetaDataIndore,0x8685492FL,0xCC80,0x40F3,0x93,0x0B,0xBA,0xC3,0x25,0x40,0x93,0x12);

/* Definition of interface: ISQLDBMetaDataIndore */
#undef INTERFACE
#define INTERFACE ISQLDBMetaDataIndore

DECLARE_INTERFACE_(ISQLDBMetaDataIndore, ISQLDBMetaDataIbiza)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLDBMetaDataPluto methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pbstrDisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_AdoDriverName)(THIS_ BSTR FAR* pbstrDriverName) PURE;
    STDMETHOD(put_AdoDriverName)(THIS_ BSTR bstrAdoDriverName) PURE;
    STDMETHOD(get_AdoCxnDriver)(THIS_ BSTR FAR* pbstrCxnDriver) PURE;
    STDMETHOD(put_AdoCxnDriver)(THIS_ BSTR bstrCxnDriver) PURE;
    STDMETHOD(get_AdoCxnServer)(THIS_ BSTR FAR* pbstrCxnServer) PURE;
    STDMETHOD(put_AdoCxnServer)(THIS_ BSTR bstrCxnServer) PURE;
    STDMETHOD(get_AdoCxnDatabase)(THIS_ BSTR FAR* pbstrCxnDatabase) PURE;
    STDMETHOD(put_AdoCxnDatabase)(THIS_ BSTR bstrCxnDatabase) PURE;
    STDMETHOD(get_AdoCxnUserID)(THIS_ BSTR FAR* pbstrCxnUserID) PURE;
    STDMETHOD(put_AdoCxnUserID)(THIS_ BSTR bstrCxnUserID) PURE;
    STDMETHOD(get_AdoCxnPassword)(THIS_ BSTR FAR* pbstrCxnPassword) PURE;
    STDMETHOD(put_AdoCxnPassword)(THIS_ BSTR bstrCxnPassword) PURE;
    STDMETHOD(get_AdoCxnWindowsSecurity)(THIS_ BSTR FAR* pbstrCxnWindowsSecurity) PURE;
    STDMETHOD(put_AdoCxnWindowsSecurity)(THIS_ BSTR bstrCxnWindowsSecurity) PURE;
    STDMETHOD(get_AdoCxnNetLibrary)(THIS_ BSTR FAR* pbstrCxnNetLibrary) PURE;
    STDMETHOD(put_AdoCxnNetLibrary)(THIS_ BSTR bstrCxnNetLibrary) PURE;
    STDMETHOD(get_VersionBeginToken)(THIS_ BSTR FAR* pbstrBeginToken) PURE;
    STDMETHOD(put_VersionBeginToken)(THIS_ BSTR bstrBeginToken) PURE;
    STDMETHOD(get_VersionEndToken)(THIS_ BSTR FAR* pbstrEndToken) PURE;
    STDMETHOD(put_VersionEndToken)(THIS_ BSTR bstrEndToken) PURE;
    STDMETHOD(get_VersionInfoCmd)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_VersionInfoCmd)(THIS_ BSTR bstrCommand) PURE;
    STDMETHOD(get_LocalInstanceNames)(THIS_ BSTR FAR* pbstrLocalNames) PURE;
    STDMETHOD(put_LocalInstanceNames)(THIS_ BSTR bstrLocalNames) PURE;
    STDMETHOD(get_TestDatabaseCmd)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_TestDatabaseCmd)(THIS_ BSTR bstrCommand) PURE;
    STDMETHOD(get_TestTableCmd)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_TestTableCmd)(THIS_ BSTR bstrCommand) PURE;

    /* ISQLDBMetaDataIbiza methods */
    STDMETHOD(get_CreateDbCmd)(THIS_ BSTR FAR* pbstrCreateDbCmd) PURE;
    STDMETHOD(put_CreateDbCmd)(THIS_ BSTR bstrCreateDbCmd) PURE;
    STDMETHOD(get_SwitchDbCmd)(THIS_ BSTR FAR* pbstrSwitchDbCmd) PURE;
    STDMETHOD(put_SwitchDbCmd)(THIS_ BSTR bstrSwitchDbCmd) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* pISAttributes) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long ISAttributes) PURE;
    STDMETHOD(get_TestTableCmd2)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_TestTableCmd2)(THIS_ BSTR bstrCommand) PURE;
    STDMETHOD(get_WinAuthentUserId)(THIS_ BSTR FAR* pbstrWinAuthentUserId) PURE;
    STDMETHOD(put_WinAuthentUserId)(THIS_ BSTR bstrWinAuthentUserId) PURE;
    STDMETHOD(get_DsnODBCName)(THIS_ BSTR FAR* pbstrDsnODBCName) PURE;
    STDMETHOD(put_DsnODBCName)(THIS_ BSTR bstrDsnODBCName) PURE;
#endif

    /* ISQLDBMetaDataIndore methods */
    STDMETHOD(get_AdoCxnPort)(THIS_ BSTR FAR* pbstrAdoCxnPort) PURE;
    STDMETHOD(put_AdoCxnPort)(THIS_ BSTR bstrAdoCxnPort) PURE;
    STDMETHOD(get_AdoCxnAdditional)(THIS_ BSTR FAR* pbstrAdoCxnAdditional) PURE;
    STDMETHOD(put_AdoCxnAdditional)(THIS_ BSTR bstrAdoCxnAdditional) PURE;
};

DEFINE_GUID(IID_ISQLDBMetaDataIronwood,0xB6AB10A1L,0x415E,0x4378,0xBB,0x53,0x46,0x5E,0x7E,0x15,0xFF,0xFB);

/* Definition of interface: ISQLDBMetaDataIronwood */
#undef INTERFACE
#define INTERFACE ISQLDBMetaDataIronwood

DECLARE_INTERFACE_(ISQLDBMetaDataIronwood, ISQLDBMetaDataIndore)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISQLDBMetaDataPluto methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pbstrDisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_AdoDriverName)(THIS_ BSTR FAR* pbstrDriverName) PURE;
    STDMETHOD(put_AdoDriverName)(THIS_ BSTR bstrAdoDriverName) PURE;
    STDMETHOD(get_AdoCxnDriver)(THIS_ BSTR FAR* pbstrCxnDriver) PURE;
    STDMETHOD(put_AdoCxnDriver)(THIS_ BSTR bstrCxnDriver) PURE;
    STDMETHOD(get_AdoCxnServer)(THIS_ BSTR FAR* pbstrCxnServer) PURE;
    STDMETHOD(put_AdoCxnServer)(THIS_ BSTR bstrCxnServer) PURE;
    STDMETHOD(get_AdoCxnDatabase)(THIS_ BSTR FAR* pbstrCxnDatabase) PURE;
    STDMETHOD(put_AdoCxnDatabase)(THIS_ BSTR bstrCxnDatabase) PURE;
    STDMETHOD(get_AdoCxnUserID)(THIS_ BSTR FAR* pbstrCxnUserID) PURE;
    STDMETHOD(put_AdoCxnUserID)(THIS_ BSTR bstrCxnUserID) PURE;
    STDMETHOD(get_AdoCxnPassword)(THIS_ BSTR FAR* pbstrCxnPassword) PURE;
    STDMETHOD(put_AdoCxnPassword)(THIS_ BSTR bstrCxnPassword) PURE;
    STDMETHOD(get_AdoCxnWindowsSecurity)(THIS_ BSTR FAR* pbstrCxnWindowsSecurity) PURE;
    STDMETHOD(put_AdoCxnWindowsSecurity)(THIS_ BSTR bstrCxnWindowsSecurity) PURE;
    STDMETHOD(get_AdoCxnNetLibrary)(THIS_ BSTR FAR* pbstrCxnNetLibrary) PURE;
    STDMETHOD(put_AdoCxnNetLibrary)(THIS_ BSTR bstrCxnNetLibrary) PURE;
    STDMETHOD(get_VersionBeginToken)(THIS_ BSTR FAR* pbstrBeginToken) PURE;
    STDMETHOD(put_VersionBeginToken)(THIS_ BSTR bstrBeginToken) PURE;
    STDMETHOD(get_VersionEndToken)(THIS_ BSTR FAR* pbstrEndToken) PURE;
    STDMETHOD(put_VersionEndToken)(THIS_ BSTR bstrEndToken) PURE;
    STDMETHOD(get_VersionInfoCmd)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_VersionInfoCmd)(THIS_ BSTR bstrCommand) PURE;
    STDMETHOD(get_LocalInstanceNames)(THIS_ BSTR FAR* pbstrLocalNames) PURE;
    STDMETHOD(put_LocalInstanceNames)(THIS_ BSTR bstrLocalNames) PURE;
    STDMETHOD(get_TestDatabaseCmd)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_TestDatabaseCmd)(THIS_ BSTR bstrCommand) PURE;
    STDMETHOD(get_TestTableCmd)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_TestTableCmd)(THIS_ BSTR bstrCommand) PURE;

    /* ISQLDBMetaDataIbiza methods */
    STDMETHOD(get_CreateDbCmd)(THIS_ BSTR FAR* pbstrCreateDbCmd) PURE;
    STDMETHOD(put_CreateDbCmd)(THIS_ BSTR bstrCreateDbCmd) PURE;
    STDMETHOD(get_SwitchDbCmd)(THIS_ BSTR FAR* pbstrSwitchDbCmd) PURE;
    STDMETHOD(put_SwitchDbCmd)(THIS_ BSTR bstrSwitchDbCmd) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* pISAttributes) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long ISAttributes) PURE;
    STDMETHOD(get_TestTableCmd2)(THIS_ BSTR FAR* pbstrCommand) PURE;
    STDMETHOD(put_TestTableCmd2)(THIS_ BSTR bstrCommand) PURE;
    STDMETHOD(get_WinAuthentUserId)(THIS_ BSTR FAR* pbstrWinAuthentUserId) PURE;
    STDMETHOD(put_WinAuthentUserId)(THIS_ BSTR bstrWinAuthentUserId) PURE;
    STDMETHOD(get_DsnODBCName)(THIS_ BSTR FAR* pbstrDsnODBCName) PURE;
    STDMETHOD(put_DsnODBCName)(THIS_ BSTR bstrDsnODBCName) PURE;

    /* ISQLDBMetaDataIndore methods */
    STDMETHOD(get_AdoCxnPort)(THIS_ BSTR FAR* pbstrAdoCxnPort) PURE;
    STDMETHOD(put_AdoCxnPort)(THIS_ BSTR bstrAdoCxnPort) PURE;
    STDMETHOD(get_AdoCxnAdditional)(THIS_ BSTR FAR* pbstrAdoCxnAdditional) PURE;
    STDMETHOD(put_AdoCxnAdditional)(THIS_ BSTR bstrAdoCxnAdditional) PURE;
#endif

    /* ISQLDBMetaDataIronwood methods */
    STDMETHOD(get_QueryDatabasesCmd)(THIS_ BSTR FAR* pQueryDatabasesCmd) PURE;
    STDMETHOD(put_QueryDatabasesCmd)(THIS_ BSTR QueryDatabasesCmd) PURE;
    STDMETHOD(get_CreateTableCmd)(THIS_ BSTR FAR* pCreateTableCmd) PURE;
    STDMETHOD(put_CreateTableCmd)(THIS_ BSTR CreateTableCmd) PURE;
    STDMETHOD(get_InsertRecordCmd)(THIS_ BSTR FAR* pInsertRecordCmd) PURE;
    STDMETHOD(put_InsertRecordCmd)(THIS_ BSTR InsertRecordCmd) PURE;
    STDMETHOD(get_SelectTableCmd)(THIS_ BSTR FAR* pSelectTableCmd) PURE;
    STDMETHOD(put_SelectTableCmd)(THIS_ BSTR SelectTableCmd) PURE;
    STDMETHOD(get_ScriptVersionTable)(THIS_ BSTR FAR* pScriptVersionTable) PURE;
    STDMETHOD(put_ScriptVersionTable)(THIS_ BSTR ScriptVersionTable) PURE;
    STDMETHOD(get_ScriptVersionColumn)(THIS_ BSTR FAR* pScriptVersionColumn) PURE;
    STDMETHOD(put_ScriptVersionColumn)(THIS_ BSTR ScriptVersionColumn) PURE;
    STDMETHOD(get_ScriptVersionColumnType)(THIS_ BSTR FAR* pScriptVersionColumnType) PURE;
    STDMETHOD(put_ScriptVersionColumnType)(THIS_ BSTR ScriptVersionColumnType) PURE;
};

DEFINE_GUID(IID_ISQLDBMetaDataColPluto,0x6D875E0EL,0xF566,0x41DC,0x97,0x4D,0x14,0xBA,0x2C,0xEB,0x21,0xC8);

/* Definition of interface: ISQLDBMetaDataColPluto */
#undef INTERFACE
#define INTERFACE ISQLDBMetaDataColPluto

DECLARE_INTERFACE_(ISQLDBMetaDataColPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLDBMetaDataColPluto methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ISQLDBMetaDataPluto FAR* FAR* ppDBMetaData) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_ISQLDatabaseServerPluto,0x09D4B8B7L,0xA187,0x4951,0x96,0x1D,0x2E,0xB5,0xD6,0xFA,0xE2,0x9F);

/* Definition of interface: ISQLDatabaseServerPluto */
#undef INTERFACE
#define INTERFACE ISQLDatabaseServerPluto

DECLARE_INTERFACE_(ISQLDatabaseServerPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLDatabaseServerPluto methods */
    STDMETHOD(get_Key)(THIS_ BSTR FAR* pbstrKey) PURE;
    STDMETHOD(put_Key)(THIS_ BSTR bstrKey) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* plOrder) PURE;
    STDMETHOD(put_Order)(THIS_ long lOrder) PURE;
    STDMETHOD(get_SQLRequirements)(THIS_ ISQLRequirementsProteus FAR* FAR* ppSQLRequirements) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSQLDBServerChild esdb, IBusinessObject FAR* FAR* ppBusinessObject) PURE;
};

DEFINE_GUID(IID_ISQLDatabaseServersPluto,0x15FB1378L,0x1E21,0x4432,0xAC,0x42,0x19,0x3D,0xFE,0x0D,0x24,0xEA);

/* Definition of interface: ISQLDatabaseServersPluto */
#undef INTERFACE
#define INTERFACE ISQLDatabaseServersPluto

DECLARE_INTERFACE_(ISQLDatabaseServersPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISQLDatabaseServersPluto methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, ISQLDatabaseServerPluto FAR* FAR* ppDatabaseServer) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IWebSiteProteus,0x20F9C1C0L,0xC844,0x4866,0xB7,0x7B,0x5C,0x34,0x89,0xA8,0x6B,0xC2);

/* Definition of interface: IWebSiteProteus */
#undef INTERFACE
#define INTERFACE IWebSiteProteus

DECLARE_INTERFACE_(IWebSiteProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IWebSiteProteus methods */
    STDMETHOD(get_Port)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Port)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_RootDir)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_RootDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IP)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_IP)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SiteNumber)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SiteNumber)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_DeleteOnUninstall)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DeleteOnUninstall)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_SessionTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_SessionTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_ScriptTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_ScriptTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_DefDoc)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_DefDoc)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyUserName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyUserName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyPasswrd)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyPasswrd)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CustomErrors)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_CustomErrors)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Indexing)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Indexing)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ReadAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ReadAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_WriteAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_WriteAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ScriptSrcAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ScriptSrcAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DirBrowse)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DirBrowse)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_LogVisit)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_LogVisit)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonyAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonyAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_BasicAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_BasicAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonySyncPass)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonySyncPass)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(InsertVRoot)(THIS_ IBusinessObject FAR* pBusObjVRoot) PURE;
    STDMETHOD(get_AppMaps)(THIS_ IVRootAppMaps FAR* FAR* ppVRootAppMaps) PURE;
    STDMETHOD(AddAppMap)(THIS_ BSTR sExtension, BSTR sExecPath, BSTR sVerb, long AppMapProps, IVRootAppMap FAR* FAR* ppVal) PURE;
    STDMETHOD(get_WebSiteKey)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_WebSiteKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SSLCert)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SSLCert)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IWebSiteIbiza,0xC62EEFE5L,0x2D41,0x47BF,0xBC,0x36,0x27,0xA0,0xD9,0x86,0xA4,0x3F);

/* Definition of interface: IWebSiteIbiza */
#undef INTERFACE
#define INTERFACE IWebSiteIbiza

DECLARE_INTERFACE_(IWebSiteIbiza, IWebSiteProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IWebSiteProteus methods */
    STDMETHOD(get_Port)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Port)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_RootDir)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_RootDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IP)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_IP)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SiteNumber)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SiteNumber)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_DeleteOnUninstall)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DeleteOnUninstall)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_SessionTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_SessionTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_ScriptTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_ScriptTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_DefDoc)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_DefDoc)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyUserName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyUserName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyPasswrd)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyPasswrd)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CustomErrors)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_CustomErrors)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Indexing)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Indexing)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ReadAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ReadAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_WriteAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_WriteAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ScriptSrcAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ScriptSrcAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DirBrowse)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DirBrowse)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_LogVisit)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_LogVisit)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonyAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonyAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_BasicAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_BasicAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonySyncPass)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonySyncPass)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(InsertVRoot)(THIS_ IBusinessObject FAR* pBusObjVRoot) PURE;
    STDMETHOD(get_AppMaps)(THIS_ IVRootAppMaps FAR* FAR* ppVRootAppMaps) PURE;
    STDMETHOD(AddAppMap)(THIS_ BSTR sExtension, BSTR sExecPath, BSTR sVerb, long AppMapProps, IVRootAppMap FAR* FAR* ppVal) PURE;
    STDMETHOD(get_WebSiteKey)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_WebSiteKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SSLCert)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SSLCert)(THIS_ BSTR Value) PURE;
#endif

    /* IWebSiteIbiza methods */
    STDMETHOD(get_AppPool)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AppPool)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IWebSitesProteus,0x54A7AC99L,0x8033,0x41C2,0x93,0x8E,0x71,0x93,0x2A,0x56,0x61,0xD4);

/* Definition of interface: IWebSitesProteus */
#undef INTERFACE
#define INTERFACE IWebSitesProteus

DECLARE_INTERFACE_(IWebSitesProteus, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IWebSitesProteus methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IWebSiteProteus FAR* FAR* pWebSite) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
    STDMETHOD(get_NextAvailablePort)(THIS_ long FAR* plPort) PURE;
};

DEFINE_GUID(IID_IWebSiteIxtapa,0x9B2F489EL,0xED96,0x4CF2,0x9D,0x90,0x14,0x4F,0x35,0x6E,0xDC,0xE1);

/* Definition of interface: IWebSiteIxtapa */
#undef INTERFACE
#define INTERFACE IWebSiteIxtapa

DECLARE_INTERFACE_(IWebSiteIxtapa, IWebSiteIbiza)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IWebSiteProteus methods */
    STDMETHOD(get_Port)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Port)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_RootDir)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_RootDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IP)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_IP)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SiteNumber)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SiteNumber)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_DeleteOnUninstall)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DeleteOnUninstall)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_SessionTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_SessionTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_ScriptTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_ScriptTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_DefDoc)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_DefDoc)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyUserName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyUserName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyPasswrd)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyPasswrd)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CustomErrors)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_CustomErrors)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Indexing)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Indexing)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ReadAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ReadAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_WriteAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_WriteAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ScriptSrcAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ScriptSrcAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DirBrowse)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DirBrowse)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_LogVisit)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_LogVisit)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonyAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonyAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_BasicAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_BasicAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonySyncPass)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonySyncPass)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(InsertVRoot)(THIS_ IBusinessObject FAR* pBusObjVRoot) PURE;
    STDMETHOD(get_AppMaps)(THIS_ IVRootAppMaps FAR* FAR* ppVRootAppMaps) PURE;
    STDMETHOD(AddAppMap)(THIS_ BSTR sExtension, BSTR sExecPath, BSTR sVerb, long AppMapProps, IVRootAppMap FAR* FAR* ppVal) PURE;
    STDMETHOD(get_WebSiteKey)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_WebSiteKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SSLCert)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SSLCert)(THIS_ BSTR Value) PURE;

    /* IWebSiteIbiza methods */
    STDMETHOD(get_AppPool)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AppPool)(THIS_ BSTR Value) PURE;
#endif

    /* IWebSiteIxtapa methods */
    STDMETHOD(get_Advanced)(THIS_ BSTR Property, BSTR FAR* Value) PURE;
    STDMETHOD(put_Advanced)(THIS_ BSTR Property, BSTR Value) PURE;
    STDMETHOD(get_AdvancedPropertyList)(THIS_ BSTR FAR* AdvancedPropertyList) PURE;
};

DEFINE_GUID(IID_IWebSiteIndore,0xFA82BE0CL,0x372A,0x4920,0x98,0x17,0x68,0x4D,0x01,0xF3,0x74,0x44);

/* Definition of interface: IWebSiteIndore */
#undef INTERFACE
#define INTERFACE IWebSiteIndore

DECLARE_INTERFACE_(IWebSiteIndore, IWebSiteIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IWebSiteProteus methods */
    STDMETHOD(get_Port)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Port)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_RootDir)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_RootDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IP)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_IP)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SiteNumber)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SiteNumber)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_DeleteOnUninstall)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DeleteOnUninstall)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_SessionTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_SessionTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_ScriptTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_ScriptTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_DefDoc)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_DefDoc)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyUserName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyUserName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyPasswrd)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyPasswrd)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CustomErrors)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_CustomErrors)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Indexing)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Indexing)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ReadAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ReadAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_WriteAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_WriteAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ScriptSrcAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ScriptSrcAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DirBrowse)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DirBrowse)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_LogVisit)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_LogVisit)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonyAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonyAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_BasicAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_BasicAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonySyncPass)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonySyncPass)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(InsertVRoot)(THIS_ IBusinessObject FAR* pBusObjVRoot) PURE;
    STDMETHOD(get_AppMaps)(THIS_ IVRootAppMaps FAR* FAR* ppVRootAppMaps) PURE;
    STDMETHOD(AddAppMap)(THIS_ BSTR sExtension, BSTR sExecPath, BSTR sVerb, long AppMapProps, IVRootAppMap FAR* FAR* ppVal) PURE;
    STDMETHOD(get_WebSiteKey)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_WebSiteKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SSLCert)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SSLCert)(THIS_ BSTR Value) PURE;

    /* IWebSiteIbiza methods */
    STDMETHOD(get_AppPool)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AppPool)(THIS_ BSTR Value) PURE;

    /* IWebSiteIxtapa methods */
    STDMETHOD(get_Advanced)(THIS_ BSTR Property, BSTR FAR* Value) PURE;
    STDMETHOD(put_Advanced)(THIS_ BSTR Property, BSTR Value) PURE;
    STDMETHOD(get_AdvancedPropertyList)(THIS_ BSTR FAR* AdvancedPropertyList) PURE;
#endif

    /* IWebSiteIndore methods */
    STDMETHOD(get_Aspversion)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Aspversion)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IWebSiteIronwood,0x84FCA516L,0x7C2B,0x4CD1,0x91,0xA1,0x13,0xA1,0xDC,0xD9,0x88,0xB5);

/* Definition of interface: IWebSiteIronwood */
#undef INTERFACE
#define INTERFACE IWebSiteIronwood

DECLARE_INTERFACE_(IWebSiteIronwood, IWebSiteIndore)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IWebSiteProteus methods */
    STDMETHOD(get_Port)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Port)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_RootDir)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_RootDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IP)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_IP)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SiteNumber)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SiteNumber)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_DeleteOnUninstall)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DeleteOnUninstall)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_SessionTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_SessionTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_ScriptTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_ScriptTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_DefDoc)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_DefDoc)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyUserName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyUserName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyPasswrd)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyPasswrd)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CustomErrors)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_CustomErrors)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Indexing)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Indexing)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ReadAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ReadAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_WriteAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_WriteAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ScriptSrcAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ScriptSrcAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DirBrowse)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DirBrowse)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_LogVisit)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_LogVisit)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonyAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonyAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_BasicAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_BasicAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonySyncPass)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonySyncPass)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(InsertVRoot)(THIS_ IBusinessObject FAR* pBusObjVRoot) PURE;
    STDMETHOD(get_AppMaps)(THIS_ IVRootAppMaps FAR* FAR* ppVRootAppMaps) PURE;
    STDMETHOD(AddAppMap)(THIS_ BSTR sExtension, BSTR sExecPath, BSTR sVerb, long AppMapProps, IVRootAppMap FAR* FAR* ppVal) PURE;
    STDMETHOD(get_WebSiteKey)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_WebSiteKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SSLCert)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SSLCert)(THIS_ BSTR Value) PURE;

    /* IWebSiteIbiza methods */
    STDMETHOD(get_AppPool)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AppPool)(THIS_ BSTR Value) PURE;

    /* IWebSiteIxtapa methods */
    STDMETHOD(get_Advanced)(THIS_ BSTR Property, BSTR FAR* Value) PURE;
    STDMETHOD(put_Advanced)(THIS_ BSTR Property, BSTR Value) PURE;
    STDMETHOD(get_AdvancedPropertyList)(THIS_ BSTR FAR* AdvancedPropertyList) PURE;

    /* IWebSiteIndore methods */
    STDMETHOD(get_Aspversion)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Aspversion)(THIS_ BSTR Value) PURE;
#endif

    /* IWebSiteIronwood methods */
    STDMETHOD(get_SslPassword)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SslPassword)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_HostHeaderName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_HostHeaderName)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IWebSiteJustice,0xC06432E6L,0x193A,0x4A6E,0xA9,0xCA,0x32,0xF6,0x59,0x32,0xD8,0x44);

/* Definition of interface: IWebSiteJustice */
#undef INTERFACE
#define INTERFACE IWebSiteJustice

DECLARE_INTERFACE_(IWebSiteJustice, IWebSiteIronwood)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IWebSiteProteus methods */
    STDMETHOD(get_Port)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Port)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_RootDir)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_RootDir)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IP)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_IP)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SiteNumber)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SiteNumber)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_DeleteOnUninstall)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DeleteOnUninstall)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_SessionTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_SessionTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_ScriptTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_ScriptTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_DefDoc)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_DefDoc)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyUserName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyUserName)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_AnonyPasswrd)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AnonyPasswrd)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_CustomErrors)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_CustomErrors)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Indexing)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Indexing)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ReadAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ReadAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_WriteAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_WriteAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_ScriptSrcAccess)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_ScriptSrcAccess)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_DirBrowse)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_DirBrowse)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_LogVisit)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_LogVisit)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonyAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonyAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_BasicAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_BasicAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_NTIntegratedAuthMode)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_AnonySyncPass)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_AnonySyncPass)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(InsertVRoot)(THIS_ IBusinessObject FAR* pBusObjVRoot) PURE;
    STDMETHOD(get_AppMaps)(THIS_ IVRootAppMaps FAR* FAR* ppVRootAppMaps) PURE;
    STDMETHOD(AddAppMap)(THIS_ BSTR sExtension, BSTR sExecPath, BSTR sVerb, long AppMapProps, IVRootAppMap FAR* FAR* ppVal) PURE;
    STDMETHOD(get_WebSiteKey)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_WebSiteKey)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_SSLCert)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SSLCert)(THIS_ BSTR Value) PURE;

    /* IWebSiteIbiza methods */
    STDMETHOD(get_AppPool)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AppPool)(THIS_ BSTR Value) PURE;

    /* IWebSiteIxtapa methods */
    STDMETHOD(get_Advanced)(THIS_ BSTR Property, BSTR FAR* Value) PURE;
    STDMETHOD(put_Advanced)(THIS_ BSTR Property, BSTR Value) PURE;
    STDMETHOD(get_AdvancedPropertyList)(THIS_ BSTR FAR* AdvancedPropertyList) PURE;

    /* IWebSiteIndore methods */
    STDMETHOD(get_Aspversion)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Aspversion)(THIS_ BSTR Value) PURE;

    /* IWebSiteIronwood methods */
    STDMETHOD(get_SslPassword)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_SslPassword)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_HostHeaderName)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_HostHeaderName)(THIS_ BSTR Value) PURE;
#endif

    /* IWebSiteJustice methods */
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
};

typedef enum EnumDRMFileChild {
    edrmcAttribute = 1
} EnumDRMFileChild;

typedef enum EnumDRMShellType {
    edrmstTryDie = 1,
    edrmstTryBuy = 2
} EnumDRMShellType;

DEFINE_GUID(IID_IDRMFileAttributePluto,0x08DA6585L,0x5E62,0x413B,0xA4,0xB8,0x26,0x02,0x4F,0x4B,0x12,0xB8);

/* Definition of interface: IDRMFileAttributePluto */
#undef INTERFACE
#define INTERFACE IDRMFileAttributePluto

DECLARE_INTERFACE_(IDRMFileAttributePluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDRMFileAttributePluto methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IDRMFileAttributesPluto,0xEFB7C242L,0xF6CA,0x4A77,0xA4,0xA8,0xF8,0x68,0x88,0xCE,0x92,0x7D);

/* Definition of interface: IDRMFileAttributesPluto */
#undef INTERFACE
#define INTERFACE IDRMFileAttributesPluto

DECLARE_INTERFACE_(IDRMFileAttributesPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDRMFileAttributesPluto methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IDRMFileAttributePluto FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IDRMLicensePluto,0x325F88B6L,0x4BCF,0x4909,0xA5,0xFA,0xBA,0x21,0x60,0xD6,0x32,0xEF);

/* Definition of interface: IDRMLicensePluto */
#undef INTERFACE
#define INTERFACE IDRMLicensePluto

DECLARE_INTERFACE_(IDRMLicensePluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDRMLicensePluto methods */
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* pVersion) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_IsDataValid)(THIS_ VARIANT_BOOL FAR* pIsDataValid) PURE;
    STDMETHOD(PutData)(THIS_ BSTR RequestCode, BSTR ResponseCode, BSTR LicenseNumber) PURE;
};

DEFINE_GUID(IID_IDRMLicenseIbiza,0x7C5428BEL,0xB291,0x403D,0xBA,0x9B,0x16,0x71,0xBF,0xA4,0x2A,0x0A);

/* Definition of interface: IDRMLicenseIbiza */
#undef INTERFACE
#define INTERFACE IDRMLicenseIbiza

DECLARE_INTERFACE_(IDRMLicenseIbiza, IDRMLicensePluto)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDRMLicensePluto methods */
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* pVersion) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_IsDataValid)(THIS_ VARIANT_BOOL FAR* pIsDataValid) PURE;
    STDMETHOD(PutData)(THIS_ BSTR RequestCode, BSTR ResponseCode, BSTR LicenseNumber) PURE;
#endif

    /* IDRMLicenseIbiza methods */
    STDMETHOD(get_LicenseNumString)(THIS_ BSTR FAR* pLicenseNumString) PURE;
};

DEFINE_GUID(IID_IDRMLicensesPluto,0x9139E43BL,0x49C0,0x4720,0xAC,0x69,0x34,0x2F,0x95,0xFE,0x7C,0xAD);

/* Definition of interface: IDRMLicensesPluto */
#undef INTERFACE
#define INTERFACE IDRMLicensesPluto

DECLARE_INTERFACE_(IDRMLicensesPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDRMLicensesPluto methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IDRMLicensePluto FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IDRMFilePluto,0x771DC109L,0xD72D,0x4609,0x86,0x9F,0x89,0x48,0x0C,0x66,0x0B,0x30);

/* Definition of interface: IDRMFilePluto */
#undef INTERFACE
#define INTERFACE IDRMFilePluto

DECLARE_INTERFACE_(IDRMFilePluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDRMFilePluto methods */
    STDMETHOD(AddChild)(THIS_ EnumDRMFileChild edrmcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Attributes)(THIS_ IDRMFileAttributesPluto FAR* FAR* ppAttributes) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* pFile) PURE;
    STDMETHOD(put_File)(THIS_ BSTR File) PURE;
    STDMETHOD(get_License)(THIS_ IDRMLicensePluto FAR* FAR* ppLicense) PURE;
    STDMETHOD(put_License)(THIS_ IDRMLicensePluto FAR* pLicense) PURE;
    STDMETHOD(get_ShellType)(THIS_ EnumDRMShellType FAR* pShellType) PURE;
    STDMETHOD(put_ShellType)(THIS_ EnumDRMShellType ShellType) PURE;
    STDMETHOD(CreateDuplicate)(THIS_ IDRMFilePluto FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IDRMFilesPluto,0xC10F874FL,0x7414,0x4D8B,0x9D,0x82,0xB3,0x43,0x36,0x39,0x07,0x0E);

/* Definition of interface: IDRMFilesPluto */
#undef INTERFACE
#define INTERFACE IDRMFilesPluto

DECLARE_INTERFACE_(IDRMFilesPluto, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDRMFilesPluto methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IDRMFilePluto FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IActionText,0xD6CF4306L,0x42FA,0x4869,0xBA,0xD3,0x4C,0xF5,0x76,0xA0,0xCC,0x33);

/* Definition of interface: IActionText */
#undef INTERFACE
#define INTERFACE IActionText

DECLARE_INTERFACE_(IActionText, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IActionText methods */
    STDMETHOD(get_Action)(THIS_ BSTR FAR* Action) PURE;
    STDMETHOD(put_Action)(THIS_ BSTR Action) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_Template)(THIS_ BSTR FAR* Template) PURE;
    STDMETHOD(put_Template)(THIS_ BSTR Template) PURE;
};

DEFINE_GUID(IID_IActionTexts,0x07C0E747L,0x1871,0x45F4,0xBE,0x2A,0x5E,0x56,0x94,0x4B,0x22,0xF5);

/* Definition of interface: IActionTexts */
#undef INTERFACE
#define INTERFACE IActionTexts

DECLARE_INTERFACE_(IActionTexts, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IActionTexts methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IActionText FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ITypeLib,0xD0C63FD4L,0x6217,0x460A,0x95,0x72,0x72,0x8C,0x74,0xF4,0xE3,0x94);

/* Definition of interface: ITypeLib */
#undef INTERFACE
#define INTERFACE ITypeLib

DECLARE_INTERFACE_(ITypeLib, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* ITypeLib methods */
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* GUID) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR GUID) PURE;
    STDMETHOD(get_LocaleID)(THIS_ long FAR* LocaleID) PURE;
    STDMETHOD(put_LocaleID)(THIS_ long LocaleID) PURE;
    STDMETHOD(get_Version)(THIS_ long FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ long Version) PURE;
    STDMETHOD(get_Cost)(THIS_ long FAR* Cost) PURE;
    STDMETHOD(put_Cost)(THIS_ long Cost) PURE;
    STDMETHOD(get_HelpPath)(THIS_ BSTR FAR* HelpPath) PURE;
    STDMETHOD(put_HelpPath)(THIS_ BSTR HelpPath) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;
    STDMETHOD(get_FeatureName)(THIS_ BSTR FAR* bstrFeatureName) PURE;
};

DEFINE_GUID(IID_ITypeLib2,0x845F1A88L,0x72E9,0x4F8F,0x81,0x98,0x82,0xCC,0x46,0xC3,0xA9,0x3B);

/* Definition of interface: ITypeLib2 */
#undef INTERFACE
#define INTERFACE ITypeLib2

DECLARE_INTERFACE_(ITypeLib2, ITypeLib)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* ITypeLib methods */
    STDMETHOD(get_GUID)(THIS_ BSTR FAR* GUID) PURE;
    STDMETHOD(put_GUID)(THIS_ BSTR GUID) PURE;
    STDMETHOD(get_LocaleID)(THIS_ long FAR* LocaleID) PURE;
    STDMETHOD(put_LocaleID)(THIS_ long LocaleID) PURE;
    STDMETHOD(get_Version)(THIS_ long FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ long Version) PURE;
    STDMETHOD(get_Cost)(THIS_ long FAR* Cost) PURE;
    STDMETHOD(put_Cost)(THIS_ long Cost) PURE;
    STDMETHOD(get_HelpPath)(THIS_ BSTR FAR* HelpPath) PURE;
    STDMETHOD(put_HelpPath)(THIS_ BSTR HelpPath) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_ComponentName)(THIS_ BSTR FAR* bstrComponentName) PURE;
    STDMETHOD(get_FeatureName)(THIS_ BSTR FAR* bstrFeatureName) PURE;
#endif

    /* ITypeLib2 methods */
    STDMETHOD(get_Feature)(THIS_ BSTR FAR* sFeature) PURE;
    STDMETHOD(put_Feature)(THIS_ BSTR sFeature) PURE;
};

DEFINE_GUID(IID_ITypeLibs,0xE68B9119L,0x8636,0x4EA6,0xBA,0x4C,0xAF,0x56,0xB4,0x7E,0x05,0xE7);

/* Definition of interface: ITypeLibs */
#undef INTERFACE
#define INTERFACE ITypeLibs

DECLARE_INTERFACE_(ITypeLibs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ITypeLibs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ITypeLib FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

typedef enum EnumPubCompChild {
    epcQualifier = 1
} EnumPubCompChild;

DEFINE_GUID(IID_IPubCompQualifier,0xA1B33373L,0x841C,0x4DBC,0xAC,0x70,0xF4,0x7A,0xAC,0x24,0x3F,0x2A);

/* Definition of interface: IPubCompQualifier */
#undef INTERFACE
#define INTERFACE IPubCompQualifier

DECLARE_INTERFACE_(IPubCompQualifier, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPubCompQualifier methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_AppData)(THIS_ BSTR FAR* sAppData) PURE;
    STDMETHOD(put_AppData)(THIS_ BSTR sAppData) PURE;
};

DEFINE_GUID(IID_IPubCompQualifier2,0x8CDB28FFL,0x3C3D,0x4B8C,0x8C,0x0D,0x8B,0x20,0x24,0x3B,0xEF,0xB5);

/* Definition of interface: IPubCompQualifier2 */
#undef INTERFACE
#define INTERFACE IPubCompQualifier2

DECLARE_INTERFACE_(IPubCompQualifier2, IPubCompQualifier)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IPubCompQualifier methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
    STDMETHOD(get_AppData)(THIS_ BSTR FAR* sAppData) PURE;
    STDMETHOD(put_AppData)(THIS_ BSTR sAppData) PURE;
#endif

    /* IPubCompQualifier2 methods */
    STDMETHOD(get_Feature)(THIS_ BSTR FAR* sFeature) PURE;
    STDMETHOD(put_Feature)(THIS_ BSTR sFeature) PURE;
};

DEFINE_GUID(IID_IPubCompQualifiers,0x74572BB3L,0x8E53,0x45F6,0xB3,0x81,0x44,0x3A,0x8A,0x20,0x3A,0x16);

/* Definition of interface: IPubCompQualifiers */
#undef INTERFACE
#define INTERFACE IPubCompQualifiers

DECLARE_INTERFACE_(IPubCompQualifiers, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPubCompQualifiers methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IPubCompQualifier FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IPubComp,0xC70DF956L,0x6DF8,0x44E0,0x90,0x0B,0x60,0x6E,0x61,0x82,0x15,0x0F);

/* Definition of interface: IPubComp */
#undef INTERFACE
#define INTERFACE IPubComp

DECLARE_INTERFACE_(IPubComp, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPubComp methods */
    STDMETHOD(get_ComponentId)(THIS_ BSTR FAR* sComponentId) PURE;
    STDMETHOD(put_ComponentId)(THIS_ BSTR sComponentId) PURE;
    STDMETHOD(get_Qualifiers)(THIS_ IPubCompQualifiers FAR* FAR* ppQualifiers) PURE;
    STDMETHOD(AddChild)(THIS_ EnumPubCompChild epcPubComp, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IPubComps,0x6D1EA750L,0x2830,0x4A63,0x9C,0x2F,0x46,0x02,0xCE,0xBE,0x3C,0x20);

/* Definition of interface: IPubComps */
#undef INTERFACE
#define INTERFACE IPubComps

DECLARE_INTERFACE_(IPubComps, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IPubComps methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IPubComp FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumContextType {
    ectLocalServer = 1,
    ectLocalServer32 = 2,
    ectInprocServer = 3,
    ectInprocServer32 = 4,
    ectOtherContextType = 5
} EnumContextType;

DEFINE_GUID(IID_IContext,0x7C033867L,0x1F3E,0x426B,0x8A,0xAE,0xF5,0x36,0x06,0xCC,0x1D,0xB3);

/* Definition of interface: IContext */
#undef INTERFACE
#define INTERFACE IContext

DECLARE_INTERFACE_(IContext, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IContext methods */
    STDMETHOD(get_Context)(THIS_ BSTR FAR* Context) PURE;
    STDMETHOD(get_DefaultInprocHandler)(THIS_ BSTR FAR* DefaultInprocHandler) PURE;
    STDMETHOD(put_DefaultInprocHandler)(THIS_ BSTR DefInprocHandler) PURE;
    STDMETHOD(get_Argument)(THIS_ BSTR FAR* Argument) PURE;
    STDMETHOD(put_Argument)(THIS_ BSTR Argument) PURE;
    STDMETHOD(get_DisplayAdditionalProperties)(THIS_ VARIANT_BOOL FAR* bDisplayAdditionalProp) PURE;
};

DEFINE_GUID(IID_IContexts,0x6C4F0B97L,0x47C2,0x4BDB,0xB8,0x2E,0xBE,0x52,0x1A,0x05,0x68,0xD5);

/* Definition of interface: IContexts */
#undef INTERFACE
#define INTERFACE IContexts

DECLARE_INTERFACE_(IContexts, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IContexts methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IContext FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

DEFINE_GUID(IID_IClass,0x12CFD607L,0xEA10,0x4E38,0x9F,0xE6,0x17,0x12,0x4E,0x19,0xF4,0x7B);

/* Definition of interface: IClass */
#undef INTERFACE
#define INTERFACE IClass

DECLARE_INTERFACE_(IClass, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IClass methods */
    STDMETHOD(get_CLSID)(THIS_ BSTR FAR* CLSID) PURE;
    STDMETHOD(put_CLSID)(THIS_ BSTR CLSID) PURE;
    STDMETHOD(get_Contexts)(THIS_ IContexts FAR* FAR* ppContexts) PURE;
    STDMETHOD(get_ProgId)(THIS_ BSTR FAR* ProgId) PURE;
    STDMETHOD(put_ProgId)(THIS_ BSTR ProgId) PURE;
    STDMETHOD(get_FileTypeMask)(THIS_ BSTR FAR* FileTypeMask) PURE;
    STDMETHOD(put_FileTypeMask)(THIS_ BSTR FileTypeMask) PURE;
    STDMETHOD(get_Icon)(THIS_ BSTR FAR* Icon) PURE;
    STDMETHOD(put_Icon)(THIS_ BSTR Icon) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* IconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long IconIndex) PURE;
    STDMETHOD(get_AppId)(THIS_ BSTR FAR* AppId) PURE;
    STDMETHOD(put_AppId)(THIS_ BSTR AppId) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_RelativePath)(THIS_ VARIANT_BOOL FAR* RelativePath) PURE;
    STDMETHOD(put_RelativePath)(THIS_ VARIANT_BOOL RelativePath) PURE;
    STDMETHOD(AddChild)(THIS_ EnumContextType eclcContextType, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IClass2,0x8322FE74L,0x52A6,0x45D3,0xB6,0x68,0x4E,0x28,0x53,0xD9,0x58,0x49);

/* Definition of interface: IClass2 */
#undef INTERFACE
#define INTERFACE IClass2

DECLARE_INTERFACE_(IClass2, IClass)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IClass methods */
    STDMETHOD(get_CLSID)(THIS_ BSTR FAR* CLSID) PURE;
    STDMETHOD(put_CLSID)(THIS_ BSTR CLSID) PURE;
    STDMETHOD(get_Contexts)(THIS_ IContexts FAR* FAR* ppContexts) PURE;
    STDMETHOD(get_ProgId)(THIS_ BSTR FAR* ProgId) PURE;
    STDMETHOD(put_ProgId)(THIS_ BSTR ProgId) PURE;
    STDMETHOD(get_FileTypeMask)(THIS_ BSTR FAR* FileTypeMask) PURE;
    STDMETHOD(put_FileTypeMask)(THIS_ BSTR FileTypeMask) PURE;
    STDMETHOD(get_Icon)(THIS_ BSTR FAR* Icon) PURE;
    STDMETHOD(put_Icon)(THIS_ BSTR Icon) PURE;
    STDMETHOD(get_IconIndex)(THIS_ long FAR* IconIndex) PURE;
    STDMETHOD(put_IconIndex)(THIS_ long IconIndex) PURE;
    STDMETHOD(get_AppId)(THIS_ BSTR FAR* AppId) PURE;
    STDMETHOD(put_AppId)(THIS_ BSTR AppId) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Description) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_RelativePath)(THIS_ VARIANT_BOOL FAR* RelativePath) PURE;
    STDMETHOD(put_RelativePath)(THIS_ VARIANT_BOOL RelativePath) PURE;
    STDMETHOD(AddChild)(THIS_ EnumContextType eclcContextType, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
#endif

    /* IClass2 methods */
    STDMETHOD(get_Feature)(THIS_ BSTR FAR* sFeature) PURE;
    STDMETHOD(put_Feature)(THIS_ BSTR sFeature) PURE;
    STDMETHOD(get_Icon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(DirectModeBuildClassIcon)(THIS_ BSTR bstrFilePath, long lSrcFileIconIndex) PURE;
};

DEFINE_GUID(IID_IClasses,0xE01B466EL,0x5F39,0x48D1,0xBD,0xA1,0x78,0xE5,0x2E,0x26,0x84,0x9F);

/* Definition of interface: IClasses */
#undef INTERFACE
#define INTERFACE IClasses

DECLARE_INTERFACE_(IClasses, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IClasses methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IClass FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

DEFINE_GUID(IID_IFont,0x4C253E72L,0x321F,0x43C3,0x86,0xCD,0xFF,0x7E,0x6A,0x13,0xB4,0xDC);

/* Definition of interface: IFont */
#undef INTERFACE
#define INTERFACE IFont

DECLARE_INTERFACE_(IFont, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFont methods */
    STDMETHOD(get_FileValue)(THIS_ BSTR FAR* pFileValue) PURE;
    STDMETHOD(put_FileValue)(THIS_ BSTR FileValue) PURE;
    STDMETHOD(get_FontTitle)(THIS_ BSTR FAR* pFontTitle) PURE;
    STDMETHOD(put_FontTitle)(THIS_ BSTR FontTitle) PURE;
};

DEFINE_GUID(IID_IFonts,0x8CDAC856L,0x21F1,0x41EA,0xA4,0x53,0xB6,0x88,0x28,0x0D,0x2D,0x1E);

/* Definition of interface: IFonts */
#undef INTERFACE
#define INTERFACE IFonts

DECLARE_INTERFACE_(IFonts, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IFonts methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IFont FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumODBCGenericChild {
    eodcODBCGenericAttribute = 1
} EnumODBCGenericChild;

interface IODBCGenericAttributes;

DEFINE_GUID(IID_IODBCGeneric,0xAFDFA125L,0xF989,0x44DF,0xB1,0xA1,0x72,0x12,0xB2,0x5C,0x9B,0x6F);

/* Definition of interface: IODBCGeneric */
#undef INTERFACE
#define INTERFACE IODBCGeneric

DECLARE_INTERFACE_(IODBCGeneric, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IODBCGeneric methods */
    STDMETHOD(AddChild)(THIS_ EnumODBCGenericChild eodcChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Description) PURE;
    STDMETHOD(get_DriverDescription)(THIS_ BSTR FAR* pDriverDescription) PURE;
    STDMETHOD(put_DriverDescription)(THIS_ BSTR DriverDescription) PURE;
    STDMETHOD(get_Registration)(THIS_ EnumPropODBCDataSourceType FAR* pRegistration) PURE;
    STDMETHOD(put_Registration)(THIS_ EnumPropODBCDataSourceType Registration) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* pFile) PURE;
    STDMETHOD(put_File)(THIS_ BSTR File) PURE;
    STDMETHOD(get_File_Setup)(THIS_ BSTR FAR* pFile_Setup) PURE;
    STDMETHOD(put_File_Setup)(THIS_ BSTR File_Setup) PURE;
    STDMETHOD(get_ODBCGenericAttributes)(THIS_ IODBCGenericAttributes FAR* FAR* pGenAttr) PURE;
};

DEFINE_GUID(IID_IODBCGenericAttribute,0x972B3571L,0xCF95,0x4A73,0xAF,0x20,0x0D,0xF4,0x4C,0x80,0x67,0xFC);

/* Definition of interface: IODBCGenericAttribute */
#undef INTERFACE
#define INTERFACE IODBCGenericAttribute

DECLARE_INTERFACE_(IODBCGenericAttribute, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IODBCGenericAttribute methods */
    STDMETHOD(get_Attribute)(THIS_ BSTR FAR* pAttribute) PURE;
    STDMETHOD(put_Attribute)(THIS_ BSTR Attribute) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IODBCGenericAttributes,0xEA770C34L,0xDCCD,0x422D,0x90,0x45,0x62,0x25,0xBA,0xED,0x96,0x01);

/* Definition of interface: IODBCGenericAttributes */
#undef INTERFACE
#define INTERFACE IODBCGenericAttributes

DECLARE_INTERFACE_(IODBCGenericAttributes, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IODBCGenericAttributes methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IODBCGenericAttribute FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumDeviceDriverPackageType {
    eddptNonPlugNPlay = 1,
    eddptFileSystem = 2,
    eddptFileSystemFilter = 3,
    eddptClassFilter = 4,
    eddptPlugNPlay = 5
} EnumDeviceDriverPackageType;

typedef enum EnumDeviceDriverFlags {
    eddfNone = 0,
    eddfForce = 1,
    eddfReinstallIfExists = 2,
    eddfForceAndReinstall = 3
} EnumDeviceDriverFlags;

typedef enum EnumDeviceRedistType {
    edrt32 = 0,
    edrt32Localized = 1,
    eddf64 = 2,
    eddf64Localized = 3,
    eddf64AMD = 4,
    eddf64AMDLocalized = 5
} EnumDeviceRedistType;

DEFINE_GUID(IID_IDeviceDriverPackageNeptunePDC,0xF5907014L,0xC111,0x4FB0,0x99,0x21,0xC8,0xAE,0x62,0x62,0xC1,0x5A);

/* Definition of interface: IDeviceDriverPackageNeptunePDC */
#undef INTERFACE
#define INTERFACE IDeviceDriverPackageNeptunePDC

DECLARE_INTERFACE_(IDeviceDriverPackageNeptunePDC, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDeviceDriverPackageNeptunePDC methods */
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Type)(THIS_ EnumDeviceDriverPackageType FAR* eType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumDeviceDriverPackageType eType) PURE;
    STDMETHOD(get_Flags)(THIS_ long FAR* lFlags) PURE;
    STDMETHOD(put_Flags)(THIS_ long lFlags) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* lSequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long lSequence) PURE;
};

DEFINE_GUID(IID_IDeviceDriverPackageProteus,0xF5907015L,0xC111,0x4FB0,0x99,0x21,0xC8,0xAE,0x62,0x62,0xC1,0x5A);

/* Definition of interface: IDeviceDriverPackageProteus */
#undef INTERFACE
#define INTERFACE IDeviceDriverPackageProteus

DECLARE_INTERFACE_(IDeviceDriverPackageProteus, IDeviceDriverPackageNeptunePDC)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDeviceDriverPackageNeptunePDC methods */
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Type)(THIS_ EnumDeviceDriverPackageType FAR* eType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumDeviceDriverPackageType eType) PURE;
    STDMETHOD(get_Flags)(THIS_ long FAR* lFlags) PURE;
    STDMETHOD(put_Flags)(THIS_ long lFlags) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* lSequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long lSequence) PURE;
#endif

    /* IDeviceDriverPackageProteus methods */
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(get_ReferenceComponents)(THIS_ BSTR FAR* bstrComponents) PURE;
    STDMETHOD(put_ReferenceComponents)(THIS_ BSTR bstrComponents) PURE;
    STDMETHOD(get_FlagsEx)(THIS_ EnumDeviceDriverFlags FAR* Flags) PURE;
    STDMETHOD(put_FlagsEx)(THIS_ EnumDeviceDriverFlags Flags) PURE;
};

DEFINE_GUID(IID_IDeviceDriverPackageIbiza,0x28A49D46L,0x633C,0x4260,0x92,0xB2,0x7B,0xAD,0xFD,0x65,0xE6,0xA8);

/* Definition of interface: IDeviceDriverPackageIbiza */
#undef INTERFACE
#define INTERFACE IDeviceDriverPackageIbiza

DECLARE_INTERFACE_(IDeviceDriverPackageIbiza, IDeviceDriverPackageProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDeviceDriverPackageNeptunePDC methods */
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Type)(THIS_ EnumDeviceDriverPackageType FAR* eType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumDeviceDriverPackageType eType) PURE;
    STDMETHOD(get_Flags)(THIS_ long FAR* lFlags) PURE;
    STDMETHOD(put_Flags)(THIS_ long lFlags) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* lSequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long lSequence) PURE;

    /* IDeviceDriverPackageProteus methods */
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(get_ReferenceComponents)(THIS_ BSTR FAR* bstrComponents) PURE;
    STDMETHOD(put_ReferenceComponents)(THIS_ BSTR bstrComponents) PURE;
    STDMETHOD(get_FlagsEx)(THIS_ EnumDeviceDriverFlags FAR* Flags) PURE;
    STDMETHOD(put_FlagsEx)(THIS_ EnumDeviceDriverFlags Flags) PURE;
#endif

    /* IDeviceDriverPackageIbiza methods */
    STDMETHOD(get_Use64BitRedists)(THIS_ VARIANT_BOOL FAR* pb64Bit) PURE;
    STDMETHOD(put_Use64BitRedists)(THIS_ VARIANT_BOOL b64Bit) PURE;
    STDMETHOD(get_UseLocalizedRedists)(THIS_ VARIANT_BOOL FAR* pbLocalize) PURE;
    STDMETHOD(put_UseLocalizedRedists)(THIS_ VARIANT_BOOL bLocalize) PURE;
};

DEFINE_GUID(IID_IDeviceDriverPackageIxtapa,0xBA90279FL,0xA170,0x407E,0x97,0xAE,0x7C,0x6F,0x79,0xC5,0xD9,0xF4);

/* Definition of interface: IDeviceDriverPackageIxtapa */
#undef INTERFACE
#define INTERFACE IDeviceDriverPackageIxtapa

DECLARE_INTERFACE_(IDeviceDriverPackageIxtapa, IDeviceDriverPackageIbiza)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IDeviceDriverPackageNeptunePDC methods */
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Type)(THIS_ EnumDeviceDriverPackageType FAR* eType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumDeviceDriverPackageType eType) PURE;
    STDMETHOD(get_Flags)(THIS_ long FAR* lFlags) PURE;
    STDMETHOD(put_Flags)(THIS_ long lFlags) PURE;
    STDMETHOD(get_Sequence)(THIS_ long FAR* lSequence) PURE;
    STDMETHOD(put_Sequence)(THIS_ long lSequence) PURE;

    /* IDeviceDriverPackageProteus methods */
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(get_ReferenceComponents)(THIS_ BSTR FAR* bstrComponents) PURE;
    STDMETHOD(put_ReferenceComponents)(THIS_ BSTR bstrComponents) PURE;
    STDMETHOD(get_FlagsEx)(THIS_ EnumDeviceDriverFlags FAR* Flags) PURE;
    STDMETHOD(put_FlagsEx)(THIS_ EnumDeviceDriverFlags Flags) PURE;

    /* IDeviceDriverPackageIbiza methods */
    STDMETHOD(get_Use64BitRedists)(THIS_ VARIANT_BOOL FAR* pb64Bit) PURE;
    STDMETHOD(put_Use64BitRedists)(THIS_ VARIANT_BOOL b64Bit) PURE;
    STDMETHOD(get_UseLocalizedRedists)(THIS_ VARIANT_BOOL FAR* pbLocalize) PURE;
    STDMETHOD(put_UseLocalizedRedists)(THIS_ VARIANT_BOOL bLocalize) PURE;
#endif

    /* IDeviceDriverPackageIxtapa methods */
    STDMETHOD(get_RedistType)(THIS_ EnumDeviceRedistType FAR* pType) PURE;
    STDMETHOD(put_RedistType)(THIS_ EnumDeviceRedistType Type) PURE;
};

DEFINE_GUID(IID_IDeviceDriverPackagesNeptunePDC,0x12C843EFL,0x3A3B,0x4634,0xB0,0x65,0x9C,0xBF,0x0A,0xF5,0xC0,0x55);

/* Definition of interface: IDeviceDriverPackagesNeptunePDC */
#undef INTERFACE
#define INTERFACE IDeviceDriverPackagesNeptunePDC

DECLARE_INTERFACE_(IDeviceDriverPackagesNeptunePDC, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDeviceDriverPackagesNeptunePDC methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IDeviceDriverPackageNeptunePDC FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IIisWebServiceExtensionIbiza,0x5E963A09L,0x3C58,0x4FA6,0xA8,0xF8,0xC5,0xDD,0x27,0x9B,0x67,0x88);

/* Definition of interface: IIisWebServiceExtensionIbiza */
#undef INTERFACE
#define INTERFACE IIisWebServiceExtensionIbiza

DECLARE_INTERFACE_(IIisWebServiceExtensionIbiza, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIisWebServiceExtensionIbiza methods */
    STDMETHOD(get_IisWebServiceExtension)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_IisWebServiceExtension)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_File)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Group)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Group)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_UIDeleteable)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_UIDeleteable)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_Allow)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Allow)(THIS_ VARIANT_BOOL Value) PURE;
};

DEFINE_GUID(IID_IIisWebServiceExtensionIndore,0x8D612654L,0x22F7,0x4CDE,0x87,0x7B,0xC0,0xCA,0xF4,0xE1,0x60,0xDF);

/* Definition of interface: IIisWebServiceExtensionIndore */
#undef INTERFACE
#define INTERFACE IIisWebServiceExtensionIndore

DECLARE_INTERFACE_(IIisWebServiceExtensionIndore, IIisWebServiceExtensionIbiza)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IIisWebServiceExtensionIbiza methods */
    STDMETHOD(get_IisWebServiceExtension)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_IisWebServiceExtension)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_File)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Group)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Group)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_UIDeleteable)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_UIDeleteable)(THIS_ VARIANT_BOOL Value) PURE;
    STDMETHOD(get_Allow)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Allow)(THIS_ VARIANT_BOOL Value) PURE;
#endif

    /* IIisWebServiceExtensionIndore methods */
    STDMETHOD(get_Overwrite)(THIS_ VARIANT_BOOL FAR* Value) PURE;
    STDMETHOD(put_Overwrite)(THIS_ VARIANT_BOOL Value) PURE;
};

DEFINE_GUID(IID_IIisWebServiceExtensions,0x14C13512L,0x08F5,0x441D,0xB4,0xF5,0x75,0xEE,0xF5,0x4D,0x94,0x3D);

/* Definition of interface: IIisWebServiceExtensions */
#undef INTERFACE
#define INTERFACE IIisWebServiceExtensions

DECLARE_INTERFACE_(IIisWebServiceExtensions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIisWebServiceExtensions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IIisWebServiceExtensionIbiza FAR* FAR* pIisWebServiceExtension) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IIisAppPoolIbiza,0x3D4CA646L,0x66EE,0x46A1,0x87,0x2B,0x30,0x59,0xFB,0x27,0x99,0x2E);

/* Definition of interface: IIisAppPoolIbiza */
#undef INTERFACE
#define INTERFACE IIisAppPoolIbiza

DECLARE_INTERFACE_(IIisAppPoolIbiza, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIisAppPoolIbiza methods */
    STDMETHOD(get_AppPool)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_AppPool)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Attributes)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_Attributes)(THIS_ long Value) PURE;
    STDMETHOD(get_User)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_User)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_UserPassword)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_UserPassword)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_RecycleMinutes)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_RecycleMinutes)(THIS_ long Value) PURE;
    STDMETHOD(get_RecycleRequests)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_RecycleRequests)(THIS_ long Value) PURE;
    STDMETHOD(get_RecycleTimes)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_RecycleTimes)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_IdleTimeout)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_IdleTimeout)(THIS_ long Value) PURE;
    STDMETHOD(get_QueueLimit)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_QueueLimit)(THIS_ long Value) PURE;
    STDMETHOD(get_CPUMon)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_CPUMon)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_MaxProc)(THIS_ long FAR* Value) PURE;
    STDMETHOD(put_MaxProc)(THIS_ long Value) PURE;
};

DEFINE_GUID(IID_IIisAppPools,0x36AF267EL,0xF0FA,0x47E2,0xAE,0x76,0xAF,0xB6,0x1F,0xCC,0xEB,0x5A);

/* Definition of interface: IIisAppPools */
#undef INTERFACE
#define INTERFACE IIisAppPools

DECLARE_INTERFACE_(IIisAppPools, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIisAppPools methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IIisAppPoolIbiza FAR* FAR* pAppPool) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumChainPackageOptions {
    ecoUIMask = 3,
    ecoUIBasic = 0,
    ecoUINone = 1,
    ecoUIReduced = 2,
    ecoUIFull = 3,
    ecoChainInstallBefore = 4,
    ecoChainRemoveBefore = 8,
    ecoReinstallInstalled = 16,
    ecoRemoveUninstalled = 32,
    ecoIgnoreInstallFailure = 64,
    ecoIgnoreRemovalFailure = 128
} EnumChainPackageOptions;

typedef enum EnumChainPackageDataOptions {
    ecpoLeaveBehindOnSuccess = 1,
    ecpoLeaveBehindOnRollback = 2
} EnumChainPackageDataOptions;

typedef enum EnumChainPackageDataType {
    ecpdtFile = 1
} EnumChainPackageDataType;

interface IChainPackageDatas;

DEFINE_GUID(IID_IChainPackageJustice,0xC987B583L,0x9101,0x4CBD,0xB3,0x24,0xC3,0x8C,0x6A,0xB6,0x6C,0x1A);

/* Definition of interface: IChainPackageJustice */
#undef INTERFACE
#define INTERFACE IChainPackageJustice

DECLARE_INTERFACE_(IChainPackageJustice, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IChainPackageJustice methods */
    STDMETHOD(get_Package)(THIS_ BSTR FAR* pPackage) PURE;
    STDMETHOD(put_Package)(THIS_ BSTR Package) PURE;
    STDMETHOD(get_SourcePath)(THIS_ BSTR FAR* pSourcePath) PURE;
    STDMETHOD(put_SourcePath)(THIS_ BSTR SourcePath) PURE;
    STDMETHOD(get_ProductCode)(THIS_ BSTR FAR* pProductCode) PURE;
    STDMETHOD(put_ProductCode)(THIS_ BSTR ProductCode) PURE;
    STDMETHOD(get_Order)(THIS_ short FAR* pOrder) PURE;
    STDMETHOD(put_Order)(THIS_ short Order) PURE;
    STDMETHOD(get_Options)(THIS_ EnumChainPackageOptions FAR* pOptions) PURE;
    STDMETHOD(put_Options)(THIS_ EnumChainPackageOptions Options) PURE;
    STDMETHOD(get_InstallCondition)(THIS_ BSTR FAR* pInstallCondition) PURE;
    STDMETHOD(put_InstallCondition)(THIS_ BSTR InstallCondition) PURE;
    STDMETHOD(get_RemoveCondition)(THIS_ BSTR FAR* pRemoveCondition) PURE;
    STDMETHOD(put_RemoveCondition)(THIS_ BSTR RemoveCondition) PURE;
    STDMETHOD(get_InstallProperties)(THIS_ BSTR FAR* pInstallProperties) PURE;
    STDMETHOD(put_InstallProperties)(THIS_ BSTR InstallProperties) PURE;
    STDMETHOD(get_ISReleaseFlags)(THIS_ BSTR FAR* pISReleaseFlags) PURE;
    STDMETHOD(put_ISReleaseFlags)(THIS_ BSTR ISReleaseFlags) PURE;
    STDMETHOD(get_RemoveProperties)(THIS_ BSTR FAR* pRemoveProperties) PURE;
    STDMETHOD(put_RemoveProperties)(THIS_ BSTR RemoveProperties) PURE;
    STDMETHOD(get_DataFiles)(THIS_ IChainPackageDatas FAR* FAR* ppData) PURE;
    STDMETHOD(AddChild)(THIS_ EnumChainPackageDataType ecpdType, BSTR strName, VARIANT strUniqueKeu, IBusinessObject FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_IChainPackageLoyalty,0x1CFA8CA7L,0x5990,0x4B2F,0x96,0x57,0x22,0xBC,0xCB,0x8B,0xD9,0x19);

/* Definition of interface: IChainPackageLoyalty */
#undef INTERFACE
#define INTERFACE IChainPackageLoyalty

DECLARE_INTERFACE_(IChainPackageLoyalty, IChainPackageJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IChainPackageJustice methods */
    STDMETHOD(get_Package)(THIS_ BSTR FAR* pPackage) PURE;
    STDMETHOD(put_Package)(THIS_ BSTR Package) PURE;
    STDMETHOD(get_SourcePath)(THIS_ BSTR FAR* pSourcePath) PURE;
    STDMETHOD(put_SourcePath)(THIS_ BSTR SourcePath) PURE;
    STDMETHOD(get_ProductCode)(THIS_ BSTR FAR* pProductCode) PURE;
    STDMETHOD(put_ProductCode)(THIS_ BSTR ProductCode) PURE;
    STDMETHOD(get_Order)(THIS_ short FAR* pOrder) PURE;
    STDMETHOD(put_Order)(THIS_ short Order) PURE;
    STDMETHOD(get_Options)(THIS_ EnumChainPackageOptions FAR* pOptions) PURE;
    STDMETHOD(put_Options)(THIS_ EnumChainPackageOptions Options) PURE;
    STDMETHOD(get_InstallCondition)(THIS_ BSTR FAR* pInstallCondition) PURE;
    STDMETHOD(put_InstallCondition)(THIS_ BSTR InstallCondition) PURE;
    STDMETHOD(get_RemoveCondition)(THIS_ BSTR FAR* pRemoveCondition) PURE;
    STDMETHOD(put_RemoveCondition)(THIS_ BSTR RemoveCondition) PURE;
    STDMETHOD(get_InstallProperties)(THIS_ BSTR FAR* pInstallProperties) PURE;
    STDMETHOD(put_InstallProperties)(THIS_ BSTR InstallProperties) PURE;
    STDMETHOD(get_ISReleaseFlags)(THIS_ BSTR FAR* pISReleaseFlags) PURE;
    STDMETHOD(put_ISReleaseFlags)(THIS_ BSTR ISReleaseFlags) PURE;
    STDMETHOD(get_RemoveProperties)(THIS_ BSTR FAR* pRemoveProperties) PURE;
    STDMETHOD(put_RemoveProperties)(THIS_ BSTR RemoveProperties) PURE;
    STDMETHOD(get_DataFiles)(THIS_ IChainPackageDatas FAR* FAR* ppData) PURE;
    STDMETHOD(AddChild)(THIS_ EnumChainPackageDataType ecpdType, BSTR strName, VARIANT strUniqueKeu, IBusinessObject FAR* FAR* ppVal) PURE;
#endif

    /* IChainPackageLoyalty methods */
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* pName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR Name) PURE;
};

DEFINE_GUID(IID_IChainPackages,0xE838BC1EL,0xF109,0x481D,0xA8,0x7C,0x51,0x09,0xBD,0xC1,0x3F,0x02);

/* Definition of interface: IChainPackages */
#undef INTERFACE
#define INTERFACE IChainPackages

DECLARE_INTERFACE_(IChainPackages, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IChainPackages methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IChainPackageJustice FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IChainPackageDataJustice,0x0E0E627DL,0x9750,0x4AC2,0xBA,0x5D,0x46,0x60,0x46,0x81,0x29,0x94);

/* Definition of interface: IChainPackageDataJustice */
#undef INTERFACE
#define INTERFACE IChainPackageDataJustice

DECLARE_INTERFACE_(IChainPackageDataJustice, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IChainPackageDataJustice methods */
    STDMETHOD(get_Package)(THIS_ BSTR FAR* pPackage) PURE;
    STDMETHOD(put_Package)(THIS_ BSTR Package) PURE;
    STDMETHOD(get_FilePath)(THIS_ BSTR FAR* pFilePath) PURE;
    STDMETHOD(put_FilePath)(THIS_ BSTR FilePath) PURE;
    STDMETHOD(get_Options)(THIS_ EnumChainPackageDataOptions FAR* pOptions) PURE;
    STDMETHOD(put_Options)(THIS_ EnumChainPackageDataOptions Options) PURE;
    STDMETHOD(get_ISBuildSourcePath)(THIS_ BSTR FAR* pISBuildSourcePath) PURE;
    STDMETHOD(put_ISBuildSourcePath)(THIS_ BSTR ISBuildSourcePath) PURE;
};

DEFINE_GUID(IID_IChainPackageDatas,0xFD07CFCAL,0xE796,0x400E,0xB2,0x7D,0x79,0x92,0xDF,0x37,0x40,0xC5);

/* Definition of interface: IChainPackageDatas */
#undef INTERFACE
#define INTERFACE IChainPackageDatas

DECLARE_INTERFACE_(IChainPackageDatas, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IChainPackageDatas methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IChainPackageDataJustice FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumIisItemType {
    eiitWebSite = 1,
    eiitApplication,
    eiitVirtualDir,
    eiitAppPool,
    eiitWebServiceExt,
    eiitDimVirtualDir,
    eiitLegacyItem = 0x80000000
} EnumIisItemType;

interface IIisProperties;

interface IIisProperty;

DEFINE_GUID(IID_IIisItem,0x755B7B73L,0xC008,0x4918,0x9E,0x2B,0xE7,0x19,0x18,0x50,0xD2,0x94);

/* Definition of interface: IIisItem */
#undef INTERFACE
#define INTERFACE IIisItem

DECLARE_INTERFACE_(IIisItem, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIisItem methods */
    STDMETHOD(get_IisItem)(THIS_ BSTR FAR* bstrIisItem) PURE;
    STDMETHOD(put_IisItem)(THIS_ BSTR bstrIisItem) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* bstrParent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR bstrParent) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_Type)(THIS_ EnumIisItemType FAR* eiitType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumIisItemType eiitType) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Children)(THIS_ IIisItems FAR* FAR* ppChildren) PURE;
    STDMETHOD(get_Properties)(THIS_ IIisProperties FAR* FAR* ppProperties) PURE;
    STDMETHOD(AddProperty)(THIS_ BSTR bstrProperty, VARIANT_BOOL vbUseExistingProperty, IIisProperty FAR* FAR* ppProperty) PURE;
    STDMETHOD(get_Property)(THIS_ BSTR bstrProperty, IIisProperty FAR* FAR* ppProperty) PURE;
    STDMETHOD(get_AppMappings)(THIS_ IIisProperties FAR* FAR* ppAppMappings) PURE;
    STDMETHOD(AddChild)(THIS_ EnumIisItemType eiitType, IBusinessObject FAR* FAR* ppBusObj) PURE;
};

DEFINE_GUID(IID_IIisItemMajesty,0xF2255DE8L,0x6FE3,0x4869,0xA8,0xF5,0xC0,0x5D,0xDE,0xA1,0x6B,0xD2);

/* Definition of interface: IIisItemMajesty */
#undef INTERFACE
#define INTERFACE IIisItemMajesty

DECLARE_INTERFACE_(IIisItemMajesty, IIisItem)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IIisItem methods */
    STDMETHOD(get_IisItem)(THIS_ BSTR FAR* bstrIisItem) PURE;
    STDMETHOD(put_IisItem)(THIS_ BSTR bstrIisItem) PURE;
    STDMETHOD(get_Parent)(THIS_ BSTR FAR* bstrParent) PURE;
    STDMETHOD(put_Parent)(THIS_ BSTR bstrParent) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_Type)(THIS_ EnumIisItemType FAR* eiitType) PURE;
    STDMETHOD(put_Type)(THIS_ EnumIisItemType eiitType) PURE;
    STDMETHOD(get_Component)(THIS_ BSTR FAR* bstrComponent) PURE;
    STDMETHOD(put_Component)(THIS_ BSTR bstrComponent) PURE;
    STDMETHOD(get_Children)(THIS_ IIisItems FAR* FAR* ppChildren) PURE;
    STDMETHOD(get_Properties)(THIS_ IIisProperties FAR* FAR* ppProperties) PURE;
    STDMETHOD(AddProperty)(THIS_ BSTR bstrProperty, VARIANT_BOOL vbUseExistingProperty, IIisProperty FAR* FAR* ppProperty) PURE;
    STDMETHOD(get_Property)(THIS_ BSTR bstrProperty, IIisProperty FAR* FAR* ppProperty) PURE;
    STDMETHOD(get_AppMappings)(THIS_ IIisProperties FAR* FAR* ppAppMappings) PURE;
    STDMETHOD(AddChild)(THIS_ EnumIisItemType eiitType, IBusinessObject FAR* FAR* ppBusObj) PURE;
#endif

    /* IIisItemMajesty methods */
    STDMETHOD(get_PropertyCollection)(THIS_ BSTR bstrCollectionProperty, IIisProperties FAR* FAR* ppPropertyCollection) PURE;
};

DEFINE_GUID(IID_IIisItems,0xFE25F09FL,0xF741,0x41B5,0xAB,0x48,0x54,0x9E,0xDD,0x4F,0xEA,0x2D);

/* Definition of interface: IIisItems */
#undef INTERFACE
#define INTERFACE IIisItems

DECLARE_INTERFACE_(IIisItems, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIisItems methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IIisItem FAR* FAR* pIisItem) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
    STDMETHOD(get_NextAvailablePort)(THIS_ long FAR* plPort) PURE;
};

DEFINE_GUID(IID_IIisProperty,0xD3D1648CL,0xC231,0x4196,0xA5,0x86,0x76,0x07,0xDF,0xCE,0x12,0x1E);

/* Definition of interface: IIisProperty */
#undef INTERFACE
#define INTERFACE IIisProperty

DECLARE_INTERFACE_(IIisProperty, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIisProperty methods */
    STDMETHOD(get_IisProperty)(THIS_ BSTR FAR* bstrIisProperty) PURE;
    STDMETHOD(put_IisProperty)(THIS_ BSTR bstrIisProperty) PURE;
    STDMETHOD(get_IisItem)(THIS_ BSTR FAR* bstrIisItem) PURE;
    STDMETHOD(put_IisItem)(THIS_ BSTR bstrIisItem) PURE;
    STDMETHOD(get_Schema)(THIS_ BSTR FAR* bstrSchema) PURE;
    STDMETHOD(put_Schema)(THIS_ BSTR bstrSchema) PURE;
    STDMETHOD(get_FriendlyName)(THIS_ BSTR FAR* bstrFriendlyName) PURE;
    STDMETHOD(put_FriendlyName)(THIS_ BSTR bstrFriendlyName) PURE;
    STDMETHOD(get_MetaDataProp)(THIS_ long FAR* nMetaDataProp) PURE;
    STDMETHOD(put_MetaDataProp)(THIS_ long nMetaDataProp) PURE;
    STDMETHOD(get_MetaDataType)(THIS_ long FAR* nMetaDataType) PURE;
    STDMETHOD(put_MetaDataType)(THIS_ long nMetaDataType) PURE;
    STDMETHOD(get_MetaDataUserType)(THIS_ long FAR* nMetaDataUserType) PURE;
    STDMETHOD(put_MetaDataUserType)(THIS_ long nMetaDataUserType) PURE;
    STDMETHOD(get_MetaDataAttributes)(THIS_ long FAR* nMetaDataAttributes) PURE;
    STDMETHOD(put_MetaDataAttributes)(THIS_ long nMetaDataAttributes) PURE;
    STDMETHOD(get_MetaDataValue)(THIS_ BSTR FAR* bstrMetaDataValue) PURE;
    STDMETHOD(put_MetaDataValue)(THIS_ BSTR bstrMetaDataValue) PURE;
    STDMETHOD(get_Order)(THIS_ long FAR* nOrder) PURE;
    STDMETHOD(put_Order)(THIS_ long nOrder) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* nISAttributes) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long nISAttributes) PURE;
};

DEFINE_GUID(IID_IIisProperties,0xFD22E07AL,0x59ED,0x4B2D,0x9E,0x70,0x88,0x74,0x09,0xA3,0x15,0xB6);

/* Definition of interface: IIisProperties */
#undef INTERFACE
#define INTERFACE IIisProperties

DECLARE_INTERFACE_(IIisProperties, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IIisProperties methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IIisProperty FAR* FAR* pIisProperty) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

DEFINE_GUID(IID_IVirtualBuildOptionLoyalty,0x46C832D5L,0xE97D,0x4565,0x8B,0xEB,0x96,0x8F,0xFF,0x42,0xD6,0x21);

/* Definition of interface: IVirtualBuildOptionLoyalty */
#undef INTERFACE
#define INTERFACE IVirtualBuildOptionLoyalty

DECLARE_INTERFACE_(IVirtualBuildOptionLoyalty, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVirtualBuildOptionLoyalty methods */
    STDMETHOD(get_ISDimReference)(THIS_ BSTR FAR* ISDimReference) PURE;
    STDMETHOD(put_ISDimReference)(THIS_ BSTR ISDimReference) PURE;
    STDMETHOD(get_ISProductConfiguration)(THIS_ BSTR FAR* ISProductConfiguration) PURE;
    STDMETHOD(put_ISProductConfiguration)(THIS_ BSTR ISProductConfiguration) PURE;
    STDMETHOD(get_ISRelease)(THIS_ BSTR FAR* ISRelease) PURE;
    STDMETHOD(put_ISRelease)(THIS_ BSTR ISRelease) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_IVirtualBuildOptions,0x3C5CE1A3L,0x2B85,0x484E,0xBB,0x67,0xAF,0x00,0x14,0xA2,0x29,0xE0);

/* Definition of interface: IVirtualBuildOptions */
#undef INTERFACE
#define INTERFACE IVirtualBuildOptions

DECLARE_INTERFACE_(IVirtualBuildOptions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IVirtualBuildOptions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IVirtualBuildOptionLoyalty FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

typedef enum EnumSuiteEvent {
    eseOnBegin,
    eseOnResuming,
    eseOnStaging,
    eseOnStaged,
    eseOnParcelsInstalling,
    eseOnParcelsInstalled,
    eseOnRebooting,
    eseOnEnd,
    eseOnParcelConfiguring,
    eseOnParcelConfigured
} EnumSuiteEvent;

typedef enum EnumPropSuitePackage {
    epspName = 10,
    epspDisplayName = 11,
    epspType = 12,
    epspDescription = 13,
    epspLocation = 14,
    epspUrl = 15,
    epspDetectCondition = 16,
    epspEligibleCondition = 17,
    epspElevation = 18,
    epspProgressCapture = 19,
    epspCachePath = 20,
    epspUpgradeType = 21,
    epspParcelType = 22,
    epspReleaseFlags = 23,
    epspLoggingEnable = 24,
    epspLoggingCmdLine = 25,
    epspLoggingMsiLogFile = 26,
    epspLoggingMsiLogOptions = 27,
    epspCerFile = 28,
    epspDynamicProductConfig = 29,
    epspDynamicRelease = 30,
    epspConfiguringEvents = 31,
    epspConfiguredEvents = 32,
    epspWindowsFeatures = 33,
    epspWebDeployParameters = 34,
    epspWDConnectionComputerName = 35,
    epspWDConnectionUserName = 36,
    epspWDConnectionPassword = 37,
    epspWDConnectionSite = 38,
    epspSharedParcel = 39
} EnumPropSuitePackage;

typedef enum EnumSuitePackageType {
    esptUnknown,
    esptMsi,
    esptMsp,
    esptExe,
    esptIsp,
    esptIsmMsi,
    esptIsmIsp,
    esptAppx,
    esptWebDeploy
} EnumSuitePackageType;

typedef enum EnumSuiteOperationType {
    esotUnknown,
    esotInstall,
    esotRemove,
    esotRepair,
    esotModify
} EnumSuiteOperationType;

typedef enum EnumPropSuiteOperation {
    epsoType = 10,
    epsoEnable = 11,
    epsoTarget = 12,
    epsoCmdLine = 13,
    epsoSilent = 14,
    epsoExitBehavior = 15,
    epsoRebootRequest = 16,
    epsoRebootCode = 17,
    espoForceAppShutdown = 18
} EnumPropSuiteOperation;

typedef enum EnumPropSuiteExit {
    epseDetectPrompt,
    epseDetectAbort,
    epseDetectIgnore
} EnumPropSuiteExit;

typedef enum EnumPropSuiteReboot {
    epsrDetectExit = 1,
    epsrDetectReboot = 2,
    epsrDetectIgnore = 4,
    epsrDetectDelay = 32,
    epsrAlwaysRebootPrompt = 8,
    epsrAlwaysRebootSilent = 16,
    errAlwaysReboot = 24
} EnumPropSuiteReboot;

typedef enum EnumPropSuiteProgressCapture {
    epsptIgnore,
    epsptHide,
    epsptCaptureISBB,
    epsptCaptureFull,
    epsptCaptureFullVerbose
} EnumPropSuiteProgressCapture;

typedef enum EnumPropSuiteUpgradeType {
    epsutNone,
    epsutAuto,
    epsutPrompt
} EnumPropSuiteUpgradeType;

typedef enum EnumTransactChild {
    etrcSuitePackage = 1
} EnumTransactChild;

typedef enum EnumPropSuiteFeature {
    epsfName = 10,
    epsfDisplayName = 11,
    epsfVisible = 12,
    epsfDescription = 13,
    epsfCondition = 14,
    epsfCost = 15,
    epsfReleaseFlags = 16,
    epsfAllowSelChange = 17,
    epsfFollowParentState = 18
} EnumPropSuiteFeature;

typedef enum EnumPropSuiteCondition {
    epscpName = 10,
    epscpResource = 11,
    epscpContent = 12
} EnumPropSuiteCondition;

typedef enum EnumDirection {
    edUp,
    edDown,
    edLeft,
    edRight
} EnumDirection;

DEFINE_GUID(IID_ISuiteConditionParameter,0xE4F902ECL,0xFBB1,0x475E,0x9C,0xBE,0x23,0x79,0x1F,0x30,0xA3,0xDF);

/* Definition of interface: ISuiteConditionParameter */
#undef INTERFACE
#define INTERFACE ISuiteConditionParameter

DECLARE_INTERFACE_(ISuiteConditionParameter, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteConditionParameter methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Content)(THIS_ BSTR FAR* bstrContent) PURE;
    STDMETHOD(put_Content)(THIS_ BSTR bstrContent) PURE;
};

DEFINE_GUID(IID_ISuiteConditionParameters,0xAFA01196L,0xA3FA,0x494D,0xBF,0xE3,0x5B,0x07,0xD9,0x50,0x51,0x15);

/* Definition of interface: ISuiteConditionParameters */
#undef INTERFACE
#define INTERFACE ISuiteConditionParameters

DECLARE_INTERFACE_(ISuiteConditionParameters, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteConditionParameters methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteConditionParameter FAR* FAR* ppFile) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumSuiteConditionGroupType {
    escgtAll = 201,
    escgtAny = 202,
    escgtNot = 203
} EnumSuiteConditionGroupType;

interface ISuiteConditions;

DEFINE_GUID(IID_ISuiteCondition,0x6966633AL,0x1FD2,0x4358,0x9D,0x15,0x82,0xE4,0x89,0xEB,0x59,0xFD);

/* Definition of interface: ISuiteCondition */
#undef INTERFACE
#define INTERFACE ISuiteCondition

DECLARE_INTERFACE_(ISuiteCondition, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteCondition methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Resource)(THIS_ BSTR FAR* bstrResource) PURE;
    STDMETHOD(put_Resource)(THIS_ BSTR bstrResource) PURE;
    STDMETHOD(get_Parameters)(THIS_ ISuiteConditionParameters FAR* FAR* ppParameters) PURE;
    STDMETHOD(get_Conditions)(THIS_ ISuiteConditions FAR* FAR* ppConditions) PURE;
    STDMETHOD(AddCondition)(THIS_ BSTR bstrCondition, BSTR bstrResource, ISuiteCondition FAR* FAR* ppGroup) PURE;
    STDMETHOD(AddGroup)(THIS_ EnumSuiteConditionGroupType escgType, ISuiteCondition FAR* FAR* ppGroup) PURE;
    STDMETHOD(AddParameter)(THIS_ BSTR bstrName, ISuiteConditionParameter FAR* FAR* ppParameter) PURE;
    STDMETHOD(Move)(THIS_ EnumDirection eDirection) PURE;
};

DEFINE_GUID(IID_ISuiteConditions,0xCE2B1620L,0xF519,0x43F3,0xB3,0x2E,0x02,0x24,0x67,0x81,0x20,0x90);

/* Definition of interface: ISuiteConditions */
#undef INTERFACE
#define INTERFACE ISuiteConditions

DECLARE_INTERFACE_(ISuiteConditions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteConditions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteCondition FAR* FAR* ppFile) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ISuiteUIAction,0x52A414E0L,0x1A17,0x4D1C,0x91,0x01,0xFE,0x5C,0x72,0x65,0x41,0x90);

/* Definition of interface: ISuiteUIAction */
#undef INTERFACE
#define INTERFACE ISuiteUIAction

DECLARE_INTERFACE_(ISuiteUIAction, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIAction methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Resource)(THIS_ BSTR FAR* bstrResource) PURE;
    STDMETHOD(put_Resource)(THIS_ BSTR bstrResource) PURE;
    STDMETHOD(get_Parameters)(THIS_ ISuiteConditionParameters FAR* FAR* ppParameters) PURE;
    STDMETHOD(get_Condition)(THIS_ ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(AddParameter)(THIS_ BSTR bstrName, ISuiteConditionParameter FAR* FAR* ppParameter) PURE;
    STDMETHOD(AddCondition)(THIS_ BSTR bstrName, ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(Move)(THIS_ EnumDirection eDirection) PURE;
};

DEFINE_GUID(IID_ISuiteUIActions,0xF88C1D8AL,0x0A6B,0x4800,0x8B,0x7A,0x31,0x55,0x3F,0xD8,0x87,0x97);

/* Definition of interface: ISuiteUIActions */
#undef INTERFACE
#define INTERFACE ISuiteUIActions

DECLARE_INTERFACE_(ISuiteUIActions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIActions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteUIAction FAR* FAR* ppFile) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropSuiteAbortCondition {
    epsacMessage = 10,
    epsacCondition = 11
} EnumPropSuiteAbortCondition;

DEFINE_GUID(IID_ISuiteAbortCondition,0x4314989AL,0x6F9A,0x424E,0xB5,0xE0,0x27,0xF7,0xD5,0xE5,0x8F,0xBE);

/* Definition of interface: ISuiteAbortCondition */
#undef INTERFACE
#define INTERFACE ISuiteAbortCondition

DECLARE_INTERFACE_(ISuiteAbortCondition, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteAbortCondition methods */
    STDMETHOD(get_Message)(THIS_ BSTR FAR* pbstrMessage) PURE;
    STDMETHOD(put_Message)(THIS_ BSTR bstrMessage) PURE;
    STDMETHOD(get_Condition)(THIS_ ISuiteCondition FAR* FAR* ppCondition) PURE;
};

DEFINE_GUID(IID_ISuiteAbortConditions,0xDAFA68A8L,0xD2CD,0x4BDB,0x92,0xA4,0xEE,0x54,0x67,0x49,0x79,0x6C);

/* Definition of interface: ISuiteAbortConditions */
#undef INTERFACE
#define INTERFACE ISuiteAbortConditions

DECLARE_INTERFACE_(ISuiteAbortConditions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteAbortConditions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteAbortCondition FAR* FAR* ppFile) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ISuiteProperty,0x6C96F0B3L,0xAD9D,0x40F6,0x8F,0x7B,0x1F,0x96,0xC2,0xCA,0xAE,0xAD);

/* Definition of interface: ISuiteProperty */
#undef INTERFACE
#define INTERFACE ISuiteProperty

DECLARE_INTERFACE_(ISuiteProperty, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteProperty methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pbstrValue) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(get_FormatPropertyValue)(THIS_ VARIANT_BOOL FAR* pvbFormat) PURE;
    STDMETHOD(put_FormatPropertyValue)(THIS_ VARIANT_BOOL vbFormat) PURE;
};

DEFINE_GUID(IID_ISuiteFile,0xA806B190L,0xA98C,0x4D83,0x8C,0x21,0x54,0xF1,0x0D,0xBC,0x4D,0x94);

/* Definition of interface: ISuiteFile */
#undef INTERFACE
#define INTERFACE ISuiteFile

DECLARE_INTERFACE_(ISuiteFile, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteFile methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Size)(THIS_ long FAR* lSize) PURE;
    STDMETHOD(get_Modified)(THIS_ BSTR FAR* bstrModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* bstrVersio) PURE;
    STDMETHOD(get_LinkPath)(THIS_ BSTR FAR* bstrLinkPath) PURE;
    STDMETHOD(put_LinkPath)(THIS_ BSTR bstrLinkPath) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* bstrFullPath) PURE;
};

DEFINE_GUID(IID_ISuiteFiles,0x17BB2ECAL,0x09BD,0x4108,0x80,0x22,0x3A,0x7C,0xB8,0x5E,0x31,0xDE);

/* Definition of interface: ISuiteFiles */
#undef INTERFACE
#define INTERFACE ISuiteFiles

DECLARE_INTERFACE_(ISuiteFiles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteFiles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ISuiteFileEvent,0xE53CEE12L,0x4611,0x4F79,0x89,0x18,0xDC,0xC4,0xD8,0x01,0x75,0xC9);

/* Definition of interface: ISuiteFileEvent */
#undef INTERFACE
#define INTERFACE ISuiteFileEvent

DECLARE_INTERFACE_(ISuiteFileEvent, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteFileEvent methods */
    STDMETHOD(OnDelete)(THIS) PURE;
    STDMETHOD(OnConflict)(THIS_ ISuiteFile FAR* pCurrentFile, ISuiteFile FAR* pOldFile, EnumConflictId FAR* plReturn) PURE;
    STDMETHOD(OnFileReplace)(THIS_ ISuiteFile FAR* pOldFile, ISuiteFile FAR* pNewFile) PURE;
};

typedef enum EnumSuiteFolderChild {
    esfcFile = 1,
    esfcFolder = 2,
    esfcDynFile = 3
} EnumSuiteFolderChild;

interface ISuiteFolders;

interface ISuiteDynamicFileLinks;

DEFINE_GUID(IID_ISuiteFolder,0x11314180L,0x63C1,0x4869,0xBE,0x97,0xFA,0x0F,0x4D,0x02,0xEE,0x75);

/* Definition of interface: ISuiteFolder */
#undef INTERFACE
#define INTERFACE ISuiteFolder

DECLARE_INTERFACE_(ISuiteFolder, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteFolder methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(get_SubFolders)(THIS_ ISuiteFolders FAR* FAR* ppFolders) PURE;
    STDMETHOD(get_Files)(THIS_ ISuiteFiles FAR* FAR* ppFiles) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* pvbHasChild) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSuiteFolderChild estcFolder, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(RefreshFiles)(THIS) PURE;
    STDMETHOD(Advise)(THIS_ ISuiteFileEvent FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(get_DynamicFileLinks)(THIS_ ISuiteDynamicFileLinks FAR* FAR* ppDFLs) PURE;
};

DEFINE_GUID(IID_ISuiteFolders,0xC1C46B24L,0x673B,0x4722,0x8A,0x53,0xC8,0xF8,0x6E,0x3E,0x3D,0x2A);

/* Definition of interface: ISuiteFolders */
#undef INTERFACE
#define INTERFACE ISuiteFolders

DECLARE_INTERFACE_(ISuiteFolders, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteFolders methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteFolder FAR* FAR* ppFolder) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ISuiteOperation,0x8B515251L,0xB698,0x4241,0x9F,0x22,0x52,0x45,0x64,0x79,0xF2,0x2B);

/* Definition of interface: ISuiteOperation */
#undef INTERFACE
#define INTERFACE ISuiteOperation

DECLARE_INTERFACE_(ISuiteOperation, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteOperation methods */
    STDMETHOD(get_Type)(THIS_ EnumSuiteOperationType FAR* eType) PURE;
    STDMETHOD(put_Enable)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_Enable)(THIS_ VARIANT_BOOL FAR* pvbEnable) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR bstrTarget) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* bstrTarget) PURE;
    STDMETHOD(put_CmdLine)(THIS_ BSTR bstrCmdLine) PURE;
    STDMETHOD(get_CmdLine)(THIS_ BSTR FAR* bstrCmdLine) PURE;
    STDMETHOD(put_Silent)(THIS_ BSTR bstrSilent) PURE;
    STDMETHOD(get_Silent)(THIS_ BSTR FAR* bstrSilent) PURE;
    STDMETHOD(put_ExitBehavior)(THIS_ EnumPropSuiteExit eVal) PURE;
    STDMETHOD(get_ExitBehavior)(THIS_ EnumPropSuiteExit FAR* eVal) PURE;
    STDMETHOD(put_RebootRequest)(THIS_ EnumPropSuiteReboot eVal) PURE;
    STDMETHOD(get_RebootRequest)(THIS_ EnumPropSuiteReboot FAR* eVal) PURE;
    STDMETHOD(put_RebootCode)(THIS_ BSTR bstrRebootCode) PURE;
    STDMETHOD(get_RebootCode)(THIS_ BSTR FAR* bstrRebootCode) PURE;
};

DEFINE_GUID(IID_ISuiteOperationOpusSP1,0xE17B2B2DL,0x20BD,0x4F52,0xB3,0xDB,0x9E,0xD4,0xBC,0x42,0x2B,0xC7);

/* Definition of interface: ISuiteOperationOpusSP1 */
#undef INTERFACE
#define INTERFACE ISuiteOperationOpusSP1

DECLARE_INTERFACE_(ISuiteOperationOpusSP1, ISuiteOperation)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuiteOperation methods */
    STDMETHOD(get_Type)(THIS_ EnumSuiteOperationType FAR* eType) PURE;
    STDMETHOD(put_Enable)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_Enable)(THIS_ VARIANT_BOOL FAR* pvbEnable) PURE;
    STDMETHOD(put_Target)(THIS_ BSTR bstrTarget) PURE;
    STDMETHOD(get_Target)(THIS_ BSTR FAR* bstrTarget) PURE;
    STDMETHOD(put_CmdLine)(THIS_ BSTR bstrCmdLine) PURE;
    STDMETHOD(get_CmdLine)(THIS_ BSTR FAR* bstrCmdLine) PURE;
    STDMETHOD(put_Silent)(THIS_ BSTR bstrSilent) PURE;
    STDMETHOD(get_Silent)(THIS_ BSTR FAR* bstrSilent) PURE;
    STDMETHOD(put_ExitBehavior)(THIS_ EnumPropSuiteExit eVal) PURE;
    STDMETHOD(get_ExitBehavior)(THIS_ EnumPropSuiteExit FAR* eVal) PURE;
    STDMETHOD(put_RebootRequest)(THIS_ EnumPropSuiteReboot eVal) PURE;
    STDMETHOD(get_RebootRequest)(THIS_ EnumPropSuiteReboot FAR* eVal) PURE;
    STDMETHOD(put_RebootCode)(THIS_ BSTR bstrRebootCode) PURE;
    STDMETHOD(get_RebootCode)(THIS_ BSTR FAR* bstrRebootCode) PURE;
#endif

    /* ISuiteOperationOpusSP1 methods */
    STDMETHOD(put_ForceApplicationShutdown)(THIS_ VARIANT_BOOL vbForceApplicationShutdown) PURE;
    STDMETHOD(get_ForceApplicationShutdown)(THIS_ VARIANT_BOOL FAR* pvbForceApplicationShutdown) PURE;
};

typedef enum EnumPropSuiteRelease {
    epsrName = 10,
    epsrBuildLocation = 11,
    epsrSignatureURL = 12,
    epsrSetupIcon = 13,
    epsrPassword = 14,
    epsrPasswordProtect = 15,
    epsrPkgLoc = 16,
    epsrUILangs = 17,
    epsrDefLang = 18,
    epsrCertFile = 19,
    epsrPVK = 20,
    epsrCertPassword = 21,
    epsrSignEnabled = 22,
    epsrExePrivileges = 23,
    epsrExeFileName = 24,
    epsrUseCustomVersionInfo = 25,
    epsrSetupExeCopyright = 26,
    epsrSetupExeDescr = 27,
    epsrSetupExeVersion = 28,
    epsrSetupExeCompany = 29,
    epsrLangSelDialog = 30,
    epsrReleaseFlags = 31,
    epsrBuildEventPreBuild = 32,
    epsrBuildEventPostBuild = 33,
    epsrCachePackagesLocally = 34,
    epsrUpdateUrl = 35,
    epsrPreProcessorDefines = 36,
    epsrVMConfig = 37,
    epsrVMMachineName = 38,
    epsrVMMachineUserName = 39,
    epsrVMMachinePassword = 40,
    epsrVMStagePostBuild = 41,
    epsrVMMachineCopyPath = 42,
    epsrVMSnapShot = 43,
    epsrSignatureDescription = 44,
    epsrPathVariableOverrides = 45,
    epsrUseTestPathVariables = 46,
    epsrProductNameOverride = 47,
    epsrProductVersionOverride = 48,
    epsrSuiteGuidOverride = 49
} EnumPropSuiteRelease;

DEFINE_GUID(IID_ISuitePackageBase,0xC13D3E61L,0xD96F,0x448E,0x8D,0x74,0x22,0x87,0x8E,0xCE,0x18,0x4D);

/* Definition of interface: ISuitePackageBase */
#undef INTERFACE
#define INTERFACE ISuitePackageBase

DECLARE_INTERFACE_(ISuitePackageBase, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuitePackageBase methods */
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* pvbHasChild) PURE;
};

typedef enum EnumBSPackageLoc {
    eplSourceMedia = 0,
    eplSetupExe = 1,
    eplWeb = 2,
    eplIndividual = 3
} EnumBSPackageLoc;

DEFINE_GUID(IID_ISuiteRelease,0x5BF2A3DAL,0xF2B4,0x4334,0x8B,0x08,0xD3,0x1D,0xAE,0xC3,0x2F,0x70);

/* Definition of interface: ISuiteRelease */
#undef INTERFACE
#define INTERFACE ISuiteRelease

DECLARE_INTERFACE_(ISuiteRelease, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* SignatureURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR SignatureURL) PURE;
    STDMETHOD(get_SetupIcon)(THIS_ BSTR FAR* SetupIcon) PURE;
    STDMETHOD(put_SetupIcon)(THIS_ BSTR SetupIcon) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* pvbPasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL vbPasswordProtect) PURE;
    STDMETHOD(get_PackageLocation)(THIS_ EnumBSPackageLoc FAR* pPackageLoc) PURE;
    STDMETHOD(put_PackageLocation)(THIS_ EnumBSPackageLoc PackageLoc) PURE;
    STDMETHOD(get_UILanguages)(THIS_ BSTR FAR* UILanguages) PURE;
    STDMETHOD(put_UILanguages)(THIS_ BSTR UILanguages) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* pbstrDigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR bstrDigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* pbstrDigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR bstrDigitalSPC) PURE;
    STDMETHOD(get_CertPassword)(THIS_ BSTR FAR* pbstrDigitalPassword) PURE;
    STDMETHOD(put_CertPassword)(THIS_ BSTR bstrDigitalPassword) PURE;
    STDMETHOD(get_SignEnabled)(THIS_ VARIANT_BOOL FAR* pvbEnabled) PURE;
    STDMETHOD(put_SignEnabled)(THIS_ VARIANT_BOOL vbEnabled) PURE;
    STDMETHOD(get_LauncherPrivileges)(THIS_ EnumRequiredExecutionLevel FAR* erelLevel) PURE;
    STDMETHOD(put_LauncherPrivileges)(THIS_ EnumRequiredExecutionLevel erelLevel) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* pvbUseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL vbUseMyVersionInfo) PURE;
    STDMETHOD(get_SetupExeCopyright)(THIS_ BSTR FAR* pbstrSetupCopyright) PURE;
    STDMETHOD(put_SetupExeCopyright)(THIS_ BSTR bstrSetupCopyright) PURE;
    STDMETHOD(get_SetupExeDescription)(THIS_ BSTR FAR* pbstrSetupExeDescription) PURE;
    STDMETHOD(put_SetupExeDescription)(THIS_ BSTR bstrSetupExeDescription) PURE;
    STDMETHOD(get_SetupExeVersion)(THIS_ BSTR FAR* pbstrSetupExeSetupExeVersion) PURE;
    STDMETHOD(put_SetupExeVersion)(THIS_ BSTR bstrSetupExeSetupExeVersion) PURE;
    STDMETHOD(get_SetupExeCompany)(THIS_ BSTR FAR* pbstrSetupExeSetupExeCompany) PURE;
    STDMETHOD(put_SetupExeCompany)(THIS_ BSTR bstrSetupExeSetupExeCompany) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* pbstrRootSetupFolder) PURE;
    STDMETHOD(get_EnableLangSelectionDialog)(THIS_ VARIANT_BOOL FAR* pvbEnableLangSelectionDialog) PURE;
    STDMETHOD(put_EnableLangSelectionDialog)(THIS_ VARIANT_BOOL vbEnableLangSelectionDialog) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* pbstrReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR bstrReleaseFlags) PURE;
    STDMETHOD(get_BuildEvent)(THIS_ EnumReleaseProperty eBuildEvent, BSTR FAR* pbstrBuildEvent) PURE;
    STDMETHOD(put_BuildEvent)(THIS_ EnumReleaseProperty eBuildEvent, BSTR bstrBuildEvent) PURE;
    STDMETHOD(get_CachePackagesLocally)(THIS_ VARIANT_BOOL FAR* pvbCachePackagesLocally) PURE;
    STDMETHOD(put_CachePackagesLocally)(THIS_ VARIANT_BOOL vbCachePackagesLocally) PURE;
    STDMETHOD(get_UpdateUrl)(THIS_ BSTR FAR* pbstrUpdateUrl) PURE;
    STDMETHOD(put_UpdateUrl)(THIS_ BSTR bstrUpdateUrl) PURE;
};

DEFINE_GUID(IID_ISuiteReleaseQi,0x3180C20EL,0x82B7,0x4CB6,0x92,0x90,0x9C,0x8E,0x67,0x83,0x49,0x6B);

/* Definition of interface: ISuiteReleaseQi */
#undef INTERFACE
#define INTERFACE ISuiteReleaseQi

DECLARE_INTERFACE_(ISuiteReleaseQi, ISuiteRelease)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuiteRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* SignatureURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR SignatureURL) PURE;
    STDMETHOD(get_SetupIcon)(THIS_ BSTR FAR* SetupIcon) PURE;
    STDMETHOD(put_SetupIcon)(THIS_ BSTR SetupIcon) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* pvbPasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL vbPasswordProtect) PURE;
    STDMETHOD(get_PackageLocation)(THIS_ EnumBSPackageLoc FAR* pPackageLoc) PURE;
    STDMETHOD(put_PackageLocation)(THIS_ EnumBSPackageLoc PackageLoc) PURE;
    STDMETHOD(get_UILanguages)(THIS_ BSTR FAR* UILanguages) PURE;
    STDMETHOD(put_UILanguages)(THIS_ BSTR UILanguages) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* pbstrDigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR bstrDigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* pbstrDigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR bstrDigitalSPC) PURE;
    STDMETHOD(get_CertPassword)(THIS_ BSTR FAR* pbstrDigitalPassword) PURE;
    STDMETHOD(put_CertPassword)(THIS_ BSTR bstrDigitalPassword) PURE;
    STDMETHOD(get_SignEnabled)(THIS_ VARIANT_BOOL FAR* pvbEnabled) PURE;
    STDMETHOD(put_SignEnabled)(THIS_ VARIANT_BOOL vbEnabled) PURE;
    STDMETHOD(get_LauncherPrivileges)(THIS_ EnumRequiredExecutionLevel FAR* erelLevel) PURE;
    STDMETHOD(put_LauncherPrivileges)(THIS_ EnumRequiredExecutionLevel erelLevel) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* pvbUseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL vbUseMyVersionInfo) PURE;
    STDMETHOD(get_SetupExeCopyright)(THIS_ BSTR FAR* pbstrSetupCopyright) PURE;
    STDMETHOD(put_SetupExeCopyright)(THIS_ BSTR bstrSetupCopyright) PURE;
    STDMETHOD(get_SetupExeDescription)(THIS_ BSTR FAR* pbstrSetupExeDescription) PURE;
    STDMETHOD(put_SetupExeDescription)(THIS_ BSTR bstrSetupExeDescription) PURE;
    STDMETHOD(get_SetupExeVersion)(THIS_ BSTR FAR* pbstrSetupExeSetupExeVersion) PURE;
    STDMETHOD(put_SetupExeVersion)(THIS_ BSTR bstrSetupExeSetupExeVersion) PURE;
    STDMETHOD(get_SetupExeCompany)(THIS_ BSTR FAR* pbstrSetupExeSetupExeCompany) PURE;
    STDMETHOD(put_SetupExeCompany)(THIS_ BSTR bstrSetupExeSetupExeCompany) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* pbstrRootSetupFolder) PURE;
    STDMETHOD(get_EnableLangSelectionDialog)(THIS_ VARIANT_BOOL FAR* pvbEnableLangSelectionDialog) PURE;
    STDMETHOD(put_EnableLangSelectionDialog)(THIS_ VARIANT_BOOL vbEnableLangSelectionDialog) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* pbstrReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR bstrReleaseFlags) PURE;
    STDMETHOD(get_BuildEvent)(THIS_ EnumReleaseProperty eBuildEvent, BSTR FAR* pbstrBuildEvent) PURE;
    STDMETHOD(put_BuildEvent)(THIS_ EnumReleaseProperty eBuildEvent, BSTR bstrBuildEvent) PURE;
    STDMETHOD(get_CachePackagesLocally)(THIS_ VARIANT_BOOL FAR* pvbCachePackagesLocally) PURE;
    STDMETHOD(put_CachePackagesLocally)(THIS_ VARIANT_BOOL vbCachePackagesLocally) PURE;
    STDMETHOD(get_UpdateUrl)(THIS_ BSTR FAR* pbstrUpdateUrl) PURE;
    STDMETHOD(put_UpdateUrl)(THIS_ BSTR bstrUpdateUrl) PURE;
#endif

    /* ISuiteReleaseQi methods */
    STDMETHOD(get_PreProcessorDefines)(THIS_ BSTR FAR* pbstrDefines) PURE;
    STDMETHOD(put_PreProcessorDefines)(THIS_ BSTR bstrDefines) PURE;
    STDMETHOD(get_VMConfig)(THIS_ BSTR FAR* pbstrVMConfig) PURE;
    STDMETHOD(put_VMConfig)(THIS_ BSTR bstrVMConfig) PURE;
    STDMETHOD(get_VMMachineName)(THIS_ BSTR FAR* pbstrVMMachineName) PURE;
    STDMETHOD(put_VMMachineName)(THIS_ BSTR bstrVMMachineName) PURE;
    STDMETHOD(get_VMMachineUserName)(THIS_ BSTR FAR* pbstrVMMachineUserName) PURE;
    STDMETHOD(put_VMMachineUserName)(THIS_ BSTR bstrVMMachineUserName) PURE;
    STDMETHOD(get_VMMachinePassword)(THIS_ BSTR FAR* pbstrVMMachinePassword) PURE;
    STDMETHOD(put_VMMachinePassword)(THIS_ BSTR bstrVMMachinePassword) PURE;
    STDMETHOD(get_VMStagePostBuild)(THIS_ VARIANT_BOOL FAR* pvbVMStagePostBuild) PURE;
    STDMETHOD(put_VMStagePostBuild)(THIS_ VARIANT_BOOL vbVMStagePostBuild) PURE;
    STDMETHOD(get_VMStageMachineCopyPath)(THIS_ BSTR FAR* pbstrVMStageMachineCopyPath) PURE;
    STDMETHOD(put_VMStageMachineCopyPath)(THIS_ BSTR bstrVMStageMachineCopyPath) PURE;
    STDMETHOD(get_VMSnapShot)(THIS_ BSTR FAR* pbstrVMSnapShot) PURE;
    STDMETHOD(put_VMSnapShot)(THIS_ BSTR bstrVMSnapShot) PURE;
};

DEFINE_GUID(IID_ISuiteReleaseRipley,0xC0AE15A0L,0x9F8C,0x4545,0xB3,0x7A,0x2C,0x9F,0x79,0x71,0x34,0xAF);

/* Definition of interface: ISuiteReleaseRipley */
#undef INTERFACE
#define INTERFACE ISuiteReleaseRipley

DECLARE_INTERFACE_(ISuiteReleaseRipley, ISuiteReleaseQi)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuiteRelease methods */
    STDMETHOD(get_BuildLocation)(THIS_ BSTR FAR* BuildLocation) PURE;
    STDMETHOD(put_BuildLocation)(THIS_ BSTR BuildLocation) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_DigitalURL)(THIS_ BSTR FAR* SignatureURL) PURE;
    STDMETHOD(put_DigitalURL)(THIS_ BSTR SignatureURL) PURE;
    STDMETHOD(get_SetupIcon)(THIS_ BSTR FAR* SetupIcon) PURE;
    STDMETHOD(put_SetupIcon)(THIS_ BSTR SetupIcon) PURE;
    STDMETHOD(get_Password)(THIS_ BSTR FAR* Password) PURE;
    STDMETHOD(put_Password)(THIS_ BSTR Password) PURE;
    STDMETHOD(get_PasswordProtect)(THIS_ VARIANT_BOOL FAR* pvbPasswordProtect) PURE;
    STDMETHOD(put_PasswordProtect)(THIS_ VARIANT_BOOL vbPasswordProtect) PURE;
    STDMETHOD(get_PackageLocation)(THIS_ EnumBSPackageLoc FAR* pPackageLoc) PURE;
    STDMETHOD(put_PackageLocation)(THIS_ EnumBSPackageLoc PackageLoc) PURE;
    STDMETHOD(get_UILanguages)(THIS_ BSTR FAR* UILanguages) PURE;
    STDMETHOD(put_UILanguages)(THIS_ BSTR UILanguages) PURE;
    STDMETHOD(get_DefaultLanguage)(THIS_ BSTR FAR* DefaultLanguage) PURE;
    STDMETHOD(put_DefaultLanguage)(THIS_ BSTR DefaultLanguage) PURE;
    STDMETHOD(get_DigitalPVK)(THIS_ BSTR FAR* pbstrDigitalPVK) PURE;
    STDMETHOD(put_DigitalPVK)(THIS_ BSTR bstrDigitalPVK) PURE;
    STDMETHOD(get_DigitalSPC)(THIS_ BSTR FAR* pbstrDigitalSPC) PURE;
    STDMETHOD(put_DigitalSPC)(THIS_ BSTR bstrDigitalSPC) PURE;
    STDMETHOD(get_CertPassword)(THIS_ BSTR FAR* pbstrDigitalPassword) PURE;
    STDMETHOD(put_CertPassword)(THIS_ BSTR bstrDigitalPassword) PURE;
    STDMETHOD(get_SignEnabled)(THIS_ VARIANT_BOOL FAR* pvbEnabled) PURE;
    STDMETHOD(put_SignEnabled)(THIS_ VARIANT_BOOL vbEnabled) PURE;
    STDMETHOD(get_LauncherPrivileges)(THIS_ EnumRequiredExecutionLevel FAR* erelLevel) PURE;
    STDMETHOD(put_LauncherPrivileges)(THIS_ EnumRequiredExecutionLevel erelLevel) PURE;
    STDMETHOD(get_SetupFileName)(THIS_ BSTR FAR* pbstrSetupFileName) PURE;
    STDMETHOD(put_SetupFileName)(THIS_ BSTR bstrSetupFileName) PURE;
    STDMETHOD(get_UseMyVersionInfo)(THIS_ VARIANT_BOOL FAR* pvbUseMyVersionInfo) PURE;
    STDMETHOD(put_UseMyVersionInfo)(THIS_ VARIANT_BOOL vbUseMyVersionInfo) PURE;
    STDMETHOD(get_SetupExeCopyright)(THIS_ BSTR FAR* pbstrSetupCopyright) PURE;
    STDMETHOD(put_SetupExeCopyright)(THIS_ BSTR bstrSetupCopyright) PURE;
    STDMETHOD(get_SetupExeDescription)(THIS_ BSTR FAR* pbstrSetupExeDescription) PURE;
    STDMETHOD(put_SetupExeDescription)(THIS_ BSTR bstrSetupExeDescription) PURE;
    STDMETHOD(get_SetupExeVersion)(THIS_ BSTR FAR* pbstrSetupExeSetupExeVersion) PURE;
    STDMETHOD(put_SetupExeVersion)(THIS_ BSTR bstrSetupExeSetupExeVersion) PURE;
    STDMETHOD(get_SetupExeCompany)(THIS_ BSTR FAR* pbstrSetupExeSetupExeCompany) PURE;
    STDMETHOD(put_SetupExeCompany)(THIS_ BSTR bstrSetupExeSetupExeCompany) PURE;
    STDMETHOD(get_RootSetupFolder)(THIS_ BSTR FAR* pbstrRootSetupFolder) PURE;
    STDMETHOD(get_EnableLangSelectionDialog)(THIS_ VARIANT_BOOL FAR* pvbEnableLangSelectionDialog) PURE;
    STDMETHOD(put_EnableLangSelectionDialog)(THIS_ VARIANT_BOOL vbEnableLangSelectionDialog) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* pbstrReleaseFlags) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR bstrReleaseFlags) PURE;
    STDMETHOD(get_BuildEvent)(THIS_ EnumReleaseProperty eBuildEvent, BSTR FAR* pbstrBuildEvent) PURE;
    STDMETHOD(put_BuildEvent)(THIS_ EnumReleaseProperty eBuildEvent, BSTR bstrBuildEvent) PURE;
    STDMETHOD(get_CachePackagesLocally)(THIS_ VARIANT_BOOL FAR* pvbCachePackagesLocally) PURE;
    STDMETHOD(put_CachePackagesLocally)(THIS_ VARIANT_BOOL vbCachePackagesLocally) PURE;
    STDMETHOD(get_UpdateUrl)(THIS_ BSTR FAR* pbstrUpdateUrl) PURE;
    STDMETHOD(put_UpdateUrl)(THIS_ BSTR bstrUpdateUrl) PURE;

    /* ISuiteReleaseQi methods */
    STDMETHOD(get_PreProcessorDefines)(THIS_ BSTR FAR* pbstrDefines) PURE;
    STDMETHOD(put_PreProcessorDefines)(THIS_ BSTR bstrDefines) PURE;
    STDMETHOD(get_VMConfig)(THIS_ BSTR FAR* pbstrVMConfig) PURE;
    STDMETHOD(put_VMConfig)(THIS_ BSTR bstrVMConfig) PURE;
    STDMETHOD(get_VMMachineName)(THIS_ BSTR FAR* pbstrVMMachineName) PURE;
    STDMETHOD(put_VMMachineName)(THIS_ BSTR bstrVMMachineName) PURE;
    STDMETHOD(get_VMMachineUserName)(THIS_ BSTR FAR* pbstrVMMachineUserName) PURE;
    STDMETHOD(put_VMMachineUserName)(THIS_ BSTR bstrVMMachineUserName) PURE;
    STDMETHOD(get_VMMachinePassword)(THIS_ BSTR FAR* pbstrVMMachinePassword) PURE;
    STDMETHOD(put_VMMachinePassword)(THIS_ BSTR bstrVMMachinePassword) PURE;
    STDMETHOD(get_VMStagePostBuild)(THIS_ VARIANT_BOOL FAR* pvbVMStagePostBuild) PURE;
    STDMETHOD(put_VMStagePostBuild)(THIS_ VARIANT_BOOL vbVMStagePostBuild) PURE;
    STDMETHOD(get_VMStageMachineCopyPath)(THIS_ BSTR FAR* pbstrVMStageMachineCopyPath) PURE;
    STDMETHOD(put_VMStageMachineCopyPath)(THIS_ BSTR bstrVMStageMachineCopyPath) PURE;
    STDMETHOD(get_VMSnapShot)(THIS_ BSTR FAR* pbstrVMSnapShot) PURE;
    STDMETHOD(put_VMSnapShot)(THIS_ BSTR bstrVMSnapShot) PURE;
#endif

    /* ISuiteReleaseRipley methods */
    STDMETHOD(get_SignatureDescription)(THIS_ BSTR FAR* pbstrSigDescription) PURE;
    STDMETHOD(put_SignatureDescription)(THIS_ BSTR bstrSigDescription) PURE;
    STDMETHOD(get_SuiteReleaseProperty)(THIS_ EnumPropSuiteRelease erpProperty, VARIANT FAR* pVal) PURE;
    STDMETHOD(put_SuiteReleaseProperty)(THIS_ EnumPropSuiteRelease erpProperty, VARIANT val) PURE;
};

DEFINE_GUID(IID_ISuiteReleases,0x307C4D57L,0xB9EF,0x4EFA,0xA3,0xD7,0x66,0xE3,0x88,0xB7,0x5D,0xFF);

/* Definition of interface: ISuiteReleases */
#undef INTERFACE
#define INTERFACE ISuiteReleases

DECLARE_INTERFACE_(ISuiteReleases, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteReleases methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteRelease FAR* FAR* ppSuiteRelease) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(get_ActiveRelease)(THIS_ ISuiteRelease FAR* FAR* ppSuiteRelease) PURE;
    STDMETHOD(put_ActiveRelease)(THIS_ ISuiteRelease FAR* pSuiteRelease) PURE;
};

typedef enum EnumSuitePackageLoc {
    espalSourceMedia = 0,
    espalSetupExe = 1,
    espalWeb = 2
} EnumSuitePackageLoc;

typedef enum EnumSuiteParcelType {
    espltPrimary = 0,
    espltDependency = 1
} EnumSuiteParcelType;

typedef enum EnumSuiteParcelEvent {
    espeConfiguring = 0,
    espeConfigured = 1
} EnumSuiteParcelEvent;

interface ISuiteActionRefs;

interface ISuiteActionRef;

interface ISuiteAction;

interface ISuiteWebDeployParameter;

interface ISuiteWebDeployParameters;

DEFINE_GUID(IID_ISuitePackage,0xA47E412DL,0x9004,0x4FCD,0xB6,0x41,0x54,0x83,0xCC,0x25,0xD1,0x42);

/* Definition of interface: ISuitePackage */
#undef INTERFACE
#define INTERFACE ISuitePackage

DECLARE_INTERFACE_(ISuitePackage, ISuitePackageBase)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuitePackageBase methods */
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* pvbHasChild) PURE;
#endif

    /* ISuitePackage methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(put_DisplayNameEx)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayNameEx)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(get_PackageType)(THIS_ EnumSuitePackageType FAR* eType) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrDescription) PURE;
    STDMETHOD(get_Operation)(THIS_ EnumSuiteOperationType eType, ISuiteOperation FAR* FAR* ppOperation) PURE;
    STDMETHOD(get_RootFolder)(THIS_ ISuiteFolder FAR* FAR* ppRootFolder) PURE;
    STDMETHOD(get_DestFiles)(THIS_ IIsStrings2 FAR* FAR* ppDestFiles) PURE;
    STDMETHOD(put_PackageLocation)(THIS_ EnumSuitePackageLoc eLocation) PURE;
    STDMETHOD(get_PackageLocation)(THIS_ EnumSuitePackageLoc FAR* eLocation) PURE;
    STDMETHOD(put_PackageUrl)(THIS_ BSTR bstrUrl) PURE;
    STDMETHOD(get_PackageUrl)(THIS_ BSTR FAR* bstrUrl) PURE;
    STDMETHOD(get_DetectCondition)(THIS_ ISuiteCondition FAR* FAR* ppDetect) PURE;
    STDMETHOD(get_EligibleCondition)(THIS_ ISuiteCondition FAR* FAR* ppEligible) PURE;
    STDMETHOD(AddCondition)(THIS_ EnumPropSuitePackage epspCondition, ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(DeleteCondition)(THIS_ EnumPropSuitePackage epspCondition) PURE;
    STDMETHOD(put_CachePath)(THIS_ BSTR bstrCachePath) PURE;
    STDMETHOD(get_CachePath)(THIS_ BSTR FAR* bstrCachePath) PURE;
    STDMETHOD(put_Elevation)(THIS_ VARIANT_BOOL vbElevation) PURE;
    STDMETHOD(get_Elevation)(THIS_ VARIANT_BOOL FAR* vbElevation) PURE;
    STDMETHOD(put_ProgressCapture)(THIS_ EnumPropSuiteProgressCapture eType) PURE;
    STDMETHOD(get_ProgressCapture)(THIS_ EnumPropSuiteProgressCapture FAR* eType) PURE;
    STDMETHOD(put_UpgradeType)(THIS_ EnumPropSuiteUpgradeType eType) PURE;
    STDMETHOD(get_UpgradeType)(THIS_ EnumPropSuiteUpgradeType FAR* eType) PURE;
    STDMETHOD(put_ParcelType)(THIS_ EnumSuiteParcelType eParcelType) PURE;
    STDMETHOD(get_ParcelType)(THIS_ EnumSuiteParcelType FAR* peParcelType) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* vbOrphan) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR bstrReleaseFlags) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* bstrReleaseFlags) PURE;
    STDMETHOD(put_LoggingEnable)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_LoggingEnable)(THIS_ VARIANT_BOOL FAR* pvbEnable) PURE;
    STDMETHOD(put_LoggingCmdLine)(THIS_ BSTR bstrCmdLine) PURE;
    STDMETHOD(get_LoggingCmdLine)(THIS_ BSTR FAR* pbstrCmdLine) PURE;
    STDMETHOD(put_LoggingMsiLogFile)(THIS_ BSTR bstrLogFile) PURE;
    STDMETHOD(get_LoggingMsiLogFile)(THIS_ BSTR FAR* pbstrLogFile) PURE;
    STDMETHOD(put_LoggingMsiLogOptions)(THIS_ BSTR bstrLogOptions) PURE;
    STDMETHOD(get_LoggingMsiLogOptions)(THIS_ BSTR FAR* pbstrLogOptions) PURE;
};

DEFINE_GUID(IID_ISuitePackageOpusSP1,0x0FCD0577L,0x163B,0x4B17,0x90,0xB2,0xCD,0x6C,0xF5,0x4C,0x52,0xE0);

/* Definition of interface: ISuitePackageOpusSP1 */
#undef INTERFACE
#define INTERFACE ISuitePackageOpusSP1

DECLARE_INTERFACE_(ISuitePackageOpusSP1, ISuitePackage)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuitePackageBase methods */
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* pvbHasChild) PURE;

    /* ISuitePackage methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(put_DisplayNameEx)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayNameEx)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(get_PackageType)(THIS_ EnumSuitePackageType FAR* eType) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrDescription) PURE;
    STDMETHOD(get_Operation)(THIS_ EnumSuiteOperationType eType, ISuiteOperation FAR* FAR* ppOperation) PURE;
    STDMETHOD(get_RootFolder)(THIS_ ISuiteFolder FAR* FAR* ppRootFolder) PURE;
    STDMETHOD(get_DestFiles)(THIS_ IIsStrings2 FAR* FAR* ppDestFiles) PURE;
    STDMETHOD(put_PackageLocation)(THIS_ EnumSuitePackageLoc eLocation) PURE;
    STDMETHOD(get_PackageLocation)(THIS_ EnumSuitePackageLoc FAR* eLocation) PURE;
    STDMETHOD(put_PackageUrl)(THIS_ BSTR bstrUrl) PURE;
    STDMETHOD(get_PackageUrl)(THIS_ BSTR FAR* bstrUrl) PURE;
    STDMETHOD(get_DetectCondition)(THIS_ ISuiteCondition FAR* FAR* ppDetect) PURE;
    STDMETHOD(get_EligibleCondition)(THIS_ ISuiteCondition FAR* FAR* ppEligible) PURE;
    STDMETHOD(AddCondition)(THIS_ EnumPropSuitePackage epspCondition, ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(DeleteCondition)(THIS_ EnumPropSuitePackage epspCondition) PURE;
    STDMETHOD(put_CachePath)(THIS_ BSTR bstrCachePath) PURE;
    STDMETHOD(get_CachePath)(THIS_ BSTR FAR* bstrCachePath) PURE;
    STDMETHOD(put_Elevation)(THIS_ VARIANT_BOOL vbElevation) PURE;
    STDMETHOD(get_Elevation)(THIS_ VARIANT_BOOL FAR* vbElevation) PURE;
    STDMETHOD(put_ProgressCapture)(THIS_ EnumPropSuiteProgressCapture eType) PURE;
    STDMETHOD(get_ProgressCapture)(THIS_ EnumPropSuiteProgressCapture FAR* eType) PURE;
    STDMETHOD(put_UpgradeType)(THIS_ EnumPropSuiteUpgradeType eType) PURE;
    STDMETHOD(get_UpgradeType)(THIS_ EnumPropSuiteUpgradeType FAR* eType) PURE;
    STDMETHOD(put_ParcelType)(THIS_ EnumSuiteParcelType eParcelType) PURE;
    STDMETHOD(get_ParcelType)(THIS_ EnumSuiteParcelType FAR* peParcelType) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* vbOrphan) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR bstrReleaseFlags) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* bstrReleaseFlags) PURE;
    STDMETHOD(put_LoggingEnable)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_LoggingEnable)(THIS_ VARIANT_BOOL FAR* pvbEnable) PURE;
    STDMETHOD(put_LoggingCmdLine)(THIS_ BSTR bstrCmdLine) PURE;
    STDMETHOD(get_LoggingCmdLine)(THIS_ BSTR FAR* pbstrCmdLine) PURE;
    STDMETHOD(put_LoggingMsiLogFile)(THIS_ BSTR bstrLogFile) PURE;
    STDMETHOD(get_LoggingMsiLogFile)(THIS_ BSTR FAR* pbstrLogFile) PURE;
    STDMETHOD(put_LoggingMsiLogOptions)(THIS_ BSTR bstrLogOptions) PURE;
    STDMETHOD(get_LoggingMsiLogOptions)(THIS_ BSTR FAR* pbstrLogOptions) PURE;
#endif

    /* ISuitePackageOpusSP1 methods */
    STDMETHOD(put_CerFile)(THIS_ BSTR bstrCerFile) PURE;
    STDMETHOD(get_CerFile)(THIS_ BSTR FAR* pbstrCerFile) PURE;
};

DEFINE_GUID(IID_ISuitePackagePunk,0x759B9C37L,0xD580,0x4634,0xAB,0x39,0x80,0xE4,0xDA,0xEE,0xB4,0xE0);

/* Definition of interface: ISuitePackagePunk */
#undef INTERFACE
#define INTERFACE ISuitePackagePunk

DECLARE_INTERFACE_(ISuitePackagePunk, ISuitePackageOpusSP1)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuitePackageBase methods */
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* pvbHasChild) PURE;

    /* ISuitePackage methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(put_DisplayNameEx)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayNameEx)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(get_PackageType)(THIS_ EnumSuitePackageType FAR* eType) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrDescription) PURE;
    STDMETHOD(get_Operation)(THIS_ EnumSuiteOperationType eType, ISuiteOperation FAR* FAR* ppOperation) PURE;
    STDMETHOD(get_RootFolder)(THIS_ ISuiteFolder FAR* FAR* ppRootFolder) PURE;
    STDMETHOD(get_DestFiles)(THIS_ IIsStrings2 FAR* FAR* ppDestFiles) PURE;
    STDMETHOD(put_PackageLocation)(THIS_ EnumSuitePackageLoc eLocation) PURE;
    STDMETHOD(get_PackageLocation)(THIS_ EnumSuitePackageLoc FAR* eLocation) PURE;
    STDMETHOD(put_PackageUrl)(THIS_ BSTR bstrUrl) PURE;
    STDMETHOD(get_PackageUrl)(THIS_ BSTR FAR* bstrUrl) PURE;
    STDMETHOD(get_DetectCondition)(THIS_ ISuiteCondition FAR* FAR* ppDetect) PURE;
    STDMETHOD(get_EligibleCondition)(THIS_ ISuiteCondition FAR* FAR* ppEligible) PURE;
    STDMETHOD(AddCondition)(THIS_ EnumPropSuitePackage epspCondition, ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(DeleteCondition)(THIS_ EnumPropSuitePackage epspCondition) PURE;
    STDMETHOD(put_CachePath)(THIS_ BSTR bstrCachePath) PURE;
    STDMETHOD(get_CachePath)(THIS_ BSTR FAR* bstrCachePath) PURE;
    STDMETHOD(put_Elevation)(THIS_ VARIANT_BOOL vbElevation) PURE;
    STDMETHOD(get_Elevation)(THIS_ VARIANT_BOOL FAR* vbElevation) PURE;
    STDMETHOD(put_ProgressCapture)(THIS_ EnumPropSuiteProgressCapture eType) PURE;
    STDMETHOD(get_ProgressCapture)(THIS_ EnumPropSuiteProgressCapture FAR* eType) PURE;
    STDMETHOD(put_UpgradeType)(THIS_ EnumPropSuiteUpgradeType eType) PURE;
    STDMETHOD(get_UpgradeType)(THIS_ EnumPropSuiteUpgradeType FAR* eType) PURE;
    STDMETHOD(put_ParcelType)(THIS_ EnumSuiteParcelType eParcelType) PURE;
    STDMETHOD(get_ParcelType)(THIS_ EnumSuiteParcelType FAR* peParcelType) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* vbOrphan) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR bstrReleaseFlags) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* bstrReleaseFlags) PURE;
    STDMETHOD(put_LoggingEnable)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_LoggingEnable)(THIS_ VARIANT_BOOL FAR* pvbEnable) PURE;
    STDMETHOD(put_LoggingCmdLine)(THIS_ BSTR bstrCmdLine) PURE;
    STDMETHOD(get_LoggingCmdLine)(THIS_ BSTR FAR* pbstrCmdLine) PURE;
    STDMETHOD(put_LoggingMsiLogFile)(THIS_ BSTR bstrLogFile) PURE;
    STDMETHOD(get_LoggingMsiLogFile)(THIS_ BSTR FAR* pbstrLogFile) PURE;
    STDMETHOD(put_LoggingMsiLogOptions)(THIS_ BSTR bstrLogOptions) PURE;
    STDMETHOD(get_LoggingMsiLogOptions)(THIS_ BSTR FAR* pbstrLogOptions) PURE;

    /* ISuitePackageOpusSP1 methods */
    STDMETHOD(put_CerFile)(THIS_ BSTR bstrCerFile) PURE;
    STDMETHOD(get_CerFile)(THIS_ BSTR FAR* pbstrCerFile) PURE;
#endif

    /* ISuitePackagePunk methods */
    STDMETHOD(AddEvent)(THIS_ ISuiteAction FAR* pSuiteAction, EnumSuiteParcelEvent eEvent, ISuiteActionRef FAR* FAR* ppEvent) PURE;
    STDMETHOD(get_Events)(THIS_ EnumSuiteParcelEvent eEvent, ISuiteActionRefs FAR* FAR* ppEvents) PURE;
    STDMETHOD(get_WindowsFeatures)(THIS_ BSTR FAR* pbstrFeatures) PURE;
    STDMETHOD(put_WindowsFeatures)(THIS_ BSTR bstrFeatures) PURE;
};

DEFINE_GUID(IID_ISuitePackageQi,0xC4684B0BL,0x2880,0x4C7E,0x8B,0xDC,0xAF,0xE3,0x90,0xEA,0x95,0xEB);

/* Definition of interface: ISuitePackageQi */
#undef INTERFACE
#define INTERFACE ISuitePackageQi

DECLARE_INTERFACE_(ISuitePackageQi, ISuitePackagePunk)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuitePackageBase methods */
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* pvbHasChild) PURE;

    /* ISuitePackage methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(put_DisplayNameEx)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayNameEx)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(get_PackageType)(THIS_ EnumSuitePackageType FAR* eType) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrDescription) PURE;
    STDMETHOD(get_Operation)(THIS_ EnumSuiteOperationType eType, ISuiteOperation FAR* FAR* ppOperation) PURE;
    STDMETHOD(get_RootFolder)(THIS_ ISuiteFolder FAR* FAR* ppRootFolder) PURE;
    STDMETHOD(get_DestFiles)(THIS_ IIsStrings2 FAR* FAR* ppDestFiles) PURE;
    STDMETHOD(put_PackageLocation)(THIS_ EnumSuitePackageLoc eLocation) PURE;
    STDMETHOD(get_PackageLocation)(THIS_ EnumSuitePackageLoc FAR* eLocation) PURE;
    STDMETHOD(put_PackageUrl)(THIS_ BSTR bstrUrl) PURE;
    STDMETHOD(get_PackageUrl)(THIS_ BSTR FAR* bstrUrl) PURE;
    STDMETHOD(get_DetectCondition)(THIS_ ISuiteCondition FAR* FAR* ppDetect) PURE;
    STDMETHOD(get_EligibleCondition)(THIS_ ISuiteCondition FAR* FAR* ppEligible) PURE;
    STDMETHOD(AddCondition)(THIS_ EnumPropSuitePackage epspCondition, ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(DeleteCondition)(THIS_ EnumPropSuitePackage epspCondition) PURE;
    STDMETHOD(put_CachePath)(THIS_ BSTR bstrCachePath) PURE;
    STDMETHOD(get_CachePath)(THIS_ BSTR FAR* bstrCachePath) PURE;
    STDMETHOD(put_Elevation)(THIS_ VARIANT_BOOL vbElevation) PURE;
    STDMETHOD(get_Elevation)(THIS_ VARIANT_BOOL FAR* vbElevation) PURE;
    STDMETHOD(put_ProgressCapture)(THIS_ EnumPropSuiteProgressCapture eType) PURE;
    STDMETHOD(get_ProgressCapture)(THIS_ EnumPropSuiteProgressCapture FAR* eType) PURE;
    STDMETHOD(put_UpgradeType)(THIS_ EnumPropSuiteUpgradeType eType) PURE;
    STDMETHOD(get_UpgradeType)(THIS_ EnumPropSuiteUpgradeType FAR* eType) PURE;
    STDMETHOD(put_ParcelType)(THIS_ EnumSuiteParcelType eParcelType) PURE;
    STDMETHOD(get_ParcelType)(THIS_ EnumSuiteParcelType FAR* peParcelType) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* vbOrphan) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR bstrReleaseFlags) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* bstrReleaseFlags) PURE;
    STDMETHOD(put_LoggingEnable)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_LoggingEnable)(THIS_ VARIANT_BOOL FAR* pvbEnable) PURE;
    STDMETHOD(put_LoggingCmdLine)(THIS_ BSTR bstrCmdLine) PURE;
    STDMETHOD(get_LoggingCmdLine)(THIS_ BSTR FAR* pbstrCmdLine) PURE;
    STDMETHOD(put_LoggingMsiLogFile)(THIS_ BSTR bstrLogFile) PURE;
    STDMETHOD(get_LoggingMsiLogFile)(THIS_ BSTR FAR* pbstrLogFile) PURE;
    STDMETHOD(put_LoggingMsiLogOptions)(THIS_ BSTR bstrLogOptions) PURE;
    STDMETHOD(get_LoggingMsiLogOptions)(THIS_ BSTR FAR* pbstrLogOptions) PURE;

    /* ISuitePackageOpusSP1 methods */
    STDMETHOD(put_CerFile)(THIS_ BSTR bstrCerFile) PURE;
    STDMETHOD(get_CerFile)(THIS_ BSTR FAR* pbstrCerFile) PURE;

    /* ISuitePackagePunk methods */
    STDMETHOD(AddEvent)(THIS_ ISuiteAction FAR* pSuiteAction, EnumSuiteParcelEvent eEvent, ISuiteActionRef FAR* FAR* ppEvent) PURE;
    STDMETHOD(get_Events)(THIS_ EnumSuiteParcelEvent eEvent, ISuiteActionRefs FAR* FAR* ppEvents) PURE;
    STDMETHOD(get_WindowsFeatures)(THIS_ BSTR FAR* pbstrFeatures) PURE;
    STDMETHOD(put_WindowsFeatures)(THIS_ BSTR bstrFeatures) PURE;
#endif

    /* ISuitePackageQi methods */
    STDMETHOD(put_DynamicParcelSourcePath)(THIS_ BSTR bstrIsmPath) PURE;
    STDMETHOD(get_DynamicParcelSourcePath)(THIS_ BSTR FAR* pbstrIsmPath) PURE;
    STDMETHOD(put_DynamicParcelRelease)(THIS_ BSTR bstrRelease) PURE;
    STDMETHOD(get_DynamicParcelRelease)(THIS_ BSTR FAR* pbstrRelease) PURE;
    STDMETHOD(put_DynamicParcelProductConfig)(THIS_ BSTR bstrProdConfig) PURE;
    STDMETHOD(get_DynamicParcelProductConfig)(THIS_ BSTR FAR* pbstrWebDeployParameter) PURE;
    STDMETHOD(AddParameter)(THIS_ BSTR bstrName, BSTR bstrValue, ISuiteWebDeployParameter FAR* FAR* ppParam) PURE;
    STDMETHOD(get_Parameters)(THIS_ ISuiteWebDeployParameters FAR* FAR* ppParams) PURE;
    STDMETHOD(put_WDConnectionComputerName)(THIS_ BSTR bstrComputerName) PURE;
    STDMETHOD(get_WDConnectionComputerName)(THIS_ BSTR FAR* pbstrComputerName) PURE;
    STDMETHOD(put_WDConnectionUserName)(THIS_ BSTR bstrUserName) PURE;
    STDMETHOD(get_WDConnectionUserName)(THIS_ BSTR FAR* pbstrUserName) PURE;
    STDMETHOD(put_WDConnectionPassword)(THIS_ BSTR bstrPassword) PURE;
    STDMETHOD(get_WDConnectionPassword)(THIS_ BSTR FAR* pbstrSite) PURE;
    STDMETHOD(put_WDConnectionSite)(THIS_ BSTR bstrPassword) PURE;
    STDMETHOD(get_WDConnectionSite)(THIS_ BSTR FAR* pbstrSite) PURE;
};

DEFINE_GUID(IID_ISuitePackageRipley,0xBC90CEC9L,0x7FB6,0x48DF,0x9D,0x65,0x2E,0x49,0xEB,0x06,0xA9,0x4F);

/* Definition of interface: ISuitePackageRipley */
#undef INTERFACE
#define INTERFACE ISuitePackageRipley

DECLARE_INTERFACE_(ISuitePackageRipley, ISuitePackageQi)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuitePackageBase methods */
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* pvbHasChild) PURE;

    /* ISuitePackage methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(put_DisplayNameEx)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayNameEx)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(get_PackageType)(THIS_ EnumSuitePackageType FAR* eType) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrDescription) PURE;
    STDMETHOD(get_Operation)(THIS_ EnumSuiteOperationType eType, ISuiteOperation FAR* FAR* ppOperation) PURE;
    STDMETHOD(get_RootFolder)(THIS_ ISuiteFolder FAR* FAR* ppRootFolder) PURE;
    STDMETHOD(get_DestFiles)(THIS_ IIsStrings2 FAR* FAR* ppDestFiles) PURE;
    STDMETHOD(put_PackageLocation)(THIS_ EnumSuitePackageLoc eLocation) PURE;
    STDMETHOD(get_PackageLocation)(THIS_ EnumSuitePackageLoc FAR* eLocation) PURE;
    STDMETHOD(put_PackageUrl)(THIS_ BSTR bstrUrl) PURE;
    STDMETHOD(get_PackageUrl)(THIS_ BSTR FAR* bstrUrl) PURE;
    STDMETHOD(get_DetectCondition)(THIS_ ISuiteCondition FAR* FAR* ppDetect) PURE;
    STDMETHOD(get_EligibleCondition)(THIS_ ISuiteCondition FAR* FAR* ppEligible) PURE;
    STDMETHOD(AddCondition)(THIS_ EnumPropSuitePackage epspCondition, ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(DeleteCondition)(THIS_ EnumPropSuitePackage epspCondition) PURE;
    STDMETHOD(put_CachePath)(THIS_ BSTR bstrCachePath) PURE;
    STDMETHOD(get_CachePath)(THIS_ BSTR FAR* bstrCachePath) PURE;
    STDMETHOD(put_Elevation)(THIS_ VARIANT_BOOL vbElevation) PURE;
    STDMETHOD(get_Elevation)(THIS_ VARIANT_BOOL FAR* vbElevation) PURE;
    STDMETHOD(put_ProgressCapture)(THIS_ EnumPropSuiteProgressCapture eType) PURE;
    STDMETHOD(get_ProgressCapture)(THIS_ EnumPropSuiteProgressCapture FAR* eType) PURE;
    STDMETHOD(put_UpgradeType)(THIS_ EnumPropSuiteUpgradeType eType) PURE;
    STDMETHOD(get_UpgradeType)(THIS_ EnumPropSuiteUpgradeType FAR* eType) PURE;
    STDMETHOD(put_ParcelType)(THIS_ EnumSuiteParcelType eParcelType) PURE;
    STDMETHOD(get_ParcelType)(THIS_ EnumSuiteParcelType FAR* peParcelType) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* vbOrphan) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR bstrReleaseFlags) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* bstrReleaseFlags) PURE;
    STDMETHOD(put_LoggingEnable)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_LoggingEnable)(THIS_ VARIANT_BOOL FAR* pvbEnable) PURE;
    STDMETHOD(put_LoggingCmdLine)(THIS_ BSTR bstrCmdLine) PURE;
    STDMETHOD(get_LoggingCmdLine)(THIS_ BSTR FAR* pbstrCmdLine) PURE;
    STDMETHOD(put_LoggingMsiLogFile)(THIS_ BSTR bstrLogFile) PURE;
    STDMETHOD(get_LoggingMsiLogFile)(THIS_ BSTR FAR* pbstrLogFile) PURE;
    STDMETHOD(put_LoggingMsiLogOptions)(THIS_ BSTR bstrLogOptions) PURE;
    STDMETHOD(get_LoggingMsiLogOptions)(THIS_ BSTR FAR* pbstrLogOptions) PURE;

    /* ISuitePackageOpusSP1 methods */
    STDMETHOD(put_CerFile)(THIS_ BSTR bstrCerFile) PURE;
    STDMETHOD(get_CerFile)(THIS_ BSTR FAR* pbstrCerFile) PURE;

    /* ISuitePackagePunk methods */
    STDMETHOD(AddEvent)(THIS_ ISuiteAction FAR* pSuiteAction, EnumSuiteParcelEvent eEvent, ISuiteActionRef FAR* FAR* ppEvent) PURE;
    STDMETHOD(get_Events)(THIS_ EnumSuiteParcelEvent eEvent, ISuiteActionRefs FAR* FAR* ppEvents) PURE;
    STDMETHOD(get_WindowsFeatures)(THIS_ BSTR FAR* pbstrFeatures) PURE;
    STDMETHOD(put_WindowsFeatures)(THIS_ BSTR bstrFeatures) PURE;

    /* ISuitePackageQi methods */
    STDMETHOD(put_DynamicParcelSourcePath)(THIS_ BSTR bstrIsmPath) PURE;
    STDMETHOD(get_DynamicParcelSourcePath)(THIS_ BSTR FAR* pbstrIsmPath) PURE;
    STDMETHOD(put_DynamicParcelRelease)(THIS_ BSTR bstrRelease) PURE;
    STDMETHOD(get_DynamicParcelRelease)(THIS_ BSTR FAR* pbstrRelease) PURE;
    STDMETHOD(put_DynamicParcelProductConfig)(THIS_ BSTR bstrProdConfig) PURE;
    STDMETHOD(get_DynamicParcelProductConfig)(THIS_ BSTR FAR* pbstrWebDeployParameter) PURE;
    STDMETHOD(AddParameter)(THIS_ BSTR bstrName, BSTR bstrValue, ISuiteWebDeployParameter FAR* FAR* ppParam) PURE;
    STDMETHOD(get_Parameters)(THIS_ ISuiteWebDeployParameters FAR* FAR* ppParams) PURE;
    STDMETHOD(put_WDConnectionComputerName)(THIS_ BSTR bstrComputerName) PURE;
    STDMETHOD(get_WDConnectionComputerName)(THIS_ BSTR FAR* pbstrComputerName) PURE;
    STDMETHOD(put_WDConnectionUserName)(THIS_ BSTR bstrUserName) PURE;
    STDMETHOD(get_WDConnectionUserName)(THIS_ BSTR FAR* pbstrUserName) PURE;
    STDMETHOD(put_WDConnectionPassword)(THIS_ BSTR bstrPassword) PURE;
    STDMETHOD(get_WDConnectionPassword)(THIS_ BSTR FAR* pbstrSite) PURE;
    STDMETHOD(put_WDConnectionSite)(THIS_ BSTR bstrPassword) PURE;
    STDMETHOD(get_WDConnectionSite)(THIS_ BSTR FAR* pbstrSite) PURE;
#endif

    /* ISuitePackageRipley methods */
    STDMETHOD(put_SharedParcel)(THIS_ VARIANT_BOOL vbShared) PURE;
    STDMETHOD(get_SharedParcel)(THIS_ VARIANT_BOOL FAR* pvbShared) PURE;
    STDMETHOD(AddEventEx)(THIS_ ISuiteAction FAR* pSuiteAction, EnumSuiteEvent eEvent, ISuiteActionRef FAR* FAR* ppEvent) PURE;
    STDMETHOD(get_EventsEx)(THIS_ EnumSuiteEvent eEvent, ISuiteActionRefs FAR* FAR* ppEvents) PURE;
};

DEFINE_GUID(IID_ISuiteResourceFile,0x6366DAB0L,0x9476,0x4711,0xBF,0x41,0x78,0x71,0x8C,0x6F,0xB0,0x11);

/* Definition of interface: ISuiteResourceFile */
#undef INTERFACE
#define INTERFACE ISuiteResourceFile

DECLARE_INTERFACE_(ISuiteResourceFile, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* ISuiteResourceFile methods */
    STDMETHOD(get_ISSetupFile)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_ISSetupFile)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Language)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Language)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Path)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Path)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Namespace)(THIS_ BSTR FAR* Value) PURE;
    STDMETHOD(put_Namespace)(THIS_ BSTR Value) PURE;
};

DEFINE_GUID(IID_ISuitePackages,0xCA0BC4E9L,0xF058,0x4703,0xA0,0xEF,0x0E,0x01,0x73,0x93,0x3C,0x19);

/* Definition of interface: ISuitePackages */
#undef INTERFACE
#define INTERFACE ISuitePackages

DECLARE_INTERFACE_(ISuitePackages, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuitePackages methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuitePackageBase FAR* FAR* ppPackageBase) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ISuiteTransaction,0x8E20EBA6L,0xA04A,0x4B4A,0x9A,0x69,0xA9,0xE0,0x6C,0xCA,0xF8,0x7A);

/* Definition of interface: ISuiteTransaction */
#undef INTERFACE
#define INTERFACE ISuiteTransaction

DECLARE_INTERFACE_(ISuiteTransaction, ISuitePackageBase)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuitePackageBase methods */
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* pvbHasChild) PURE;
#endif

    /* ISuiteTransaction methods */
    STDMETHOD(get_SuitePackages)(THIS_ ISuitePackages FAR* FAR* ppSuitePackages) PURE;
    STDMETHOD(AddChild)(THIS_ EnumTransactChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
};

typedef enum EnumSuiteFeatureChild {
    esfecFeature = 1
} EnumSuiteFeatureChild;

interface ISuiteFeatures;

DEFINE_GUID(IID_ISuiteFeature,0xC39A1F89L,0xF956,0x4991,0x8E,0xA3,0x98,0x22,0xD2,0x17,0x75,0xD0);

/* Definition of interface: ISuiteFeature */
#undef INTERFACE
#define INTERFACE ISuiteFeature

DECLARE_INTERFACE_(ISuiteFeature, ISuitePackageBase)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuitePackageBase methods */
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* pvbHasChild) PURE;
#endif

    /* ISuiteFeature methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(put_DisplayNameEx)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayNameEx)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(put_Visible)(THIS_ VARIANT_BOOL vbVisible) PURE;
    STDMETHOD(get_Visible)(THIS_ VARIANT_BOOL FAR* pvbVisible) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrDescription) PURE;
    STDMETHOD(get_SubFeatures)(THIS_ ISuiteFeatures FAR* FAR* ppVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSuiteFeatureChild esfecChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(InsertPackage)(THIS_ ISuitePackage FAR* pPackage) PURE;
    STDMETHOD(RemovePackage)(THIS_ ISuitePackage FAR* pPackage) PURE;
    STDMETHOD(HasPackage)(THIS_ ISuitePackage FAR* pPackage, VARIANT_BOOL FAR* pvVal) PURE;
    STDMETHOD(get_Condition)(THIS_ ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(AddCondition)(THIS_ ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(DeleteCondition)(THIS) PURE;
    STDMETHOD(put_Cost)(THIS_ VARIANT vtCost) PURE;
    STDMETHOD(get_Cost)(THIS_ VARIANT FAR* vtCost) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR bstrReleaseFlags) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* bstrReleaseFlags) PURE;
    STDMETHOD(get_ParentFeature)(THIS_ ISuiteFeature FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_ISuiteFeatureQi,0xB015EEEDL,0xF1CE,0x4E39,0x98,0x98,0xDC,0x4D,0x79,0x59,0xD5,0x31);

/* Definition of interface: ISuiteFeatureQi */
#undef INTERFACE
#define INTERFACE ISuiteFeatureQi

DECLARE_INTERFACE_(ISuiteFeatureQi, ISuiteFeature)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuitePackageBase methods */
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(MoveLeft)(THIS) PURE;
    STDMETHOD(MoveRight)(THIS) PURE;
    STDMETHOD(HasChild)(THIS_ VARIANT_BOOL FAR* pvbHasChild) PURE;

    /* ISuiteFeature methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_DisplayName)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayName)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(put_DisplayNameEx)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_DisplayNameEx)(THIS_ BSTR FAR* bstrDisplayName) PURE;
    STDMETHOD(put_Visible)(THIS_ VARIANT_BOOL vbVisible) PURE;
    STDMETHOD(get_Visible)(THIS_ VARIANT_BOOL FAR* pvbVisible) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrDisplayName) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* bstrDescription) PURE;
    STDMETHOD(get_SubFeatures)(THIS_ ISuiteFeatures FAR* FAR* ppVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumSuiteFeatureChild esfecChild, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(InsertPackage)(THIS_ ISuitePackage FAR* pPackage) PURE;
    STDMETHOD(RemovePackage)(THIS_ ISuitePackage FAR* pPackage) PURE;
    STDMETHOD(HasPackage)(THIS_ ISuitePackage FAR* pPackage, VARIANT_BOOL FAR* pvVal) PURE;
    STDMETHOD(get_Condition)(THIS_ ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(AddCondition)(THIS_ ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(DeleteCondition)(THIS) PURE;
    STDMETHOD(put_Cost)(THIS_ VARIANT vtCost) PURE;
    STDMETHOD(get_Cost)(THIS_ VARIANT FAR* vtCost) PURE;
    STDMETHOD(put_ReleaseFlags)(THIS_ BSTR bstrReleaseFlags) PURE;
    STDMETHOD(get_ReleaseFlags)(THIS_ BSTR FAR* bstrReleaseFlags) PURE;
    STDMETHOD(get_ParentFeature)(THIS_ ISuiteFeature FAR* FAR* ppVal) PURE;
#endif

    /* ISuiteFeatureQi methods */
    STDMETHOD(get_AllowSelectionChange)(THIS_ VARIANT_BOOL FAR* pvbAllow) PURE;
    STDMETHOD(put_AllowSelectionChange)(THIS_ VARIANT_BOOL vbAllow) PURE;
    STDMETHOD(get_FollowParentState)(THIS_ VARIANT_BOOL FAR* pvbFollowParent) PURE;
    STDMETHOD(put_FollowParentState)(THIS_ VARIANT_BOOL vbFollowParent) PURE;
};

DEFINE_GUID(IID_ISuiteFeatures,0x02B5DDD3L,0x7822,0x4880,0x89,0x72,0x3D,0x56,0x1B,0x5F,0x1E,0x33);

/* Definition of interface: ISuiteFeatures */
#undef INTERFACE
#define INTERFACE ISuiteFeatures

DECLARE_INTERFACE_(ISuiteFeatures, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteFeatures methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteFeature FAR* FAR* ppFeature) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropSuiteUIControlThemeType {
    epscttWindows = 0,
    epscttFlatButton = 1
} EnumPropSuiteUIControlThemeType;

typedef enum EnumPropSuiteUIControlTheme {
    epsctName = 10,
    epsctType,
    epsctNormalText,
    epsctNormalFill,
    epsctNormalBorder,
    epsctDisabledText,
    epsctDisabledFill,
    epsctDisabledBorder,
    epsctHotText,
    epsctHotFill,
    epsctHotBorder,
    epsctPressText,
    epsctPressFill,
    epsctPressBorder,
    epsctDefaultedText,
    epsctDefaultedFill,
    epsctDefaultedBorder
} EnumPropSuiteUIControlTheme;

DEFINE_GUID(IID_ISuiteUIControlTheme,0xF1F44BDCL,0x35F1,0x4294,0xB5,0xAD,0x58,0x4A,0x67,0x1C,0xA0,0x36);

/* Definition of interface: ISuiteUIControlTheme */
#undef INTERFACE
#define INTERFACE ISuiteUIControlTheme

DECLARE_INTERFACE_(ISuiteUIControlTheme, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIControlTheme methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_ThemeType)(THIS_ EnumPropSuiteUIControlThemeType eType) PURE;
    STDMETHOD(get_ThemeType)(THIS_ EnumPropSuiteUIControlThemeType FAR* pType) PURE;
};

DEFINE_GUID(IID_ISuiteUIControlThemes,0xFD6D7CFBL,0xE1B3,0x445D,0x93,0x13,0x66,0x5B,0xBC,0xC5,0x3C,0x3A);

/* Definition of interface: ISuiteUIControlThemes */
#undef INTERFACE
#define INTERFACE ISuiteUIControlThemes

DECLARE_INTERFACE_(ISuiteUIControlThemes, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIControlThemes methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteUIControlTheme FAR* FAR* ppTheme) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropSuiteUIControl {
    epscType = 10,
    epscName = 11,
    epscProperty = 12,
    epscPosition = 13,
    epscAnchor = 14,
    epscBrush = 15,
    epscPen = 16,
    epscAlign = 17,
    epscVisible = 18,
    epscEnabled = 19,
    epscValidate = 20,
    epscImage = 21,
    epscLabel = 22,
    epscStyle = 23,
    epscClass = 24,
    epscText = 25,
    epscResource = 26,
    epscAction = 27,
    epscExteriorSuccess = 28,
    epscExteriorPending = 29,
    epscExteriorError = 30,
    epscExteriorDegrees = 31,
    epscExteriorProperty = 32,
    epscInteriorBrush = 33,
    epscInteriorProperty = 34,
    epscSkewVerticle = 35,
    epscSkewHorizontal = 36,
    epscAlpha = 37,
    epscOnMouseEnter = 38,
    epscOnMouseExit = 39,
    epscTransition = 40,
    epscNote = 41,
    epscBackground = 42,
    epscItemHeight = 43,
    epscColorFocus = 44,
    epscColorNoFocus = 45,
    epscDuration = 46,
    epscThreshold = 47,
    epscPositionX = 48,
    epscPositionY = 49,
    epscPositionWidth = 50,
    epscPositionHeight = 51,
    epscNoteClass = 52,
    epscContentProperty = 53,
    epscHighlight = 54,
    epscFill = 55,
    epscValidClass = 56,
    epscInvalidClass = 57,
    epscActionClick = 58,
    epscActionChanged = 59,
    epscActionSelectionChanged = 60,
    epscActionItemChanged = 61,
    epscActionScrolledToEnd = 62,
    epscControlTheme = 63
} EnumPropSuiteUIControl;

typedef enum EnumPropSuiteUITransitionStyles {
    epstsNone = 0,
    epstsVertical = 1,
    epstsHorizontal = 2,
    epstsExpand = 3,
    epstsSpin = 4
} EnumPropSuiteUITransitionStyles;

typedef enum EnumPropSuiteUIControlAnchor {
    epscaSizeX = 1,
    epscaSizeY = 2,
    epscaMoveX = 4,
    epscaMoveY = 8,
    epscaRepaint = 16,
    epscaCenterX = 32,
    epscaCenterY = 64
} EnumPropSuiteUIControlAnchor;

typedef enum EnumPropSuiteUIWindowStyles {
    epssWsBorder = 8388608,
    epssWsDisabled = 134217728,
    epssWsClipSiblings = 67108864,
    epssWsCaption = 12582912,
    epssWsDlgFrame = 4194304,
    epssWsVScroll = 2097152,
    epssWsHScroll = 1048576,
    epssWsThickFrame = 262144,
    epssWsTabstop = 65536,
    epssWsGroup = 131072,
    epssSsBitmap = 14,
    epssSsBlackFrame = 7,
    epssSsBlackRect = 4,
    epssSsCenter = 1,
    epssSsCenterImage = 512,
    epssSsEllipsisMask = 49152,
    epssSsEditControl = 8192,
    epssSsEndEllipsis = 16384,
    epssSsEnhMetaFile = 15,
    epssSsEtchedHorz = 16,
    epssSsEtchedVert = 17,
    epssSsEtchedFrame = 18,
    epssSsGrayFrame = 8,
    epssSsGrayRect = 5,
    epssSsIcon = 3,
    epssSsLeftNoWordWrap = 12,
    epssSsNoPrefix = 128,
    epssSsNotify = 256,
    epssSsPathEllipsis = 32768,
    epssSsRealSizeControl = 64,
    epssSsRealSizeImage = 2048,
    epssSsRight = 2,
    epssSsRightJust = 1024,
    epssSsSimple = 11,
    epssSsSunken = 4096,
    epssSsTypemask = 31,
    epssSsUserItem = 10,
    epssSsWhiteRect = 6,
    epssSsWhiteFrame = 9,
    epssSsWordEllipsis = 49152,
    epssBsAutoCheckbox = 3,
    epssBsAutoRadioButton = 9,
    epssBsAuto3State = 6,
    epssBsBottom = 2048,
    epssBsBitmap = 128,
    epssBsCheckbox = 2,
    epssBsCenter = 768,
    epssBsDefPushbutton = 1,
    epssBsFlat = 32768,
    epssBsGroupbox = 7,
    epssBsIcon = 64,
    epssBsLeft = 256,
    epssBsLeftText = 32,
    epssBsMutliline = 8192,
    epssBsNotify = 16384,
    epssBsPushbox = 10,
    epssBsPushButton = 0,
    epssBsPushLike = 4096,
    epssBsRadioButton = 4,
    epssBsRight = 512,
    epssBsRightButton = 32,
    epssBsTop = 1024,
    epssBsTypeMask = 15,
    epssBsVCenter = 3072,
    epssBs3State = 5,
    epssEsAutoVScroll = 64,
    epssEsAutoHScroll = 128,
    epssEsCenter = 1,
    epssEsLowercase = 16,
    epssEsMultiline = 4,
    epssEsNohideSel = 256,
    epssEsNumber = 8192,
    epssEsOemConvert = 1024,
    epssEsPassword = 32,
    epssEsReadonly = 2048,
    epssEsRight = 2,
    epssEsUppercase = 8,
    epssEsWantReturn = 4096,
    epssLsNotify = 1,
    epssLsSort = 2,
    epssLsNoRedraw = 4,
    epssLsMultipleSel = 8,
    epssLsHasStrings = 64,
    epssLsUseTabStops = 128,
    epssLsNoIntegralHeight = 256,
    epssLsMultiColumn = 512,
    epssLsWantKeyboardInput = 1024,
    epssLsExtendedSel = 2048,
    epssLsDisableNoScroll = 4096,
    epssLsNoData = 8192,
    epssLsNoSel = 16384,
    epssLsCombobox = 32768,
    epssLsStandard = 10485763,
    epssCbSimple = 1,
    epssCbDropdown = 2,
    epssCbDropdownList = 3,
    epssCbAutoHScroll = 64,
    epssCbOemConvert = 128,
    epssCbSort = 256,
    epssCbHasStrings = 512,
    epssCbNoIntegralHeight = 1024,
    epssCbDisableNoScroll = 2048,
    epssCbUppercase = 8192,
    epssCbLowercase = 16384
} EnumPropSuiteUIWindowStyles;

interface ISuiteUIControls;

DEFINE_GUID(IID_ISuiteUIControl,0x065C6219L,0x1F38,0x4113,0xA3,0x1E,0x00,0xBD,0xD4,0xE3,0x76,0x9A);

/* Definition of interface: ISuiteUIControl */
#undef INTERFACE
#define INTERFACE ISuiteUIControl

DECLARE_INTERFACE_(ISuiteUIControl, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIControl methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(get_Type)(THIS_ BSTR FAR* pbstrPosition) PURE;
    STDMETHOD(put_Position)(THIS_ BSTR bstrPosition) PURE;
    STDMETHOD(get_Position)(THIS_ BSTR FAR* pbstrPosition) PURE;
    STDMETHOD(put_Property)(THIS_ BSTR bstrProperty) PURE;
    STDMETHOD(get_Property)(THIS_ BSTR FAR* pbstrProperty) PURE;
    STDMETHOD(get_ChildControls)(THIS_ ISuiteUIControls FAR* FAR* ppSuiteUIControls) PURE;
    STDMETHOD(put_PositionX)(THIS_ BSTR bstrX) PURE;
    STDMETHOD(get_PositionX)(THIS_ BSTR FAR* pbstrX) PURE;
    STDMETHOD(put_PositionY)(THIS_ BSTR bstrY) PURE;
    STDMETHOD(get_PositionY)(THIS_ BSTR FAR* pbstrY) PURE;
    STDMETHOD(put_PositionWidth)(THIS_ BSTR bstrWidth) PURE;
    STDMETHOD(get_PositionWidth)(THIS_ BSTR FAR* pbstrWidth) PURE;
    STDMETHOD(put_PositionHeight)(THIS_ BSTR bstrHeight) PURE;
    STDMETHOD(get_PositionHeight)(THIS_ BSTR FAR* pbstrHeight) PURE;
    STDMETHOD(put_Anchor)(THIS_ EnumPropSuiteUIControlAnchor eUIControlAnchor) PURE;
    STDMETHOD(get_Anchor)(THIS_ EnumPropSuiteUIControlAnchor FAR* peUIControlAnchor) PURE;
    STDMETHOD(put_Style)(THIS_ EnumPropSuiteUIWindowStyles eUIControlStyle) PURE;
    STDMETHOD(get_Style)(THIS_ EnumPropSuiteUIWindowStyles FAR* peUIControlStyle) PURE;
    STDMETHOD(AddChild)(THIS_ BSTR bstrType, BSTR bstrName, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
};

DEFINE_GUID(IID_ISuiteUIControls,0x55FF9F22L,0x490C,0x4214,0xB1,0x47,0xCD,0x8B,0xC0,0x6A,0x56,0x5A);

/* Definition of interface: ISuiteUIControls */
#undef INTERFACE
#define INTERFACE ISuiteUIControls

DECLARE_INTERFACE_(ISuiteUIControls, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIControls methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteUIControl FAR* FAR* ppSuiteControl) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ISuiteDialog,0x5A9CD147L,0x091E,0x4CA0,0x87,0xCA,0x1E,0xAD,0x11,0xFD,0x7F,0xB8);

/* Definition of interface: ISuiteDialog */
#undef INTERFACE
#define INTERFACE ISuiteDialog

DECLARE_INTERFACE_(ISuiteDialog, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteDialog methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(get_Controls)(THIS_ ISuiteUIControls FAR* FAR* ppSuiteUIControls) PURE;
    STDMETHOD(AddControl)(THIS_ BSTR bstrType, BSTR bstrName, IBusinessObject FAR* FAR* ppControl) PURE;
    STDMETHOD(put_Caption)(THIS_ BSTR bstrCaption) PURE;
    STDMETHOD(get_Caption)(THIS_ BSTR FAR* pbstrCaption) PURE;
    STDMETHOD(put_Background)(THIS_ BSTR bstrBackground) PURE;
    STDMETHOD(get_Background)(THIS_ BSTR FAR* pbstrBackground) PURE;
    STDMETHOD(put_Width)(THIS_ long lWidth) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* plWidth) PURE;
    STDMETHOD(put_Height)(THIS_ long lHeight) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* plHeight) PURE;
    STDMETHOD(AddControlCopy)(THIS_ ISuiteUIControl FAR* pSourceControl, ISuiteDialog FAR* pSourceDialog, IBusinessObject FAR* FAR* ppControl) PURE;
};

DEFINE_GUID(IID_ISuiteDialogs,0xFD02FFCDL,0xB0D3,0x4482,0xB1,0x8F,0x97,0x0D,0xCF,0x1A,0x7D,0x81);

/* Definition of interface: ISuiteDialogs */
#undef INTERFACE
#define INTERFACE ISuiteDialogs

DECLARE_INTERFACE_(ISuiteDialogs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteDialogs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropSuiteWizardPage {
    epswpName = 10,
    epswpCaption = 11,
    epswpBackground = 12,
    epswpWidth = 13,
    epswpHeight = 14,
    epswpVisible = 15,
    epswpSplashDelay = 16,
    epswpSplashResource = 17,
    epswpNextText = 18,
    epswpNextVisible = 19,
    epswpNextEnable = 20,
    epswpNextClass = 21,
    epswpNextAction = 22,
    epswpBackText = 23,
    epswpBackVisible = 24,
    epswpBackEnable = 25,
    epswpBackClass = 26,
    epswpBackAction = 27,
    epswpCancelText = 28,
    epswpCancelEnable = 29,
    epswpCancelVisible = 30,
    epswpCancelClass = 31,
    epswpCancelAction = 32,
    epswpInstallText = 33,
    epswpInstallEnable = 34,
    epswpInstallVisible = 35,
    epswpInstallClass = 36,
    epswpInstallAction = 37,
    epswpFinishText = 38,
    epswpFinishEnable = 39,
    epswpFinishVisible = 40,
    epswpFinishClass = 41,
    epswpFinishAction = 42,
    epswpNextButtonEnabled = 43,
    epswpBackButtonEnabled = 44,
    epswpCancelButtonEnabled = 45,
    epswpInstallButtonEnabled = 46,
    epswpFinishButtonEnabled = 47,
    epswpProperty = 48,
    epswpHeaderPageImage = 49,
    epswpActionDialogEnter = 50,
    epswpActionDialogExit = 51
} EnumPropSuiteWizardPage;

typedef enum EnumPropSuiteWizardPageButtons {
    epswpbNext = 1,
    epswpbBack = 2,
    epswpbCancel = 3,
    epswpbInstall = 4,
    epswpbFinish = 5
} EnumPropSuiteWizardPageButtons;

DEFINE_GUID(IID_ISuiteWizardPage,0x8A6B8A55L,0x0C44,0x4DC2,0x88,0xC0,0x7A,0x77,0x0C,0x65,0x53,0xB4);

/* Definition of interface: ISuiteWizardPage */
#undef INTERFACE
#define INTERFACE ISuiteWizardPage

DECLARE_INTERFACE_(ISuiteWizardPage, ISuiteDialog)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuiteDialog methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(get_Controls)(THIS_ ISuiteUIControls FAR* FAR* ppSuiteUIControls) PURE;
    STDMETHOD(AddControl)(THIS_ BSTR bstrType, BSTR bstrName, IBusinessObject FAR* FAR* ppControl) PURE;
    STDMETHOD(put_Caption)(THIS_ BSTR bstrCaption) PURE;
    STDMETHOD(get_Caption)(THIS_ BSTR FAR* pbstrCaption) PURE;
    STDMETHOD(put_Background)(THIS_ BSTR bstrBackground) PURE;
    STDMETHOD(get_Background)(THIS_ BSTR FAR* pbstrBackground) PURE;
    STDMETHOD(put_Width)(THIS_ long lWidth) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* plWidth) PURE;
    STDMETHOD(put_Height)(THIS_ long lHeight) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* plHeight) PURE;
    STDMETHOD(AddControlCopy)(THIS_ ISuiteUIControl FAR* pSourceControl, ISuiteDialog FAR* pSourceDialog, IBusinessObject FAR* FAR* ppControl) PURE;
#endif

    /* ISuiteWizardPage methods */
    STDMETHOD(put_Visible)(THIS_ BSTR bstrBackground) PURE;
    STDMETHOD(get_Visible)(THIS_ BSTR FAR* pbstrBackground) PURE;
    STDMETHOD(MovePageUp)(THIS) PURE;
    STDMETHOD(put_PageButtonDisplayable)(THIS_ EnumPropSuiteWizardPageButtons ePageButton, VARIANT_BOOL vbDisplayable) PURE;
    STDMETHOD(get_PageButtonDisplayable)(THIS_ EnumPropSuiteWizardPageButtons ePageButton, VARIANT_BOOL FAR* pvbDisplayable) PURE;
};

DEFINE_GUID(IID_ISuiteWizardPagePunk,0xF30BF1EAL,0x773A,0x47F0,0xA4,0xB9,0x6A,0x25,0x79,0x43,0xFD,0xED);

/* Definition of interface: ISuiteWizardPagePunk */
#undef INTERFACE
#define INTERFACE ISuiteWizardPagePunk

DECLARE_INTERFACE_(ISuiteWizardPagePunk, ISuiteWizardPage)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuiteDialog methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(get_Controls)(THIS_ ISuiteUIControls FAR* FAR* ppSuiteUIControls) PURE;
    STDMETHOD(AddControl)(THIS_ BSTR bstrType, BSTR bstrName, IBusinessObject FAR* FAR* ppControl) PURE;
    STDMETHOD(put_Caption)(THIS_ BSTR bstrCaption) PURE;
    STDMETHOD(get_Caption)(THIS_ BSTR FAR* pbstrCaption) PURE;
    STDMETHOD(put_Background)(THIS_ BSTR bstrBackground) PURE;
    STDMETHOD(get_Background)(THIS_ BSTR FAR* pbstrBackground) PURE;
    STDMETHOD(put_Width)(THIS_ long lWidth) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* plWidth) PURE;
    STDMETHOD(put_Height)(THIS_ long lHeight) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* plHeight) PURE;
    STDMETHOD(AddControlCopy)(THIS_ ISuiteUIControl FAR* pSourceControl, ISuiteDialog FAR* pSourceDialog, IBusinessObject FAR* FAR* ppControl) PURE;

    /* ISuiteWizardPage methods */
    STDMETHOD(put_Visible)(THIS_ BSTR bstrBackground) PURE;
    STDMETHOD(get_Visible)(THIS_ BSTR FAR* pbstrBackground) PURE;
    STDMETHOD(MovePageUp)(THIS) PURE;
    STDMETHOD(put_PageButtonDisplayable)(THIS_ EnumPropSuiteWizardPageButtons ePageButton, VARIANT_BOOL vbDisplayable) PURE;
    STDMETHOD(get_PageButtonDisplayable)(THIS_ EnumPropSuiteWizardPageButtons ePageButton, VARIANT_BOOL FAR* pvbDisplayable) PURE;
#endif

    /* ISuiteWizardPagePunk methods */
    STDMETHOD(get_VisibleCondition)(THIS_ ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(AddCondition)(THIS_ EnumPropSuiteWizardPage kind, ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(DeleteCondition)(THIS_ EnumPropSuiteWizardPage kind) PURE;
};

DEFINE_GUID(IID_ISuiteSplashPage,0x3067EF98L,0x97F2,0x4E67,0x97,0xED,0x44,0xB1,0xAA,0xB9,0xFE,0xC3);

/* Definition of interface: ISuiteSplashPage */
#undef INTERFACE
#define INTERFACE ISuiteSplashPage

DECLARE_INTERFACE_(ISuiteSplashPage, ISuiteDialog)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuiteDialog methods */
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(get_Controls)(THIS_ ISuiteUIControls FAR* FAR* ppSuiteUIControls) PURE;
    STDMETHOD(AddControl)(THIS_ BSTR bstrType, BSTR bstrName, IBusinessObject FAR* FAR* ppControl) PURE;
    STDMETHOD(put_Caption)(THIS_ BSTR bstrCaption) PURE;
    STDMETHOD(get_Caption)(THIS_ BSTR FAR* pbstrCaption) PURE;
    STDMETHOD(put_Background)(THIS_ BSTR bstrBackground) PURE;
    STDMETHOD(get_Background)(THIS_ BSTR FAR* pbstrBackground) PURE;
    STDMETHOD(put_Width)(THIS_ long lWidth) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* plWidth) PURE;
    STDMETHOD(put_Height)(THIS_ long lHeight) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* plHeight) PURE;
    STDMETHOD(AddControlCopy)(THIS_ ISuiteUIControl FAR* pSourceControl, ISuiteDialog FAR* pSourceDialog, IBusinessObject FAR* FAR* ppControl) PURE;
#endif

    /* ISuiteSplashPage methods */
    STDMETHOD(put_Resource)(THIS_ BSTR bstrResource) PURE;
    STDMETHOD(get_Resource)(THIS_ BSTR FAR* pbstrResource) PURE;
    STDMETHOD(MovePageUp)(THIS) PURE;
    STDMETHOD(get_ResourcePath)(THIS_ BSTR FAR* pbstrResourcePath) PURE;
};

DEFINE_GUID(IID_ISuiteWizardPages,0xB0FE8F1EL,0x8664,0x45CC,0xAA,0xE4,0xC2,0x11,0xFE,0x0C,0xC0,0x55);

/* Definition of interface: ISuiteWizardPages */
#undef INTERFACE
#define INTERFACE ISuiteWizardPages

DECLARE_INTERFACE_(ISuiteWizardPages, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteWizardPages methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumSuiteWizardFormat {
    eswfWizard97 = 1,
    eswfAero = 2,
    eswfLite = 3,
    eswfGlass = 4
} EnumSuiteWizardFormat;

typedef enum EnumSuiteWizardStyleFlags {
    eswsfResize = 1,
    eswsfMargin = 2
} EnumSuiteWizardStyleFlags;

typedef enum EnumSuiteWizardButtonSpacing {
    eswbsGroup = 0,
    eswbsSpreadEvenly = 1
} EnumSuiteWizardButtonSpacing;

typedef enum EnumSuiteWizardDirection {
    eswdRTL = 0,
    eswdLTR = 1
} EnumSuiteWizardDirection;

typedef enum EnumPropSuiteWizard {
    epswFormat = 10,
    epswStyleFlags = 11,
    epswCaption = 12,
    epswIcon = 13,
    epswWatermark = 14,
    epswImage = 15,
    epswBackground = 16,
    epswSkinDll = 17,
    epswWidth = 18,
    epswHeight = 19,
    epswResize = 20,
    epswHeaderImage = 21,
    epswHeaderClass = 22,
    epswHeaderBackground = 23,
    epswViewMargin = 24,
    epswViewBackground = 25,
    epswViewWidth = 26,
    epswViewHeight = 27,
    epswNavigationBackground = 28,
    epswNavigationSpacing = 29,
    epswNavigationDirection = 30,
    epswNavigationMarginX = 31,
    epswStyle = 32,
    epswNavigationClass = 33,
    epswFullBackground = 34,
    epswControlTheme = 35
} EnumPropSuiteWizard;

DEFINE_GUID(IID_ISuiteWizard,0x23ED5BF3L,0x7FAF,0x470C,0x8A,0x89,0xC7,0xFC,0xFF,0x35,0x5C,0xE3);

/* Definition of interface: ISuiteWizard */
#undef INTERFACE
#define INTERFACE ISuiteWizard

DECLARE_INTERFACE_(ISuiteWizard, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteWizard methods */
    STDMETHOD(put_WizardFormat)(THIS_ EnumSuiteWizardFormat eSuiteWizardFormat) PURE;
    STDMETHOD(get_WizardFormat)(THIS_ EnumSuiteWizardFormat FAR* pesSuiteWizardFormat) PURE;
    STDMETHOD(put_WizardStyleFlags)(THIS_ EnumSuiteWizardStyleFlags eSuiteWizardStyleFlags) PURE;
    STDMETHOD(get_WizardStyleFlags)(THIS_ EnumSuiteWizardStyleFlags FAR* peSuiteWizardStyleFlags) PURE;
    STDMETHOD(get_WizardPages)(THIS_ ISuiteWizardPages FAR* FAR* ppSuiteWizardPages) PURE;
    STDMETHOD(put_Caption)(THIS_ BSTR bstrCaption) PURE;
    STDMETHOD(get_Caption)(THIS_ BSTR FAR* pbstrCaption) PURE;
    STDMETHOD(put_Icon)(THIS_ BSTR bstrIcon) PURE;
    STDMETHOD(get_Icon)(THIS_ BSTR FAR* pbstrIcon) PURE;
    STDMETHOD(put_Watermark)(THIS_ BSTR bstrWatermark) PURE;
    STDMETHOD(get_Watermark)(THIS_ BSTR FAR* pbstrWatermark) PURE;
    STDMETHOD(put_Image)(THIS_ BSTR bstrImage) PURE;
    STDMETHOD(get_Image)(THIS_ BSTR FAR* pbstrImage) PURE;
    STDMETHOD(put_Background)(THIS_ VARIANT vBackground) PURE;
    STDMETHOD(get_Background)(THIS_ VARIANT FAR* pvBackground) PURE;
    STDMETHOD(put_SkinDll)(THIS_ BSTR bstrSkinDll) PURE;
    STDMETHOD(get_SkinDll)(THIS_ BSTR FAR* pbstrSkinDll) PURE;
    STDMETHOD(AddWizardPage)(THIS_ BSTR bstrPageName, ISuiteDialog FAR* FAR* ppWizardPage) PURE;
    STDMETHOD(CopyWizardPage)(THIS_ ISuiteWizardPage FAR* pSourcePage, ISuiteWizardPage FAR* FAR* ppSuitePage) PURE;
    STDMETHOD(put_Spacing)(THIS_ EnumSuiteWizardButtonSpacing eSuiteWizardButtonSpacing) PURE;
    STDMETHOD(get_Spacing)(THIS_ EnumSuiteWizardButtonSpacing FAR* peSuiteWizardButtonSpacing) PURE;
    STDMETHOD(put_Direction)(THIS_ EnumSuiteWizardDirection eSuiteWizardDirection) PURE;
    STDMETHOD(get_Direction)(THIS_ EnumSuiteWizardDirection FAR* peSuiteWizardDirection) PURE;
    STDMETHOD(put_Style)(THIS_ EnumPropSuiteUIWindowStyles eUIControlStyle) PURE;
    STDMETHOD(get_Style)(THIS_ EnumPropSuiteUIWindowStyles FAR* peUIControlStyle) PURE;
    STDMETHOD(ImportWizardPage)(THIS_ IUnknown * pSource, IBusinessObject FAR* pInsertBefore, ISuiteWizardPage FAR* FAR* ppSuitePage) PURE;
};

interface ISuiteUIControls;

typedef enum EnumPropSuiteUIFontProperties {
    epsufName = 1,
    epsufSize = 2,
    epsufWeight = 3,
    epsufItalic = 4,
    epsufLanguage = 5
} EnumPropSuiteUIFontProperties;

DEFINE_GUID(IID_ISuiteUIFont,0xF8980EF4L,0x339C,0x47DD,0xA6,0x3B,0xCB,0x01,0x27,0x50,0x16,0x7E);

/* Definition of interface: ISuiteUIFont */
#undef INTERFACE
#define INTERFACE ISuiteUIFont

DECLARE_INTERFACE_(ISuiteUIFont, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIFont methods */
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Size)(THIS_ long dwFontSize) PURE;
    STDMETHOD(get_Size)(THIS_ long FAR* pdwFontSize) PURE;
    STDMETHOD(put_Weight)(THIS_ long dwFontWeight) PURE;
    STDMETHOD(get_Weight)(THIS_ long FAR* pdwFontWeight) PURE;
    STDMETHOD(put_Italic)(THIS_ VARIANT_BOOL vbItalicised) PURE;
    STDMETHOD(get_Italic)(THIS_ VARIANT_BOOL FAR* pvbItalicised) PURE;
};

DEFINE_GUID(IID_ISuiteUIFonts,0xFB094298L,0xC22E,0x4BFB,0xB3,0x7C,0x06,0x3F,0x7F,0x3E,0xBD,0x07);

/* Definition of interface: ISuiteUIFonts */
#undef INTERFACE
#define INTERFACE ISuiteUIFonts

DECLARE_INTERFACE_(ISuiteUIFonts, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIFonts methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteUIFont FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

interface ISuiteUIStyles;

typedef enum EnumPropSuiteUIStyleProperties {
    epsspName = 1,
    epsspBackground = 2,
    epsspPen = 3,
    epsspTextJustify = 4,
    epsspFontSet = 5,
    epsspFontSetSize = 6,
    epsspFontSetItalic = 7,
    epsspFontSetWeight = 8,
    epsspIsFontSet = 9
} EnumPropSuiteUIStyleProperties;

typedef enum EnumPropSuiteUIStyleTestJustificationType {
    epssptjDefault = 0,
    epssptjLeft = 1,
    epssptjRight = 2,
    epssptjCenter = 3
} EnumPropSuiteUIStyleTestJustificationType;

DEFINE_GUID(IID_ISuiteUIStyle,0x28D157D4L,0x929E,0x4ABC,0x9B,0x41,0x3E,0x84,0xC9,0xA3,0x3C,0xBD);

/* Definition of interface: ISuiteUIStyle */
#undef INTERFACE
#define INTERFACE ISuiteUIStyle

DECLARE_INTERFACE_(ISuiteUIStyle, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIStyle methods */
    STDMETHOD(put_Background)(THIS_ BSTR strColor) PURE;
    STDMETHOD(get_Background)(THIS_ BSTR FAR* pstrColor) PURE;
    STDMETHOD(put_Pen)(THIS_ BSTR strColor) PURE;
    STDMETHOD(get_Pen)(THIS_ BSTR FAR* pstrColor) PURE;
    STDMETHOD(get_Fonts)(THIS_ ISuiteUIFonts FAR* FAR* ppFonts) PURE;
    STDMETHOD(AddFont)(THIS_ BSTR strFontName, ISuiteUIFont FAR* FAR* ppFont) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pstrName) PURE;
    STDMETHOD(put_TextJustify)(THIS_ EnumPropSuiteUIStyleTestJustificationType eTextJustify) PURE;
    STDMETHOD(get_TextJustify)(THIS_ EnumPropSuiteUIStyleTestJustificationType FAR* peTextJustify) PURE;
};

DEFINE_GUID(IID_ISuiteUIStyles,0x87E213FFL,0xC990,0x4220,0xBA,0x8E,0xD3,0xF1,0xFC,0xB2,0x15,0xE5);

/* Definition of interface: ISuiteUIStyles */
#undef INTERFACE
#define INTERFACE ISuiteUIStyles

DECLARE_INTERFACE_(ISuiteUIStyles, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIStyles methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteUIStyle FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropSuiteUIBrushTypes {
    epsubtSolid = 1,
    epsubtGradientVertical = 2,
    epsubtGradientHorizontal = 3,
    epsubtImage = 4
} EnumPropSuiteUIBrushTypes;

typedef enum EnumPropSuiteUIBrushProperties {
    epsubpName = 1,
    epsubpType = 2,
    epsubpColor = 3,
    epsubpResource = 4
} EnumPropSuiteUIBrushProperties;

typedef enum EnumPropSuiteUIGradientProperties {
    epsugTop = 1,
    epsugLeft = 2,
    epsugBottom = 3,
    epsugRight = 4,
    epsugStartColor = 5,
    epsugStopColor = 6
} EnumPropSuiteUIGradientProperties;

DEFINE_GUID(IID_ISuiteUIGradient,0x58085E93L,0xDC4C,0x4C1A,0xBE,0x60,0x0A,0x67,0x25,0xC0,0x0D,0xB9);

/* Definition of interface: ISuiteUIGradient */
#undef INTERFACE
#define INTERFACE ISuiteUIGradient

DECLARE_INTERFACE_(ISuiteUIGradient, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIGradient methods */
    STDMETHOD(put_Coordinates)(THIS_ BSTR bstrCoordinates) PURE;
    STDMETHOD(get_Coordinates)(THIS_ BSTR FAR* pbstrCoordinates) PURE;
    STDMETHOD(put_StartColor)(THIS_ BSTR strColor) PURE;
    STDMETHOD(get_StartColor)(THIS_ BSTR FAR* pstrColor) PURE;
    STDMETHOD(put_StopColor)(THIS_ BSTR strColor) PURE;
    STDMETHOD(get_StopColor)(THIS_ BSTR FAR* pstrColor) PURE;
};

DEFINE_GUID(IID_ISuiteUIGradients,0xD5080419L,0x8DEE,0x4565,0xB8,0x44,0xC9,0xEA,0x24,0x29,0x64,0x43);

/* Definition of interface: ISuiteUIGradients */
#undef INTERFACE
#define INTERFACE ISuiteUIGradients

DECLARE_INTERFACE_(ISuiteUIGradients, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIGradients methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteUIGradient FAR* FAR* ppSuiteBrush) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ISuiteUIBrush,0x589CFDE8L,0x2B40,0x4BD2,0x9C,0x2A,0x4F,0xA3,0xCD,0x69,0x2C,0x26);

/* Definition of interface: ISuiteUIBrush */
#undef INTERFACE
#define INTERFACE ISuiteUIBrush

DECLARE_INTERFACE_(ISuiteUIBrush, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIBrush methods */
    STDMETHOD(put_Name)(THIS_ BSTR strName) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pstrName) PURE;
    STDMETHOD(put_Type)(THIS_ EnumPropSuiteUIBrushTypes eType) PURE;
    STDMETHOD(get_Type)(THIS_ EnumPropSuiteUIBrushTypes FAR* peType) PURE;
    STDMETHOD(put_Color)(THIS_ BSTR strColor) PURE;
    STDMETHOD(get_Color)(THIS_ BSTR FAR* pstrColor) PURE;
    STDMETHOD(get_Gradients)(THIS_ ISuiteUIGradients FAR* FAR* ppRectangles) PURE;
    STDMETHOD(AddGradient)(THIS_ BSTR bstrCoordinates, BSTR strStartColor, BSTR strStopColor, ISuiteUIGradient FAR* FAR* ppGradient) PURE;
};

DEFINE_GUID(IID_ISuiteUIBrushes,0xBBC5507AL,0x7B9C,0x44A9,0x95,0x38,0x35,0xF1,0xD3,0xBA,0xDC,0x2F);

/* Definition of interface: ISuiteUIBrushes */
#undef INTERFACE
#define INTERFACE ISuiteUIBrushes

DECLARE_INTERFACE_(ISuiteUIBrushes, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteUIBrushes methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteUIBrush FAR* FAR* ppSuiteBrush) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumSuiteDFLFilterType {
    esdfIncFolder = 301,
    esdfExcFolder = 302,
    esdfIncFile = 303,
    esdfExcFile = 304
} EnumSuiteDFLFilterType;

typedef enum EnumSuiteDFLFilter {
    esdflFiltContent
} EnumSuiteDFLFilter;

typedef enum EnumPropSuiteDFl {
    epsdflId = 10,
    epsdflSource = 11,
    epsdflContent = 12,
    epsdflIncSubFolders = 13,
    epsdflFilters = 14
} EnumPropSuiteDFl;

interface ISuiteDFLFilter;

interface ISuiteDFLFilters;

DEFINE_GUID(IID_ISuiteDynamicFileLink,0x53014108L,0x49BB,0x42BD,0xA6,0xF4,0x6F,0xDA,0x09,0xCE,0x1A,0x3E);

/* Definition of interface: ISuiteDynamicFileLink */
#undef INTERFACE
#define INTERFACE ISuiteDynamicFileLink

DECLARE_INTERFACE_(ISuiteDynamicFileLink, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteDynamicFileLink methods */
    STDMETHOD(get_Id)(THIS_ BSTR FAR* bstrId) PURE;
    STDMETHOD(put_Id)(THIS_ BSTR bstrId) PURE;
    STDMETHOD(get_Source)(THIS_ BSTR FAR* bstrSource) PURE;
    STDMETHOD(put_Source)(THIS_ BSTR bstrSource) PURE;
    STDMETHOD(get_IncSubFolders)(THIS_ VARIANT_BOOL FAR* pvbIncSubFolders) PURE;
    STDMETHOD(put_IncSubFolders)(THIS_ VARIANT_BOOL vbIncSubFolders) PURE;
    STDMETHOD(AddFilter)(THIS_ EnumSuiteDFLFilterType eFilterType, ISuiteDFLFilter FAR* FAR* ppDFlFilter) PURE;
    STDMETHOD(get_Filters)(THIS_ ISuiteDFLFilters FAR* FAR* ppDFLFilters) PURE;
    STDMETHOD(get_ResolvedSource)(THIS_ BSTR FAR* pbstrResolvedPath) PURE;
};

DEFINE_GUID(IID_ISuiteDynamicFileLinks,0x2FCF1C39L,0x4B9A,0x49DB,0x84,0xED,0xAD,0x76,0xF5,0x5B,0x4B,0x16);

/* Definition of interface: ISuiteDynamicFileLinks */
#undef INTERFACE
#define INTERFACE ISuiteDynamicFileLinks

DECLARE_INTERFACE_(ISuiteDynamicFileLinks, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteDynamicFileLinks methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteDynamicFileLink FAR* FAR* ppDFL) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ISuiteDFLFilter,0xEA0BDC43L,0xBEE2,0x417F,0x8A,0xAA,0x82,0xA5,0x65,0x19,0x3E,0x41);

/* Definition of interface: ISuiteDFLFilter */
#undef INTERFACE
#define INTERFACE ISuiteDFLFilter

DECLARE_INTERFACE_(ISuiteDFLFilter, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteDFLFilter methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Resource)(THIS_ BSTR FAR* bstrResource) PURE;
    STDMETHOD(put_Resource)(THIS_ BSTR bstrResource) PURE;
    STDMETHOD(get_Filters)(THIS_ ISuiteDFLFilters FAR* FAR* ppFilters) PURE;
    STDMETHOD(AddFilter)(THIS_ BSTR bstrFilter, BSTR bstrResource, ISuiteDFLFilter FAR* FAR* ppDFLFilter) PURE;
    STDMETHOD(get_FilterContent)(THIS_ BSTR FAR* pbstrFilterContent) PURE;
    STDMETHOD(put_FilterContent)(THIS_ BSTR bstrFilterContent) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(CanMove)(THIS_ EnumDirection eDirection, VARIANT_BOOL FAR* pvbCanMove) PURE;
};

DEFINE_GUID(IID_ISuiteDFLFilters,0x4F79AD60L,0x15C1,0x4E0F,0xA3,0x6B,0x40,0x87,0xCD,0xA5,0xD9,0x23);

/* Definition of interface: ISuiteDFLFilters */
#undef INTERFACE
#define INTERFACE ISuiteDFLFilters

DECLARE_INTERFACE_(ISuiteDFLFilters, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteDFLFilters methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteDFLFilter FAR* FAR* ppFilter) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumPropSuiteAction {
    epsaName = 10,
    epsaFile = 11,
    epsaArguments = 12,
    epsaExecutionLevel = 13,
    epsaWindow = 14,
    epsaType = 15,
    epsaExeAsynchronous = 16,
    epsaIgnoreCode = 17,
    epsaAbortCode = 18,
    epsaRebootCode = 19,
    epsaCancelCode = 20,
    epsaDefaultCode = 21,
    epsaVerb = 22,
    epsaSourcePath = 23,
    epsaPropName = 24,
    epsaValue = 25,
    epsaFormatPropValue = 26
} EnumPropSuiteAction;

typedef enum EnumSuiteActionType {
    esatDll = 1,
    esatPowerShell = 2,
    esatExe = 4,
    esatStartExe = 8,
    esatSetProperty = 16,
    esatIScript = 32,
    esatClr = 64
} EnumSuiteActionType;

typedef enum EnumPropSuiteActionRef {
    epsarName = 10,
    epsarCondition = 11,
    epsarActionName = 12,
    epsarDisplayText = 13
} EnumPropSuiteActionRef;

typedef enum EnumSuiteActionExecutionLevel {
    esaelInvoker,
    esaelAdmin
} EnumSuiteActionExecutionLevel;

typedef enum EnumSuiteActionWindow {
    esawShow,
    esawHide,
    esawMin,
    esawMax,
    esawNormal
} EnumSuiteActionWindow;

typedef enum EnumSuiteActionDefaultCode {
    esadcIgnore,
    esadcAbort,
    esadcReboot,
    esadcCancel
} EnumSuiteActionDefaultCode;

DEFINE_GUID(IID_ISuiteActionRef,0xA989E76DL,0x6B4D,0x4A68,0xA7,0xB4,0xCA,0x3B,0x2D,0x05,0x0A,0xA7);

/* Definition of interface: ISuiteActionRef */
#undef INTERFACE
#define INTERFACE ISuiteActionRef

DECLARE_INTERFACE_(ISuiteActionRef, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteActionRef methods */
    STDMETHOD(AddActionRef)(THIS_ BSTR bstrActionRef, BSTR bstrResource, ISuiteActionRef FAR* FAR* ppActionRef) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(AddAction)(THIS_ ISuiteAction FAR* pAction) PURE;
    STDMETHOD(get_Condition)(THIS_ ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(get_Action)(THIS_ ISuiteAction FAR* FAR* ppAction) PURE;
    STDMETHOD(AddCondition)(THIS_ ISuiteCondition FAR* FAR* ppCondition) PURE;
    STDMETHOD(DeleteCondition)(THIS) PURE;
    STDMETHOD(MoveUp)(THIS) PURE;
    STDMETHOD(MoveDown)(THIS) PURE;
    STDMETHOD(Move)(THIS_ EnumSuiteEvent eSuiteEvent, ISuiteActionRef FAR* pActionRef) PURE;
    STDMETHOD(get_ActionRefs)(THIS_ ISuiteActionRefs FAR* FAR* ppActionRefs) PURE;
    STDMETHOD(CanMove)(THIS_ EnumDirection eDirection, VARIANT_BOOL FAR* pvbCanMove) PURE;
    STDMETHOD(get_DisplayText)(THIS_ BSTR FAR* DisplayText) PURE;
    STDMETHOD(put_DisplayText)(THIS_ BSTR DisplayText) PURE;
};

DEFINE_GUID(IID_ISuiteActionRefs,0x041DA750L,0x6825,0x4D9C,0x92,0xCB,0x0E,0x4D,0x78,0x55,0xDD,0x1D);

/* Definition of interface: ISuiteActionRefs */
#undef INTERFACE
#define INTERFACE ISuiteActionRefs

DECLARE_INTERFACE_(ISuiteActionRefs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteActionRefs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteActionRef FAR* FAR* ppEvent) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
    STDMETHOD(AddActionRef)(THIS_ ISuiteAction FAR* pAction, ISuiteActionRef FAR* FAR* ppActionRef) PURE;
    STDMETHOD(MoveTo)(THIS_ BSTR bstrKeyToMove, BSTR bstrRefKey) PURE;
};

DEFINE_GUID(IID_ISuiteAction,0xEE80E7F1L,0x6440,0x4D61,0xB6,0x29,0x13,0x91,0x6A,0x1A,0xBF,0x6B);

/* Definition of interface: ISuiteAction */
#undef INTERFACE
#define INTERFACE ISuiteAction

DECLARE_INTERFACE_(ISuiteAction, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteAction methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* bstrFile) PURE;
    STDMETHOD(put_File)(THIS_ BSTR bstrFile) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* bstrArguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR bstrArguments) PURE;
    STDMETHOD(get_ExecutionLevel)(THIS_ EnumSuiteActionExecutionLevel FAR* pExecutionLevel) PURE;
    STDMETHOD(put_ExecutionLevel)(THIS_ EnumSuiteActionExecutionLevel ExecutionLevel) PURE;
    STDMETHOD(get_Window)(THIS_ EnumSuiteActionWindow FAR* pWindow) PURE;
    STDMETHOD(put_Window)(THIS_ EnumSuiteActionWindow Window) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* lType) PURE;
    STDMETHOD(get_ActionName)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_ActionName)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_WaitForExit)(THIS_ VARIANT_BOOL FAR* vbWaitForExit) PURE;
    STDMETHOD(put_WaitForExit)(THIS_ VARIANT_BOOL vbWaitForExit) PURE;
    STDMETHOD(get_Script)(THIS_ BSTR FAR* Script) PURE;
    STDMETHOD(put_Script)(THIS_ BSTR Script) PURE;
    STDMETHOD(get_SourcePath)(THIS_ BSTR FAR* pbstrSourcePath) PURE;
    STDMETHOD(put_SourcePath)(THIS_ BSTR bstrSourcePath) PURE;
    STDMETHOD(get_IgnoreCode)(THIS_ BSTR FAR* pbstrIgnoreCode) PURE;
    STDMETHOD(put_IgnoreCode)(THIS_ BSTR bstrIgnoreCode) PURE;
    STDMETHOD(get_AbortCode)(THIS_ BSTR FAR* pbstrAbortCode) PURE;
    STDMETHOD(put_AbortCode)(THIS_ BSTR bstrAbortCode) PURE;
    STDMETHOD(get_RebootCode)(THIS_ BSTR FAR* pbstrRebootCode) PURE;
    STDMETHOD(put_RebootCode)(THIS_ BSTR bstrRebootCode) PURE;
    STDMETHOD(get_CancelCode)(THIS_ BSTR FAR* pbstrCancelCode) PURE;
    STDMETHOD(put_CancelCode)(THIS_ BSTR bstrCancelCode) PURE;
    STDMETHOD(get_DefaultCode)(THIS_ EnumSuiteActionDefaultCode FAR* pDefaultCode) PURE;
    STDMETHOD(put_DefaultCode)(THIS_ EnumSuiteActionDefaultCode DefaultCode) PURE;
    STDMETHOD(get_Verb)(THIS_ BSTR FAR* pbstrVerb) PURE;
    STDMETHOD(put_Verb)(THIS_ BSTR bstrVerb) PURE;
    STDMETHOD(get_PropName)(THIS_ BSTR FAR* pbstrPropName) PURE;
    STDMETHOD(put_PropName)(THIS_ BSTR bstrPropName) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pbstrVerb) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(get_FormatPropertyValue)(THIS_ VARIANT_BOOL FAR* pvbFormatPropertyValue) PURE;
    STDMETHOD(put_FormatPropertyValue)(THIS_ VARIANT_BOOL vbFormatPropertyValue) PURE;
};

DEFINE_GUID(IID_ISuiteActionRipley,0x891BAF62L,0xF3A8,0x4A63,0x98,0x0C,0x91,0x43,0xFC,0x5F,0xFC,0xBB);

/* Definition of interface: ISuiteActionRipley */
#undef INTERFACE
#define INTERFACE ISuiteActionRipley

DECLARE_INTERFACE_(ISuiteActionRipley, ISuiteAction)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* ISuiteAction methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_File)(THIS_ BSTR FAR* bstrFile) PURE;
    STDMETHOD(put_File)(THIS_ BSTR bstrFile) PURE;
    STDMETHOD(get_Arguments)(THIS_ BSTR FAR* bstrArguments) PURE;
    STDMETHOD(put_Arguments)(THIS_ BSTR bstrArguments) PURE;
    STDMETHOD(get_ExecutionLevel)(THIS_ EnumSuiteActionExecutionLevel FAR* pExecutionLevel) PURE;
    STDMETHOD(put_ExecutionLevel)(THIS_ EnumSuiteActionExecutionLevel ExecutionLevel) PURE;
    STDMETHOD(get_Window)(THIS_ EnumSuiteActionWindow FAR* pWindow) PURE;
    STDMETHOD(put_Window)(THIS_ EnumSuiteActionWindow Window) PURE;
    STDMETHOD(get_Type)(THIS_ long FAR* lType) PURE;
    STDMETHOD(get_ActionName)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_ActionName)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_WaitForExit)(THIS_ VARIANT_BOOL FAR* vbWaitForExit) PURE;
    STDMETHOD(put_WaitForExit)(THIS_ VARIANT_BOOL vbWaitForExit) PURE;
    STDMETHOD(get_Script)(THIS_ BSTR FAR* Script) PURE;
    STDMETHOD(put_Script)(THIS_ BSTR Script) PURE;
    STDMETHOD(get_SourcePath)(THIS_ BSTR FAR* pbstrSourcePath) PURE;
    STDMETHOD(put_SourcePath)(THIS_ BSTR bstrSourcePath) PURE;
    STDMETHOD(get_IgnoreCode)(THIS_ BSTR FAR* pbstrIgnoreCode) PURE;
    STDMETHOD(put_IgnoreCode)(THIS_ BSTR bstrIgnoreCode) PURE;
    STDMETHOD(get_AbortCode)(THIS_ BSTR FAR* pbstrAbortCode) PURE;
    STDMETHOD(put_AbortCode)(THIS_ BSTR bstrAbortCode) PURE;
    STDMETHOD(get_RebootCode)(THIS_ BSTR FAR* pbstrRebootCode) PURE;
    STDMETHOD(put_RebootCode)(THIS_ BSTR bstrRebootCode) PURE;
    STDMETHOD(get_CancelCode)(THIS_ BSTR FAR* pbstrCancelCode) PURE;
    STDMETHOD(put_CancelCode)(THIS_ BSTR bstrCancelCode) PURE;
    STDMETHOD(get_DefaultCode)(THIS_ EnumSuiteActionDefaultCode FAR* pDefaultCode) PURE;
    STDMETHOD(put_DefaultCode)(THIS_ EnumSuiteActionDefaultCode DefaultCode) PURE;
    STDMETHOD(get_Verb)(THIS_ BSTR FAR* pbstrVerb) PURE;
    STDMETHOD(put_Verb)(THIS_ BSTR bstrVerb) PURE;
    STDMETHOD(get_PropName)(THIS_ BSTR FAR* pbstrPropName) PURE;
    STDMETHOD(put_PropName)(THIS_ BSTR bstrPropName) PURE;
    STDMETHOD(get_Value)(THIS_ BSTR FAR* pbstrVerb) PURE;
    STDMETHOD(put_Value)(THIS_ BSTR bstrValue) PURE;
    STDMETHOD(get_FormatPropertyValue)(THIS_ VARIANT_BOOL FAR* pvbFormatPropertyValue) PURE;
    STDMETHOD(put_FormatPropertyValue)(THIS_ VARIANT_BOOL vbFormatPropertyValue) PURE;
#endif

    /* ISuiteActionRipley methods */
    STDMETHOD(get_RequireAdminPrivileges)(THIS_ VARIANT_BOOL FAR* pvbVal) PURE;
    STDMETHOD(put_RequireAdminPrivileges)(THIS_ VARIANT_BOOL vbVal) PURE;
};

DEFINE_GUID(IID_ISuiteActions,0xFC21FC40L,0x1DF4,0x4D35,0x8B,0xF7,0xA3,0xC0,0xC7,0x4E,0xA5,0xCF);

/* Definition of interface: ISuiteActions */
#undef INTERFACE
#define INTERFACE ISuiteActions

DECLARE_INTERFACE_(ISuiteActions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteActions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteAction FAR* FAR* ppAction) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_ISuiteWebDeployParameter,0x75B7C6DFL,0x0F92,0x439E,0xB2,0x14,0xEC,0x07,0xFD,0x83,0x29,0x2B);

/* Definition of interface: ISuiteWebDeployParameter */
#undef INTERFACE
#define INTERFACE ISuiteWebDeployParameter

DECLARE_INTERFACE_(ISuiteWebDeployParameter, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteWebDeployParameter methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_ParamValue)(THIS_ BSTR FAR* bstrValue) PURE;
    STDMETHOD(put_ParamValue)(THIS_ BSTR bstrValue) PURE;
};

DEFINE_GUID(IID_ISuiteWebDeployParameters,0x640F70FEL,0x557A,0x4A03,0xBF,0x25,0x0D,0xB6,0x98,0x03,0x53,0xC5);

/* Definition of interface: ISuiteWebDeployParameters */
#undef INTERFACE
#define INTERFACE ISuiteWebDeployParameters

DECLARE_INTERFACE_(ISuiteWebDeployParameters, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* ISuiteWebDeployParameters methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, ISuiteWebDeployParameter FAR* FAR* ppParameter) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

typedef enum EnumFragmentChild {
    efcCustomAction = 1,
    efcDialog = 2
} EnumFragmentChild;

typedef enum EnumConflictResolution {
    ecrUseBaseProject = 0,
    ecrUseFragProject = 1
} EnumConflictResolution;

DEFINE_GUID(IID_IDimRef,0xB6BB3625L,0x1603,0x469F,0x95,0xF3,0x99,0xC5,0x3E,0xC2,0x3A,0x52);

/* Definition of interface: IDimRef */
#undef INTERFACE
#define INTERFACE IDimRef

DECLARE_INTERFACE_(IDimRef, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDimRef methods */
    STDMETHOD(get_Dim)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Dim)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ISBuildSourcePath)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_ISBuildSourcePath)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Value) PURE;
    STDMETHOD(get_ISAttributes)(THIS_ long FAR* pValue) PURE;
    STDMETHOD(put_ISAttributes)(THIS_ long Value) PURE;
    STDMETHOD(get_DimGUID)(THIS_ BSTR FAR* pValue) PURE;
    STDMETHOD(get_IsOrphan)(THIS_ VARIANT_BOOL FAR* pbVal) PURE;
    STDMETHOD(get_Author)(THIS_ BSTR FAR* sAuthor) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* sComment) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* sVersion) PURE;
    STDMETHOD(get_Destination)(THIS_ BSTR FAR* sDestination) PURE;
    STDMETHOD(put_Destination)(THIS_ BSTR sDestination) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* sGuid) PURE;
    STDMETHOD(get_DimDialogs)(THIS_ IDispatch * FAR* pDialogs) PURE;
    STDMETHOD(get_DimCustomActions)(THIS_ IDispatch * FAR* pCustomActions) PURE;
    STDMETHOD(Remove)(THIS_ IBusinessObject FAR* pObject) PURE;
    STDMETHOD(get_ParentFeatures)(THIS_ IFeatures FAR* FAR* ppVal) PURE;
    STDMETHOD(AddChild)(THIS_ EnumFragmentChild efFragChild, BSTR strName, IBusinessObject FAR* FAR* pVal) PURE;
};

DEFINE_GUID(IID_IDimRefs,0x22AA3665L,0xBC42,0x46D5,0x8C,0xEF,0xEB,0x4A,0x6F,0x28,0x33,0xB2);

/* Definition of interface: IDimRefs */
#undef INTERFACE
#define INTERFACE IDimRefs

DECLARE_INTERFACE_(IDimRefs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDimRefs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IDimRef FAR* FAR* pDimRef) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumFragCustomActionProperty {
    efcapName = 0
} EnumFragCustomActionProperty;

DEFINE_GUID(IID_IDimRefCustomAction,0x432B70D9L,0xD650,0x4401,0xAC,0xEC,0x0E,0x9F,0xA4,0x17,0x2E,0xE3);

/* Definition of interface: IDimRefCustomAction */
#undef INTERFACE
#define INTERFACE IDimRefCustomAction

DECLARE_INTERFACE_(IDimRefCustomAction, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDimRefCustomAction methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
};

DEFINE_GUID(IID_IDimRefCustomActions,0xA91EE73EL,0x11A6,0x47C9,0xB2,0x8B,0xAD,0xB9,0xA3,0xE7,0x88,0x74);

/* Definition of interface: IDimRefCustomActions */
#undef INTERFACE
#define INTERFACE IDimRefCustomActions

DECLARE_INTERFACE_(IDimRefCustomActions, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDimRefCustomActions methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IDimRefCustomAction FAR* FAR* pDimCustomAction) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumFragDialogProperty {
    efdpName = 0
} EnumFragDialogProperty;

DEFINE_GUID(IID_IDimRefDialog,0xD3B67216L,0xE14B,0x4A85,0x82,0xDE,0xB5,0xF3,0x85,0x9B,0x59,0x13);

/* Definition of interface: IDimRefDialog */
#undef INTERFACE
#define INTERFACE IDimRefDialog

DECLARE_INTERFACE_(IDimRefDialog, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDimRefDialog methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* sName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR sName) PURE;
};

DEFINE_GUID(IID_IDimRefDialogs,0x5E89CCF8L,0xB760,0x42A3,0xBE,0x35,0x3D,0x7A,0x39,0x02,0xA1,0xE8);

/* Definition of interface: IDimRefDialogs */
#undef INTERFACE
#define INTERFACE IDimRefDialogs

DECLARE_INTERFACE_(IDimRefDialogs, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDimRefDialogs methods */
    STDMETHOD(get_Item)(THIS_ VARIANT sItem, IDimRefDialog FAR* FAR* pDimDialog) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* plCount) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* pNewEnum) PURE;
};

typedef enum EnumOnUpgrade {
    ouNoOp = 0,
    ouPrompt = 1,
    ouUpgrade = 2
} EnumOnUpgrade;

typedef enum EnumPropProjectRoot {
    epprName = 0,
    epprCompanyName = 10,
    epprOwner = 11,
    epprComments = 12,
    epprCompanyURL = 13,
    epprCompanyPhone = 14,
    epprCreated = 15,
    epprLastModified = 16,
    epprCurrentProduct = 17,
    epprVersion = 18,
    epprBootstrapper = 19,
    epprPathVariableSet = 20,
    epprType = 21,
    epprActiveLanguage = 22,
    epprTitle = 23,
    epprKeywords = 24,
    epprSccEnabled = 25,
    epprSccPath = 26,
    epprMsiLogFile = 27,
    epprMsiExecCmdLineOptions = 28,
    epprSccDatabasePath = 29,
    epprArpNoRepair = 30,
    epprArpNoRemove = 31,
    epprArpNoModify = 32,
    epprArpSystemIcon = 33,
    epprDateCreated = 34,
    epprLastPrinted = 35,
    epprEnableUpdateService = 36,
    epprUseUpdateServiceAutoVersion = 37,
    epprUpdateServiceAutoVersion = 38,
    epprRegisteredWithUpdateService = 39,
    epprUpdateInterval = 40,
    epprArpSystemComponent = 41,
    epprCurrentPatchConfiguration = 42,
    epprUpdateServiceHost = 43,
    epprEnableUpdateServiceUI = 44,
    epprShowUpdateUI = 45,
    epprEngineBinding = 46,
    epprMaintenanceExperience = 47,
    epprOSFilter = 48,
    epprGenerateMIF = 49,
    epprSetupArguments = 50,
    epprMIFFileName = 51,
    epprMIFSerial = 52,
    epprExeFile = 53,
    epprProObjDiffSupported = 54,
    epprProObjRegAtBuild = 55,
    epprProObjRegWizard = 56,
    epprProObjWizard = 57,
    epprProObjFlags = 58,
    epprProTARGETDIR = 59,
    epprProFontRegistration = 60,
    epprUpdateServiceSignature = 61,
    epprUpdateServiceLock = 62,
    epprProDIFX32Supported = 63,
    epprProDIFXIA64Supported = 64,
    epprProDIFXAMD64Supported = 65,
    epprRequireAdmin = 66,
    epprLockPermissionMode = 67,
    epprWin7PerUserOption = 68,
    epprSubject = 69,
    epprResDll = 70,
    epprEnableSwidtag = 71,
    epprSwidtagUniqueId = 72,
    epprSwidtagRegid = 73,
    epprTagCreatorName = 74,
    epprTagCreatorRegid = 75,
    epprSfwCreatorName = 76,
    epprSfwCreatorRegid = 77,
    epprSfwLicensorName = 78,
    epprSfwLicensorRegid = 79,
    epprEntitlementRequired = 80,
    epprSuiteAbortConditions = 81,
    epprEnableSwidtagSCCM = 82,
    epprSwidtagSCCMAppType = 83,
    epprSwidtagSCCMSupercedence = 84,
    epprSwidtagSCCMSupercedeUninst = 85,
    epprSuiteActions = 86,
    epprSuiteActionRefs = 87
} EnumPropProjectRoot;

typedef enum EnumProjectType {
    eptUnknown = 0,
    eptMsi = 1,
    eptMsm = 2,
    eptMsie = 3,
    eptQuickPatch = 4,
    eptMsiDirect = 5,
    eptMsmDirect = 6,
    eptMst = 7,
    eptPcp = 8,
    eptPro = 9,
    eptProObj = 10,
    eptWindowsCE = 11,
    eptMSP = 12,
    eptClickOnce = 13,
    eptLite = 14,
    eptDim = 15,
    eptBootstrap = 16
} EnumProjectType;

typedef enum EnumPathType {
    eptFull = 1,
    eptAlias = 2
} EnumPathType;

typedef enum EItemAction {
    created,
    deleted,
    modified,
    TableCreated,
    TableDeleted,
    TableModified
} EItemAction;

typedef enum EInitTemplateType {
    eittProjectTemplate = 1,
    eittBuildTemplate = 2
} EInitTemplateType;

typedef enum ETableValidationType {
    etvtValid = 0,
    etvtInvalidRecords = 1,
    etvtInvalidTable = 2,
    etvtInvalidTableAndRecords = 3
} ETableValidationType;

typedef enum EUILanguages {
    euilEng = 0,
    euilJpn = 1,
    euilGer = 2
} EUILanguages;

typedef enum EProObjectProps {
    epopDisplayName = 0,
    epopShortName = 1,
    epopHTMLPage = 2,
    epopIconFile = 3
} EProObjectProps;

typedef enum EnumDialogSizeType {
    edstUnknown = -1,
    edstMsiUnits = 0,
    edstDialogUnits = 1
} EnumDialogSizeType;

typedef enum EnumSwidtagProperty {
    eswtpUniqueId,
    eswtpRegid,
    eswtpTagCreatorName,
    eswtpTagCreatorRegid,
    eswtpSfwCreatorName,
    eswtpSfwCreatorRegid,
    eswtpSfwLicensorName,
    eswtpSfwLicensorRegid,
    eswtpEntitlementRequired,
    eswtpSCCMAppType,
    eswtpSCCMSupercedence,
    eswtpSCCMSupercedenceUninst
} EnumSwidtagProperty;

typedef enum EnumProjectVersion {
    epvInvalidVersion = 0,
    epvCurrentVersion = 1,
    epvOldVersion = 2,
    epvMoreRecentVersion = 3
} EnumProjectVersion;

typedef enum EnumImportPrereqError {
    eipeInvalidPrq,
    eipeInvalidXslt,
    eipeUnexpected
} EnumImportPrereqError;

typedef enum EnumPackagePlatformType {
    epptUnknown,
    epptIntel,
    epptX64,
    epptAmd64,
    epptIntel64
} EnumPackagePlatformType;

DEFINE_GUID(IID_IImportPrereqEvents,0x48FA0379L,0x3349,0x4244,0xAF,0x60,0xC2,0x60,0xB4,0x85,0x87,0x4D);

/* Definition of interface: IImportPrereqEvents */
#undef INTERFACE
#define INTERFACE IImportPrereqEvents

DECLARE_INTERFACE_(IImportPrereqEvents, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IImportPrereqEvents methods */
    STDMETHOD(OnImportStart)(THIS_ BSTR sPrqFile, BSTR sPrimaryPrqFile) PURE;
    STDMETHOD(OnImportConflict)(THIS_ BSTR sPrqFile, BSTR sPrimaryPrqFile, ISuitePackage FAR* pExistingPackage, VARIANT_BOOL FAR* pCancel) PURE;
    STDMETHOD(OnImportError)(THIS_ BSTR sPrqFile, BSTR sPrimaryPrqFile, EnumImportPrereqError eError, VARIANT_BOOL FAR* pCancel) PURE;
    STDMETHOD(OnImportSuccess)(THIS_ BSTR sPrqFile, BSTR sPrimaryPrqFile, ISuitePackage FAR* pNewPackage) PURE;
};

DEFINE_GUID(IID_IISStorage,0xF5819E3DL,0x5612,0x4AB7,0xA5,0xC6,0x72,0xF1,0x55,0x46,0xD0,0x1F);

/* Definition of interface: IISStorage */
#undef INTERFACE
#define INTERFACE IISStorage

DECLARE_INTERFACE_(IISStorage, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISStorage methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_ISSourcePath)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_ISSourcePath)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_IISStorages,0x950B09D8L,0x398C,0x4E4C,0x89,0x88,0x7B,0x1C,0x29,0xE5,0x3D,0x5E);

/* Definition of interface: IISStorages */
#undef INTERFACE
#define INTERFACE IISStorages

DECLARE_INTERFACE_(IISStorages, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISStorages methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IISStorage FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IISAlias,0x1C5E56A5L,0xF9DD,0x4ED1,0xAE,0x73,0x0E,0x9F,0x04,0xF7,0x65,0x4D);

/* Definition of interface: IISAlias */
#undef INTERFACE
#define INTERFACE IISAlias

DECLARE_INTERFACE_(IISAlias, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISAlias methods */
    STDMETHOD(get_Alias)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Alias)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Identifier)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Identifier)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Table)(THIS_ BSTR FAR* bstrVal) PURE;
    STDMETHOD(put_Table)(THIS_ BSTR bstrVal) PURE;
};

DEFINE_GUID(IID_IISAliases,0xF5C1AE93L,0x05B9,0x4C8B,0x8D,0x51,0xA4,0x05,0x07,0x06,0xED,0x1E);

/* Definition of interface: IISAliases */
#undef INTERFACE
#define INTERFACE IISAliases

DECLARE_INTERFACE_(IISAliases, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISAliases methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IISAlias FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IISDisk1File,0x06A9882AL,0xCF3A,0x46B3,0xBE,0xCD,0x62,0x8C,0x7F,0x35,0x39,0x45);

/* Definition of interface: IISDisk1File */
#undef INTERFACE
#define INTERFACE IISDisk1File

DECLARE_INTERFACE_(IISDisk1File, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISDisk1File methods */
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_BuildSourcePath)(THIS_ BSTR FAR* BuildSourcePath) PURE;
    STDMETHOD(put_BuildSourcePath)(THIS_ BSTR BuildSourcePath) PURE;
};

DEFINE_GUID(IID_IISDisk1Files,0x4D7693EEL,0x7856,0x48B0,0x99,0x26,0x6E,0x8D,0x28,0xCC,0x35,0x8D);

/* Definition of interface: IISDisk1Files */
#undef INTERFACE
#define INTERFACE IISDisk1Files

DECLARE_INTERFACE_(IISDisk1Files, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IISDisk1Files methods */
    STDMETHOD(get_Item)(THIS_ VARIANT Item, IISDisk1File FAR* FAR* Return) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(get_NewEnum)(THIS_ IVBEnumVARIANT FAR* FAR* NewEnum) PURE;
};

DEFINE_GUID(IID_IProjectRoot,0x3479361CL,0xEC4E,0x4501,0xAE,0xC0,0xF7,0x37,0x58,0xDD,0xF9,0xAF);

/* Definition of interface: IProjectRoot */
#undef INTERFACE
#define INTERFACE IProjectRoot

DECLARE_INTERFACE_(IProjectRoot, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;
};

typedef enum EUpdateServiceRegistrationStatus {
    eusrsRegistered,
    eusrsNotRegistered,
    eusrsUnknown
} EUpdateServiceRegistrationStatus;

typedef enum EnumEngineBinding {
    eebDynamic_OBSOLETE_in_Indore = 0,
    eebStatic_OBSOLETE_in_Indore = 1
} EnumEngineBinding;

typedef enum EnumMaintenanceExperience {
    emeStandard = 0,
    emeNone = 1,
    emeMulti = 2
} EnumMaintenanceExperience;

DEFINE_GUID(IID_IProjectRoot2,0x3BAD3800L,0x5621,0x42C4,0xB9,0x95,0xB9,0xF7,0xAC,0x67,0x83,0xB1);

/* Definition of interface: IProjectRoot2 */
#undef INTERFACE
#define INTERFACE IProjectRoot2

DECLARE_INTERFACE_(IProjectRoot2, IProjectRoot)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;
#endif

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;
};

DEFINE_GUID(IID_IProjectRootNeptune,0x8D6FC627L,0x96E7,0x4D4E,0x88,0x2B,0x15,0xA5,0x09,0x44,0x29,0x16);

/* Definition of interface: IProjectRootNeptune */
#undef INTERFACE
#define INTERFACE IProjectRootNeptune

DECLARE_INTERFACE_(IProjectRootNeptune, IProjectRoot2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;
#endif

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;
};

DEFINE_GUID(IID_IProjectRootNeptuneSP,0xA819B92FL,0xD8B8,0x4069,0x97,0x82,0xE6,0x34,0x8F,0x06,0xDC,0x79);

/* Definition of interface: IProjectRootNeptuneSP */
#undef INTERFACE
#define INTERFACE IProjectRootNeptuneSP

DECLARE_INTERFACE_(IProjectRootNeptuneSP, IProjectRootNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;
#endif

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;
};

DEFINE_GUID(IID_IProjectRootNeptunePDC,0x8D6FC628L,0x96E7,0x4D4E,0x88,0x2B,0x15,0xA5,0x09,0x44,0x29,0x16);

/* Definition of interface: IProjectRootNeptunePDC */
#undef INTERFACE
#define INTERFACE IProjectRootNeptunePDC

DECLARE_INTERFACE_(IProjectRootNeptunePDC, IProjectRootNeptuneSP)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;
#endif

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;
};

DEFINE_GUID(IID_IProjectRootProteus,0xC9CBD5BEL,0xF923,0x482B,0xB9,0xD3,0x23,0x2C,0xD5,0xCC,0x97,0x5C);

/* Definition of interface: IProjectRootProteus */
#undef INTERFACE
#define INTERFACE IProjectRootProteus

DECLARE_INTERFACE_(IProjectRootProteus, IProjectRootNeptunePDC)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;
#endif

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;
};

DEFINE_GUID(IID_IProjectRootPluto,0x7FEDBA19L,0xFF94,0x40F0,0x85,0xB1,0x62,0x33,0x4B,0x48,0x1A,0x1F);

/* Definition of interface: IProjectRootPluto */
#undef INTERFACE
#define INTERFACE IProjectRootPluto

DECLARE_INTERFACE_(IProjectRootPluto, IProjectRootProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;
#endif

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;
};

DEFINE_GUID(IID_IProjectRootIbiza,0xBA0E5A43L,0x8524,0x4441,0xA3,0xFC,0xAF,0x45,0x17,0x35,0x63,0xDD);

/* Definition of interface: IProjectRootIbiza */
#undef INTERFACE
#define INTERFACE IProjectRootIbiza

DECLARE_INTERFACE_(IProjectRootIbiza, IProjectRootPluto)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;
#endif

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;
};

DEFINE_GUID(IID_IProjectRootIxtapa,0x4C86D508L,0x1C59,0x42BA,0x92,0x3F,0x62,0xC0,0x99,0xDD,0x4A,0xEE);

/* Definition of interface: IProjectRootIxtapa */
#undef INTERFACE
#define INTERFACE IProjectRootIxtapa

DECLARE_INTERFACE_(IProjectRootIxtapa, IProjectRootIbiza)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;
#endif

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;
};

DEFINE_GUID(IID_IProjectRootIndore,0x780E186CL,0xF1BA,0x4401,0x8A,0x4C,0x4F,0xC2,0xBC,0x5A,0x03,0xA8);

/* Definition of interface: IProjectRootIndore */
#undef INTERFACE
#define INTERFACE IProjectRootIndore

DECLARE_INTERFACE_(IProjectRootIndore, IProjectRootIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;
#endif

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;
};

DEFINE_GUID(IID_IProjectRootIna,0x4AEED68FL,0x172B,0x4F95,0xB8,0x30,0x8E,0x2F,0x16,0x1F,0x4B,0x0F);

/* Definition of interface: IProjectRootIna */
#undef INTERFACE
#define INTERFACE IProjectRootIna

DECLARE_INTERFACE_(IProjectRootIna, IProjectRootIndore)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;
#endif

    /* IProjectRootIna methods */
    STDMETHOD(ResolveStringIdForActiveLanguage)(THIS_ BSTR bstrStringId, VARIANT_BOOL FAR* vbFoundStringId, BSTR FAR* bstrResolvedValue) PURE;
};

DEFINE_GUID(IID_IProjectRootIronwood,0xDF18F366L,0x747C,0x4834,0x8E,0x1B,0x24,0x8B,0xBA,0x1E,0xB3,0xBA);

/* Definition of interface: IProjectRootIronwood */
#undef INTERFACE
#define INTERFACE IProjectRootIronwood

DECLARE_INTERFACE_(IProjectRootIronwood, IProjectRootIna)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;

    /* IProjectRootIna methods */
    STDMETHOD(ResolveStringIdForActiveLanguage)(THIS_ BSTR bstrStringId, VARIANT_BOOL FAR* vbFoundStringId, BSTR FAR* bstrResolvedValue) PURE;
#endif

    /* IProjectRootIronwood methods */
    STDMETHOD(get_RuntimeTheme)(THIS_ BSTR FAR* pbstrTheme) PURE;
    STDMETHOD(put_RuntimeTheme)(THIS_ BSTR bstrTheme) PURE;
    STDMETHOD(put_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL vbEnableUpdateService, BSTR bstrVersio) PURE;
    STDMETHOD(get_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService, BSTR FAR* pbstrVersion) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* ppShortcuts) PURE;
};

DEFINE_GUID(IID_IProjectRootJustice,0x3C07EAD4L,0x4BCE,0x4782,0xAA,0x24,0x64,0x3E,0x48,0x40,0x91,0xF9);

/* Definition of interface: IProjectRootJustice */
#undef INTERFACE
#define INTERFACE IProjectRootJustice

DECLARE_INTERFACE_(IProjectRootJustice, IProjectRootIronwood)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;

    /* IProjectRootIna methods */
    STDMETHOD(ResolveStringIdForActiveLanguage)(THIS_ BSTR bstrStringId, VARIANT_BOOL FAR* vbFoundStringId, BSTR FAR* bstrResolvedValue) PURE;

    /* IProjectRootIronwood methods */
    STDMETHOD(get_RuntimeTheme)(THIS_ BSTR FAR* pbstrTheme) PURE;
    STDMETHOD(put_RuntimeTheme)(THIS_ BSTR bstrTheme) PURE;
    STDMETHOD(put_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL vbEnableUpdateService, BSTR bstrVersio) PURE;
    STDMETHOD(get_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService, BSTR FAR* pbstrVersion) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* ppShortcuts) PURE;
#endif

    /* IProjectRootJustice methods */
    STDMETHOD(get_ChainPackages)(THIS_ IChainPackages FAR* FAR* ppPackages) PURE;
};

typedef enum EnumLockPermissionMode {
    elpmLegacy = 0,
    elpmIS = 1,
    elpmMSI5 = 2
} EnumLockPermissionMode;

DEFINE_GUID(IID_IProjectRootLoyalty,0xDD068037L,0x6D17,0x4750,0xA1,0x44,0x6D,0xD4,0x71,0x77,0xAF,0x1C);

/* Definition of interface: IProjectRootLoyalty */
#undef INTERFACE
#define INTERFACE IProjectRootLoyalty

DECLARE_INTERFACE_(IProjectRootLoyalty, IProjectRootJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;

    /* IProjectRootIna methods */
    STDMETHOD(ResolveStringIdForActiveLanguage)(THIS_ BSTR bstrStringId, VARIANT_BOOL FAR* vbFoundStringId, BSTR FAR* bstrResolvedValue) PURE;

    /* IProjectRootIronwood methods */
    STDMETHOD(get_RuntimeTheme)(THIS_ BSTR FAR* pbstrTheme) PURE;
    STDMETHOD(put_RuntimeTheme)(THIS_ BSTR bstrTheme) PURE;
    STDMETHOD(put_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL vbEnableUpdateService, BSTR bstrVersio) PURE;
    STDMETHOD(get_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService, BSTR FAR* pbstrVersion) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* ppShortcuts) PURE;

    /* IProjectRootJustice methods */
    STDMETHOD(get_ChainPackages)(THIS_ IChainPackages FAR* FAR* ppPackages) PURE;
#endif

    /* IProjectRootLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppIisItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppIisWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* pIisAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppIisWebServiceExtensions) PURE;
    STDMETHOD(get_RequireAdmin)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_RequireAdmin)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ISLockPermissions)(THIS_ BSTR LockObject, IISLockPermissions FAR* FAR* pISLockPermissions) PURE;
    STDMETHOD(get_SearchReplaceSets)(THIS_ ISearchReplaceSets FAR* FAR* pSearchReplaceSets) PURE;
    STDMETHOD(get_ActionTexts)(THIS_ IActionTexts FAR* FAR* pActionTexts) PURE;
    STDMETHOD(get_LockPermissionMode)(THIS_ EnumLockPermissionMode FAR* eVal) PURE;
    STDMETHOD(put_LockPermissionMode)(THIS_ EnumLockPermissionMode eVal) PURE;
    STDMETHOD(ConvertLockPermissions)(THIS_ EnumLockPermissionMode eFromTable, EnumLockPermissionMode eToTable) PURE;
    STDMETHOD(get_ViewFilter)(THIS_ BSTR FAR* pbstrFilter) PURE;
    STDMETHOD(put_ViewFilter)(THIS_ BSTR bstrFilter) PURE;
    STDMETHOD(get_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL FAR* pvbValue) PURE;
    STDMETHOD(put_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL vbValue) PURE;
    STDMETHOD(GetTextStyle)(THIS_ BSTR bstrName, BSTR bstrFaceName, long lSize, long lColor, long lStyleBits, VARIANT_BOOL vbCreateIfNotExists, ITextStyle FAR* FAR* ppTextStyle) PURE;
    STDMETHOD(get_LinkerOption)(THIS_ BSTR bstrLibraryPath, ILinkerOption FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_IProjectRootJack,0x77E33B3BL,0xA140,0x4E71,0x80,0x0A,0xE3,0x1F,0x7D,0x05,0xB3,0x99);

/* Definition of interface: IProjectRootJack */
#undef INTERFACE
#define INTERFACE IProjectRootJack

DECLARE_INTERFACE_(IProjectRootJack, IProjectRootLoyalty)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;

    /* IProjectRootIna methods */
    STDMETHOD(ResolveStringIdForActiveLanguage)(THIS_ BSTR bstrStringId, VARIANT_BOOL FAR* vbFoundStringId, BSTR FAR* bstrResolvedValue) PURE;

    /* IProjectRootIronwood methods */
    STDMETHOD(get_RuntimeTheme)(THIS_ BSTR FAR* pbstrTheme) PURE;
    STDMETHOD(put_RuntimeTheme)(THIS_ BSTR bstrTheme) PURE;
    STDMETHOD(put_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL vbEnableUpdateService, BSTR bstrVersio) PURE;
    STDMETHOD(get_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService, BSTR FAR* pbstrVersion) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* ppShortcuts) PURE;

    /* IProjectRootJustice methods */
    STDMETHOD(get_ChainPackages)(THIS_ IChainPackages FAR* FAR* ppPackages) PURE;

    /* IProjectRootLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppIisItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppIisWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* pIisAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppIisWebServiceExtensions) PURE;
    STDMETHOD(get_RequireAdmin)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_RequireAdmin)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ISLockPermissions)(THIS_ BSTR LockObject, IISLockPermissions FAR* FAR* pISLockPermissions) PURE;
    STDMETHOD(get_SearchReplaceSets)(THIS_ ISearchReplaceSets FAR* FAR* pSearchReplaceSets) PURE;
    STDMETHOD(get_ActionTexts)(THIS_ IActionTexts FAR* FAR* pActionTexts) PURE;
    STDMETHOD(get_LockPermissionMode)(THIS_ EnumLockPermissionMode FAR* eVal) PURE;
    STDMETHOD(put_LockPermissionMode)(THIS_ EnumLockPermissionMode eVal) PURE;
    STDMETHOD(ConvertLockPermissions)(THIS_ EnumLockPermissionMode eFromTable, EnumLockPermissionMode eToTable) PURE;
    STDMETHOD(get_ViewFilter)(THIS_ BSTR FAR* pbstrFilter) PURE;
    STDMETHOD(put_ViewFilter)(THIS_ BSTR bstrFilter) PURE;
    STDMETHOD(get_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL FAR* pvbValue) PURE;
    STDMETHOD(put_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL vbValue) PURE;
    STDMETHOD(GetTextStyle)(THIS_ BSTR bstrName, BSTR bstrFaceName, long lSize, long lColor, long lStyleBits, VARIANT_BOOL vbCreateIfNotExists, ITextStyle FAR* FAR* ppTextStyle) PURE;
    STDMETHOD(get_LinkerOption)(THIS_ BSTR bstrLibraryPath, ILinkerOption FAR* FAR* ppVal) PURE;
#endif

    /* IProjectRootJack methods */
    STDMETHOD(get_MsiLockPermissionsExs)(THIS_ BSTR LockObject, BSTR Table, IMsiLockPermissionsExs FAR* FAR* pLockPermissions) PURE;
};

DEFINE_GUID(IID_IProjectRootMajesty,0x193F7141L,0x26FC,0x401F,0x93,0x50,0xA2,0xE3,0xD9,0x5C,0x60,0x9A);

/* Definition of interface: IProjectRootMajesty */
#undef INTERFACE
#define INTERFACE IProjectRootMajesty

DECLARE_INTERFACE_(IProjectRootMajesty, IProjectRootJack)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;

    /* IProjectRootIna methods */
    STDMETHOD(ResolveStringIdForActiveLanguage)(THIS_ BSTR bstrStringId, VARIANT_BOOL FAR* vbFoundStringId, BSTR FAR* bstrResolvedValue) PURE;

    /* IProjectRootIronwood methods */
    STDMETHOD(get_RuntimeTheme)(THIS_ BSTR FAR* pbstrTheme) PURE;
    STDMETHOD(put_RuntimeTheme)(THIS_ BSTR bstrTheme) PURE;
    STDMETHOD(put_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL vbEnableUpdateService, BSTR bstrVersio) PURE;
    STDMETHOD(get_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService, BSTR FAR* pbstrVersion) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* ppShortcuts) PURE;

    /* IProjectRootJustice methods */
    STDMETHOD(get_ChainPackages)(THIS_ IChainPackages FAR* FAR* ppPackages) PURE;

    /* IProjectRootLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppIisItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppIisWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* pIisAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppIisWebServiceExtensions) PURE;
    STDMETHOD(get_RequireAdmin)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_RequireAdmin)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ISLockPermissions)(THIS_ BSTR LockObject, IISLockPermissions FAR* FAR* pISLockPermissions) PURE;
    STDMETHOD(get_SearchReplaceSets)(THIS_ ISearchReplaceSets FAR* FAR* pSearchReplaceSets) PURE;
    STDMETHOD(get_ActionTexts)(THIS_ IActionTexts FAR* FAR* pActionTexts) PURE;
    STDMETHOD(get_LockPermissionMode)(THIS_ EnumLockPermissionMode FAR* eVal) PURE;
    STDMETHOD(put_LockPermissionMode)(THIS_ EnumLockPermissionMode eVal) PURE;
    STDMETHOD(ConvertLockPermissions)(THIS_ EnumLockPermissionMode eFromTable, EnumLockPermissionMode eToTable) PURE;
    STDMETHOD(get_ViewFilter)(THIS_ BSTR FAR* pbstrFilter) PURE;
    STDMETHOD(put_ViewFilter)(THIS_ BSTR bstrFilter) PURE;
    STDMETHOD(get_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL FAR* pvbValue) PURE;
    STDMETHOD(put_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL vbValue) PURE;
    STDMETHOD(GetTextStyle)(THIS_ BSTR bstrName, BSTR bstrFaceName, long lSize, long lColor, long lStyleBits, VARIANT_BOOL vbCreateIfNotExists, ITextStyle FAR* FAR* ppTextStyle) PURE;
    STDMETHOD(get_LinkerOption)(THIS_ BSTR bstrLibraryPath, ILinkerOption FAR* FAR* ppVal) PURE;

    /* IProjectRootJack methods */
    STDMETHOD(get_MsiLockPermissionsExs)(THIS_ BSTR LockObject, BSTR Table, IMsiLockPermissionsExs FAR* FAR* pLockPermissions) PURE;
#endif

    /* IProjectRootMajesty methods */
    STDMETHOD(put_DialogSizeType)(THIS_ EnumDialogSizeType eDialogSizeType) PURE;
    STDMETHOD(get_DialogSizeType)(THIS_ EnumDialogSizeType FAR* peDialogSizeType) PURE;
};

DEFINE_GUID(IID_IProjectRootNeo,0x828CB72DL,0x92B4,0x4C6A,0x89,0xE8,0x28,0xC0,0xCC,0xB3,0xF0,0xAD);

/* Definition of interface: IProjectRootNeo */
#undef INTERFACE
#define INTERFACE IProjectRootNeo

DECLARE_INTERFACE_(IProjectRootNeo, IProjectRootMajesty)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;

    /* IProjectRootIna methods */
    STDMETHOD(ResolveStringIdForActiveLanguage)(THIS_ BSTR bstrStringId, VARIANT_BOOL FAR* vbFoundStringId, BSTR FAR* bstrResolvedValue) PURE;

    /* IProjectRootIronwood methods */
    STDMETHOD(get_RuntimeTheme)(THIS_ BSTR FAR* pbstrTheme) PURE;
    STDMETHOD(put_RuntimeTheme)(THIS_ BSTR bstrTheme) PURE;
    STDMETHOD(put_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL vbEnableUpdateService, BSTR bstrVersio) PURE;
    STDMETHOD(get_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService, BSTR FAR* pbstrVersion) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* ppShortcuts) PURE;

    /* IProjectRootJustice methods */
    STDMETHOD(get_ChainPackages)(THIS_ IChainPackages FAR* FAR* ppPackages) PURE;

    /* IProjectRootLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppIisItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppIisWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* pIisAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppIisWebServiceExtensions) PURE;
    STDMETHOD(get_RequireAdmin)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_RequireAdmin)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ISLockPermissions)(THIS_ BSTR LockObject, IISLockPermissions FAR* FAR* pISLockPermissions) PURE;
    STDMETHOD(get_SearchReplaceSets)(THIS_ ISearchReplaceSets FAR* FAR* pSearchReplaceSets) PURE;
    STDMETHOD(get_ActionTexts)(THIS_ IActionTexts FAR* FAR* pActionTexts) PURE;
    STDMETHOD(get_LockPermissionMode)(THIS_ EnumLockPermissionMode FAR* eVal) PURE;
    STDMETHOD(put_LockPermissionMode)(THIS_ EnumLockPermissionMode eVal) PURE;
    STDMETHOD(ConvertLockPermissions)(THIS_ EnumLockPermissionMode eFromTable, EnumLockPermissionMode eToTable) PURE;
    STDMETHOD(get_ViewFilter)(THIS_ BSTR FAR* pbstrFilter) PURE;
    STDMETHOD(put_ViewFilter)(THIS_ BSTR bstrFilter) PURE;
    STDMETHOD(get_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL FAR* pvbValue) PURE;
    STDMETHOD(put_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL vbValue) PURE;
    STDMETHOD(GetTextStyle)(THIS_ BSTR bstrName, BSTR bstrFaceName, long lSize, long lColor, long lStyleBits, VARIANT_BOOL vbCreateIfNotExists, ITextStyle FAR* FAR* ppTextStyle) PURE;
    STDMETHOD(get_LinkerOption)(THIS_ BSTR bstrLibraryPath, ILinkerOption FAR* FAR* ppVal) PURE;

    /* IProjectRootJack methods */
    STDMETHOD(get_MsiLockPermissionsExs)(THIS_ BSTR LockObject, BSTR Table, IMsiLockPermissionsExs FAR* FAR* pLockPermissions) PURE;

    /* IProjectRootMajesty methods */
    STDMETHOD(put_DialogSizeType)(THIS_ EnumDialogSizeType eDialogSizeType) PURE;
    STDMETHOD(get_DialogSizeType)(THIS_ EnumDialogSizeType FAR* peDialogSizeType) PURE;
#endif

    /* IProjectRootNeo methods */
    STDMETHOD(get_SuitePackages)(THIS_ ISuitePackages FAR* FAR* ppSuitePackages) PURE;
    STDMETHOD(get_SuiteFeatures)(THIS_ ISuiteFeatures FAR* FAR* ppSuiteFeatures) PURE;
    STDMETHOD(get_Dims)(THIS_ IDimRefs FAR* FAR* ppDims) PURE;
    STDMETHOD(get_SuiteWizard)(THIS_ ISuiteWizard FAR* FAR* ppSuiteWizard) PURE;
    STDMETHOD(get_SuiteDialogs)(THIS_ ISuiteDialogs FAR* FAR* ppSuiteDialogs) PURE;
    STDMETHOD(get_Releases)(THIS_ ISuiteReleases FAR* FAR* ppSuiteReleases) PURE;
    STDMETHOD(get_RuntimeXml)(THIS_ BSTR FAR* pbstrFilePath) PURE;
    STDMETHOD(AddDialog)(THIS_ BSTR strDialogName, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(CopyDialog)(THIS_ ISuiteDialog FAR* pSourceDialog, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(get_SuiteStyles)(THIS_ ISuiteUIStyles FAR* FAR* ppSuiteStyles) PURE;
    STDMETHOD(get_SuiteBrushes)(THIS_ ISuiteUIBrushes FAR* FAR* ppSuiteBrushes) PURE;
    STDMETHOD(get_EnableSwidtag)(THIS_ VARIANT_BOOL FAR* vbEnable) PURE;
    STDMETHOD(put_EnableSwidtag)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR FAR* bstrValue) PURE;
    STDMETHOD(put_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR bstrValue) PURE;
    STDMETHOD(get_SwidtagSystemComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagSystemComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(get_SwidtagLocalComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagLocalComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(RenameSwidtagSystemComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(RenameSwidtagLocalComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(get_SuiteAbortConditions)(THIS_ ISuiteAbortConditions FAR* FAR* ppConditions) PURE;
};

DEFINE_GUID(IID_IProjectRootOpus,0xD77C6F8EL,0x23F8,0x47BC,0xA2,0x99,0xAD,0x77,0x24,0xF0,0x73,0x66);

/* Definition of interface: IProjectRootOpus */
#undef INTERFACE
#define INTERFACE IProjectRootOpus

DECLARE_INTERFACE_(IProjectRootOpus, IProjectRootNeo)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;

    /* IProjectRootIna methods */
    STDMETHOD(ResolveStringIdForActiveLanguage)(THIS_ BSTR bstrStringId, VARIANT_BOOL FAR* vbFoundStringId, BSTR FAR* bstrResolvedValue) PURE;

    /* IProjectRootIronwood methods */
    STDMETHOD(get_RuntimeTheme)(THIS_ BSTR FAR* pbstrTheme) PURE;
    STDMETHOD(put_RuntimeTheme)(THIS_ BSTR bstrTheme) PURE;
    STDMETHOD(put_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL vbEnableUpdateService, BSTR bstrVersio) PURE;
    STDMETHOD(get_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService, BSTR FAR* pbstrVersion) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* ppShortcuts) PURE;

    /* IProjectRootJustice methods */
    STDMETHOD(get_ChainPackages)(THIS_ IChainPackages FAR* FAR* ppPackages) PURE;

    /* IProjectRootLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppIisItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppIisWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* pIisAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppIisWebServiceExtensions) PURE;
    STDMETHOD(get_RequireAdmin)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_RequireAdmin)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ISLockPermissions)(THIS_ BSTR LockObject, IISLockPermissions FAR* FAR* pISLockPermissions) PURE;
    STDMETHOD(get_SearchReplaceSets)(THIS_ ISearchReplaceSets FAR* FAR* pSearchReplaceSets) PURE;
    STDMETHOD(get_ActionTexts)(THIS_ IActionTexts FAR* FAR* pActionTexts) PURE;
    STDMETHOD(get_LockPermissionMode)(THIS_ EnumLockPermissionMode FAR* eVal) PURE;
    STDMETHOD(put_LockPermissionMode)(THIS_ EnumLockPermissionMode eVal) PURE;
    STDMETHOD(ConvertLockPermissions)(THIS_ EnumLockPermissionMode eFromTable, EnumLockPermissionMode eToTable) PURE;
    STDMETHOD(get_ViewFilter)(THIS_ BSTR FAR* pbstrFilter) PURE;
    STDMETHOD(put_ViewFilter)(THIS_ BSTR bstrFilter) PURE;
    STDMETHOD(get_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL FAR* pvbValue) PURE;
    STDMETHOD(put_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL vbValue) PURE;
    STDMETHOD(GetTextStyle)(THIS_ BSTR bstrName, BSTR bstrFaceName, long lSize, long lColor, long lStyleBits, VARIANT_BOOL vbCreateIfNotExists, ITextStyle FAR* FAR* ppTextStyle) PURE;
    STDMETHOD(get_LinkerOption)(THIS_ BSTR bstrLibraryPath, ILinkerOption FAR* FAR* ppVal) PURE;

    /* IProjectRootJack methods */
    STDMETHOD(get_MsiLockPermissionsExs)(THIS_ BSTR LockObject, BSTR Table, IMsiLockPermissionsExs FAR* FAR* pLockPermissions) PURE;

    /* IProjectRootMajesty methods */
    STDMETHOD(put_DialogSizeType)(THIS_ EnumDialogSizeType eDialogSizeType) PURE;
    STDMETHOD(get_DialogSizeType)(THIS_ EnumDialogSizeType FAR* peDialogSizeType) PURE;

    /* IProjectRootNeo methods */
    STDMETHOD(get_SuitePackages)(THIS_ ISuitePackages FAR* FAR* ppSuitePackages) PURE;
    STDMETHOD(get_SuiteFeatures)(THIS_ ISuiteFeatures FAR* FAR* ppSuiteFeatures) PURE;
    STDMETHOD(get_Dims)(THIS_ IDimRefs FAR* FAR* ppDims) PURE;
    STDMETHOD(get_SuiteWizard)(THIS_ ISuiteWizard FAR* FAR* ppSuiteWizard) PURE;
    STDMETHOD(get_SuiteDialogs)(THIS_ ISuiteDialogs FAR* FAR* ppSuiteDialogs) PURE;
    STDMETHOD(get_Releases)(THIS_ ISuiteReleases FAR* FAR* ppSuiteReleases) PURE;
    STDMETHOD(get_RuntimeXml)(THIS_ BSTR FAR* pbstrFilePath) PURE;
    STDMETHOD(AddDialog)(THIS_ BSTR strDialogName, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(CopyDialog)(THIS_ ISuiteDialog FAR* pSourceDialog, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(get_SuiteStyles)(THIS_ ISuiteUIStyles FAR* FAR* ppSuiteStyles) PURE;
    STDMETHOD(get_SuiteBrushes)(THIS_ ISuiteUIBrushes FAR* FAR* ppSuiteBrushes) PURE;
    STDMETHOD(get_EnableSwidtag)(THIS_ VARIANT_BOOL FAR* vbEnable) PURE;
    STDMETHOD(put_EnableSwidtag)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR FAR* bstrValue) PURE;
    STDMETHOD(put_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR bstrValue) PURE;
    STDMETHOD(get_SwidtagSystemComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagSystemComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(get_SwidtagLocalComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagLocalComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(RenameSwidtagSystemComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(RenameSwidtagLocalComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(get_SuiteAbortConditions)(THIS_ ISuiteAbortConditions FAR* FAR* ppConditions) PURE;
#endif

    /* IProjectRootOpus methods */
    STDMETHOD(CheckProjectVersion)(THIS_ EnumProjectVersion FAR* pVal) PURE;
    STDMETHOD(ImportPrerequisite)(THIS_ BSTR bstrPrqFile, IImportPrereqEvents FAR* pEventSink) PURE;
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;
    STDMETHOD(get_EnableSwidtagSCCM)(THIS_ VARIANT_BOOL FAR* pvbEnable) PURE;
    STDMETHOD(put_EnableSwidtagSCCM)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_SwidtagPropertyEx)(THIS_ EnumSwidtagProperty eProp, BSTR bstrDefault, BSTR FAR* bstrValue) PURE;
    STDMETHOD(IsUniqueName)(THIS_ BSTR bstrTableName, BSTR bstrColumnName, BSTR bstrName, VARIANT_BOOL FAR* vbUniqueName) PURE;
    STDMETHOD(AddLocalizedEula)(THIS) PURE;
};

DEFINE_GUID(IID_IProjectRootPunk,0x2EDB3AD8L,0xCFF5,0x4FD4,0x8E,0x0D,0x9B,0x0A,0xD1,0x03,0xE1,0x0E);

/* Definition of interface: IProjectRootPunk */
#undef INTERFACE
#define INTERFACE IProjectRootPunk

DECLARE_INTERFACE_(IProjectRootPunk, IProjectRootOpus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;

    /* IProjectRootIna methods */
    STDMETHOD(ResolveStringIdForActiveLanguage)(THIS_ BSTR bstrStringId, VARIANT_BOOL FAR* vbFoundStringId, BSTR FAR* bstrResolvedValue) PURE;

    /* IProjectRootIronwood methods */
    STDMETHOD(get_RuntimeTheme)(THIS_ BSTR FAR* pbstrTheme) PURE;
    STDMETHOD(put_RuntimeTheme)(THIS_ BSTR bstrTheme) PURE;
    STDMETHOD(put_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL vbEnableUpdateService, BSTR bstrVersio) PURE;
    STDMETHOD(get_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService, BSTR FAR* pbstrVersion) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* ppShortcuts) PURE;

    /* IProjectRootJustice methods */
    STDMETHOD(get_ChainPackages)(THIS_ IChainPackages FAR* FAR* ppPackages) PURE;

    /* IProjectRootLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppIisItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppIisWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* pIisAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppIisWebServiceExtensions) PURE;
    STDMETHOD(get_RequireAdmin)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_RequireAdmin)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ISLockPermissions)(THIS_ BSTR LockObject, IISLockPermissions FAR* FAR* pISLockPermissions) PURE;
    STDMETHOD(get_SearchReplaceSets)(THIS_ ISearchReplaceSets FAR* FAR* pSearchReplaceSets) PURE;
    STDMETHOD(get_ActionTexts)(THIS_ IActionTexts FAR* FAR* pActionTexts) PURE;
    STDMETHOD(get_LockPermissionMode)(THIS_ EnumLockPermissionMode FAR* eVal) PURE;
    STDMETHOD(put_LockPermissionMode)(THIS_ EnumLockPermissionMode eVal) PURE;
    STDMETHOD(ConvertLockPermissions)(THIS_ EnumLockPermissionMode eFromTable, EnumLockPermissionMode eToTable) PURE;
    STDMETHOD(get_ViewFilter)(THIS_ BSTR FAR* pbstrFilter) PURE;
    STDMETHOD(put_ViewFilter)(THIS_ BSTR bstrFilter) PURE;
    STDMETHOD(get_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL FAR* pvbValue) PURE;
    STDMETHOD(put_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL vbValue) PURE;
    STDMETHOD(GetTextStyle)(THIS_ BSTR bstrName, BSTR bstrFaceName, long lSize, long lColor, long lStyleBits, VARIANT_BOOL vbCreateIfNotExists, ITextStyle FAR* FAR* ppTextStyle) PURE;
    STDMETHOD(get_LinkerOption)(THIS_ BSTR bstrLibraryPath, ILinkerOption FAR* FAR* ppVal) PURE;

    /* IProjectRootJack methods */
    STDMETHOD(get_MsiLockPermissionsExs)(THIS_ BSTR LockObject, BSTR Table, IMsiLockPermissionsExs FAR* FAR* pLockPermissions) PURE;

    /* IProjectRootMajesty methods */
    STDMETHOD(put_DialogSizeType)(THIS_ EnumDialogSizeType eDialogSizeType) PURE;
    STDMETHOD(get_DialogSizeType)(THIS_ EnumDialogSizeType FAR* peDialogSizeType) PURE;

    /* IProjectRootNeo methods */
    STDMETHOD(get_SuitePackages)(THIS_ ISuitePackages FAR* FAR* ppSuitePackages) PURE;
    STDMETHOD(get_SuiteFeatures)(THIS_ ISuiteFeatures FAR* FAR* ppSuiteFeatures) PURE;
    STDMETHOD(get_Dims)(THIS_ IDimRefs FAR* FAR* ppDims) PURE;
    STDMETHOD(get_SuiteWizard)(THIS_ ISuiteWizard FAR* FAR* ppSuiteWizard) PURE;
    STDMETHOD(get_SuiteDialogs)(THIS_ ISuiteDialogs FAR* FAR* ppSuiteDialogs) PURE;
    STDMETHOD(get_Releases)(THIS_ ISuiteReleases FAR* FAR* ppSuiteReleases) PURE;
    STDMETHOD(get_RuntimeXml)(THIS_ BSTR FAR* pbstrFilePath) PURE;
    STDMETHOD(AddDialog)(THIS_ BSTR strDialogName, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(CopyDialog)(THIS_ ISuiteDialog FAR* pSourceDialog, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(get_SuiteStyles)(THIS_ ISuiteUIStyles FAR* FAR* ppSuiteStyles) PURE;
    STDMETHOD(get_SuiteBrushes)(THIS_ ISuiteUIBrushes FAR* FAR* ppSuiteBrushes) PURE;
    STDMETHOD(get_EnableSwidtag)(THIS_ VARIANT_BOOL FAR* vbEnable) PURE;
    STDMETHOD(put_EnableSwidtag)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR FAR* bstrValue) PURE;
    STDMETHOD(put_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR bstrValue) PURE;
    STDMETHOD(get_SwidtagSystemComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagSystemComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(get_SwidtagLocalComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagLocalComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(RenameSwidtagSystemComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(RenameSwidtagLocalComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(get_SuiteAbortConditions)(THIS_ ISuiteAbortConditions FAR* FAR* ppConditions) PURE;

    /* IProjectRootOpus methods */
    STDMETHOD(CheckProjectVersion)(THIS_ EnumProjectVersion FAR* pVal) PURE;
    STDMETHOD(ImportPrerequisite)(THIS_ BSTR bstrPrqFile, IImportPrereqEvents FAR* pEventSink) PURE;
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;
    STDMETHOD(get_EnableSwidtagSCCM)(THIS_ VARIANT_BOOL FAR* pvbEnable) PURE;
    STDMETHOD(put_EnableSwidtagSCCM)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_SwidtagPropertyEx)(THIS_ EnumSwidtagProperty eProp, BSTR bstrDefault, BSTR FAR* bstrValue) PURE;
    STDMETHOD(IsUniqueName)(THIS_ BSTR bstrTableName, BSTR bstrColumnName, BSTR bstrName, VARIANT_BOOL FAR* vbUniqueName) PURE;
    STDMETHOD(AddLocalizedEula)(THIS) PURE;
#endif

    /* IProjectRootPunk methods */
    STDMETHOD(get_SuiteActions)(THIS_ ISuiteActions FAR* FAR* ppActions) PURE;
    STDMETHOD(get_SuiteActionRefs)(THIS_ EnumSuiteEvent eSuiteEvent, VARIANT_BOOL vbCreate, ISuiteActionRefs FAR* FAR* ppActionRefs) PURE;
};

DEFINE_GUID(IID_IProjectRootPunkSP1,0x885B9D6DL,0x070A,0x41EF,0x80,0x48,0x6B,0x8B,0x8D,0x28,0xE2,0x10);

/* Definition of interface: IProjectRootPunkSP1 */
#undef INTERFACE
#define INTERFACE IProjectRootPunkSP1

DECLARE_INTERFACE_(IProjectRootPunkSP1, IProjectRootPunk)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;

    /* IProjectRootIna methods */
    STDMETHOD(ResolveStringIdForActiveLanguage)(THIS_ BSTR bstrStringId, VARIANT_BOOL FAR* vbFoundStringId, BSTR FAR* bstrResolvedValue) PURE;

    /* IProjectRootIronwood methods */
    STDMETHOD(get_RuntimeTheme)(THIS_ BSTR FAR* pbstrTheme) PURE;
    STDMETHOD(put_RuntimeTheme)(THIS_ BSTR bstrTheme) PURE;
    STDMETHOD(put_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL vbEnableUpdateService, BSTR bstrVersio) PURE;
    STDMETHOD(get_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService, BSTR FAR* pbstrVersion) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* ppShortcuts) PURE;

    /* IProjectRootJustice methods */
    STDMETHOD(get_ChainPackages)(THIS_ IChainPackages FAR* FAR* ppPackages) PURE;

    /* IProjectRootLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppIisItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppIisWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* pIisAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppIisWebServiceExtensions) PURE;
    STDMETHOD(get_RequireAdmin)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_RequireAdmin)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ISLockPermissions)(THIS_ BSTR LockObject, IISLockPermissions FAR* FAR* pISLockPermissions) PURE;
    STDMETHOD(get_SearchReplaceSets)(THIS_ ISearchReplaceSets FAR* FAR* pSearchReplaceSets) PURE;
    STDMETHOD(get_ActionTexts)(THIS_ IActionTexts FAR* FAR* pActionTexts) PURE;
    STDMETHOD(get_LockPermissionMode)(THIS_ EnumLockPermissionMode FAR* eVal) PURE;
    STDMETHOD(put_LockPermissionMode)(THIS_ EnumLockPermissionMode eVal) PURE;
    STDMETHOD(ConvertLockPermissions)(THIS_ EnumLockPermissionMode eFromTable, EnumLockPermissionMode eToTable) PURE;
    STDMETHOD(get_ViewFilter)(THIS_ BSTR FAR* pbstrFilter) PURE;
    STDMETHOD(put_ViewFilter)(THIS_ BSTR bstrFilter) PURE;
    STDMETHOD(get_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL FAR* pvbValue) PURE;
    STDMETHOD(put_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL vbValue) PURE;
    STDMETHOD(GetTextStyle)(THIS_ BSTR bstrName, BSTR bstrFaceName, long lSize, long lColor, long lStyleBits, VARIANT_BOOL vbCreateIfNotExists, ITextStyle FAR* FAR* ppTextStyle) PURE;
    STDMETHOD(get_LinkerOption)(THIS_ BSTR bstrLibraryPath, ILinkerOption FAR* FAR* ppVal) PURE;

    /* IProjectRootJack methods */
    STDMETHOD(get_MsiLockPermissionsExs)(THIS_ BSTR LockObject, BSTR Table, IMsiLockPermissionsExs FAR* FAR* pLockPermissions) PURE;

    /* IProjectRootMajesty methods */
    STDMETHOD(put_DialogSizeType)(THIS_ EnumDialogSizeType eDialogSizeType) PURE;
    STDMETHOD(get_DialogSizeType)(THIS_ EnumDialogSizeType FAR* peDialogSizeType) PURE;

    /* IProjectRootNeo methods */
    STDMETHOD(get_SuitePackages)(THIS_ ISuitePackages FAR* FAR* ppSuitePackages) PURE;
    STDMETHOD(get_SuiteFeatures)(THIS_ ISuiteFeatures FAR* FAR* ppSuiteFeatures) PURE;
    STDMETHOD(get_Dims)(THIS_ IDimRefs FAR* FAR* ppDims) PURE;
    STDMETHOD(get_SuiteWizard)(THIS_ ISuiteWizard FAR* FAR* ppSuiteWizard) PURE;
    STDMETHOD(get_SuiteDialogs)(THIS_ ISuiteDialogs FAR* FAR* ppSuiteDialogs) PURE;
    STDMETHOD(get_Releases)(THIS_ ISuiteReleases FAR* FAR* ppSuiteReleases) PURE;
    STDMETHOD(get_RuntimeXml)(THIS_ BSTR FAR* pbstrFilePath) PURE;
    STDMETHOD(AddDialog)(THIS_ BSTR strDialogName, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(CopyDialog)(THIS_ ISuiteDialog FAR* pSourceDialog, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(get_SuiteStyles)(THIS_ ISuiteUIStyles FAR* FAR* ppSuiteStyles) PURE;
    STDMETHOD(get_SuiteBrushes)(THIS_ ISuiteUIBrushes FAR* FAR* ppSuiteBrushes) PURE;
    STDMETHOD(get_EnableSwidtag)(THIS_ VARIANT_BOOL FAR* vbEnable) PURE;
    STDMETHOD(put_EnableSwidtag)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR FAR* bstrValue) PURE;
    STDMETHOD(put_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR bstrValue) PURE;
    STDMETHOD(get_SwidtagSystemComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagSystemComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(get_SwidtagLocalComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagLocalComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(RenameSwidtagSystemComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(RenameSwidtagLocalComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(get_SuiteAbortConditions)(THIS_ ISuiteAbortConditions FAR* FAR* ppConditions) PURE;

    /* IProjectRootOpus methods */
    STDMETHOD(CheckProjectVersion)(THIS_ EnumProjectVersion FAR* pVal) PURE;
    STDMETHOD(ImportPrerequisite)(THIS_ BSTR bstrPrqFile, IImportPrereqEvents FAR* pEventSink) PURE;
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;
    STDMETHOD(get_EnableSwidtagSCCM)(THIS_ VARIANT_BOOL FAR* pvbEnable) PURE;
    STDMETHOD(put_EnableSwidtagSCCM)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_SwidtagPropertyEx)(THIS_ EnumSwidtagProperty eProp, BSTR bstrDefault, BSTR FAR* bstrValue) PURE;
    STDMETHOD(IsUniqueName)(THIS_ BSTR bstrTableName, BSTR bstrColumnName, BSTR bstrName, VARIANT_BOOL FAR* vbUniqueName) PURE;
    STDMETHOD(AddLocalizedEula)(THIS) PURE;

    /* IProjectRootPunk methods */
    STDMETHOD(get_SuiteActions)(THIS_ ISuiteActions FAR* FAR* ppActions) PURE;
    STDMETHOD(get_SuiteActionRefs)(THIS_ EnumSuiteEvent eSuiteEvent, VARIANT_BOOL vbCreate, ISuiteActionRefs FAR* FAR* ppActionRefs) PURE;
#endif

    /* IProjectRootPunkSP1 methods */
    STDMETHOD(get_SuiteControlThemes)(THIS_ ISuiteUIControlThemes FAR* FAR* ppControlThemes) PURE;
};

DEFINE_GUID(IID_IProjectRootQi,0xDCFB2008L,0x9108,0x4CBF,0xB5,0x90,0xDA,0x37,0x86,0xBB,0x55,0x40);

/* Definition of interface: IProjectRootQi */
#undef INTERFACE
#define INTERFACE IProjectRootQi

DECLARE_INTERFACE_(IProjectRootQi, IProjectRootPunkSP1)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;

    /* IProjectRootIna methods */
    STDMETHOD(ResolveStringIdForActiveLanguage)(THIS_ BSTR bstrStringId, VARIANT_BOOL FAR* vbFoundStringId, BSTR FAR* bstrResolvedValue) PURE;

    /* IProjectRootIronwood methods */
    STDMETHOD(get_RuntimeTheme)(THIS_ BSTR FAR* pbstrTheme) PURE;
    STDMETHOD(put_RuntimeTheme)(THIS_ BSTR bstrTheme) PURE;
    STDMETHOD(put_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL vbEnableUpdateService, BSTR bstrVersio) PURE;
    STDMETHOD(get_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService, BSTR FAR* pbstrVersion) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* ppShortcuts) PURE;

    /* IProjectRootJustice methods */
    STDMETHOD(get_ChainPackages)(THIS_ IChainPackages FAR* FAR* ppPackages) PURE;

    /* IProjectRootLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppIisItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppIisWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* pIisAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppIisWebServiceExtensions) PURE;
    STDMETHOD(get_RequireAdmin)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_RequireAdmin)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ISLockPermissions)(THIS_ BSTR LockObject, IISLockPermissions FAR* FAR* pISLockPermissions) PURE;
    STDMETHOD(get_SearchReplaceSets)(THIS_ ISearchReplaceSets FAR* FAR* pSearchReplaceSets) PURE;
    STDMETHOD(get_ActionTexts)(THIS_ IActionTexts FAR* FAR* pActionTexts) PURE;
    STDMETHOD(get_LockPermissionMode)(THIS_ EnumLockPermissionMode FAR* eVal) PURE;
    STDMETHOD(put_LockPermissionMode)(THIS_ EnumLockPermissionMode eVal) PURE;
    STDMETHOD(ConvertLockPermissions)(THIS_ EnumLockPermissionMode eFromTable, EnumLockPermissionMode eToTable) PURE;
    STDMETHOD(get_ViewFilter)(THIS_ BSTR FAR* pbstrFilter) PURE;
    STDMETHOD(put_ViewFilter)(THIS_ BSTR bstrFilter) PURE;
    STDMETHOD(get_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL FAR* pvbValue) PURE;
    STDMETHOD(put_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL vbValue) PURE;
    STDMETHOD(GetTextStyle)(THIS_ BSTR bstrName, BSTR bstrFaceName, long lSize, long lColor, long lStyleBits, VARIANT_BOOL vbCreateIfNotExists, ITextStyle FAR* FAR* ppTextStyle) PURE;
    STDMETHOD(get_LinkerOption)(THIS_ BSTR bstrLibraryPath, ILinkerOption FAR* FAR* ppVal) PURE;

    /* IProjectRootJack methods */
    STDMETHOD(get_MsiLockPermissionsExs)(THIS_ BSTR LockObject, BSTR Table, IMsiLockPermissionsExs FAR* FAR* pLockPermissions) PURE;

    /* IProjectRootMajesty methods */
    STDMETHOD(put_DialogSizeType)(THIS_ EnumDialogSizeType eDialogSizeType) PURE;
    STDMETHOD(get_DialogSizeType)(THIS_ EnumDialogSizeType FAR* peDialogSizeType) PURE;

    /* IProjectRootNeo methods */
    STDMETHOD(get_SuitePackages)(THIS_ ISuitePackages FAR* FAR* ppSuitePackages) PURE;
    STDMETHOD(get_SuiteFeatures)(THIS_ ISuiteFeatures FAR* FAR* ppSuiteFeatures) PURE;
    STDMETHOD(get_Dims)(THIS_ IDimRefs FAR* FAR* ppDims) PURE;
    STDMETHOD(get_SuiteWizard)(THIS_ ISuiteWizard FAR* FAR* ppSuiteWizard) PURE;
    STDMETHOD(get_SuiteDialogs)(THIS_ ISuiteDialogs FAR* FAR* ppSuiteDialogs) PURE;
    STDMETHOD(get_Releases)(THIS_ ISuiteReleases FAR* FAR* ppSuiteReleases) PURE;
    STDMETHOD(get_RuntimeXml)(THIS_ BSTR FAR* pbstrFilePath) PURE;
    STDMETHOD(AddDialog)(THIS_ BSTR strDialogName, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(CopyDialog)(THIS_ ISuiteDialog FAR* pSourceDialog, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(get_SuiteStyles)(THIS_ ISuiteUIStyles FAR* FAR* ppSuiteStyles) PURE;
    STDMETHOD(get_SuiteBrushes)(THIS_ ISuiteUIBrushes FAR* FAR* ppSuiteBrushes) PURE;
    STDMETHOD(get_EnableSwidtag)(THIS_ VARIANT_BOOL FAR* vbEnable) PURE;
    STDMETHOD(put_EnableSwidtag)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR FAR* bstrValue) PURE;
    STDMETHOD(put_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR bstrValue) PURE;
    STDMETHOD(get_SwidtagSystemComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagSystemComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(get_SwidtagLocalComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagLocalComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(RenameSwidtagSystemComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(RenameSwidtagLocalComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(get_SuiteAbortConditions)(THIS_ ISuiteAbortConditions FAR* FAR* ppConditions) PURE;

    /* IProjectRootOpus methods */
    STDMETHOD(CheckProjectVersion)(THIS_ EnumProjectVersion FAR* pVal) PURE;
    STDMETHOD(ImportPrerequisite)(THIS_ BSTR bstrPrqFile, IImportPrereqEvents FAR* pEventSink) PURE;
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;
    STDMETHOD(get_EnableSwidtagSCCM)(THIS_ VARIANT_BOOL FAR* pvbEnable) PURE;
    STDMETHOD(put_EnableSwidtagSCCM)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_SwidtagPropertyEx)(THIS_ EnumSwidtagProperty eProp, BSTR bstrDefault, BSTR FAR* bstrValue) PURE;
    STDMETHOD(IsUniqueName)(THIS_ BSTR bstrTableName, BSTR bstrColumnName, BSTR bstrName, VARIANT_BOOL FAR* vbUniqueName) PURE;
    STDMETHOD(AddLocalizedEula)(THIS) PURE;

    /* IProjectRootPunk methods */
    STDMETHOD(get_SuiteActions)(THIS_ ISuiteActions FAR* FAR* ppActions) PURE;
    STDMETHOD(get_SuiteActionRefs)(THIS_ EnumSuiteEvent eSuiteEvent, VARIANT_BOOL vbCreate, ISuiteActionRefs FAR* FAR* ppActionRefs) PURE;

    /* IProjectRootPunkSP1 methods */
    STDMETHOD(get_SuiteControlThemes)(THIS_ ISuiteUIControlThemes FAR* FAR* ppControlThemes) PURE;
#endif

    /* IProjectRootQi methods */
    STDMETHOD(get_SetupRootFolder)(THIS_ EnumSetupFolderType eType, ISetupFolder FAR* FAR* ppVal) PURE;
};

DEFINE_GUID(IID_IProjectRootRipley,0x82737AB6L,0x2E34,0x4EE4,0x80,0x9E,0x08,0xE8,0x42,0xC5,0x7F,0x71);

/* Definition of interface: IProjectRootRipley */
#undef INTERFACE
#define INTERFACE IProjectRootRipley

DECLARE_INTERFACE_(IProjectRootRipley, IProjectRootQi)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;

    /* IProjectRootIna methods */
    STDMETHOD(ResolveStringIdForActiveLanguage)(THIS_ BSTR bstrStringId, VARIANT_BOOL FAR* vbFoundStringId, BSTR FAR* bstrResolvedValue) PURE;

    /* IProjectRootIronwood methods */
    STDMETHOD(get_RuntimeTheme)(THIS_ BSTR FAR* pbstrTheme) PURE;
    STDMETHOD(put_RuntimeTheme)(THIS_ BSTR bstrTheme) PURE;
    STDMETHOD(put_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL vbEnableUpdateService, BSTR bstrVersio) PURE;
    STDMETHOD(get_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService, BSTR FAR* pbstrVersion) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* ppShortcuts) PURE;

    /* IProjectRootJustice methods */
    STDMETHOD(get_ChainPackages)(THIS_ IChainPackages FAR* FAR* ppPackages) PURE;

    /* IProjectRootLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppIisItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppIisWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* pIisAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppIisWebServiceExtensions) PURE;
    STDMETHOD(get_RequireAdmin)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_RequireAdmin)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ISLockPermissions)(THIS_ BSTR LockObject, IISLockPermissions FAR* FAR* pISLockPermissions) PURE;
    STDMETHOD(get_SearchReplaceSets)(THIS_ ISearchReplaceSets FAR* FAR* pSearchReplaceSets) PURE;
    STDMETHOD(get_ActionTexts)(THIS_ IActionTexts FAR* FAR* pActionTexts) PURE;
    STDMETHOD(get_LockPermissionMode)(THIS_ EnumLockPermissionMode FAR* eVal) PURE;
    STDMETHOD(put_LockPermissionMode)(THIS_ EnumLockPermissionMode eVal) PURE;
    STDMETHOD(ConvertLockPermissions)(THIS_ EnumLockPermissionMode eFromTable, EnumLockPermissionMode eToTable) PURE;
    STDMETHOD(get_ViewFilter)(THIS_ BSTR FAR* pbstrFilter) PURE;
    STDMETHOD(put_ViewFilter)(THIS_ BSTR bstrFilter) PURE;
    STDMETHOD(get_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL FAR* pvbValue) PURE;
    STDMETHOD(put_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL vbValue) PURE;
    STDMETHOD(GetTextStyle)(THIS_ BSTR bstrName, BSTR bstrFaceName, long lSize, long lColor, long lStyleBits, VARIANT_BOOL vbCreateIfNotExists, ITextStyle FAR* FAR* ppTextStyle) PURE;
    STDMETHOD(get_LinkerOption)(THIS_ BSTR bstrLibraryPath, ILinkerOption FAR* FAR* ppVal) PURE;

    /* IProjectRootJack methods */
    STDMETHOD(get_MsiLockPermissionsExs)(THIS_ BSTR LockObject, BSTR Table, IMsiLockPermissionsExs FAR* FAR* pLockPermissions) PURE;

    /* IProjectRootMajesty methods */
    STDMETHOD(put_DialogSizeType)(THIS_ EnumDialogSizeType eDialogSizeType) PURE;
    STDMETHOD(get_DialogSizeType)(THIS_ EnumDialogSizeType FAR* peDialogSizeType) PURE;

    /* IProjectRootNeo methods */
    STDMETHOD(get_SuitePackages)(THIS_ ISuitePackages FAR* FAR* ppSuitePackages) PURE;
    STDMETHOD(get_SuiteFeatures)(THIS_ ISuiteFeatures FAR* FAR* ppSuiteFeatures) PURE;
    STDMETHOD(get_Dims)(THIS_ IDimRefs FAR* FAR* ppDims) PURE;
    STDMETHOD(get_SuiteWizard)(THIS_ ISuiteWizard FAR* FAR* ppSuiteWizard) PURE;
    STDMETHOD(get_SuiteDialogs)(THIS_ ISuiteDialogs FAR* FAR* ppSuiteDialogs) PURE;
    STDMETHOD(get_Releases)(THIS_ ISuiteReleases FAR* FAR* ppSuiteReleases) PURE;
    STDMETHOD(get_RuntimeXml)(THIS_ BSTR FAR* pbstrFilePath) PURE;
    STDMETHOD(AddDialog)(THIS_ BSTR strDialogName, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(CopyDialog)(THIS_ ISuiteDialog FAR* pSourceDialog, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(get_SuiteStyles)(THIS_ ISuiteUIStyles FAR* FAR* ppSuiteStyles) PURE;
    STDMETHOD(get_SuiteBrushes)(THIS_ ISuiteUIBrushes FAR* FAR* ppSuiteBrushes) PURE;
    STDMETHOD(get_EnableSwidtag)(THIS_ VARIANT_BOOL FAR* vbEnable) PURE;
    STDMETHOD(put_EnableSwidtag)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR FAR* bstrValue) PURE;
    STDMETHOD(put_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR bstrValue) PURE;
    STDMETHOD(get_SwidtagSystemComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagSystemComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(get_SwidtagLocalComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagLocalComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(RenameSwidtagSystemComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(RenameSwidtagLocalComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(get_SuiteAbortConditions)(THIS_ ISuiteAbortConditions FAR* FAR* ppConditions) PURE;

    /* IProjectRootOpus methods */
    STDMETHOD(CheckProjectVersion)(THIS_ EnumProjectVersion FAR* pVal) PURE;
    STDMETHOD(ImportPrerequisite)(THIS_ BSTR bstrPrqFile, IImportPrereqEvents FAR* pEventSink) PURE;
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;
    STDMETHOD(get_EnableSwidtagSCCM)(THIS_ VARIANT_BOOL FAR* pvbEnable) PURE;
    STDMETHOD(put_EnableSwidtagSCCM)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_SwidtagPropertyEx)(THIS_ EnumSwidtagProperty eProp, BSTR bstrDefault, BSTR FAR* bstrValue) PURE;
    STDMETHOD(IsUniqueName)(THIS_ BSTR bstrTableName, BSTR bstrColumnName, BSTR bstrName, VARIANT_BOOL FAR* vbUniqueName) PURE;
    STDMETHOD(AddLocalizedEula)(THIS) PURE;

    /* IProjectRootPunk methods */
    STDMETHOD(get_SuiteActions)(THIS_ ISuiteActions FAR* FAR* ppActions) PURE;
    STDMETHOD(get_SuiteActionRefs)(THIS_ EnumSuiteEvent eSuiteEvent, VARIANT_BOOL vbCreate, ISuiteActionRefs FAR* FAR* ppActionRefs) PURE;

    /* IProjectRootPunkSP1 methods */
    STDMETHOD(get_SuiteControlThemes)(THIS_ ISuiteUIControlThemes FAR* FAR* ppControlThemes) PURE;

    /* IProjectRootQi methods */
    STDMETHOD(get_SetupRootFolder)(THIS_ EnumSetupFolderType eType, ISetupFolder FAR* FAR* ppVal) PURE;
#endif

    /* IProjectRootRipley methods */
    STDMETHOD(SetStringEntryValue)(THIS_ BSTR bstrStringId, BSTR bstrStringValue, BSTR bstrLangId, VARIANT_BOOL vbCreateIfMissing, BSTR FAR* pbstrNewStringId) PURE;
    STDMETHOD(get_DefaultFeature)(THIS_ IFeature FAR* FAR* ppFearure) PURE;
    STDMETHOD(put_DefaultFeature)(THIS_ IFeature FAR* pFearure) PURE;
};

DEFINE_GUID(IID_IProjectRootSecret,0x4C8FC3E5L,0x6B0B,0x44E7,0x98,0x52,0x9A,0xC1,0x01,0xF9,0x30,0xD1);

/* Definition of interface: IProjectRootSecret */
#undef INTERFACE
#define INTERFACE IProjectRootSecret

DECLARE_INTERFACE_(IProjectRootSecret, IProjectRootRipley)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectRoot methods */
    STDMETHOD(AddChild)(THIS_ EnumProjectChild epProject, BSTR strName, VARIANT strUniqueKey, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(get_ActiveProduct)(THIS_ IProduct FAR* FAR* pProduct) PURE;
    STDMETHOD(get_Products)(THIS_ IProducts FAR* FAR* pProducts) PURE;
    STDMETHOD(get_Components)(THIS_ IComponents FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Languages)(THIS_ ILanguages FAR* FAR* pLanguages) PURE;
    STDMETHOD(get_PathVariableSets)(THIS_ IPathVariableSets FAR* FAR* pPathVariableSets) PURE;
    STDMETHOD(get_Properties)(THIS_ IProperties FAR* FAR* pProperties) PURE;
    STDMETHOD(get_Directories)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Errors)(THIS_ IErrors FAR* FAR* pErrors) PURE;
    STDMETHOD(get_UITextStrings)(THIS_ IUITextStrings FAR* FAR* pTextStrings) PURE;
    STDMETHOD(get_ActiveLanguageId)(THIS_ BSTR FAR* sLanguageId) PURE;
    STDMETHOD(put_ActiveLanguageId)(THIS_ BSTR sLanguageId) PURE;
    STDMETHOD(LookupString)(THIS_ BSTR strId, VARIANT lLangId, BSTR FAR* bstr) PURE;
    STDMETHOD(GetUniqueStringID)(THIS_ BSTR FAR* strId) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* Name) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR Name) PURE;
    STDMETHOD(get_CompanyName)(THIS_ BSTR FAR* CompanyName) PURE;
    STDMETHOD(put_CompanyName)(THIS_ BSTR CompanyName) PURE;
    STDMETHOD(get_Owner)(THIS_ BSTR FAR* Owner) PURE;
    STDMETHOD(put_Owner)(THIS_ BSTR Owner) PURE;
    STDMETHOD(get_Comments)(THIS_ BSTR FAR* Comments) PURE;
    STDMETHOD(put_Comments)(THIS_ BSTR Comments) PURE;
    STDMETHOD(get_CompanyURL)(THIS_ BSTR FAR* CompanyURL) PURE;
    STDMETHOD(put_CompanyURL)(THIS_ BSTR CompanyURL) PURE;
    STDMETHOD(get_CompanyPhone)(THIS_ BSTR FAR* CompanyPhone) PURE;
    STDMETHOD(put_CompanyPhone)(THIS_ BSTR CompanyPhone) PURE;
    STDMETHOD(get_DateCreated)(THIS_ BSTR FAR* Created) PURE;
    STDMETHOD(put_DateCreated)(THIS_ BSTR DateCreated) PURE;
    STDMETHOD(get_LastModified)(THIS_ BSTR FAR* LastModified) PURE;
    STDMETHOD(put_LastModified)(THIS_ BSTR LastModified) PURE;
    STDMETHOD(get_Version)(THIS_ BSTR FAR* Version) PURE;
    STDMETHOD(put_Version)(THIS_ BSTR Version) PURE;
    STDMETHOD(get_Bootstrapper)(THIS_ VARIANT_BOOL FAR* Bootstrapper) PURE;
    STDMETHOD(put_Bootstrapper)(THIS_ VARIANT_BOOL Bootstrapper) PURE;
    STDMETHOD(get_ActivePathVariableSet)(THIS_ IPathVariableSet FAR* FAR* PathVariableSet) PURE;
    STDMETHOD(get_Type)(THIS_ EnumProjectType FAR* Type) PURE;
    STDMETHOD(put_Type)(THIS_ EnumProjectType Type) PURE;
    STDMETHOD(get_Dialogs)(THIS_ IDialogs FAR* FAR* pDialogs) PURE;
    STDMETHOD(get_ComboBoxes)(THIS_ IComboBoxes FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_CheckBoxes)(THIS_ ICheckBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_ListViews)(THIS_ IListViews FAR* FAR* pComboBoxes) PURE;
    STDMETHOD(get_ListBoxes)(THIS_ IListBoxes FAR* FAR* pCheckBoxes) PURE;
    STDMETHOD(get_CustomActions)(THIS_ ICustomActions FAR* FAR* pCustomActions) PURE;
    STDMETHOD(get_TextStyles)(THIS_ ITextStyles FAR* FAR* pTextStyles) PURE;
    STDMETHOD(get_Actions)(THIS_ IActions FAR* FAR* pActions) PURE;
    STDMETHOD(get_Binaries)(THIS_ IBinaries FAR* FAR* pBinaries) PURE;
    STDMETHOD(get_BuildLabels)(THIS_ IBuildLabels FAR* FAR* pBuildLabels) PURE;
    STDMETHOD(get_ScriptFiles)(THIS_ IScriptFiles FAR* FAR* pScriptFiles) PURE;
    STDMETHOD(get_LinkerOptions)(THIS_ ILinkerOptions FAR* FAR* pLinkerOptions) PURE;
    STDMETHOD(get_CompilerOption)(THIS_ ICompilerOption FAR* FAR* pCompilerOption) PURE;
    STDMETHOD(get_MergeModules)(THIS_ IMergeModules FAR* FAR* pMergeModules) PURE;
    STDMETHOD(get_Title)(THIS_ BSTR FAR* sTitle) PURE;
    STDMETHOD(put_Title)(THIS_ BSTR sTitle) PURE;
    STDMETHOD(get_Keywords)(THIS_ BSTR FAR* sKeywords) PURE;
    STDMETHOD(put_Keywords)(THIS_ BSTR sKeywords) PURE;
    STDMETHOD(ConvertToPredefinedFolders)(THIS_ BSTR strFolder, BSTR FAR* strPDFolder) PURE;
    STDMETHOD(get_SetupTypes)(THIS_ ISetupTypes FAR* FAR* pSetupTypes) PURE;
    STDMETHOD(get_IniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_MIMETypes)(THIS_ IMIMETypes FAR* FAR* pMIMETypes) PURE;
    STDMETHOD(get_ProgIDs)(THIS_ IProgIDs FAR* FAR* pProgIDs) PURE;
    STDMETHOD(get_ScriptingBillboards)(THIS_ IScriptingBillboards FAR* FAR* pScriptingBillboards) PURE;
    STDMETHOD(get_VisitedViews)(THIS_ IVisitedViews FAR* FAR* pVisitedViews) PURE;
    STDMETHOD(get_DialogLangId)(THIS_ BSTR FAR* sLangId) PURE;
    STDMETHOD(put_DialogLangId)(THIS_ BSTR sLangId) PURE;
    STDMETHOD(get_Radiobuttons)(THIS_ BSTR propertyName, IRadioButtons FAR* FAR* pRadioButtons) PURE;
    STDMETHOD(UtilGetFullPathFromFileKey)(THIS_ BSTR bstrFileKey, BSTR FAR* bstrFullPath) PURE;
    STDMETHOD(get_FlatIniFiles)(THIS_ IFlatIniFiles FAR* FAR* pFlatIniFiles) PURE;
    STDMETHOD(AddIniFile)(THIS_ BSTR sCompNodeKey, IIniFile FAR* FAR* pRet) PURE;
    STDMETHOD(UtilGetPathFromFileKey)(THIS_ BSTR bstrFileKey, EnumPathType eType, BSTR FAR* bstrPath) PURE;
    STDMETHOD(get_CheckedODBCComponents)(THIS_ ICheckedODBCComponents FAR* FAR* pRet) PURE;
    STDMETHOD(put_SccEnabled)(THIS_ VARIANT_BOOL bVal) PURE;
    STDMETHOD(get_SccEnabled)(THIS_ VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(put_SccPath)(THIS_ BSTR bstrSccPath) PURE;
    STDMETHOD(get_SccPath)(THIS_ BSTR FAR* bstrSccPath) PURE;
    STDMETHOD(get_MsiLogFile)(THIS_ BSTR FAR* sMsiLogFile) PURE;
    STDMETHOD(put_MsiLogFile)(THIS_ BSTR sMsiLogFile) PURE;
    STDMETHOD(get_MsiExecCmdLineOptions)(THIS_ BSTR FAR* sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_MsiExecCmdLineOptions)(THIS_ BSTR sMsiExecCmdLineOptions) PURE;
    STDMETHOD(put_SccDatabasePath)(THIS_ BSTR bstrSccDatabasePath) PURE;
    STDMETHOD(get_SccDatabasePath)(THIS_ BSTR FAR* bstrSccDatabasePath) PURE;
    STDMETHOD(IsComponentUnique)(THIS_ BSTR bstrComponentName, VARIANT_BOOL FAR* bVal) PURE;
    STDMETHOD(GetComponentFromKey)(THIS_ IDispatch * pStoreHandle, BSTR strKey, IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_Environments)(THIS_ IEnvironments FAR* FAR* pEnvironments) PURE;
    STDMETHOD(get_UpgradeEntries)(THIS_ IUpgradeEntries FAR* FAR* pUpgradeEntries) PURE;
    STDMETHOD(get_TempFiles)(THIS_ ITempFiles FAR* FAR* ppTempFiles) PURE;
    STDMETHOD(get_AppSearches)(THIS_ IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators)(THIS_ IRegLocators FAR* FAR* ppRegLocators) PURE;

    /* IProjectRoot2 methods */
    STDMETHOD(GetRelease)(THIS_ BSTR sProductConfiguration, BSTR sRelease, VARIANT_BOOL vbCreate, IRelease2 FAR* FAR* ppRelease) PURE;
    STDMETHOD(get_LaunchConditions)(THIS_ ILaunchConditions FAR* FAR* ppLaunchConditions) PURE;
    STDMETHOD(get_AllFiles)(THIS_ IFiles FAR* FAR* ppAllFiles) PURE;
    STDMETHOD(GetUniqueName)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(GetUniqueNameEx)(THIS_ BSTR sTableName, BSTR sColumnName, BSTR sTemplate, VARIANT_BOOL bTryTemplate, VARIANT_BOOL bUseStartNumber, VARIANT_BOOL bMsmKey, BSTR FAR* sRet) PURE;
    STDMETHOD(get_ODBCDrivers)(THIS_ IODBCDrivers FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCDataSources)(THIS_ IODBCDataSources FAR* FAR* pVal) PURE;
    STDMETHOD(get_ODBCTranslators)(THIS_ IODBCTranslators FAR* FAR* pVal) PURE;
    STDMETHOD(get_MMAuthoring)(THIS_ IMMAuthoring FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIdNames)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AppIds)(THIS_ IAppIds FAR* FAR* ppVal) PURE;
    STDMETHOD(InitTemplate)(THIS_ EInitTemplateType eInitTemplateType) PURE;
    STDMETHOD(AddStandardScriptCAs)(THIS_ IUnknown * spUnkScriptingCalback) PURE;
    STDMETHOD(get_DirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_Medias)(THIS_ IMedias FAR* FAR* ppVal) PURE;
    STDMETHOD(put_SISWordCount)(THIS_ short nSISWordCount) PURE;
    STDMETHOD(RemoveEventReferences)(THIS_ VARIANT aryEvents) PURE;
    STDMETHOD(get_ISFeatureExtendeds)(THIS_ IISFeatureExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISComponentExtendeds)(THIS_ IISComponentExtendeds FAR* FAR* ppVal) PURE;
    STDMETHOD(CreateDirectory)(THIS_ BSTR sPath, BSTR FAR* sDir) PURE;
    STDMETHOD(get_Folders)(THIS_ IFolders FAR* FAR* ppVal) PURE;
    STDMETHOD(get_SetupFiles)(THIS_ ISetupFiles FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDLLWrappers)(THIS_ IISDLLWrappers FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISInstallScriptActions)(THIS_ IISInstallScriptActions FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RemoveIniFiles)(THIS_ IIniFiles FAR* FAR* pIniFiles) PURE;
    STDMETHOD(get_ISObjects)(THIS_ IISObjects FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISAliases)(THIS_ IISAliases FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISSelfRegs)(THIS_ IISSelfRegs FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISDisk1Files)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryEntries)(THIS_ IRegistryEntries FAR* FAR* ppEntries) PURE;
    STDMETHOD(get_DynamicFileSelfReg)(THIS_ VARIANT_BOOL FAR* pvbDynamicFileSelfReg) PURE;
    STDMETHOD(get_AllFolders)(THIS_ IDirectories FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_ISStorages)(THIS_ IISStorages FAR* FAR* ppVal) PURE;
    STDMETHOD(StringTableFillIn)(THIS_ BSTR bstrLanguage) PURE;
    STDMETHOD(get_LightRegistry)(THIS_ ILightRegistry FAR* FAR* ppLightRegistry) PURE;
    STDMETHOD(get_LightINI)(THIS_ ILightINI FAR* FAR* ppLightINI) PURE;
    STDMETHOD(get_LightComponent)(THIS_ ILightComponent FAR* FAR* ppLightComponent) PURE;
    STDMETHOD(get_LightFile)(THIS_ ILightFile FAR* FAR* ppLightFile) PURE;
    STDMETHOD(get_ISDotNetSolution)(THIS_ BSTR FAR* bstrISDotNetSolution) PURE;
    STDMETHOD(put_ISDotNetSolution)(THIS_ BSTR bstrISDotNetSolution) PURE;
    STDMETHOD(DeleteAllISDotNetFiles)(THIS) PURE;
    STDMETHOD(get_AllFileNamesInProject)(THIS_ IIsStrings2 FAR* FAR* ppVal) PURE;
    STDMETHOD(get_LockPermissions)(THIS_ BSTR LockObject, ILockPermissions FAR* FAR* pLockPermissions) PURE;
    STDMETHOD(get_EnableUpdateService)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService) PURE;
    STDMETHOD(put_EnableUpdateService)(THIS_ VARIANT_BOOL vbEnableUpdateService) PURE;
    STDMETHOD(get_UseUpdateServiceAutoVersion)(THIS_ VARIANT_BOOL FAR* pvbUseUpdateServiceAutoVersion) PURE;
    STDMETHOD(put_UpdateServiceAutoVersion)(THIS_ BSTR bstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_UpdateServiceAutoVersion)(THIS_ BSTR FAR* pbstrUpdateServiceAutoVersion) PURE;
    STDMETHOD(get_RegisteredWithUpdateService)(THIS_ EUpdateServiceRegistrationStatus FAR* eusrsUpdateServiceRegistrationStatus) PURE;
    STDMETHOD(get_UpdateServiceInterval)(THIS_ BSTR FAR* pbstrUpdateServiceInterval) PURE;
    STDMETHOD(put_UpdateServiceInterval)(THIS_ BSTR bstrUpdateServiceInterval) PURE;
    STDMETHOD(get_Icons)(THIS_ IIcons FAR* FAR* ppIcons) PURE;
    STDMETHOD(get_CreateFolders)(THIS_ ICreateFolders FAR* FAR* pCreateFolders) PURE;
    STDMETHOD(get_IniLocators)(THIS_ VARIANT bstrWhere, IIniLocators FAR* FAR* ppIniLocators) PURE;
    STDMETHOD(get_CompLocators)(THIS_ VARIANT bstrWhere, ICompLocators FAR* FAR* ppCompLocators) PURE;
    STDMETHOD(get_DrLocators)(THIS_ VARIANT bstrWhere, IDrLocators FAR* FAR* ppDrLocators) PURE;
    STDMETHOD(get_Signatures)(THIS_ VARIANT bstrWhere, ISignatures FAR* FAR* ppSignatures) PURE;
    STDMETHOD(get_AppSearches2)(THIS_ VARIANT bstrWhere, IAppSearches FAR* FAR* ppAppSearches) PURE;
    STDMETHOD(get_RegLocators2)(THIS_ VARIANT bstrWhere, IRegLocators FAR* FAR* ppRegLocators) PURE;
    STDMETHOD(get_ISVisitedViews)(THIS_ BSTR FAR* pbstrVisitedViews) PURE;
    STDMETHOD(put_ISVisitedViews)(THIS_ BSTR bstrVisitedViews) PURE;
    STDMETHOD(get_UpgradeMsiItems)(THIS_ IUpgradeMsiItems FAR* FAR* ppUpgradeMsiItems) PURE;
    STDMETHOD(get_OnUpgrade)(THIS_ EnumOnUpgrade FAR* pOnUpgrade) PURE;
    STDMETHOD(put_OnUpgrade)(THIS_ EnumOnUpgrade pOnUpgrade) PURE;
    STDMETHOD(get_VRoots)(THIS_ IVRoots FAR* FAR* ppVRoots) PURE;
    STDMETHOD(get_PatchConfigurations)(THIS_ IPatchConfigurations FAR* FAR* ppPatchConfigurations) PURE;
    STDMETHOD(get_VSSccProvider)(THIS_ BSTR FAR* pbstrVSSccProvider) PURE;
    STDMETHOD(put_VSSccProvider)(THIS_ BSTR bstrVSSccProvider) PURE;
    STDMETHOD(get_VSSccAuxPath)(THIS_ BSTR FAR* pbstrVSSccAuxPath) PURE;
    STDMETHOD(put_VSSccAuxPath)(THIS_ BSTR bstrVSSccAuxPath) PURE;
    STDMETHOD(get_VSSccLocalPath)(THIS_ BSTR FAR* pbstrVSSccLocalPath) PURE;
    STDMETHOD(put_VSSccLocalPath)(THIS_ BSTR bstrVSSccLocalPath) PURE;
    STDMETHOD(get_DefaultProductConfiguration)(THIS_ BSTR FAR* pbstrDefaultProductConfiguration) PURE;
    STDMETHOD(put_DefaultProductConfiguration)(THIS_ BSTR bstrDefaultProductConfiguration) PURE;
    STDMETHOD(UtilGetIFileUsingFileKey)(THIS_ BSTR bstrFileKey, IFile FAR* FAR* ppFile) PURE;
    STDMETHOD(get_ISDependencies)(THIS_ IISDependencies FAR* FAR* ppISDependencies) PURE;
    STDMETHOD(get_ProductIcon)(THIS_ IIcon FAR* FAR* ppIcon) PURE;
    STDMETHOD(SetProductIcon)(THIS_ BSTR bstrFilePath, long lIconIndex) PURE;
    STDMETHOD(get_CEApps)(THIS_ ICEApps FAR* FAR* ppCEApps) PURE;
    STDMETHOD(get_Skin)(THIS_ BSTR FAR* bstrSkin) PURE;
    STDMETHOD(put_Skin)(THIS_ BSTR bstrSkin) PURE;
    STDMETHOD(AddLanguage)(THIS_ BSTR strName, VARIANT_BOOL vbPropogateStringsToAllLangs, IBusinessObject FAR* FAR* pVal) PURE;
    STDMETHOD(GetComponentISAttributeValues)(THIS_ long lISAttrib1, long lISAttrib2, VARIANT_BOOL FAR* pbISAttrib1, VARIANT_BOOL FAR* pbISAttrib2) PURE;
    STDMETHOD(GetFileKeysForJITCA)(THIS_ BSTR FAR* pbstrFileKeys) PURE;
    STDMETHOD(CreateIISRootFolder)(THIS) PURE;
    STDMETHOD(get_UpgradeSettings)(THIS_ IUpgradeSettings FAR* FAR* ppUpgrasdeSettings) PURE;
    STDMETHOD(ValidateCondition)(THIS_ BSTR bstrCondition, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(put_CachedProjectType)(THIS_ EnumProjectType CachedProjectType) PURE;
    STDMETHOD(ValidateAnyPath)(THIS_ BSTR bstrPath, VARIANT_BOOL FAR* pvbValid) PURE;
    STDMETHOD(get_CurrentQuickPatch)(THIS_ BSTR FAR* pbstrCurrentQuickPatch) PURE;
    STDMETHOD(put_CurrentQuickPatch)(THIS_ BSTR bstrCurrentQuickPatch) PURE;
    STDMETHOD(GetOrphanedComponentNames)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(get_TARGETDIR)(THIS_ IDirectory FAR* FAR* pTargetdir) PURE;
    STDMETHOD(GetComponentsForDestination)(THIS_ BSTR bstrDirID, IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(ImportStrings)(THIS_ SAFEARRAY FAR* saLanguages, IUnknown * pUnkLangInstallEvents) PURE;

    /* IProjectRootNeptune methods */
    STDMETHOD(get_ShowUpdateUI)(THIS_ VARIANT_BOOL FAR* pvbShowUpdateUI) PURE;
    STDMETHOD(put_ShowUpdateUI)(THIS_ VARIANT_BOOL vbShowUpdateUI) PURE;
    STDMETHOD(get_EngineBinding)(THIS_ EnumEngineBinding FAR* peebEngineBinding) PURE;
    STDMETHOD(put_EngineBinding)(THIS_ EnumEngineBinding eebEngineBinding) PURE;
    STDMETHOD(get_MaintenanceExperience)(THIS_ EnumMaintenanceExperience FAR* pemeMaintExp) PURE;
    STDMETHOD(put_MaintenanceExperience)(THIS_ EnumMaintenanceExperience emeMaintExp) PURE;
    STDMETHOD(get_OSFilter)(THIS_ long FAR* plOSFilter) PURE;
    STDMETHOD(put_OSFilter)(THIS_ long lOSFilter) PURE;
    STDMETHOD(get_GenerateMIF)(THIS_ VARIANT_BOOL FAR* pbGenerateMIF) PURE;
    STDMETHOD(put_GenerateMIF)(THIS_ VARIANT_BOOL bGenerateMIF) PURE;
    STDMETHOD(get_SetupArguments)(THIS_ BSTR FAR* pbstrSetupArguments) PURE;
    STDMETHOD(put_SetupArguments)(THIS_ BSTR bstrSetupArguments) PURE;
    STDMETHOD(get_MIFFileName)(THIS_ BSTR FAR* pbstrMIFFileName) PURE;
    STDMETHOD(put_MIFFileName)(THIS_ BSTR bstrMIFFileName) PURE;
    STDMETHOD(get_MIFSerial)(THIS_ BSTR FAR* pbstrMIFSerial) PURE;
    STDMETHOD(put_MIFSerial)(THIS_ BSTR bstrMIFSerial) PURE;
    STDMETHOD(get_ComPlusApplications)(THIS_ IISComPlusApplicationsNeptune FAR* FAR* ppISComPlusApplications) PURE;
    STDMETHOD(get_ISLastDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ISOtherDiskFiles)(THIS_ IISDisk1Files FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistrySets)(THIS_ IRegistrySetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_AssistantTags)(THIS_ IAssistantTagsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_ExeFile)(THIS_ BSTR FAR* pbstrExeFile) PURE;
    STDMETHOD(put_ExeFile)(THIS_ BSTR bstrExeFile) PURE;
    STDMETHOD(get_ProObjDiffSupported)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjDiffSupported)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegAtBuild)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegAtBuild)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjRegWizard)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjRegWizard)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ProObjWizard)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjWizard)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_ProObjFlags)(THIS_ long FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlags)(THIS_ long Val) PURE;
    STDMETHOD(get_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_ProObjProperty)(THIS_ EProObjectProps eProp, EUILanguages eLang, BSTR bstrVal) PURE;
    STDMETHOD(get_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProObjUseDefaultSettings)(THIS_ EUILanguages eLang, VARIANT_BOOL Val) PURE;
    STDMETHOD(get_FileSetDirectoriesEx)(THIS_ EnumDirectoryTreeType eType, IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSetDirectories)(THIS_ IFileSetDirectoriesNeptune FAR* FAR* pDirectories) PURE;
    STDMETHOD(get_FileSets)(THIS_ IFileSetsNeptune FAR* FAR* ppVal) PURE;
    STDMETHOD(get_RegistryFeature)(THIS_ IFeature FAR* FAR* pFeature) PURE;
    STDMETHOD(IsDotNetProjectReferenced)(THIS_ BSTR bstrProject, VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(RemoveDotNetProject)(THIS_ BSTR bstrProject) PURE;
    STDMETHOD(get_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_ProjectCreatedInSubFolder)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_RegistryComponent)(THIS_ IComponent FAR* FAR* pComponent) PURE;
    STDMETHOD(get_TableRecordCount)(THIS_ BSTR sTable, BSTR sColumn, BSTR sSearch, long FAR* lCount) PURE;

    /* IProjectRootNeptuneSP methods */
    STDMETHOD(get_LightComPlusApplication)(THIS_ ILightComPlusApplicationNeptuneSP FAR* FAR* ppLightComPlusApplication) PURE;

    /* IProjectRootNeptunePDC methods */
    STDMETHOD(get_ApplicationManifest)(THIS_ IApplicationManifestNeptunePDC FAR* FAR* pApplicationManifest) PURE;
    STDMETHOD(get_DeploymentManifest)(THIS_ IDeploymentManifestNeptunePDC FAR* FAR* pDeploymentManifest) PURE;
    STDMETHOD(get_PrimaryApplicationAssembly)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_PrimaryApplicationAssembly)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(get_Prerequisites)(THIS_ IPrerequisitesNeptunePDC FAR* FAR* ppPrerequisites) PURE;
    STDMETHOD(get_DeviceDriverPackages)(THIS_ IDeviceDriverPackagesNeptunePDC FAR* FAR* ppDeviceDrivers) PURE;

    /* IProjectRootProteus methods */
    STDMETHOD(get_SetupPrerequisites)(THIS_ ISetupPrerequisitesProteus FAR* FAR* ppSetupPrerequisites) PURE;
    STDMETHOD(get_SQLConnections)(THIS_ ISQLConnectionsProteus FAR* FAR* ppSQLConnections) PURE;
    STDMETHOD(get_WebSites)(THIS_ IWebSitesProteus FAR* FAR* ppWebSites) PURE;
    STDMETHOD(get_PalmApps)(THIS_ IPalmAppsProteus FAR* FAR* ppPalmApps) PURE;
    STDMETHOD(get_SQLBatchMode)(THIS_ VARIANT_BOOL FAR* pbSQLBatchMode) PURE;
    STDMETHOD(put_SQLBatchMode)(THIS_ VARIANT_BOOL bSQLBatchMode) PURE;

    /* IProjectRootPluto methods */
    STDMETHOD(get_XmlFiles)(THIS_ IXmlFilesPluto FAR* FAR* ppXmlFiles) PURE;
    STDMETHOD(get_XmlLocators)(THIS_ IXmlLocatorsPluto FAR* FAR* ppXmlLocators) PURE;
    STDMETHOD(get_DBMetaDataCol)(THIS_ ISQLDBMetaDataColPluto FAR* FAR* ppDBMetaDataCol) PURE;
    STDMETHOD(get_DRMFiles)(THIS_ IDRMFilesPluto FAR* FAR* ppFiles) PURE;
    STDMETHOD(get_DRMLicenses)(THIS_ IDRMLicensesPluto FAR* FAR* ppLicenses) PURE;

    /* IProjectRootIbiza methods */
    STDMETHOD(MigrateSelfReg)(THIS_ VARIANT_BOOL vbSelfMigrate) PURE;
    STDMETHOD(get_AppPools)(THIS_ IIisAppPools FAR* FAR* ppAppPools) PURE;
    STDMETHOD(get_WebServiceExtensions)(THIS_ IIisWebServiceExtensions FAR* FAR* ppWebServiceExtensions) PURE;

    /* IProjectRootIxtapa methods */
    STDMETHOD(get_DimReferences)(THIS_ IDimReferencesIxtapa FAR* FAR* ppDimRefs) PURE;
    STDMETHOD(get_ProObjFlagsStr)(THIS_ BSTR FAR* pVal) PURE;
    STDMETHOD(put_ProObjFlagsStr)(THIS_ BSTR Val) PURE;
    STDMETHOD(get_SQLScriptFiles)(THIS_ ISQLScriptFilesProteus FAR* FAR* ppSQLScriptFiles) PURE;
    STDMETHOD(get_SQLScriptImports)(THIS_ ISQLScriptImportsIxtapa FAR* FAR* ppSQLScriptImports) PURE;

    /* IProjectRootIndore methods */
    STDMETHOD(get_SISWordCount)(THIS_ short FAR* nSISWordCount) PURE;
    STDMETHOD(get_LightDirectory)(THIS_ ILightDirectory FAR* FAR* ppLightDirectory) PURE;

    /* IProjectRootIna methods */
    STDMETHOD(ResolveStringIdForActiveLanguage)(THIS_ BSTR bstrStringId, VARIANT_BOOL FAR* vbFoundStringId, BSTR FAR* bstrResolvedValue) PURE;

    /* IProjectRootIronwood methods */
    STDMETHOD(get_RuntimeTheme)(THIS_ BSTR FAR* pbstrTheme) PURE;
    STDMETHOD(put_RuntimeTheme)(THIS_ BSTR bstrTheme) PURE;
    STDMETHOD(put_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL vbEnableUpdateService, BSTR bstrVersio) PURE;
    STDMETHOD(get_EnableUpdateServiceEx)(THIS_ VARIANT_BOOL FAR* pvbEnableUpdateService, BSTR FAR* pbstrVersion) PURE;
    STDMETHOD(get_Shortcuts)(THIS_ IShortcuts FAR* FAR* ppShortcuts) PURE;

    /* IProjectRootJustice methods */
    STDMETHOD(get_ChainPackages)(THIS_ IChainPackages FAR* FAR* ppPackages) PURE;

    /* IProjectRootLoyalty methods */
    STDMETHOD(get_IisItems)(THIS_ IIisItems FAR* FAR* ppIisItems) PURE;
    STDMETHOD(get_IisWebSites)(THIS_ IIisItems FAR* FAR* ppIisWebSites) PURE;
    STDMETHOD(get_IisAppPools)(THIS_ IIisItems FAR* FAR* pIisAppPools) PURE;
    STDMETHOD(get_IisWebServiceExtensions)(THIS_ IIisItems FAR* FAR* ppIisWebServiceExtensions) PURE;
    STDMETHOD(get_RequireAdmin)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_RequireAdmin)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(get_ISLockPermissions)(THIS_ BSTR LockObject, IISLockPermissions FAR* FAR* pISLockPermissions) PURE;
    STDMETHOD(get_SearchReplaceSets)(THIS_ ISearchReplaceSets FAR* FAR* pSearchReplaceSets) PURE;
    STDMETHOD(get_ActionTexts)(THIS_ IActionTexts FAR* FAR* pActionTexts) PURE;
    STDMETHOD(get_LockPermissionMode)(THIS_ EnumLockPermissionMode FAR* eVal) PURE;
    STDMETHOD(put_LockPermissionMode)(THIS_ EnumLockPermissionMode eVal) PURE;
    STDMETHOD(ConvertLockPermissions)(THIS_ EnumLockPermissionMode eFromTable, EnumLockPermissionMode eToTable) PURE;
    STDMETHOD(get_ViewFilter)(THIS_ BSTR FAR* pbstrFilter) PURE;
    STDMETHOD(put_ViewFilter)(THIS_ BSTR bstrFilter) PURE;
    STDMETHOD(get_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL FAR* pvbValue) PURE;
    STDMETHOD(put_EnableWin7PerUserSupport)(THIS_ VARIANT_BOOL vbValue) PURE;
    STDMETHOD(GetTextStyle)(THIS_ BSTR bstrName, BSTR bstrFaceName, long lSize, long lColor, long lStyleBits, VARIANT_BOOL vbCreateIfNotExists, ITextStyle FAR* FAR* ppTextStyle) PURE;
    STDMETHOD(get_LinkerOption)(THIS_ BSTR bstrLibraryPath, ILinkerOption FAR* FAR* ppVal) PURE;

    /* IProjectRootJack methods */
    STDMETHOD(get_MsiLockPermissionsExs)(THIS_ BSTR LockObject, BSTR Table, IMsiLockPermissionsExs FAR* FAR* pLockPermissions) PURE;

    /* IProjectRootMajesty methods */
    STDMETHOD(put_DialogSizeType)(THIS_ EnumDialogSizeType eDialogSizeType) PURE;
    STDMETHOD(get_DialogSizeType)(THIS_ EnumDialogSizeType FAR* peDialogSizeType) PURE;

    /* IProjectRootNeo methods */
    STDMETHOD(get_SuitePackages)(THIS_ ISuitePackages FAR* FAR* ppSuitePackages) PURE;
    STDMETHOD(get_SuiteFeatures)(THIS_ ISuiteFeatures FAR* FAR* ppSuiteFeatures) PURE;
    STDMETHOD(get_Dims)(THIS_ IDimRefs FAR* FAR* ppDims) PURE;
    STDMETHOD(get_SuiteWizard)(THIS_ ISuiteWizard FAR* FAR* ppSuiteWizard) PURE;
    STDMETHOD(get_SuiteDialogs)(THIS_ ISuiteDialogs FAR* FAR* ppSuiteDialogs) PURE;
    STDMETHOD(get_Releases)(THIS_ ISuiteReleases FAR* FAR* ppSuiteReleases) PURE;
    STDMETHOD(get_RuntimeXml)(THIS_ BSTR FAR* pbstrFilePath) PURE;
    STDMETHOD(AddDialog)(THIS_ BSTR strDialogName, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(CopyDialog)(THIS_ ISuiteDialog FAR* pSourceDialog, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(get_SuiteStyles)(THIS_ ISuiteUIStyles FAR* FAR* ppSuiteStyles) PURE;
    STDMETHOD(get_SuiteBrushes)(THIS_ ISuiteUIBrushes FAR* FAR* ppSuiteBrushes) PURE;
    STDMETHOD(get_EnableSwidtag)(THIS_ VARIANT_BOOL FAR* vbEnable) PURE;
    STDMETHOD(put_EnableSwidtag)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR FAR* bstrValue) PURE;
    STDMETHOD(put_SwidtagProperty)(THIS_ EnumSwidtagProperty eProp, BSTR bstrValue) PURE;
    STDMETHOD(get_SwidtagSystemComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagSystemComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(get_SwidtagLocalComponent)(THIS_ IComponent FAR* FAR* ppComponent) PURE;
    STDMETHOD(put_SwidtagLocalComponent)(THIS_ IComponent FAR* pComponent) PURE;
    STDMETHOD(RenameSwidtagSystemComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(RenameSwidtagLocalComponent)(THIS_ BSTR bstrOldName, BSTR bstrNewName) PURE;
    STDMETHOD(get_SuiteAbortConditions)(THIS_ ISuiteAbortConditions FAR* FAR* ppConditions) PURE;

    /* IProjectRootOpus methods */
    STDMETHOD(CheckProjectVersion)(THIS_ EnumProjectVersion FAR* pVal) PURE;
    STDMETHOD(ImportPrerequisite)(THIS_ BSTR bstrPrqFile, IImportPrereqEvents FAR* pEventSink) PURE;
    STDMETHOD(get_ScheduledTasks)(THIS_ IScheduledTasks FAR* FAR* ppVal) PURE;
    STDMETHOD(get_EnableSwidtagSCCM)(THIS_ VARIANT_BOOL FAR* pvbEnable) PURE;
    STDMETHOD(put_EnableSwidtagSCCM)(THIS_ VARIANT_BOOL vbEnable) PURE;
    STDMETHOD(get_SwidtagPropertyEx)(THIS_ EnumSwidtagProperty eProp, BSTR bstrDefault, BSTR FAR* bstrValue) PURE;
    STDMETHOD(IsUniqueName)(THIS_ BSTR bstrTableName, BSTR bstrColumnName, BSTR bstrName, VARIANT_BOOL FAR* vbUniqueName) PURE;
    STDMETHOD(AddLocalizedEula)(THIS) PURE;

    /* IProjectRootPunk methods */
    STDMETHOD(get_SuiteActions)(THIS_ ISuiteActions FAR* FAR* ppActions) PURE;
    STDMETHOD(get_SuiteActionRefs)(THIS_ EnumSuiteEvent eSuiteEvent, VARIANT_BOOL vbCreate, ISuiteActionRefs FAR* FAR* ppActionRefs) PURE;

    /* IProjectRootPunkSP1 methods */
    STDMETHOD(get_SuiteControlThemes)(THIS_ ISuiteUIControlThemes FAR* FAR* ppControlThemes) PURE;

    /* IProjectRootQi methods */
    STDMETHOD(get_SetupRootFolder)(THIS_ EnumSetupFolderType eType, ISetupFolder FAR* FAR* ppVal) PURE;

    /* IProjectRootRipley methods */
    STDMETHOD(SetStringEntryValue)(THIS_ BSTR bstrStringId, BSTR bstrStringValue, BSTR bstrLangId, VARIANT_BOOL vbCreateIfMissing, BSTR FAR* pbstrNewStringId) PURE;
    STDMETHOD(get_DefaultFeature)(THIS_ IFeature FAR* FAR* ppFearure) PURE;
    STDMETHOD(put_DefaultFeature)(THIS_ IFeature FAR* pFearure) PURE;
#endif

    /* IProjectRootSecret methods */
    STDMETHOD(ImportDialog)(THIS_ IUnknown * pSource, ISuiteDialog FAR* FAR* ppSuiteDialog) PURE;
    STDMETHOD(get_IsVisualElements)(THIS_ IIsVisualElements FAR* FAR* ppVal) PURE;
};

typedef enum EnumEventId {
    epeiProjectOpened = 1,
    epeiLanguageIncluded = 2,
    epeiScriptFileAdded = 3,
    epeiScriptFileRemoved = 4,
    epeiScriptFileRenamed = 5,
    epeiRefreshGlobalView = 6,
    epeiOutputMessage = 7,
    epeiSetProgress = 8,
    epeiInitFeedback = 9,
    epeiTerminateFeedback = 10,
    epeiInitProgress = 11
} EnumEventId;

DEFINE_GUID(IID_IProjectEvents,0xB6747B2DL,0x6BCA,0x4377,0xA1,0xDF,0xAF,0xEA,0x66,0x1B,0xBE,0x60);

/* Definition of interface: IProjectEvents */
#undef INTERFACE
#define INTERFACE IProjectEvents

DECLARE_INTERFACE_(IProjectEvents, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProjectEvents methods */
    STDMETHOD(ChangeEvent)(THIS_ EnumEventId enumEventId, IDispatch * pVal, VARIANT pValue) PURE;
    STDMETHOD(OnItemChanged)(THIS_ BSTR className, EItemAction action, IBusinessObject FAR* pPublisher, IIsProperty FAR* pProperty) PURE;
    STDMETHOD(OnClassInvalidated)(THIS_ BSTR className) PURE;
};

DEFINE_GUID(IID_IProjectEvents2,0xAE9A3012L,0xE2E6,0x4B1D,0xA0,0xF4,0x61,0x9A,0x11,0xE0,0xE9,0xDD);

/* Definition of interface: IProjectEvents2 */
#undef INTERFACE
#define INTERFACE IProjectEvents2

DECLARE_INTERFACE_(IProjectEvents2, IProjectEvents)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProjectEvents methods */
    STDMETHOD(ChangeEvent)(THIS_ EnumEventId enumEventId, IDispatch * pVal, VARIANT pValue) PURE;
    STDMETHOD(OnItemChanged)(THIS_ BSTR className, EItemAction action, IBusinessObject FAR* pPublisher, IIsProperty FAR* pProperty) PURE;
    STDMETHOD(OnClassInvalidated)(THIS_ BSTR className) PURE;
#endif

    /* IProjectEvents2 methods */
    STDMETHOD(OnItemChanged2)(THIS_ BSTR className, EItemAction action, IUnknown * pPublisher, IIsProperty FAR* pProperty) PURE;
};

DEFINE_GUID(IID_IProjectProgressEvents,0x6E35D5A4L,0x850D,0x4F2F,0xB4,0xF5,0xC2,0x29,0x0B,0x89,0x8D,0x91);

/* Definition of interface: IProjectProgressEvents */
#undef INTERFACE
#define INTERFACE IProjectProgressEvents

DECLARE_INTERFACE_(IProjectProgressEvents, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IProjectProgressEvents methods */
    STDMETHOD(ProgressCaption)(THIS_ BSTR bstrCaption) PURE;
    STDMETHOD(ProgressBarMax)(THIS_ long lMax) PURE;
    STDMETHOD(ProgressBarIncrement)(THIS_ long lIncrement) PURE;
};

DEFINE_GUID(IID_IProject,0x84DE63D4L,0x7CCE,0x4C0D,0xAD,0x4B,0x91,0xE6,0x8A,0x5A,0x24,0xCD);

/* Definition of interface: IProject */
#undef INTERFACE
#define INTERFACE IProject

DECLARE_INTERFACE_(IProject, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IProject methods */
    STDMETHOD(OpenEx)(THIS_ IDispatch * pStoreHandle, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Open)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName) PURE;
    STDMETHOD(EnableLog)(THIS_ BSTR FAR* strFileName) PURE;
    STDMETHOD(Rename)(THIS_ BSTR strNewFile) PURE;
    STDMETHOD(IsValidKey)(THIS_ BSTR strKey, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Dirty)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_ProjectRoot)(THIS_ IProjectRoot FAR* FAR* pProjectRoot) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(get_IsOpen)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_StoreHandle)(THIS_ IDispatch * FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IProjectEvents FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(CreatePathRecommendations)(THIS_ IPathConvertEvent FAR* pEvent, IPathRecommendations FAR* FAR* pVal) PURE;
    STDMETHOD(ApplyPathRecommendations)(THIS_ IPathRecommendations FAR* pPathRecommendations, IPathConvertEvent FAR* pEvent, VARIANT_BOOL FAR* bCanceled) PURE;
    STDMETHOD(SetCodePageFromLangID)(THIS_ BSTR sLangID, long FAR* lResult) PURE;
    STDMETHOD(get_MMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(putref_MMCatalog)(THIS_ IMMCatalog FAR* pCatalog) PURE;
    STDMETHOD(GetLangID)(THIS_ BSTR sLangName, long FAR* lLangID) PURE;
    STDMETHOD(GetLangName)(THIS_ BSTR sLangID, BSTR FAR* sLangName) PURE;
    STDMETHOD(RaiseCategoryInvalidated)(THIS_ BSTR className) PURE;
    STDMETHOD(StartEvents)(THIS) PURE;
    STDMETHOD(StopEvents)(THIS) PURE;
    STDMETHOD(Compact)(THIS_ BSTR strFileName, IProjectProgressEvents FAR* pProgressEvents, long FAR* lResult) PURE;
    STDMETHOD(RaiseItemChangedEvent)(THIS_ BSTR sClassName, EItemAction eAction, IBusinessObject FAR* pPublisher) PURE;
    STDMETHOD(get_ProjectPathAndFileName)(THIS_ BSTR FAR* bstrProjectPathAndFileName) PURE;
};

DEFINE_GUID(IID_IProject2,0x9C9C6084L,0x6739,0x4106,0x85,0x8D,0xA8,0xF5,0x69,0xC8,0x41,0x82);

/* Definition of interface: IProject2 */
#undef INTERFACE
#define INTERFACE IProject2

DECLARE_INTERFACE_(IProject2, IProject)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProject methods */
    STDMETHOD(OpenEx)(THIS_ IDispatch * pStoreHandle, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Open)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName) PURE;
    STDMETHOD(EnableLog)(THIS_ BSTR FAR* strFileName) PURE;
    STDMETHOD(Rename)(THIS_ BSTR strNewFile) PURE;
    STDMETHOD(IsValidKey)(THIS_ BSTR strKey, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Dirty)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_ProjectRoot)(THIS_ IProjectRoot FAR* FAR* pProjectRoot) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(get_IsOpen)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_StoreHandle)(THIS_ IDispatch * FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IProjectEvents FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(CreatePathRecommendations)(THIS_ IPathConvertEvent FAR* pEvent, IPathRecommendations FAR* FAR* pVal) PURE;
    STDMETHOD(ApplyPathRecommendations)(THIS_ IPathRecommendations FAR* pPathRecommendations, IPathConvertEvent FAR* pEvent, VARIANT_BOOL FAR* bCanceled) PURE;
    STDMETHOD(SetCodePageFromLangID)(THIS_ BSTR sLangID, long FAR* lResult) PURE;
    STDMETHOD(get_MMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(putref_MMCatalog)(THIS_ IMMCatalog FAR* pCatalog) PURE;
    STDMETHOD(GetLangID)(THIS_ BSTR sLangName, long FAR* lLangID) PURE;
    STDMETHOD(GetLangName)(THIS_ BSTR sLangID, BSTR FAR* sLangName) PURE;
    STDMETHOD(RaiseCategoryInvalidated)(THIS_ BSTR className) PURE;
    STDMETHOD(StartEvents)(THIS) PURE;
    STDMETHOD(StopEvents)(THIS) PURE;
    STDMETHOD(Compact)(THIS_ BSTR strFileName, IProjectProgressEvents FAR* pProgressEvents, long FAR* lResult) PURE;
    STDMETHOD(RaiseItemChangedEvent)(THIS_ BSTR sClassName, EItemAction eAction, IBusinessObject FAR* pPublisher) PURE;
    STDMETHOD(get_ProjectPathAndFileName)(THIS_ BSTR FAR* bstrProjectPathAndFileName) PURE;
#endif

    /* IProject2 methods */
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* pvbReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL vbReadOnly) PURE;
    STDMETHOD(GetAllWindowsLangIds)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(IsValidIsmSchema)(THIS_ VARIANT_BOOL FAR* pvbValidSchema) PURE;
    STDMETHOD(IsScriptBased)(THIS_ VARIANT_BOOL FAR* pvbIsScriptBased) PURE;
    STDMETHOD(SetCodePageInMSIDatabase)(THIS_ BSTR sLangID) PURE;
    STDMETHOD(DropTable)(THIS_ BSTR sTable) PURE;
    STDMETHOD(ImportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(ExportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(get_ScriptBased)(THIS_ VARIANT_BOOL FAR* pvbScriptBased) PURE;
    STDMETHOD(put_ScriptBased)(THIS_ VARIANT_BOOL vbScriptBased) PURE;
    STDMETHOD(get_DoMaintenance)(THIS_ VARIANT_BOOL FAR* pvbDoMaintenance) PURE;
    STDMETHOD(put_DoMaintenance)(THIS_ VARIANT_BOOL vbDoMaintenance) PURE;
    STDMETHOD(RaiseItemChangedEvent2)(THIS_ BSTR sClassName, EItemAction eAction, IUnknown * pPublisher) PURE;
    STDMETHOD(OpenDirect)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(OpenDirectNoVal)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_IsInstallScriptUsed)(THIS_ VARIANT_BOOL FAR* pvbIsInstallScriptUsed) PURE;
    STDMETHOD(ExportToText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(ImportFromText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(SuspendHandle)(THIS) PURE;
    STDMETHOD(ReOpenHandle)(THIS) PURE;
    STDMETHOD(SetCodePage)(THIS_ long lVal, long FAR* lResult) PURE;
    STDMETHOD(GetCodePage)(THIS_ long FAR* plVal) PURE;
    STDMETHOD(OpenNoVal)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, BSTR bstrBaseMsi, BSTR bstrMSTsToApply, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_Lock)(THIS_ VARIANT_BOOL FAR* pvbLock) PURE;
    STDMETHOD(get_QPRoot)(THIS_ IQPRoot FAR* FAR* ppQPRoot) PURE;
    STDMETHOD(RenameButLeaveTempAlone)(THIS_ BSTR strNewFileName) PURE;
    STDMETHOD(CloseTempFile)(THIS_ VARIANT_BOOL bSave, VARIANT_BOOL FAR* bDirty, BSTR FAR* bstrTempFile) PURE;
    STDMETHOD(ReopenTempFile)(THIS_ VARIANT_BOOL bDirty) PURE;
    STDMETHOD(AddValidationError)(THIS_ BSTR bstrTable, BSTR bstrKey, BSTR bstrCol) PURE;
    STDMETHOD(ClearValidationErrors)(THIS) PURE;
    STDMETHOD(IsTableValid)(THIS_ BSTR bstrTable, ETableValidationType FAR* peType) PURE;
    STDMETHOD(IsRecordValid)(THIS_ BSTR bstrTable, BSTR bstrKey, VARIANT FAR* pvCols, VARIANT_BOOL FAR* pbValid) PURE;
    STDMETHOD(get_IsInstallScriptObject)(THIS_ VARIANT_BOOL FAR* pvbInstallScriptObj) PURE;
    STDMETHOD(put_IsInstallScriptObject)(THIS_ VARIANT_BOOL vbInstallScriptObj) PURE;
    STDMETHOD(get_IsWebProject)(THIS_ VARIANT_BOOL FAR* pvbWebProject) PURE;
    STDMETHOD(put_IsWebProject)(THIS_ VARIANT_BOOL vbWebProject) PURE;
    STDMETHOD(GetTransformFiles)(THIS_ BSTR FAR* pbstrMST, BSTR FAR* pbstrBaseMSI, BSTR FAR* pbstrMSTsToApply) PURE;
    STDMETHOD(get_ContainsISObject)(THIS_ VARIANT_BOOL FAR* pvbContainsISObject) PURE;
    STDMETHOD(GetTransformSummaryInfo)(THIS_ int FAR* pErrConditions, int FAR* pValidation) PURE;
    STDMETHOD(PutTransformSummaryInfo)(THIS_ int iErrConditions, int iValidation) PURE;
    STDMETHOD(get_BadMSTs)(THIS_ BSTR FAR* pbstrMSTs) PURE;
    STDMETHOD(get_OpenedAsReadOnly)(THIS_ VARIANT_BOOL FAR* pvbOpenedAsReadOnly) PURE;
    STDMETHOD(DirectModeAddFile)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(DirectModeAddMergeModule)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(OpenDirectReadOnly)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
};

typedef enum EnumProjectOpenMode {
    epomDirect = 1,
    epomDirectDoNotAddMissingTables = 2
} EnumProjectOpenMode;

DEFINE_GUID(IID_IProjectNeptune,0x9A7D13E1L,0x4186,0x49FB,0xB9,0x21,0x68,0xE7,0xFD,0xEB,0x4B,0xD0);

/* Definition of interface: IProjectNeptune */
#undef INTERFACE
#define INTERFACE IProjectNeptune

DECLARE_INTERFACE_(IProjectNeptune, IProject2)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProject methods */
    STDMETHOD(OpenEx)(THIS_ IDispatch * pStoreHandle, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Open)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName) PURE;
    STDMETHOD(EnableLog)(THIS_ BSTR FAR* strFileName) PURE;
    STDMETHOD(Rename)(THIS_ BSTR strNewFile) PURE;
    STDMETHOD(IsValidKey)(THIS_ BSTR strKey, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Dirty)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_ProjectRoot)(THIS_ IProjectRoot FAR* FAR* pProjectRoot) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(get_IsOpen)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_StoreHandle)(THIS_ IDispatch * FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IProjectEvents FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(CreatePathRecommendations)(THIS_ IPathConvertEvent FAR* pEvent, IPathRecommendations FAR* FAR* pVal) PURE;
    STDMETHOD(ApplyPathRecommendations)(THIS_ IPathRecommendations FAR* pPathRecommendations, IPathConvertEvent FAR* pEvent, VARIANT_BOOL FAR* bCanceled) PURE;
    STDMETHOD(SetCodePageFromLangID)(THIS_ BSTR sLangID, long FAR* lResult) PURE;
    STDMETHOD(get_MMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(putref_MMCatalog)(THIS_ IMMCatalog FAR* pCatalog) PURE;
    STDMETHOD(GetLangID)(THIS_ BSTR sLangName, long FAR* lLangID) PURE;
    STDMETHOD(GetLangName)(THIS_ BSTR sLangID, BSTR FAR* sLangName) PURE;
    STDMETHOD(RaiseCategoryInvalidated)(THIS_ BSTR className) PURE;
    STDMETHOD(StartEvents)(THIS) PURE;
    STDMETHOD(StopEvents)(THIS) PURE;
    STDMETHOD(Compact)(THIS_ BSTR strFileName, IProjectProgressEvents FAR* pProgressEvents, long FAR* lResult) PURE;
    STDMETHOD(RaiseItemChangedEvent)(THIS_ BSTR sClassName, EItemAction eAction, IBusinessObject FAR* pPublisher) PURE;
    STDMETHOD(get_ProjectPathAndFileName)(THIS_ BSTR FAR* bstrProjectPathAndFileName) PURE;

    /* IProject2 methods */
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* pvbReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL vbReadOnly) PURE;
    STDMETHOD(GetAllWindowsLangIds)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(IsValidIsmSchema)(THIS_ VARIANT_BOOL FAR* pvbValidSchema) PURE;
    STDMETHOD(IsScriptBased)(THIS_ VARIANT_BOOL FAR* pvbIsScriptBased) PURE;
    STDMETHOD(SetCodePageInMSIDatabase)(THIS_ BSTR sLangID) PURE;
    STDMETHOD(DropTable)(THIS_ BSTR sTable) PURE;
    STDMETHOD(ImportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(ExportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(get_ScriptBased)(THIS_ VARIANT_BOOL FAR* pvbScriptBased) PURE;
    STDMETHOD(put_ScriptBased)(THIS_ VARIANT_BOOL vbScriptBased) PURE;
    STDMETHOD(get_DoMaintenance)(THIS_ VARIANT_BOOL FAR* pvbDoMaintenance) PURE;
    STDMETHOD(put_DoMaintenance)(THIS_ VARIANT_BOOL vbDoMaintenance) PURE;
    STDMETHOD(RaiseItemChangedEvent2)(THIS_ BSTR sClassName, EItemAction eAction, IUnknown * pPublisher) PURE;
    STDMETHOD(OpenDirect)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(OpenDirectNoVal)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_IsInstallScriptUsed)(THIS_ VARIANT_BOOL FAR* pvbIsInstallScriptUsed) PURE;
    STDMETHOD(ExportToText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(ImportFromText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(SuspendHandle)(THIS) PURE;
    STDMETHOD(ReOpenHandle)(THIS) PURE;
    STDMETHOD(SetCodePage)(THIS_ long lVal, long FAR* lResult) PURE;
    STDMETHOD(GetCodePage)(THIS_ long FAR* plVal) PURE;
    STDMETHOD(OpenNoVal)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, BSTR bstrBaseMsi, BSTR bstrMSTsToApply, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_Lock)(THIS_ VARIANT_BOOL FAR* pvbLock) PURE;
    STDMETHOD(get_QPRoot)(THIS_ IQPRoot FAR* FAR* ppQPRoot) PURE;
    STDMETHOD(RenameButLeaveTempAlone)(THIS_ BSTR strNewFileName) PURE;
    STDMETHOD(CloseTempFile)(THIS_ VARIANT_BOOL bSave, VARIANT_BOOL FAR* bDirty, BSTR FAR* bstrTempFile) PURE;
    STDMETHOD(ReopenTempFile)(THIS_ VARIANT_BOOL bDirty) PURE;
    STDMETHOD(AddValidationError)(THIS_ BSTR bstrTable, BSTR bstrKey, BSTR bstrCol) PURE;
    STDMETHOD(ClearValidationErrors)(THIS) PURE;
    STDMETHOD(IsTableValid)(THIS_ BSTR bstrTable, ETableValidationType FAR* peType) PURE;
    STDMETHOD(IsRecordValid)(THIS_ BSTR bstrTable, BSTR bstrKey, VARIANT FAR* pvCols, VARIANT_BOOL FAR* pbValid) PURE;
    STDMETHOD(get_IsInstallScriptObject)(THIS_ VARIANT_BOOL FAR* pvbInstallScriptObj) PURE;
    STDMETHOD(put_IsInstallScriptObject)(THIS_ VARIANT_BOOL vbInstallScriptObj) PURE;
    STDMETHOD(get_IsWebProject)(THIS_ VARIANT_BOOL FAR* pvbWebProject) PURE;
    STDMETHOD(put_IsWebProject)(THIS_ VARIANT_BOOL vbWebProject) PURE;
    STDMETHOD(GetTransformFiles)(THIS_ BSTR FAR* pbstrMST, BSTR FAR* pbstrBaseMSI, BSTR FAR* pbstrMSTsToApply) PURE;
    STDMETHOD(get_ContainsISObject)(THIS_ VARIANT_BOOL FAR* pvbContainsISObject) PURE;
    STDMETHOD(GetTransformSummaryInfo)(THIS_ int FAR* pErrConditions, int FAR* pValidation) PURE;
    STDMETHOD(PutTransformSummaryInfo)(THIS_ int iErrConditions, int iValidation) PURE;
    STDMETHOD(get_BadMSTs)(THIS_ BSTR FAR* pbstrMSTs) PURE;
    STDMETHOD(get_OpenedAsReadOnly)(THIS_ VARIANT_BOOL FAR* pvbOpenedAsReadOnly) PURE;
    STDMETHOD(DirectModeAddFile)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(DirectModeAddMergeModule)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(OpenDirectReadOnly)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
#endif

    /* IProjectNeptune methods */
    STDMETHOD(CompareDatabaseWithCurrent)(THIS_ BSTR sDatabase) PURE;
    STDMETHOD(EndCompare)(THIS) PURE;
    STDMETHOD(get_IsCompareMode)(THIS_ VARIANT_BOOL FAR* vbComparing) PURE;
    STDMETHOD(put_MaintainReferentialIntegrity)(THIS_ VARIANT_BOOL vbMaintainReferentialIntegrity) PURE;
    STDMETHOD(get_IsProjectFileText)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsProjectFileText)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ReleaseFileLock)(THIS) PURE;
    STDMETHOD(get_TrueMMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(OpenProject)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, EnumProjectOpenMode eOpenProjectMode) PURE;
};

DEFINE_GUID(IID_IProjectProteus,0x2D28AB53L,0xD0F6,0x4998,0x8B,0x6D,0xD6,0x74,0x31,0xA0,0xED,0x2A);

/* Definition of interface: IProjectProteus */
#undef INTERFACE
#define INTERFACE IProjectProteus

DECLARE_INTERFACE_(IProjectProteus, IProjectNeptune)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProject methods */
    STDMETHOD(OpenEx)(THIS_ IDispatch * pStoreHandle, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Open)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName) PURE;
    STDMETHOD(EnableLog)(THIS_ BSTR FAR* strFileName) PURE;
    STDMETHOD(Rename)(THIS_ BSTR strNewFile) PURE;
    STDMETHOD(IsValidKey)(THIS_ BSTR strKey, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Dirty)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_ProjectRoot)(THIS_ IProjectRoot FAR* FAR* pProjectRoot) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(get_IsOpen)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_StoreHandle)(THIS_ IDispatch * FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IProjectEvents FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(CreatePathRecommendations)(THIS_ IPathConvertEvent FAR* pEvent, IPathRecommendations FAR* FAR* pVal) PURE;
    STDMETHOD(ApplyPathRecommendations)(THIS_ IPathRecommendations FAR* pPathRecommendations, IPathConvertEvent FAR* pEvent, VARIANT_BOOL FAR* bCanceled) PURE;
    STDMETHOD(SetCodePageFromLangID)(THIS_ BSTR sLangID, long FAR* lResult) PURE;
    STDMETHOD(get_MMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(putref_MMCatalog)(THIS_ IMMCatalog FAR* pCatalog) PURE;
    STDMETHOD(GetLangID)(THIS_ BSTR sLangName, long FAR* lLangID) PURE;
    STDMETHOD(GetLangName)(THIS_ BSTR sLangID, BSTR FAR* sLangName) PURE;
    STDMETHOD(RaiseCategoryInvalidated)(THIS_ BSTR className) PURE;
    STDMETHOD(StartEvents)(THIS) PURE;
    STDMETHOD(StopEvents)(THIS) PURE;
    STDMETHOD(Compact)(THIS_ BSTR strFileName, IProjectProgressEvents FAR* pProgressEvents, long FAR* lResult) PURE;
    STDMETHOD(RaiseItemChangedEvent)(THIS_ BSTR sClassName, EItemAction eAction, IBusinessObject FAR* pPublisher) PURE;
    STDMETHOD(get_ProjectPathAndFileName)(THIS_ BSTR FAR* bstrProjectPathAndFileName) PURE;

    /* IProject2 methods */
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* pvbReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL vbReadOnly) PURE;
    STDMETHOD(GetAllWindowsLangIds)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(IsValidIsmSchema)(THIS_ VARIANT_BOOL FAR* pvbValidSchema) PURE;
    STDMETHOD(IsScriptBased)(THIS_ VARIANT_BOOL FAR* pvbIsScriptBased) PURE;
    STDMETHOD(SetCodePageInMSIDatabase)(THIS_ BSTR sLangID) PURE;
    STDMETHOD(DropTable)(THIS_ BSTR sTable) PURE;
    STDMETHOD(ImportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(ExportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(get_ScriptBased)(THIS_ VARIANT_BOOL FAR* pvbScriptBased) PURE;
    STDMETHOD(put_ScriptBased)(THIS_ VARIANT_BOOL vbScriptBased) PURE;
    STDMETHOD(get_DoMaintenance)(THIS_ VARIANT_BOOL FAR* pvbDoMaintenance) PURE;
    STDMETHOD(put_DoMaintenance)(THIS_ VARIANT_BOOL vbDoMaintenance) PURE;
    STDMETHOD(RaiseItemChangedEvent2)(THIS_ BSTR sClassName, EItemAction eAction, IUnknown * pPublisher) PURE;
    STDMETHOD(OpenDirect)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(OpenDirectNoVal)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_IsInstallScriptUsed)(THIS_ VARIANT_BOOL FAR* pvbIsInstallScriptUsed) PURE;
    STDMETHOD(ExportToText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(ImportFromText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(SuspendHandle)(THIS) PURE;
    STDMETHOD(ReOpenHandle)(THIS) PURE;
    STDMETHOD(SetCodePage)(THIS_ long lVal, long FAR* lResult) PURE;
    STDMETHOD(GetCodePage)(THIS_ long FAR* plVal) PURE;
    STDMETHOD(OpenNoVal)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, BSTR bstrBaseMsi, BSTR bstrMSTsToApply, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_Lock)(THIS_ VARIANT_BOOL FAR* pvbLock) PURE;
    STDMETHOD(get_QPRoot)(THIS_ IQPRoot FAR* FAR* ppQPRoot) PURE;
    STDMETHOD(RenameButLeaveTempAlone)(THIS_ BSTR strNewFileName) PURE;
    STDMETHOD(CloseTempFile)(THIS_ VARIANT_BOOL bSave, VARIANT_BOOL FAR* bDirty, BSTR FAR* bstrTempFile) PURE;
    STDMETHOD(ReopenTempFile)(THIS_ VARIANT_BOOL bDirty) PURE;
    STDMETHOD(AddValidationError)(THIS_ BSTR bstrTable, BSTR bstrKey, BSTR bstrCol) PURE;
    STDMETHOD(ClearValidationErrors)(THIS) PURE;
    STDMETHOD(IsTableValid)(THIS_ BSTR bstrTable, ETableValidationType FAR* peType) PURE;
    STDMETHOD(IsRecordValid)(THIS_ BSTR bstrTable, BSTR bstrKey, VARIANT FAR* pvCols, VARIANT_BOOL FAR* pbValid) PURE;
    STDMETHOD(get_IsInstallScriptObject)(THIS_ VARIANT_BOOL FAR* pvbInstallScriptObj) PURE;
    STDMETHOD(put_IsInstallScriptObject)(THIS_ VARIANT_BOOL vbInstallScriptObj) PURE;
    STDMETHOD(get_IsWebProject)(THIS_ VARIANT_BOOL FAR* pvbWebProject) PURE;
    STDMETHOD(put_IsWebProject)(THIS_ VARIANT_BOOL vbWebProject) PURE;
    STDMETHOD(GetTransformFiles)(THIS_ BSTR FAR* pbstrMST, BSTR FAR* pbstrBaseMSI, BSTR FAR* pbstrMSTsToApply) PURE;
    STDMETHOD(get_ContainsISObject)(THIS_ VARIANT_BOOL FAR* pvbContainsISObject) PURE;
    STDMETHOD(GetTransformSummaryInfo)(THIS_ int FAR* pErrConditions, int FAR* pValidation) PURE;
    STDMETHOD(PutTransformSummaryInfo)(THIS_ int iErrConditions, int iValidation) PURE;
    STDMETHOD(get_BadMSTs)(THIS_ BSTR FAR* pbstrMSTs) PURE;
    STDMETHOD(get_OpenedAsReadOnly)(THIS_ VARIANT_BOOL FAR* pvbOpenedAsReadOnly) PURE;
    STDMETHOD(DirectModeAddFile)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(DirectModeAddMergeModule)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(OpenDirectReadOnly)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;

    /* IProjectNeptune methods */
    STDMETHOD(CompareDatabaseWithCurrent)(THIS_ BSTR sDatabase) PURE;
    STDMETHOD(EndCompare)(THIS) PURE;
    STDMETHOD(get_IsCompareMode)(THIS_ VARIANT_BOOL FAR* vbComparing) PURE;
    STDMETHOD(put_MaintainReferentialIntegrity)(THIS_ VARIANT_BOOL vbMaintainReferentialIntegrity) PURE;
    STDMETHOD(get_IsProjectFileText)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsProjectFileText)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ReleaseFileLock)(THIS) PURE;
    STDMETHOD(get_TrueMMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(OpenProject)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, EnumProjectOpenMode eOpenProjectMode) PURE;
#endif

    /* IProjectProteus methods */
    STDMETHOD(get_SaveAsSchema)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_SaveAsSchema)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(SaveEx)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName, VARIANT_BOOL vbIgnoreSaveAsSchema) PURE;
};

typedef enum EnumProjectFileFormat {
    epffBinary = 1,
    epffXML = 2
} EnumProjectFileFormat;

DEFINE_GUID(IID_IProjectIbiza,0xE18AF54FL,0xDA53,0x4D8E,0x9F,0xB0,0x95,0xF3,0xE4,0xFE,0xF3,0xB4);

/* Definition of interface: IProjectIbiza */
#undef INTERFACE
#define INTERFACE IProjectIbiza

DECLARE_INTERFACE_(IProjectIbiza, IProjectProteus)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProject methods */
    STDMETHOD(OpenEx)(THIS_ IDispatch * pStoreHandle, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Open)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName) PURE;
    STDMETHOD(EnableLog)(THIS_ BSTR FAR* strFileName) PURE;
    STDMETHOD(Rename)(THIS_ BSTR strNewFile) PURE;
    STDMETHOD(IsValidKey)(THIS_ BSTR strKey, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Dirty)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_ProjectRoot)(THIS_ IProjectRoot FAR* FAR* pProjectRoot) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(get_IsOpen)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_StoreHandle)(THIS_ IDispatch * FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IProjectEvents FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(CreatePathRecommendations)(THIS_ IPathConvertEvent FAR* pEvent, IPathRecommendations FAR* FAR* pVal) PURE;
    STDMETHOD(ApplyPathRecommendations)(THIS_ IPathRecommendations FAR* pPathRecommendations, IPathConvertEvent FAR* pEvent, VARIANT_BOOL FAR* bCanceled) PURE;
    STDMETHOD(SetCodePageFromLangID)(THIS_ BSTR sLangID, long FAR* lResult) PURE;
    STDMETHOD(get_MMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(putref_MMCatalog)(THIS_ IMMCatalog FAR* pCatalog) PURE;
    STDMETHOD(GetLangID)(THIS_ BSTR sLangName, long FAR* lLangID) PURE;
    STDMETHOD(GetLangName)(THIS_ BSTR sLangID, BSTR FAR* sLangName) PURE;
    STDMETHOD(RaiseCategoryInvalidated)(THIS_ BSTR className) PURE;
    STDMETHOD(StartEvents)(THIS) PURE;
    STDMETHOD(StopEvents)(THIS) PURE;
    STDMETHOD(Compact)(THIS_ BSTR strFileName, IProjectProgressEvents FAR* pProgressEvents, long FAR* lResult) PURE;
    STDMETHOD(RaiseItemChangedEvent)(THIS_ BSTR sClassName, EItemAction eAction, IBusinessObject FAR* pPublisher) PURE;
    STDMETHOD(get_ProjectPathAndFileName)(THIS_ BSTR FAR* bstrProjectPathAndFileName) PURE;

    /* IProject2 methods */
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* pvbReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL vbReadOnly) PURE;
    STDMETHOD(GetAllWindowsLangIds)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(IsValidIsmSchema)(THIS_ VARIANT_BOOL FAR* pvbValidSchema) PURE;
    STDMETHOD(IsScriptBased)(THIS_ VARIANT_BOOL FAR* pvbIsScriptBased) PURE;
    STDMETHOD(SetCodePageInMSIDatabase)(THIS_ BSTR sLangID) PURE;
    STDMETHOD(DropTable)(THIS_ BSTR sTable) PURE;
    STDMETHOD(ImportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(ExportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(get_ScriptBased)(THIS_ VARIANT_BOOL FAR* pvbScriptBased) PURE;
    STDMETHOD(put_ScriptBased)(THIS_ VARIANT_BOOL vbScriptBased) PURE;
    STDMETHOD(get_DoMaintenance)(THIS_ VARIANT_BOOL FAR* pvbDoMaintenance) PURE;
    STDMETHOD(put_DoMaintenance)(THIS_ VARIANT_BOOL vbDoMaintenance) PURE;
    STDMETHOD(RaiseItemChangedEvent2)(THIS_ BSTR sClassName, EItemAction eAction, IUnknown * pPublisher) PURE;
    STDMETHOD(OpenDirect)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(OpenDirectNoVal)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_IsInstallScriptUsed)(THIS_ VARIANT_BOOL FAR* pvbIsInstallScriptUsed) PURE;
    STDMETHOD(ExportToText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(ImportFromText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(SuspendHandle)(THIS) PURE;
    STDMETHOD(ReOpenHandle)(THIS) PURE;
    STDMETHOD(SetCodePage)(THIS_ long lVal, long FAR* lResult) PURE;
    STDMETHOD(GetCodePage)(THIS_ long FAR* plVal) PURE;
    STDMETHOD(OpenNoVal)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, BSTR bstrBaseMsi, BSTR bstrMSTsToApply, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_Lock)(THIS_ VARIANT_BOOL FAR* pvbLock) PURE;
    STDMETHOD(get_QPRoot)(THIS_ IQPRoot FAR* FAR* ppQPRoot) PURE;
    STDMETHOD(RenameButLeaveTempAlone)(THIS_ BSTR strNewFileName) PURE;
    STDMETHOD(CloseTempFile)(THIS_ VARIANT_BOOL bSave, VARIANT_BOOL FAR* bDirty, BSTR FAR* bstrTempFile) PURE;
    STDMETHOD(ReopenTempFile)(THIS_ VARIANT_BOOL bDirty) PURE;
    STDMETHOD(AddValidationError)(THIS_ BSTR bstrTable, BSTR bstrKey, BSTR bstrCol) PURE;
    STDMETHOD(ClearValidationErrors)(THIS) PURE;
    STDMETHOD(IsTableValid)(THIS_ BSTR bstrTable, ETableValidationType FAR* peType) PURE;
    STDMETHOD(IsRecordValid)(THIS_ BSTR bstrTable, BSTR bstrKey, VARIANT FAR* pvCols, VARIANT_BOOL FAR* pbValid) PURE;
    STDMETHOD(get_IsInstallScriptObject)(THIS_ VARIANT_BOOL FAR* pvbInstallScriptObj) PURE;
    STDMETHOD(put_IsInstallScriptObject)(THIS_ VARIANT_BOOL vbInstallScriptObj) PURE;
    STDMETHOD(get_IsWebProject)(THIS_ VARIANT_BOOL FAR* pvbWebProject) PURE;
    STDMETHOD(put_IsWebProject)(THIS_ VARIANT_BOOL vbWebProject) PURE;
    STDMETHOD(GetTransformFiles)(THIS_ BSTR FAR* pbstrMST, BSTR FAR* pbstrBaseMSI, BSTR FAR* pbstrMSTsToApply) PURE;
    STDMETHOD(get_ContainsISObject)(THIS_ VARIANT_BOOL FAR* pvbContainsISObject) PURE;
    STDMETHOD(GetTransformSummaryInfo)(THIS_ int FAR* pErrConditions, int FAR* pValidation) PURE;
    STDMETHOD(PutTransformSummaryInfo)(THIS_ int iErrConditions, int iValidation) PURE;
    STDMETHOD(get_BadMSTs)(THIS_ BSTR FAR* pbstrMSTs) PURE;
    STDMETHOD(get_OpenedAsReadOnly)(THIS_ VARIANT_BOOL FAR* pvbOpenedAsReadOnly) PURE;
    STDMETHOD(DirectModeAddFile)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(DirectModeAddMergeModule)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(OpenDirectReadOnly)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;

    /* IProjectNeptune methods */
    STDMETHOD(CompareDatabaseWithCurrent)(THIS_ BSTR sDatabase) PURE;
    STDMETHOD(EndCompare)(THIS) PURE;
    STDMETHOD(get_IsCompareMode)(THIS_ VARIANT_BOOL FAR* vbComparing) PURE;
    STDMETHOD(put_MaintainReferentialIntegrity)(THIS_ VARIANT_BOOL vbMaintainReferentialIntegrity) PURE;
    STDMETHOD(get_IsProjectFileText)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsProjectFileText)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ReleaseFileLock)(THIS) PURE;
    STDMETHOD(get_TrueMMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(OpenProject)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, EnumProjectOpenMode eOpenProjectMode) PURE;

    /* IProjectProteus methods */
    STDMETHOD(get_SaveAsSchema)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_SaveAsSchema)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(SaveEx)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName, VARIANT_BOOL vbIgnoreSaveAsSchema) PURE;
#endif

    /* IProjectIbiza methods */
    STDMETHOD(get_ProjectFileFormat)(THIS_ EnumProjectFileFormat FAR* eProjFileFormat) PURE;
    STDMETHOD(put_ProjectFileFormat)(THIS_ EnumProjectFileFormat eProjFileFormat) PURE;
};

DEFINE_GUID(IID_IProjectIxtapa,0x956FCF2DL,0x7FE1,0x4750,0xB8,0x3E,0x1A,0x87,0x08,0xCA,0xDD,0x60);

/* Definition of interface: IProjectIxtapa */
#undef INTERFACE
#define INTERFACE IProjectIxtapa

DECLARE_INTERFACE_(IProjectIxtapa, IProjectIbiza)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProject methods */
    STDMETHOD(OpenEx)(THIS_ IDispatch * pStoreHandle, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Open)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName) PURE;
    STDMETHOD(EnableLog)(THIS_ BSTR FAR* strFileName) PURE;
    STDMETHOD(Rename)(THIS_ BSTR strNewFile) PURE;
    STDMETHOD(IsValidKey)(THIS_ BSTR strKey, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Dirty)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_ProjectRoot)(THIS_ IProjectRoot FAR* FAR* pProjectRoot) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(get_IsOpen)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_StoreHandle)(THIS_ IDispatch * FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IProjectEvents FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(CreatePathRecommendations)(THIS_ IPathConvertEvent FAR* pEvent, IPathRecommendations FAR* FAR* pVal) PURE;
    STDMETHOD(ApplyPathRecommendations)(THIS_ IPathRecommendations FAR* pPathRecommendations, IPathConvertEvent FAR* pEvent, VARIANT_BOOL FAR* bCanceled) PURE;
    STDMETHOD(SetCodePageFromLangID)(THIS_ BSTR sLangID, long FAR* lResult) PURE;
    STDMETHOD(get_MMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(putref_MMCatalog)(THIS_ IMMCatalog FAR* pCatalog) PURE;
    STDMETHOD(GetLangID)(THIS_ BSTR sLangName, long FAR* lLangID) PURE;
    STDMETHOD(GetLangName)(THIS_ BSTR sLangID, BSTR FAR* sLangName) PURE;
    STDMETHOD(RaiseCategoryInvalidated)(THIS_ BSTR className) PURE;
    STDMETHOD(StartEvents)(THIS) PURE;
    STDMETHOD(StopEvents)(THIS) PURE;
    STDMETHOD(Compact)(THIS_ BSTR strFileName, IProjectProgressEvents FAR* pProgressEvents, long FAR* lResult) PURE;
    STDMETHOD(RaiseItemChangedEvent)(THIS_ BSTR sClassName, EItemAction eAction, IBusinessObject FAR* pPublisher) PURE;
    STDMETHOD(get_ProjectPathAndFileName)(THIS_ BSTR FAR* bstrProjectPathAndFileName) PURE;

    /* IProject2 methods */
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* pvbReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL vbReadOnly) PURE;
    STDMETHOD(GetAllWindowsLangIds)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(IsValidIsmSchema)(THIS_ VARIANT_BOOL FAR* pvbValidSchema) PURE;
    STDMETHOD(IsScriptBased)(THIS_ VARIANT_BOOL FAR* pvbIsScriptBased) PURE;
    STDMETHOD(SetCodePageInMSIDatabase)(THIS_ BSTR sLangID) PURE;
    STDMETHOD(DropTable)(THIS_ BSTR sTable) PURE;
    STDMETHOD(ImportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(ExportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(get_ScriptBased)(THIS_ VARIANT_BOOL FAR* pvbScriptBased) PURE;
    STDMETHOD(put_ScriptBased)(THIS_ VARIANT_BOOL vbScriptBased) PURE;
    STDMETHOD(get_DoMaintenance)(THIS_ VARIANT_BOOL FAR* pvbDoMaintenance) PURE;
    STDMETHOD(put_DoMaintenance)(THIS_ VARIANT_BOOL vbDoMaintenance) PURE;
    STDMETHOD(RaiseItemChangedEvent2)(THIS_ BSTR sClassName, EItemAction eAction, IUnknown * pPublisher) PURE;
    STDMETHOD(OpenDirect)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(OpenDirectNoVal)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_IsInstallScriptUsed)(THIS_ VARIANT_BOOL FAR* pvbIsInstallScriptUsed) PURE;
    STDMETHOD(ExportToText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(ImportFromText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(SuspendHandle)(THIS) PURE;
    STDMETHOD(ReOpenHandle)(THIS) PURE;
    STDMETHOD(SetCodePage)(THIS_ long lVal, long FAR* lResult) PURE;
    STDMETHOD(GetCodePage)(THIS_ long FAR* plVal) PURE;
    STDMETHOD(OpenNoVal)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, BSTR bstrBaseMsi, BSTR bstrMSTsToApply, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_Lock)(THIS_ VARIANT_BOOL FAR* pvbLock) PURE;
    STDMETHOD(get_QPRoot)(THIS_ IQPRoot FAR* FAR* ppQPRoot) PURE;
    STDMETHOD(RenameButLeaveTempAlone)(THIS_ BSTR strNewFileName) PURE;
    STDMETHOD(CloseTempFile)(THIS_ VARIANT_BOOL bSave, VARIANT_BOOL FAR* bDirty, BSTR FAR* bstrTempFile) PURE;
    STDMETHOD(ReopenTempFile)(THIS_ VARIANT_BOOL bDirty) PURE;
    STDMETHOD(AddValidationError)(THIS_ BSTR bstrTable, BSTR bstrKey, BSTR bstrCol) PURE;
    STDMETHOD(ClearValidationErrors)(THIS) PURE;
    STDMETHOD(IsTableValid)(THIS_ BSTR bstrTable, ETableValidationType FAR* peType) PURE;
    STDMETHOD(IsRecordValid)(THIS_ BSTR bstrTable, BSTR bstrKey, VARIANT FAR* pvCols, VARIANT_BOOL FAR* pbValid) PURE;
    STDMETHOD(get_IsInstallScriptObject)(THIS_ VARIANT_BOOL FAR* pvbInstallScriptObj) PURE;
    STDMETHOD(put_IsInstallScriptObject)(THIS_ VARIANT_BOOL vbInstallScriptObj) PURE;
    STDMETHOD(get_IsWebProject)(THIS_ VARIANT_BOOL FAR* pvbWebProject) PURE;
    STDMETHOD(put_IsWebProject)(THIS_ VARIANT_BOOL vbWebProject) PURE;
    STDMETHOD(GetTransformFiles)(THIS_ BSTR FAR* pbstrMST, BSTR FAR* pbstrBaseMSI, BSTR FAR* pbstrMSTsToApply) PURE;
    STDMETHOD(get_ContainsISObject)(THIS_ VARIANT_BOOL FAR* pvbContainsISObject) PURE;
    STDMETHOD(GetTransformSummaryInfo)(THIS_ int FAR* pErrConditions, int FAR* pValidation) PURE;
    STDMETHOD(PutTransformSummaryInfo)(THIS_ int iErrConditions, int iValidation) PURE;
    STDMETHOD(get_BadMSTs)(THIS_ BSTR FAR* pbstrMSTs) PURE;
    STDMETHOD(get_OpenedAsReadOnly)(THIS_ VARIANT_BOOL FAR* pvbOpenedAsReadOnly) PURE;
    STDMETHOD(DirectModeAddFile)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(DirectModeAddMergeModule)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(OpenDirectReadOnly)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;

    /* IProjectNeptune methods */
    STDMETHOD(CompareDatabaseWithCurrent)(THIS_ BSTR sDatabase) PURE;
    STDMETHOD(EndCompare)(THIS) PURE;
    STDMETHOD(get_IsCompareMode)(THIS_ VARIANT_BOOL FAR* vbComparing) PURE;
    STDMETHOD(put_MaintainReferentialIntegrity)(THIS_ VARIANT_BOOL vbMaintainReferentialIntegrity) PURE;
    STDMETHOD(get_IsProjectFileText)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsProjectFileText)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ReleaseFileLock)(THIS) PURE;
    STDMETHOD(get_TrueMMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(OpenProject)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, EnumProjectOpenMode eOpenProjectMode) PURE;

    /* IProjectProteus methods */
    STDMETHOD(get_SaveAsSchema)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_SaveAsSchema)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(SaveEx)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName, VARIANT_BOOL vbIgnoreSaveAsSchema) PURE;

    /* IProjectIbiza methods */
    STDMETHOD(get_ProjectFileFormat)(THIS_ EnumProjectFileFormat FAR* eProjFileFormat) PURE;
    STDMETHOD(put_ProjectFileFormat)(THIS_ EnumProjectFileFormat eProjFileFormat) PURE;
#endif

    /* IProjectIxtapa methods */
    STDMETHOD(get_DTE)(THIS_ IDispatch * FAR* ppDTE) PURE;
    STDMETHOD(put_DTE)(THIS_ IDispatch * pDTE) PURE;
    STDMETHOD(ReplaceTempFile)(THIS) PURE;
    STDMETHOD(SaveMSBuildScript)(THIS) PURE;
    STDMETHOD(get_IsDimUnitTestPrj)(THIS_ VARIANT_BOOL FAR* pvbDimUnitTestPrj) PURE;
};

DEFINE_GUID(IID_IProjectJustice,0xDC938885L,0xB11D,0x4F5B,0x96,0x03,0xA5,0x71,0x4B,0x49,0x29,0xEF);

/* Definition of interface: IProjectJustice */
#undef INTERFACE
#define INTERFACE IProjectJustice

DECLARE_INTERFACE_(IProjectJustice, IProjectIxtapa)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProject methods */
    STDMETHOD(OpenEx)(THIS_ IDispatch * pStoreHandle, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Open)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName) PURE;
    STDMETHOD(EnableLog)(THIS_ BSTR FAR* strFileName) PURE;
    STDMETHOD(Rename)(THIS_ BSTR strNewFile) PURE;
    STDMETHOD(IsValidKey)(THIS_ BSTR strKey, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Dirty)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_ProjectRoot)(THIS_ IProjectRoot FAR* FAR* pProjectRoot) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(get_IsOpen)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_StoreHandle)(THIS_ IDispatch * FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IProjectEvents FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(CreatePathRecommendations)(THIS_ IPathConvertEvent FAR* pEvent, IPathRecommendations FAR* FAR* pVal) PURE;
    STDMETHOD(ApplyPathRecommendations)(THIS_ IPathRecommendations FAR* pPathRecommendations, IPathConvertEvent FAR* pEvent, VARIANT_BOOL FAR* bCanceled) PURE;
    STDMETHOD(SetCodePageFromLangID)(THIS_ BSTR sLangID, long FAR* lResult) PURE;
    STDMETHOD(get_MMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(putref_MMCatalog)(THIS_ IMMCatalog FAR* pCatalog) PURE;
    STDMETHOD(GetLangID)(THIS_ BSTR sLangName, long FAR* lLangID) PURE;
    STDMETHOD(GetLangName)(THIS_ BSTR sLangID, BSTR FAR* sLangName) PURE;
    STDMETHOD(RaiseCategoryInvalidated)(THIS_ BSTR className) PURE;
    STDMETHOD(StartEvents)(THIS) PURE;
    STDMETHOD(StopEvents)(THIS) PURE;
    STDMETHOD(Compact)(THIS_ BSTR strFileName, IProjectProgressEvents FAR* pProgressEvents, long FAR* lResult) PURE;
    STDMETHOD(RaiseItemChangedEvent)(THIS_ BSTR sClassName, EItemAction eAction, IBusinessObject FAR* pPublisher) PURE;
    STDMETHOD(get_ProjectPathAndFileName)(THIS_ BSTR FAR* bstrProjectPathAndFileName) PURE;

    /* IProject2 methods */
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* pvbReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL vbReadOnly) PURE;
    STDMETHOD(GetAllWindowsLangIds)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(IsValidIsmSchema)(THIS_ VARIANT_BOOL FAR* pvbValidSchema) PURE;
    STDMETHOD(IsScriptBased)(THIS_ VARIANT_BOOL FAR* pvbIsScriptBased) PURE;
    STDMETHOD(SetCodePageInMSIDatabase)(THIS_ BSTR sLangID) PURE;
    STDMETHOD(DropTable)(THIS_ BSTR sTable) PURE;
    STDMETHOD(ImportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(ExportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(get_ScriptBased)(THIS_ VARIANT_BOOL FAR* pvbScriptBased) PURE;
    STDMETHOD(put_ScriptBased)(THIS_ VARIANT_BOOL vbScriptBased) PURE;
    STDMETHOD(get_DoMaintenance)(THIS_ VARIANT_BOOL FAR* pvbDoMaintenance) PURE;
    STDMETHOD(put_DoMaintenance)(THIS_ VARIANT_BOOL vbDoMaintenance) PURE;
    STDMETHOD(RaiseItemChangedEvent2)(THIS_ BSTR sClassName, EItemAction eAction, IUnknown * pPublisher) PURE;
    STDMETHOD(OpenDirect)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(OpenDirectNoVal)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_IsInstallScriptUsed)(THIS_ VARIANT_BOOL FAR* pvbIsInstallScriptUsed) PURE;
    STDMETHOD(ExportToText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(ImportFromText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(SuspendHandle)(THIS) PURE;
    STDMETHOD(ReOpenHandle)(THIS) PURE;
    STDMETHOD(SetCodePage)(THIS_ long lVal, long FAR* lResult) PURE;
    STDMETHOD(GetCodePage)(THIS_ long FAR* plVal) PURE;
    STDMETHOD(OpenNoVal)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, BSTR bstrBaseMsi, BSTR bstrMSTsToApply, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_Lock)(THIS_ VARIANT_BOOL FAR* pvbLock) PURE;
    STDMETHOD(get_QPRoot)(THIS_ IQPRoot FAR* FAR* ppQPRoot) PURE;
    STDMETHOD(RenameButLeaveTempAlone)(THIS_ BSTR strNewFileName) PURE;
    STDMETHOD(CloseTempFile)(THIS_ VARIANT_BOOL bSave, VARIANT_BOOL FAR* bDirty, BSTR FAR* bstrTempFile) PURE;
    STDMETHOD(ReopenTempFile)(THIS_ VARIANT_BOOL bDirty) PURE;
    STDMETHOD(AddValidationError)(THIS_ BSTR bstrTable, BSTR bstrKey, BSTR bstrCol) PURE;
    STDMETHOD(ClearValidationErrors)(THIS) PURE;
    STDMETHOD(IsTableValid)(THIS_ BSTR bstrTable, ETableValidationType FAR* peType) PURE;
    STDMETHOD(IsRecordValid)(THIS_ BSTR bstrTable, BSTR bstrKey, VARIANT FAR* pvCols, VARIANT_BOOL FAR* pbValid) PURE;
    STDMETHOD(get_IsInstallScriptObject)(THIS_ VARIANT_BOOL FAR* pvbInstallScriptObj) PURE;
    STDMETHOD(put_IsInstallScriptObject)(THIS_ VARIANT_BOOL vbInstallScriptObj) PURE;
    STDMETHOD(get_IsWebProject)(THIS_ VARIANT_BOOL FAR* pvbWebProject) PURE;
    STDMETHOD(put_IsWebProject)(THIS_ VARIANT_BOOL vbWebProject) PURE;
    STDMETHOD(GetTransformFiles)(THIS_ BSTR FAR* pbstrMST, BSTR FAR* pbstrBaseMSI, BSTR FAR* pbstrMSTsToApply) PURE;
    STDMETHOD(get_ContainsISObject)(THIS_ VARIANT_BOOL FAR* pvbContainsISObject) PURE;
    STDMETHOD(GetTransformSummaryInfo)(THIS_ int FAR* pErrConditions, int FAR* pValidation) PURE;
    STDMETHOD(PutTransformSummaryInfo)(THIS_ int iErrConditions, int iValidation) PURE;
    STDMETHOD(get_BadMSTs)(THIS_ BSTR FAR* pbstrMSTs) PURE;
    STDMETHOD(get_OpenedAsReadOnly)(THIS_ VARIANT_BOOL FAR* pvbOpenedAsReadOnly) PURE;
    STDMETHOD(DirectModeAddFile)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(DirectModeAddMergeModule)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(OpenDirectReadOnly)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;

    /* IProjectNeptune methods */
    STDMETHOD(CompareDatabaseWithCurrent)(THIS_ BSTR sDatabase) PURE;
    STDMETHOD(EndCompare)(THIS) PURE;
    STDMETHOD(get_IsCompareMode)(THIS_ VARIANT_BOOL FAR* vbComparing) PURE;
    STDMETHOD(put_MaintainReferentialIntegrity)(THIS_ VARIANT_BOOL vbMaintainReferentialIntegrity) PURE;
    STDMETHOD(get_IsProjectFileText)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsProjectFileText)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ReleaseFileLock)(THIS) PURE;
    STDMETHOD(get_TrueMMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(OpenProject)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, EnumProjectOpenMode eOpenProjectMode) PURE;

    /* IProjectProteus methods */
    STDMETHOD(get_SaveAsSchema)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_SaveAsSchema)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(SaveEx)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName, VARIANT_BOOL vbIgnoreSaveAsSchema) PURE;

    /* IProjectIbiza methods */
    STDMETHOD(get_ProjectFileFormat)(THIS_ EnumProjectFileFormat FAR* eProjFileFormat) PURE;
    STDMETHOD(put_ProjectFileFormat)(THIS_ EnumProjectFileFormat eProjFileFormat) PURE;

    /* IProjectIxtapa methods */
    STDMETHOD(get_DTE)(THIS_ IDispatch * FAR* ppDTE) PURE;
    STDMETHOD(put_DTE)(THIS_ IDispatch * pDTE) PURE;
    STDMETHOD(ReplaceTempFile)(THIS) PURE;
    STDMETHOD(SaveMSBuildScript)(THIS) PURE;
    STDMETHOD(get_IsDimUnitTestPrj)(THIS_ VARIANT_BOOL FAR* pvbDimUnitTestPrj) PURE;
#endif

    /* IProjectJustice methods */
    STDMETHOD(get_UseMSI45EmbeddedUI)(THIS_ VARIANT_BOOL FAR* vbUseMSI45EEUI) PURE;
    STDMETHOD(put_UseMSI45EmbeddedUI)(THIS_ VARIANT_BOOL vbUseMSI45EEUI) PURE;
};

DEFINE_GUID(IID_IProjectJade,0xEE46FB90L,0x7567,0x4DD6,0xBE,0xB6,0xFE,0x2E,0x5F,0xF6,0x29,0xEC);

/* Definition of interface: IProjectJade */
#undef INTERFACE
#define INTERFACE IProjectJade

DECLARE_INTERFACE_(IProjectJade, IProjectJustice)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProject methods */
    STDMETHOD(OpenEx)(THIS_ IDispatch * pStoreHandle, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Open)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName) PURE;
    STDMETHOD(EnableLog)(THIS_ BSTR FAR* strFileName) PURE;
    STDMETHOD(Rename)(THIS_ BSTR strNewFile) PURE;
    STDMETHOD(IsValidKey)(THIS_ BSTR strKey, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Dirty)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_ProjectRoot)(THIS_ IProjectRoot FAR* FAR* pProjectRoot) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(get_IsOpen)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_StoreHandle)(THIS_ IDispatch * FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IProjectEvents FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(CreatePathRecommendations)(THIS_ IPathConvertEvent FAR* pEvent, IPathRecommendations FAR* FAR* pVal) PURE;
    STDMETHOD(ApplyPathRecommendations)(THIS_ IPathRecommendations FAR* pPathRecommendations, IPathConvertEvent FAR* pEvent, VARIANT_BOOL FAR* bCanceled) PURE;
    STDMETHOD(SetCodePageFromLangID)(THIS_ BSTR sLangID, long FAR* lResult) PURE;
    STDMETHOD(get_MMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(putref_MMCatalog)(THIS_ IMMCatalog FAR* pCatalog) PURE;
    STDMETHOD(GetLangID)(THIS_ BSTR sLangName, long FAR* lLangID) PURE;
    STDMETHOD(GetLangName)(THIS_ BSTR sLangID, BSTR FAR* sLangName) PURE;
    STDMETHOD(RaiseCategoryInvalidated)(THIS_ BSTR className) PURE;
    STDMETHOD(StartEvents)(THIS) PURE;
    STDMETHOD(StopEvents)(THIS) PURE;
    STDMETHOD(Compact)(THIS_ BSTR strFileName, IProjectProgressEvents FAR* pProgressEvents, long FAR* lResult) PURE;
    STDMETHOD(RaiseItemChangedEvent)(THIS_ BSTR sClassName, EItemAction eAction, IBusinessObject FAR* pPublisher) PURE;
    STDMETHOD(get_ProjectPathAndFileName)(THIS_ BSTR FAR* bstrProjectPathAndFileName) PURE;

    /* IProject2 methods */
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* pvbReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL vbReadOnly) PURE;
    STDMETHOD(GetAllWindowsLangIds)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(IsValidIsmSchema)(THIS_ VARIANT_BOOL FAR* pvbValidSchema) PURE;
    STDMETHOD(IsScriptBased)(THIS_ VARIANT_BOOL FAR* pvbIsScriptBased) PURE;
    STDMETHOD(SetCodePageInMSIDatabase)(THIS_ BSTR sLangID) PURE;
    STDMETHOD(DropTable)(THIS_ BSTR sTable) PURE;
    STDMETHOD(ImportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(ExportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(get_ScriptBased)(THIS_ VARIANT_BOOL FAR* pvbScriptBased) PURE;
    STDMETHOD(put_ScriptBased)(THIS_ VARIANT_BOOL vbScriptBased) PURE;
    STDMETHOD(get_DoMaintenance)(THIS_ VARIANT_BOOL FAR* pvbDoMaintenance) PURE;
    STDMETHOD(put_DoMaintenance)(THIS_ VARIANT_BOOL vbDoMaintenance) PURE;
    STDMETHOD(RaiseItemChangedEvent2)(THIS_ BSTR sClassName, EItemAction eAction, IUnknown * pPublisher) PURE;
    STDMETHOD(OpenDirect)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(OpenDirectNoVal)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_IsInstallScriptUsed)(THIS_ VARIANT_BOOL FAR* pvbIsInstallScriptUsed) PURE;
    STDMETHOD(ExportToText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(ImportFromText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(SuspendHandle)(THIS) PURE;
    STDMETHOD(ReOpenHandle)(THIS) PURE;
    STDMETHOD(SetCodePage)(THIS_ long lVal, long FAR* lResult) PURE;
    STDMETHOD(GetCodePage)(THIS_ long FAR* plVal) PURE;
    STDMETHOD(OpenNoVal)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, BSTR bstrBaseMsi, BSTR bstrMSTsToApply, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_Lock)(THIS_ VARIANT_BOOL FAR* pvbLock) PURE;
    STDMETHOD(get_QPRoot)(THIS_ IQPRoot FAR* FAR* ppQPRoot) PURE;
    STDMETHOD(RenameButLeaveTempAlone)(THIS_ BSTR strNewFileName) PURE;
    STDMETHOD(CloseTempFile)(THIS_ VARIANT_BOOL bSave, VARIANT_BOOL FAR* bDirty, BSTR FAR* bstrTempFile) PURE;
    STDMETHOD(ReopenTempFile)(THIS_ VARIANT_BOOL bDirty) PURE;
    STDMETHOD(AddValidationError)(THIS_ BSTR bstrTable, BSTR bstrKey, BSTR bstrCol) PURE;
    STDMETHOD(ClearValidationErrors)(THIS) PURE;
    STDMETHOD(IsTableValid)(THIS_ BSTR bstrTable, ETableValidationType FAR* peType) PURE;
    STDMETHOD(IsRecordValid)(THIS_ BSTR bstrTable, BSTR bstrKey, VARIANT FAR* pvCols, VARIANT_BOOL FAR* pbValid) PURE;
    STDMETHOD(get_IsInstallScriptObject)(THIS_ VARIANT_BOOL FAR* pvbInstallScriptObj) PURE;
    STDMETHOD(put_IsInstallScriptObject)(THIS_ VARIANT_BOOL vbInstallScriptObj) PURE;
    STDMETHOD(get_IsWebProject)(THIS_ VARIANT_BOOL FAR* pvbWebProject) PURE;
    STDMETHOD(put_IsWebProject)(THIS_ VARIANT_BOOL vbWebProject) PURE;
    STDMETHOD(GetTransformFiles)(THIS_ BSTR FAR* pbstrMST, BSTR FAR* pbstrBaseMSI, BSTR FAR* pbstrMSTsToApply) PURE;
    STDMETHOD(get_ContainsISObject)(THIS_ VARIANT_BOOL FAR* pvbContainsISObject) PURE;
    STDMETHOD(GetTransformSummaryInfo)(THIS_ int FAR* pErrConditions, int FAR* pValidation) PURE;
    STDMETHOD(PutTransformSummaryInfo)(THIS_ int iErrConditions, int iValidation) PURE;
    STDMETHOD(get_BadMSTs)(THIS_ BSTR FAR* pbstrMSTs) PURE;
    STDMETHOD(get_OpenedAsReadOnly)(THIS_ VARIANT_BOOL FAR* pvbOpenedAsReadOnly) PURE;
    STDMETHOD(DirectModeAddFile)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(DirectModeAddMergeModule)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(OpenDirectReadOnly)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;

    /* IProjectNeptune methods */
    STDMETHOD(CompareDatabaseWithCurrent)(THIS_ BSTR sDatabase) PURE;
    STDMETHOD(EndCompare)(THIS) PURE;
    STDMETHOD(get_IsCompareMode)(THIS_ VARIANT_BOOL FAR* vbComparing) PURE;
    STDMETHOD(put_MaintainReferentialIntegrity)(THIS_ VARIANT_BOOL vbMaintainReferentialIntegrity) PURE;
    STDMETHOD(get_IsProjectFileText)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsProjectFileText)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ReleaseFileLock)(THIS) PURE;
    STDMETHOD(get_TrueMMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(OpenProject)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, EnumProjectOpenMode eOpenProjectMode) PURE;

    /* IProjectProteus methods */
    STDMETHOD(get_SaveAsSchema)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_SaveAsSchema)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(SaveEx)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName, VARIANT_BOOL vbIgnoreSaveAsSchema) PURE;

    /* IProjectIbiza methods */
    STDMETHOD(get_ProjectFileFormat)(THIS_ EnumProjectFileFormat FAR* eProjFileFormat) PURE;
    STDMETHOD(put_ProjectFileFormat)(THIS_ EnumProjectFileFormat eProjFileFormat) PURE;

    /* IProjectIxtapa methods */
    STDMETHOD(get_DTE)(THIS_ IDispatch * FAR* ppDTE) PURE;
    STDMETHOD(put_DTE)(THIS_ IDispatch * pDTE) PURE;
    STDMETHOD(ReplaceTempFile)(THIS) PURE;
    STDMETHOD(SaveMSBuildScript)(THIS) PURE;
    STDMETHOD(get_IsDimUnitTestPrj)(THIS_ VARIANT_BOOL FAR* pvbDimUnitTestPrj) PURE;

    /* IProjectJustice methods */
    STDMETHOD(get_UseMSI45EmbeddedUI)(THIS_ VARIANT_BOOL FAR* vbUseMSI45EEUI) PURE;
    STDMETHOD(put_UseMSI45EmbeddedUI)(THIS_ VARIANT_BOOL vbUseMSI45EEUI) PURE;
#endif

    /* IProjectJade methods */
    STDMETHOD(get_ISBillBoardType)(THIS_ BSTR FAR* bstrValue) PURE;
    STDMETHOD(put_ISBillBoardType)(THIS_ BSTR bstrValue) PURE;
};

DEFINE_GUID(IID_IProjectMajesty,0x86A5410BL,0x2BDF,0x41BC,0x80,0xF9,0x6A,0x18,0xC5,0x60,0x42,0x80);

/* Definition of interface: IProjectMajesty */
#undef INTERFACE
#define INTERFACE IProjectMajesty

DECLARE_INTERFACE_(IProjectMajesty, IProjectJade)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProject methods */
    STDMETHOD(OpenEx)(THIS_ IDispatch * pStoreHandle, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Open)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName) PURE;
    STDMETHOD(EnableLog)(THIS_ BSTR FAR* strFileName) PURE;
    STDMETHOD(Rename)(THIS_ BSTR strNewFile) PURE;
    STDMETHOD(IsValidKey)(THIS_ BSTR strKey, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Dirty)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_ProjectRoot)(THIS_ IProjectRoot FAR* FAR* pProjectRoot) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(get_IsOpen)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_StoreHandle)(THIS_ IDispatch * FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IProjectEvents FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(CreatePathRecommendations)(THIS_ IPathConvertEvent FAR* pEvent, IPathRecommendations FAR* FAR* pVal) PURE;
    STDMETHOD(ApplyPathRecommendations)(THIS_ IPathRecommendations FAR* pPathRecommendations, IPathConvertEvent FAR* pEvent, VARIANT_BOOL FAR* bCanceled) PURE;
    STDMETHOD(SetCodePageFromLangID)(THIS_ BSTR sLangID, long FAR* lResult) PURE;
    STDMETHOD(get_MMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(putref_MMCatalog)(THIS_ IMMCatalog FAR* pCatalog) PURE;
    STDMETHOD(GetLangID)(THIS_ BSTR sLangName, long FAR* lLangID) PURE;
    STDMETHOD(GetLangName)(THIS_ BSTR sLangID, BSTR FAR* sLangName) PURE;
    STDMETHOD(RaiseCategoryInvalidated)(THIS_ BSTR className) PURE;
    STDMETHOD(StartEvents)(THIS) PURE;
    STDMETHOD(StopEvents)(THIS) PURE;
    STDMETHOD(Compact)(THIS_ BSTR strFileName, IProjectProgressEvents FAR* pProgressEvents, long FAR* lResult) PURE;
    STDMETHOD(RaiseItemChangedEvent)(THIS_ BSTR sClassName, EItemAction eAction, IBusinessObject FAR* pPublisher) PURE;
    STDMETHOD(get_ProjectPathAndFileName)(THIS_ BSTR FAR* bstrProjectPathAndFileName) PURE;

    /* IProject2 methods */
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* pvbReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL vbReadOnly) PURE;
    STDMETHOD(GetAllWindowsLangIds)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(IsValidIsmSchema)(THIS_ VARIANT_BOOL FAR* pvbValidSchema) PURE;
    STDMETHOD(IsScriptBased)(THIS_ VARIANT_BOOL FAR* pvbIsScriptBased) PURE;
    STDMETHOD(SetCodePageInMSIDatabase)(THIS_ BSTR sLangID) PURE;
    STDMETHOD(DropTable)(THIS_ BSTR sTable) PURE;
    STDMETHOD(ImportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(ExportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(get_ScriptBased)(THIS_ VARIANT_BOOL FAR* pvbScriptBased) PURE;
    STDMETHOD(put_ScriptBased)(THIS_ VARIANT_BOOL vbScriptBased) PURE;
    STDMETHOD(get_DoMaintenance)(THIS_ VARIANT_BOOL FAR* pvbDoMaintenance) PURE;
    STDMETHOD(put_DoMaintenance)(THIS_ VARIANT_BOOL vbDoMaintenance) PURE;
    STDMETHOD(RaiseItemChangedEvent2)(THIS_ BSTR sClassName, EItemAction eAction, IUnknown * pPublisher) PURE;
    STDMETHOD(OpenDirect)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(OpenDirectNoVal)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_IsInstallScriptUsed)(THIS_ VARIANT_BOOL FAR* pvbIsInstallScriptUsed) PURE;
    STDMETHOD(ExportToText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(ImportFromText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(SuspendHandle)(THIS) PURE;
    STDMETHOD(ReOpenHandle)(THIS) PURE;
    STDMETHOD(SetCodePage)(THIS_ long lVal, long FAR* lResult) PURE;
    STDMETHOD(GetCodePage)(THIS_ long FAR* plVal) PURE;
    STDMETHOD(OpenNoVal)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, BSTR bstrBaseMsi, BSTR bstrMSTsToApply, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_Lock)(THIS_ VARIANT_BOOL FAR* pvbLock) PURE;
    STDMETHOD(get_QPRoot)(THIS_ IQPRoot FAR* FAR* ppQPRoot) PURE;
    STDMETHOD(RenameButLeaveTempAlone)(THIS_ BSTR strNewFileName) PURE;
    STDMETHOD(CloseTempFile)(THIS_ VARIANT_BOOL bSave, VARIANT_BOOL FAR* bDirty, BSTR FAR* bstrTempFile) PURE;
    STDMETHOD(ReopenTempFile)(THIS_ VARIANT_BOOL bDirty) PURE;
    STDMETHOD(AddValidationError)(THIS_ BSTR bstrTable, BSTR bstrKey, BSTR bstrCol) PURE;
    STDMETHOD(ClearValidationErrors)(THIS) PURE;
    STDMETHOD(IsTableValid)(THIS_ BSTR bstrTable, ETableValidationType FAR* peType) PURE;
    STDMETHOD(IsRecordValid)(THIS_ BSTR bstrTable, BSTR bstrKey, VARIANT FAR* pvCols, VARIANT_BOOL FAR* pbValid) PURE;
    STDMETHOD(get_IsInstallScriptObject)(THIS_ VARIANT_BOOL FAR* pvbInstallScriptObj) PURE;
    STDMETHOD(put_IsInstallScriptObject)(THIS_ VARIANT_BOOL vbInstallScriptObj) PURE;
    STDMETHOD(get_IsWebProject)(THIS_ VARIANT_BOOL FAR* pvbWebProject) PURE;
    STDMETHOD(put_IsWebProject)(THIS_ VARIANT_BOOL vbWebProject) PURE;
    STDMETHOD(GetTransformFiles)(THIS_ BSTR FAR* pbstrMST, BSTR FAR* pbstrBaseMSI, BSTR FAR* pbstrMSTsToApply) PURE;
    STDMETHOD(get_ContainsISObject)(THIS_ VARIANT_BOOL FAR* pvbContainsISObject) PURE;
    STDMETHOD(GetTransformSummaryInfo)(THIS_ int FAR* pErrConditions, int FAR* pValidation) PURE;
    STDMETHOD(PutTransformSummaryInfo)(THIS_ int iErrConditions, int iValidation) PURE;
    STDMETHOD(get_BadMSTs)(THIS_ BSTR FAR* pbstrMSTs) PURE;
    STDMETHOD(get_OpenedAsReadOnly)(THIS_ VARIANT_BOOL FAR* pvbOpenedAsReadOnly) PURE;
    STDMETHOD(DirectModeAddFile)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(DirectModeAddMergeModule)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(OpenDirectReadOnly)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;

    /* IProjectNeptune methods */
    STDMETHOD(CompareDatabaseWithCurrent)(THIS_ BSTR sDatabase) PURE;
    STDMETHOD(EndCompare)(THIS) PURE;
    STDMETHOD(get_IsCompareMode)(THIS_ VARIANT_BOOL FAR* vbComparing) PURE;
    STDMETHOD(put_MaintainReferentialIntegrity)(THIS_ VARIANT_BOOL vbMaintainReferentialIntegrity) PURE;
    STDMETHOD(get_IsProjectFileText)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsProjectFileText)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ReleaseFileLock)(THIS) PURE;
    STDMETHOD(get_TrueMMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(OpenProject)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, EnumProjectOpenMode eOpenProjectMode) PURE;

    /* IProjectProteus methods */
    STDMETHOD(get_SaveAsSchema)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_SaveAsSchema)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(SaveEx)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName, VARIANT_BOOL vbIgnoreSaveAsSchema) PURE;

    /* IProjectIbiza methods */
    STDMETHOD(get_ProjectFileFormat)(THIS_ EnumProjectFileFormat FAR* eProjFileFormat) PURE;
    STDMETHOD(put_ProjectFileFormat)(THIS_ EnumProjectFileFormat eProjFileFormat) PURE;

    /* IProjectIxtapa methods */
    STDMETHOD(get_DTE)(THIS_ IDispatch * FAR* ppDTE) PURE;
    STDMETHOD(put_DTE)(THIS_ IDispatch * pDTE) PURE;
    STDMETHOD(ReplaceTempFile)(THIS) PURE;
    STDMETHOD(SaveMSBuildScript)(THIS) PURE;
    STDMETHOD(get_IsDimUnitTestPrj)(THIS_ VARIANT_BOOL FAR* pvbDimUnitTestPrj) PURE;

    /* IProjectJustice methods */
    STDMETHOD(get_UseMSI45EmbeddedUI)(THIS_ VARIANT_BOOL FAR* vbUseMSI45EEUI) PURE;
    STDMETHOD(put_UseMSI45EmbeddedUI)(THIS_ VARIANT_BOOL vbUseMSI45EEUI) PURE;

    /* IProjectJade methods */
    STDMETHOD(get_ISBillBoardType)(THIS_ BSTR FAR* bstrValue) PURE;
    STDMETHOD(put_ISBillBoardType)(THIS_ BSTR bstrValue) PURE;
#endif

    /* IProjectMajesty methods */
    STDMETHOD(get_VsServiceProvider)(THIS_ IUnknown * FAR* ppVsServiceProvider) PURE;
    STDMETHOD(put_VsServiceProvider)(THIS_ IUnknown * pVsServiceProvider) PURE;
};

DEFINE_GUID(IID_IProjectNeo,0x54F2D788L,0x4FEB,0x418A,0xBE,0xAA,0x3E,0x3F,0x71,0xF3,0x14,0xAD);

/* Definition of interface: IProjectNeo */
#undef INTERFACE
#define INTERFACE IProjectNeo

DECLARE_INTERFACE_(IProjectNeo, IProjectMajesty)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProject methods */
    STDMETHOD(OpenEx)(THIS_ IDispatch * pStoreHandle, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Open)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName) PURE;
    STDMETHOD(EnableLog)(THIS_ BSTR FAR* strFileName) PURE;
    STDMETHOD(Rename)(THIS_ BSTR strNewFile) PURE;
    STDMETHOD(IsValidKey)(THIS_ BSTR strKey, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Dirty)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_ProjectRoot)(THIS_ IProjectRoot FAR* FAR* pProjectRoot) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(get_IsOpen)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_StoreHandle)(THIS_ IDispatch * FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IProjectEvents FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(CreatePathRecommendations)(THIS_ IPathConvertEvent FAR* pEvent, IPathRecommendations FAR* FAR* pVal) PURE;
    STDMETHOD(ApplyPathRecommendations)(THIS_ IPathRecommendations FAR* pPathRecommendations, IPathConvertEvent FAR* pEvent, VARIANT_BOOL FAR* bCanceled) PURE;
    STDMETHOD(SetCodePageFromLangID)(THIS_ BSTR sLangID, long FAR* lResult) PURE;
    STDMETHOD(get_MMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(putref_MMCatalog)(THIS_ IMMCatalog FAR* pCatalog) PURE;
    STDMETHOD(GetLangID)(THIS_ BSTR sLangName, long FAR* lLangID) PURE;
    STDMETHOD(GetLangName)(THIS_ BSTR sLangID, BSTR FAR* sLangName) PURE;
    STDMETHOD(RaiseCategoryInvalidated)(THIS_ BSTR className) PURE;
    STDMETHOD(StartEvents)(THIS) PURE;
    STDMETHOD(StopEvents)(THIS) PURE;
    STDMETHOD(Compact)(THIS_ BSTR strFileName, IProjectProgressEvents FAR* pProgressEvents, long FAR* lResult) PURE;
    STDMETHOD(RaiseItemChangedEvent)(THIS_ BSTR sClassName, EItemAction eAction, IBusinessObject FAR* pPublisher) PURE;
    STDMETHOD(get_ProjectPathAndFileName)(THIS_ BSTR FAR* bstrProjectPathAndFileName) PURE;

    /* IProject2 methods */
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* pvbReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL vbReadOnly) PURE;
    STDMETHOD(GetAllWindowsLangIds)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(IsValidIsmSchema)(THIS_ VARIANT_BOOL FAR* pvbValidSchema) PURE;
    STDMETHOD(IsScriptBased)(THIS_ VARIANT_BOOL FAR* pvbIsScriptBased) PURE;
    STDMETHOD(SetCodePageInMSIDatabase)(THIS_ BSTR sLangID) PURE;
    STDMETHOD(DropTable)(THIS_ BSTR sTable) PURE;
    STDMETHOD(ImportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(ExportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(get_ScriptBased)(THIS_ VARIANT_BOOL FAR* pvbScriptBased) PURE;
    STDMETHOD(put_ScriptBased)(THIS_ VARIANT_BOOL vbScriptBased) PURE;
    STDMETHOD(get_DoMaintenance)(THIS_ VARIANT_BOOL FAR* pvbDoMaintenance) PURE;
    STDMETHOD(put_DoMaintenance)(THIS_ VARIANT_BOOL vbDoMaintenance) PURE;
    STDMETHOD(RaiseItemChangedEvent2)(THIS_ BSTR sClassName, EItemAction eAction, IUnknown * pPublisher) PURE;
    STDMETHOD(OpenDirect)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(OpenDirectNoVal)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_IsInstallScriptUsed)(THIS_ VARIANT_BOOL FAR* pvbIsInstallScriptUsed) PURE;
    STDMETHOD(ExportToText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(ImportFromText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(SuspendHandle)(THIS) PURE;
    STDMETHOD(ReOpenHandle)(THIS) PURE;
    STDMETHOD(SetCodePage)(THIS_ long lVal, long FAR* lResult) PURE;
    STDMETHOD(GetCodePage)(THIS_ long FAR* plVal) PURE;
    STDMETHOD(OpenNoVal)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, BSTR bstrBaseMsi, BSTR bstrMSTsToApply, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_Lock)(THIS_ VARIANT_BOOL FAR* pvbLock) PURE;
    STDMETHOD(get_QPRoot)(THIS_ IQPRoot FAR* FAR* ppQPRoot) PURE;
    STDMETHOD(RenameButLeaveTempAlone)(THIS_ BSTR strNewFileName) PURE;
    STDMETHOD(CloseTempFile)(THIS_ VARIANT_BOOL bSave, VARIANT_BOOL FAR* bDirty, BSTR FAR* bstrTempFile) PURE;
    STDMETHOD(ReopenTempFile)(THIS_ VARIANT_BOOL bDirty) PURE;
    STDMETHOD(AddValidationError)(THIS_ BSTR bstrTable, BSTR bstrKey, BSTR bstrCol) PURE;
    STDMETHOD(ClearValidationErrors)(THIS) PURE;
    STDMETHOD(IsTableValid)(THIS_ BSTR bstrTable, ETableValidationType FAR* peType) PURE;
    STDMETHOD(IsRecordValid)(THIS_ BSTR bstrTable, BSTR bstrKey, VARIANT FAR* pvCols, VARIANT_BOOL FAR* pbValid) PURE;
    STDMETHOD(get_IsInstallScriptObject)(THIS_ VARIANT_BOOL FAR* pvbInstallScriptObj) PURE;
    STDMETHOD(put_IsInstallScriptObject)(THIS_ VARIANT_BOOL vbInstallScriptObj) PURE;
    STDMETHOD(get_IsWebProject)(THIS_ VARIANT_BOOL FAR* pvbWebProject) PURE;
    STDMETHOD(put_IsWebProject)(THIS_ VARIANT_BOOL vbWebProject) PURE;
    STDMETHOD(GetTransformFiles)(THIS_ BSTR FAR* pbstrMST, BSTR FAR* pbstrBaseMSI, BSTR FAR* pbstrMSTsToApply) PURE;
    STDMETHOD(get_ContainsISObject)(THIS_ VARIANT_BOOL FAR* pvbContainsISObject) PURE;
    STDMETHOD(GetTransformSummaryInfo)(THIS_ int FAR* pErrConditions, int FAR* pValidation) PURE;
    STDMETHOD(PutTransformSummaryInfo)(THIS_ int iErrConditions, int iValidation) PURE;
    STDMETHOD(get_BadMSTs)(THIS_ BSTR FAR* pbstrMSTs) PURE;
    STDMETHOD(get_OpenedAsReadOnly)(THIS_ VARIANT_BOOL FAR* pvbOpenedAsReadOnly) PURE;
    STDMETHOD(DirectModeAddFile)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(DirectModeAddMergeModule)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(OpenDirectReadOnly)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;

    /* IProjectNeptune methods */
    STDMETHOD(CompareDatabaseWithCurrent)(THIS_ BSTR sDatabase) PURE;
    STDMETHOD(EndCompare)(THIS) PURE;
    STDMETHOD(get_IsCompareMode)(THIS_ VARIANT_BOOL FAR* vbComparing) PURE;
    STDMETHOD(put_MaintainReferentialIntegrity)(THIS_ VARIANT_BOOL vbMaintainReferentialIntegrity) PURE;
    STDMETHOD(get_IsProjectFileText)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsProjectFileText)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ReleaseFileLock)(THIS) PURE;
    STDMETHOD(get_TrueMMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(OpenProject)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, EnumProjectOpenMode eOpenProjectMode) PURE;

    /* IProjectProteus methods */
    STDMETHOD(get_SaveAsSchema)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_SaveAsSchema)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(SaveEx)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName, VARIANT_BOOL vbIgnoreSaveAsSchema) PURE;

    /* IProjectIbiza methods */
    STDMETHOD(get_ProjectFileFormat)(THIS_ EnumProjectFileFormat FAR* eProjFileFormat) PURE;
    STDMETHOD(put_ProjectFileFormat)(THIS_ EnumProjectFileFormat eProjFileFormat) PURE;

    /* IProjectIxtapa methods */
    STDMETHOD(get_DTE)(THIS_ IDispatch * FAR* ppDTE) PURE;
    STDMETHOD(put_DTE)(THIS_ IDispatch * pDTE) PURE;
    STDMETHOD(ReplaceTempFile)(THIS) PURE;
    STDMETHOD(SaveMSBuildScript)(THIS) PURE;
    STDMETHOD(get_IsDimUnitTestPrj)(THIS_ VARIANT_BOOL FAR* pvbDimUnitTestPrj) PURE;

    /* IProjectJustice methods */
    STDMETHOD(get_UseMSI45EmbeddedUI)(THIS_ VARIANT_BOOL FAR* vbUseMSI45EEUI) PURE;
    STDMETHOD(put_UseMSI45EmbeddedUI)(THIS_ VARIANT_BOOL vbUseMSI45EEUI) PURE;

    /* IProjectJade methods */
    STDMETHOD(get_ISBillBoardType)(THIS_ BSTR FAR* bstrValue) PURE;
    STDMETHOD(put_ISBillBoardType)(THIS_ BSTR bstrValue) PURE;

    /* IProjectMajesty methods */
    STDMETHOD(get_VsServiceProvider)(THIS_ IUnknown * FAR* ppVsServiceProvider) PURE;
    STDMETHOD(put_VsServiceProvider)(THIS_ IUnknown * pVsServiceProvider) PURE;
#endif

    /* IProjectNeo methods */
    STDMETHOD(IsDimPrj)(THIS_ VARIANT_BOOL FAR* pvbIsDim) PURE;
    STDMETHOD(get_IsDim)(THIS_ VARIANT_BOOL FAR* pvbIsDim) PURE;
    STDMETHOD(put_IsDim)(THIS_ VARIANT_BOOL vbIsDim) PURE;
    STDMETHOD(GetScriptLocation)(THIS_ BSTR FAR* bstrVal) PURE;
};

DEFINE_GUID(IID_IProjectOpusSP1,0x185F4998L,0x82FA,0x4244,0x9C,0xE5,0x03,0xD4,0xB5,0x82,0xF2,0x06);

/* Definition of interface: IProjectOpusSP1 */
#undef INTERFACE
#define INTERFACE IProjectOpusSP1

DECLARE_INTERFACE_(IProjectOpusSP1, IProjectNeo)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* IProject methods */
    STDMETHOD(OpenEx)(THIS_ IDispatch * pStoreHandle, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Open)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(Save)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName) PURE;
    STDMETHOD(EnableLog)(THIS_ BSTR FAR* strFileName) PURE;
    STDMETHOD(Rename)(THIS_ BSTR strNewFile) PURE;
    STDMETHOD(IsValidKey)(THIS_ BSTR strKey, VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_Dirty)(THIS_ VARIANT_BOOL FAR* pBool) PURE;
    STDMETHOD(get_ProjectRoot)(THIS_ IProjectRoot FAR* FAR* pProjectRoot) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(get_IsOpen)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(get_StoreHandle)(THIS_ IDispatch * FAR* pVal) PURE;
    STDMETHOD(Advise)(THIS_ IProjectEvents FAR* pVal, long FAR* dwCookie) PURE;
    STDMETHOD(Unadvise)(THIS_ long dwCookie) PURE;
    STDMETHOD(CreatePathRecommendations)(THIS_ IPathConvertEvent FAR* pEvent, IPathRecommendations FAR* FAR* pVal) PURE;
    STDMETHOD(ApplyPathRecommendations)(THIS_ IPathRecommendations FAR* pPathRecommendations, IPathConvertEvent FAR* pEvent, VARIANT_BOOL FAR* bCanceled) PURE;
    STDMETHOD(SetCodePageFromLangID)(THIS_ BSTR sLangID, long FAR* lResult) PURE;
    STDMETHOD(get_MMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(putref_MMCatalog)(THIS_ IMMCatalog FAR* pCatalog) PURE;
    STDMETHOD(GetLangID)(THIS_ BSTR sLangName, long FAR* lLangID) PURE;
    STDMETHOD(GetLangName)(THIS_ BSTR sLangID, BSTR FAR* sLangName) PURE;
    STDMETHOD(RaiseCategoryInvalidated)(THIS_ BSTR className) PURE;
    STDMETHOD(StartEvents)(THIS) PURE;
    STDMETHOD(StopEvents)(THIS) PURE;
    STDMETHOD(Compact)(THIS_ BSTR strFileName, IProjectProgressEvents FAR* pProgressEvents, long FAR* lResult) PURE;
    STDMETHOD(RaiseItemChangedEvent)(THIS_ BSTR sClassName, EItemAction eAction, IBusinessObject FAR* pPublisher) PURE;
    STDMETHOD(get_ProjectPathAndFileName)(THIS_ BSTR FAR* bstrProjectPathAndFileName) PURE;

    /* IProject2 methods */
    STDMETHOD(get_ReadOnly)(THIS_ VARIANT_BOOL FAR* pvbReadOnly) PURE;
    STDMETHOD(put_ReadOnly)(THIS_ VARIANT_BOOL vbReadOnly) PURE;
    STDMETHOD(GetAllWindowsLangIds)(THIS_ IIsStrings FAR* FAR* pVal) PURE;
    STDMETHOD(IsValidIsmSchema)(THIS_ VARIANT_BOOL FAR* pvbValidSchema) PURE;
    STDMETHOD(IsScriptBased)(THIS_ VARIANT_BOOL FAR* pvbIsScriptBased) PURE;
    STDMETHOD(SetCodePageInMSIDatabase)(THIS_ BSTR sLangID) PURE;
    STDMETHOD(DropTable)(THIS_ BSTR sTable) PURE;
    STDMETHOD(ImportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(ExportCabFile)(THIS_ BSTR sKey, BSTR sPath) PURE;
    STDMETHOD(get_ScriptBased)(THIS_ VARIANT_BOOL FAR* pvbScriptBased) PURE;
    STDMETHOD(put_ScriptBased)(THIS_ VARIANT_BOOL vbScriptBased) PURE;
    STDMETHOD(get_DoMaintenance)(THIS_ VARIANT_BOOL FAR* pvbDoMaintenance) PURE;
    STDMETHOD(put_DoMaintenance)(THIS_ VARIANT_BOOL vbDoMaintenance) PURE;
    STDMETHOD(RaiseItemChangedEvent2)(THIS_ BSTR sClassName, EItemAction eAction, IUnknown * pPublisher) PURE;
    STDMETHOD(OpenDirect)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(OpenDirectNoVal)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_IsInstallScriptUsed)(THIS_ VARIANT_BOOL FAR* pvbIsInstallScriptUsed) PURE;
    STDMETHOD(ExportToText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(ImportFromText)(THIS_ BSTR bstrFolder) PURE;
    STDMETHOD(SuspendHandle)(THIS) PURE;
    STDMETHOD(ReOpenHandle)(THIS) PURE;
    STDMETHOD(SetCodePage)(THIS_ long lVal, long FAR* lResult) PURE;
    STDMETHOD(GetCodePage)(THIS_ long FAR* plVal) PURE;
    STDMETHOD(OpenNoVal)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, BSTR bstrBaseMsi, BSTR bstrMSTsToApply, IProjectRoot FAR* FAR* pVal) PURE;
    STDMETHOD(get_Lock)(THIS_ VARIANT_BOOL FAR* pvbLock) PURE;
    STDMETHOD(get_QPRoot)(THIS_ IQPRoot FAR* FAR* ppQPRoot) PURE;
    STDMETHOD(RenameButLeaveTempAlone)(THIS_ BSTR strNewFileName) PURE;
    STDMETHOD(CloseTempFile)(THIS_ VARIANT_BOOL bSave, VARIANT_BOOL FAR* bDirty, BSTR FAR* bstrTempFile) PURE;
    STDMETHOD(ReopenTempFile)(THIS_ VARIANT_BOOL bDirty) PURE;
    STDMETHOD(AddValidationError)(THIS_ BSTR bstrTable, BSTR bstrKey, BSTR bstrCol) PURE;
    STDMETHOD(ClearValidationErrors)(THIS) PURE;
    STDMETHOD(IsTableValid)(THIS_ BSTR bstrTable, ETableValidationType FAR* peType) PURE;
    STDMETHOD(IsRecordValid)(THIS_ BSTR bstrTable, BSTR bstrKey, VARIANT FAR* pvCols, VARIANT_BOOL FAR* pbValid) PURE;
    STDMETHOD(get_IsInstallScriptObject)(THIS_ VARIANT_BOOL FAR* pvbInstallScriptObj) PURE;
    STDMETHOD(put_IsInstallScriptObject)(THIS_ VARIANT_BOOL vbInstallScriptObj) PURE;
    STDMETHOD(get_IsWebProject)(THIS_ VARIANT_BOOL FAR* pvbWebProject) PURE;
    STDMETHOD(put_IsWebProject)(THIS_ VARIANT_BOOL vbWebProject) PURE;
    STDMETHOD(GetTransformFiles)(THIS_ BSTR FAR* pbstrMST, BSTR FAR* pbstrBaseMSI, BSTR FAR* pbstrMSTsToApply) PURE;
    STDMETHOD(get_ContainsISObject)(THIS_ VARIANT_BOOL FAR* pvbContainsISObject) PURE;
    STDMETHOD(GetTransformSummaryInfo)(THIS_ int FAR* pErrConditions, int FAR* pValidation) PURE;
    STDMETHOD(PutTransformSummaryInfo)(THIS_ int iErrConditions, int iValidation) PURE;
    STDMETHOD(get_BadMSTs)(THIS_ BSTR FAR* pbstrMSTs) PURE;
    STDMETHOD(get_OpenedAsReadOnly)(THIS_ VARIANT_BOOL FAR* pvbOpenedAsReadOnly) PURE;
    STDMETHOD(DirectModeAddFile)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(DirectModeAddMergeModule)(THIS_ IBusinessObject FAR* pBusObj) PURE;
    STDMETHOD(OpenDirectReadOnly)(THIS_ BSTR strFileName, IProjectRoot FAR* FAR* pVal) PURE;

    /* IProjectNeptune methods */
    STDMETHOD(CompareDatabaseWithCurrent)(THIS_ BSTR sDatabase) PURE;
    STDMETHOD(EndCompare)(THIS) PURE;
    STDMETHOD(get_IsCompareMode)(THIS_ VARIANT_BOOL FAR* vbComparing) PURE;
    STDMETHOD(put_MaintainReferentialIntegrity)(THIS_ VARIANT_BOOL vbMaintainReferentialIntegrity) PURE;
    STDMETHOD(get_IsProjectFileText)(THIS_ VARIANT_BOOL FAR* pVal) PURE;
    STDMETHOD(put_IsProjectFileText)(THIS_ VARIANT_BOOL Val) PURE;
    STDMETHOD(ReleaseFileLock)(THIS) PURE;
    STDMETHOD(get_TrueMMCatalog)(THIS_ IMMCatalog FAR* FAR* pCatalog) PURE;
    STDMETHOD(OpenProject)(THIS_ BSTR strFileName, VARIANT_BOOL bReadOnly, EnumProjectOpenMode eOpenProjectMode) PURE;

    /* IProjectProteus methods */
    STDMETHOD(get_SaveAsSchema)(THIS_ BSTR FAR* pbstrVal) PURE;
    STDMETHOD(put_SaveAsSchema)(THIS_ BSTR bstrVal) PURE;
    STDMETHOD(SaveEx)(THIS_ BSTR strFileName, VARIANT_BOOL bUpdateName, VARIANT_BOOL vbIgnoreSaveAsSchema) PURE;

    /* IProjectIbiza methods */
    STDMETHOD(get_ProjectFileFormat)(THIS_ EnumProjectFileFormat FAR* eProjFileFormat) PURE;
    STDMETHOD(put_ProjectFileFormat)(THIS_ EnumProjectFileFormat eProjFileFormat) PURE;

    /* IProjectIxtapa methods */
    STDMETHOD(get_DTE)(THIS_ IDispatch * FAR* ppDTE) PURE;
    STDMETHOD(put_DTE)(THIS_ IDispatch * pDTE) PURE;
    STDMETHOD(ReplaceTempFile)(THIS) PURE;
    STDMETHOD(SaveMSBuildScript)(THIS) PURE;
    STDMETHOD(get_IsDimUnitTestPrj)(THIS_ VARIANT_BOOL FAR* pvbDimUnitTestPrj) PURE;

    /* IProjectJustice methods */
    STDMETHOD(get_UseMSI45EmbeddedUI)(THIS_ VARIANT_BOOL FAR* vbUseMSI45EEUI) PURE;
    STDMETHOD(put_UseMSI45EmbeddedUI)(THIS_ VARIANT_BOOL vbUseMSI45EEUI) PURE;

    /* IProjectJade methods */
    STDMETHOD(get_ISBillBoardType)(THIS_ BSTR FAR* bstrValue) PURE;
    STDMETHOD(put_ISBillBoardType)(THIS_ BSTR bstrValue) PURE;

    /* IProjectMajesty methods */
    STDMETHOD(get_VsServiceProvider)(THIS_ IUnknown * FAR* ppVsServiceProvider) PURE;
    STDMETHOD(put_VsServiceProvider)(THIS_ IUnknown * pVsServiceProvider) PURE;

    /* IProjectNeo methods */
    STDMETHOD(IsDimPrj)(THIS_ VARIANT_BOOL FAR* pvbIsDim) PURE;
    STDMETHOD(get_IsDim)(THIS_ VARIANT_BOOL FAR* pvbIsDim) PURE;
    STDMETHOD(put_IsDim)(THIS_ VARIANT_BOOL vbIsDim) PURE;
    STDMETHOD(GetScriptLocation)(THIS_ BSTR FAR* bstrVal) PURE;
#endif

    /* IProjectOpusSP1 methods */
    STDMETHOD(UpgradeMSBuildScript)(THIS) PURE;
};

DEFINE_GUID(IID_IRegistryFileImporterEvents,0x93CFA494L,0xDEF5,0x48A1,0x82,0x71,0xBC,0xE8,0x53,0x6D,0x9E,0xB1);

/* Definition of interface: IRegistryFileImporterEvents */
#undef INTERFACE
#define INTERFACE IRegistryFileImporterEvents

DECLARE_INTERFACE_(IRegistryFileImporterEvents, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IRegistryFileImporterEvents methods */
    STDMETHOD(ProgressBarIncrement)(THIS_ long lPercentDone) PURE;
    STDMETHOD(ProgressCaption)(THIS_ BSTR bstrCaption) PURE;
};

DEFINE_GUID(IID_IRegistryFileImporterEvents2,0x4DA6F9DBL,0xFCE7,0x49DB,0x82,0xD2,0xC5,0xF5,0x79,0x28,0x14,0x26);

/* Definition of interface: IRegistryFileImporterEvents2 */
#undef INTERFACE
#define INTERFACE IRegistryFileImporterEvents2

DECLARE_INTERFACE_(IRegistryFileImporterEvents2, IRegistryFileImporterEvents)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IRegistryFileImporterEvents methods */
    STDMETHOD(ProgressBarIncrement)(THIS_ long lPercentDone) PURE;
    STDMETHOD(ProgressCaption)(THIS_ BSTR bstrCaption) PURE;
#endif

    /* IRegistryFileImporterEvents2 methods */
    STDMETHOD(ReportConflict)(THIS_ BSTR bstrFullKeyPath, BSTR bstrValue, BSTR bstrData, BSTR bstrOldData) PURE;
};

DEFINE_GUID(IID_IRegistryFileImporter,0xF49B6CF0L,0xDAE5,0x49F0,0xA4,0xA3,0x4F,0x7D,0xDB,0x3A,0x9A,0xE1);

/* Definition of interface: IRegistryFileImporter */
#undef INTERFACE
#define INTERFACE IRegistryFileImporter

DECLARE_INTERFACE_(IRegistryFileImporter, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IRegistryFileImporter methods */
    STDMETHOD(ImportRegFile)(THIS_ IProject FAR* pProject, IComponent FAR* pComponent, BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(InitProgress)(THIS_ IDispatch * FAR* pProgressBar, IDispatch * FAR* pProgressPanel) PURE;
};

DEFINE_GUID(IID_IRegistryFileImporterPro,0xF49B6CF1L,0xDAE5,0x49F0,0xA4,0xA3,0x4F,0x7D,0xDB,0x3A,0x9A,0xE1);

/* Definition of interface: IRegistryFileImporterPro */
#undef INTERFACE
#define INTERFACE IRegistryFileImporterPro

DECLARE_INTERFACE_(IRegistryFileImporterPro, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IRegistryFileImporterPro methods */
    STDMETHOD(ImportRegFile)(THIS_ IProject FAR* pProject, IRegistrySetNeptune FAR* pRegistrySet, BSTR sRegFileName, BSTR sLogFileName, BSTR sDate, BSTR sTime, VARIANT_BOOL bOverwrite, VARIANT_BOOL bCreateLogFile, IRegistryFileImporterEvents FAR* pRegistryFileImporterEvents) PURE;
    STDMETHOD(InitProgress)(THIS_ IDispatch * FAR* pProgressBar, IDispatch * FAR* pProgressPanel) PURE;
};

DEFINE_GUID(IID_ICustomActionEvents,0x2C93F3D0L,0xC8B1,0x40F3,0xA4,0x98,0x4D,0x03,0x44,0x43,0x0F,0xD7);

/* Definition of interface: ICustomActionEvents */
#undef INTERFACE
#define INTERFACE ICustomActionEvents

DECLARE_INTERFACE_(ICustomActionEvents, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* ICustomActionEvents methods */
    STDMETHOD(IsReplaceExistingBinaryEntry)(THIS_ BSTR bstrBinary, VARIANT_BOOL FAR* pvbReplaceExistingBinary) PURE;
};

DEFINE_GUID(IID_ICustomActionEvents2,0x5CCC7DAEL,0x4171,0x45D5,0xB0,0x3E,0x1C,0xEC,0x94,0x7D,0xF9,0x8A);

/* Definition of interface: ICustomActionEvents2 */
#undef INTERFACE
#define INTERFACE ICustomActionEvents2

DECLARE_INTERFACE_(ICustomActionEvents2, ICustomActionEvents)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* ICustomActionEvents methods */
    STDMETHOD(IsReplaceExistingBinaryEntry)(THIS_ BSTR bstrBinary, VARIANT_BOOL FAR* pvbReplaceExistingBinary) PURE;
#endif

    /* ICustomActionEvents2 methods */
    STDMETHOD(ConfirmDeleteSourceRecord)(THIS_ BSTR bstrTableName, BSTR bstrKey, VARIANT_BOOL FAR* pvbDelete) PURE;
    STDMETHOD(OnDeleteSourceRecordFailure)(THIS_ BSTR bstrTableName, BSTR bstrBinary) PURE;
};

DEFINE_GUID(IID_IISComPlusEvents,0x76884665L,0xACDA,0x4C2E,0x88,0x44,0xCF,0x74,0x15,0xEF,0x87,0xA2);

/* Definition of interface: IISComPlusEvents */
#undef INTERFACE
#define INTERFACE IISComPlusEvents

DECLARE_INTERFACE_(IISComPlusEvents, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* IISComPlusEvents methods */
    STDMETHOD(PromptFileNotExist)(THIS_ BSTR bstrFileName, BSTR bstrProgID) PURE;
    STDMETHOD(OnProcessing)(THIS_ EnumComPlusProcessType ecptProcessType, BSTR bstrAppName) PURE;
    STDMETHOD(OnProcessing2)(THIS_ EnumComPlusProcessType ecptProcessType, BSTR bstrAppName, BSTR bstrColName, BSTR bstrObjName) PURE;
    STDMETHOD(OnComplete)(THIS) PURE;
};

#endif
